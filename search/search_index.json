{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"django/DRF/01-Restful/","text":"DRF \u00b6 \u6b66Sir\u535a\u5ba2 RestFul \u00b6 Restful\u8bf4\u660e \u00b6 REST\u4e0e\u6280\u672f\u65e0\u5173\uff0c\u4ee3\u8868\u7684\u662f\u4e00\u79cd\u8f6f\u4ef6\u67b6\u6784\u98ce\u683c\uff0cREST\u662fRepresentational State Transfer\u7684\u7b80\u79f0\uff0c\u4e2d\u6587\u7ffb\u8bd1\u4e3a\u201c\u8868\u5f81\u72b6\u6001\u8f6c\u79fb\u201d REST\u4ece\u8d44\u6e90\u7684\u89d2\u5ea6\u7c7b\u5ba1\u89c6\u6574\u4e2a\u7f51\u7edc\uff0c\u5b83\u5c06\u5206\u5e03\u5728\u7f51\u7edc\u4e2d\u67d0\u4e2a\u8282\u70b9\u7684\u8d44\u6e90\u901a\u8fc7URL\u8fdb\u884c\u6807\u8bc6\uff0c\u5ba2\u6237\u7aef\u5e94\u7528\u901a\u8fc7URL\u6765\u83b7\u53d6\u8d44\u6e90\u7684\u8868\u5f81\uff0c\u83b7\u5f97\u8fd9\u4e9b\u8868\u5f81\u81f4\u4f7f\u8fd9\u4e9b\u5e94\u7528\u8f6c\u53d8\u72b6\u6001 \u6240\u6709\u7684\u6570\u636e\uff0c\u4e0d\u7ba1\u662f\u901a\u8fc7\u7f51\u7edc\u83b7\u53d6\u7684\u8fd8\u662f\u64cd\u4f5c\uff08\u589e\u5220\u6539\u67e5\uff09\u7684\u6570\u636e\uff0c\u90fd\u662f\u8d44\u6e90\uff0c\u5c06\u4e00\u5207\u6570\u636e\u89c6\u4e3a\u8d44\u6e90\u662fREST\u533a\u522b\u4e0e\u5176\u4ed6\u67b6\u6784\u98ce\u683c\u7684\u6700\u672c\u8d28\u5c5e\u6027 \u5bf9\u4e8eREST\u8fd9\u79cd\u9762\u5411\u8d44\u6e90\u7684\u67b6\u6784\u98ce\u683c\uff0c\u6709\u4eba\u63d0\u51fa\u4e00\u79cd\u5168\u65b0\u7684\u7ed3\u6784\u7406\u5ff5\uff0c\u5373\uff1a\u9762\u5411\u8d44\u6e90\u67b6\u6784\uff08ROA\uff1aResource Oriented Architecture\uff09 Restful\u8bbe\u8ba1\u89c4\u8303 \u00b6 API\u4e0e\u7528\u6237\u7684\u901a\u4fe1\u534f\u8bae\uff0c\u603b\u662f\u4f7f\u7528 HTTPs\u534f\u8bae \u3002\uff08\u63a8\u8350\u4f7f\u7528https\uff09 \u57df\u540d - https : // api . example . com \uff1a\u5c3d\u91cf\u5c06 API\u90e8\u7f72\u5728\u4e13\u7528\u57df\u540d \uff08\u4f1a\u5b58\u5728\u8de8\u57df\u95ee\u9898\uff0c\u9700\u8981\u81ea\u5df1\u89e3\u51b3\uff09 - https : // example . org / api / \uff1a\u5c3d\u91cf\u4f7f\u7528\u8fd9\u79cd\uff0c\u8fd9\u6837\u7684 API\u5f88\u7b80\u5355 \u7248\u672c\uff1a\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u7248\u672c\u5171\u5b58\u7684\u60c5\u51b5\uff0c\u7248\u672c\u4e4b\u95f4\u53ef\u80fd\u4e5f\u9700\u8981\u8fc7\u6e21\uff0c\u56e0\u6b64url\u540e\u9762\u4e00\u822c\u8fd8\u4f1a\u5e26\u4e00\u4e2a\u7248\u672c - URL \uff0c\u5982\uff1a https : // api . example . com / v1 / \u4e00\u822c\u7248\u672c\u53f7\u653e\u5728 url - \u7248\u672c\u597d\u4e5f\u53ef\u4ee5\u52a0\u5230\u8bf7\u6c42\u5934\u8de8\u57df\u65f6\uff0c\u5f15\u53d1\u53d1\u9001\u591a\u6b21\u8bf7\u6c42 \u8def\u5f84\uff0c\u89c6\u7f51\u7edc\u4e0a\u4efb\u4f55\u4e1c\u897f\u90fd\u662f\u8d44\u6e90\uff08\u9762\u5411\u8d44\u6e90\u7f16\u7a0b\uff09\uff0c\u5747\u4f7f\u7528\u540d\u8bcd\u8868\u793a\uff08\u53ef\u590d\u6570\uff09\uff0c\u6bd4\u5982\u8ba2\u5355order\uff0c\u800c\u4e0d\u662fget_order\uff0c\u6216\u8005delete_order\u8fd9\u6837\u7684url\u3002 - https : // api . example . com / v1 / zoos - https : // api . example . com / v1 / animals - https : // api . example . com / v1 / employees method - GET \uff1a\u4ece\u670d\u52a1\u5668\u53d6\u51fa\u8d44\u6e90\uff08\u4e00\u9879\u6216\u591a\u9879\uff09 - POST \uff1a\u5728\u670d\u52a1\u5668\u65b0\u5efa\u4e00\u4e2a\u8d44\u6e90 - PUT \uff1a\u5728\u670d\u52a1\u5668\u66f4\u65b0\u8d44\u6e90\uff08\u5ba2\u6237\u7aef\u63d0\u4f9b\u6539\u53d8\u540e\u7684\u5b8c\u6574\u8d44\u6e90\uff0c\u5373\u5168\u90e8\u66f4\u65b0\uff09 - PATCH \uff1a\u5728\u670d\u52a1\u5668\u66f4\u65b0\u8d44\u6e90\uff08\u5ba2\u6237\u7aef\u63d0\u4f9b\u6539\u53d8\u7684\u5c5e\u6027\uff0c\u5373\u5c40\u90e8\u66f4\u65b0\uff09 - DELETE \uff1a\u4ece\u670d\u52a1\u5668\u5220\u9664\u8d44\u6e90 \u8fc7\u6ee4\uff0c\u901a\u8fc7\u5728url\u4e0a\u4f20\u53c2\u7684\u5f62\u5f0f\u4f20\u9012\u641c\u7d22\u6761\u4ef6 - https : // api . example . com / v1 / zoos ? limit = 10 \uff1a\u6307\u5b9a\u8fd4\u56de\u8bb0\u5f55\u7684\u6570\u91cf - https : // api . example . com / v1 / zoos ? offset = 10 \uff1a\u6307\u5b9a\u8fd4\u56de\u8bb0\u5f55\u7684\u5f00\u59cb\u4f4d\u7f6e - https : // api . example . com / v1 / zoos ? page = 2 & per_page = 100 \uff1a\u6307\u5b9a\u7b2c\u51e0\u9875\uff0c\u4ee5\u53ca\u6bcf\u9875\u7684\u8bb0\u5f55\u6570 - https : // api . example . com / v1 / zoos ? sortby = name & order = asc \uff1a\u6307\u5b9a\u8fd4\u56de\u7ed3\u679c\u6309\u7167\u54ea\u4e2a\u5c5e\u6027\u6392\u5e8f\uff0c\u4ee5\u53ca\u6392\u5e8f\u987a\u5e8f - https : // api . example . com / v1 / zoos ? animal_type_id = 1 \uff1a\u6307\u5b9a\u7b5b\u9009\u6761\u4ef6 \u72b6\u6001\u7801\uff1a\u6839\u636e\u72b6\u6001\u7801\u7ed9\u7528\u6237\u505a\u63d0\u793a\uff0c\u4f46\u662f\u4ec5\u4ec5\u7528\u72b6\u6001\u7801\u662f\u4e0d\u591f\u7684\uff0c\u56e0\u6b64\u5927\u591a\u4f7f\u7528code+\u72b6\u6001\u7801\u7ed3\u5408\u4f7f\u7528\u3002status code\u53ef\u4ee5\u5728HTTPResponse\u4e2d\u4ee5\u53c2\u6570\u5f62\u5f0f\u8fd4\u56de\u3002\u73b0\u5728\u4e3b\u8981\u8fd8\u662f\u4ee5code\u4e3a\u4e3b\u3002\u6709\u7684\u5bf9\u72b6\u6001\u7801\u6709\u9700\u6c42\uff0c\u6709\u7684\u6ca1\u6709\u9700\u6c42\uff0c\u5728\u5199\u63a5\u53e3\u524d\u8981\u95ee\u6e05\u695a\u3002 200 OK - [GET]\uff1a\u670d\u52a1\u5668\u6210\u529f\u8fd4\u56de\u7528\u6237\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u8be5\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\uff08Idempotent\uff09\u3002 201 CREATED - [POST/PUT/PATCH]\uff1a\u7528\u6237\u65b0\u5efa\u6216\u4fee\u6539\u6570\u636e\u6210\u529f\u3002 202 Accepted - [*]\uff1a\u8868\u793a\u4e00\u4e2a\u8bf7\u6c42\u5df2\u7ecf\u8fdb\u5165\u540e\u53f0\u6392\u961f\uff08\u5f02\u6b65\u4efb\u52a1\uff09 204 NO CONTENT - [DELETE]\uff1a\u7528\u6237\u5220\u9664\u6570\u636e\u6210\u529f\u3002 400 INVALID REQUEST - [POST/PUT/PATCH]\uff1a\u7528\u6237\u53d1\u51fa\u7684\u8bf7\u6c42\u6709\u9519\u8bef\uff0c\u670d\u52a1\u5668\u6ca1\u6709\u8fdb\u884c\u65b0\u5efa\u6216\u4fee\u6539\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\u3002 401 Unauthorized - [*]\uff1a\u8868\u793a\u7528\u6237\u6ca1\u6709\u6743\u9650\uff08\u4ee4\u724c\u3001\u7528\u6237\u540d\u3001\u5bc6\u7801\u9519\u8bef\uff09\u3002 403 Forbidden - [*] \u8868\u793a\u7528\u6237\u5f97\u5230\u6388\u6743\uff08\u4e0e401\u9519\u8bef\u76f8\u5bf9\uff09\uff0c\u4f46\u662f\u8bbf\u95ee\u662f\u88ab\u7981\u6b62\u7684\u3002 404 NOT FOUND - [*]\uff1a\u7528\u6237\u53d1\u51fa\u7684\u8bf7\u6c42\u9488\u5bf9\u7684\u662f\u4e0d\u5b58\u5728\u7684\u8bb0\u5f55\uff0c\u670d\u52a1\u5668\u6ca1\u6709\u8fdb\u884c\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\u3002 406 Not Acceptable - [GET]\uff1a\u7528\u6237\u8bf7\u6c42\u7684\u683c\u5f0f\u4e0d\u53ef\u5f97\uff08\u6bd4\u5982\u7528\u6237\u8bf7\u6c42JSON\u683c\u5f0f\uff0c\u4f46\u662f\u53ea\u6709XML\u683c\u5f0f\uff09\u3002 410 Gone -[GET]\uff1a\u7528\u6237\u8bf7\u6c42\u7684\u8d44\u6e90\u88ab\u6c38\u4e45\u5220\u9664\uff0c\u4e14\u4e0d\u4f1a\u518d\u5f97\u5230\u7684\u3002 422 Unprocesable entity - [POST/PUT/PATCH] \u5f53\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u53d1\u751f\u4e00\u4e2a\u9a8c\u8bc1\u9519\u8bef\u3002 500 INTERNAL SERVER ERROR - [*]\uff1a\u670d\u52a1\u5668\u53d1\u751f\u9519\u8bef\uff0c\u7528\u6237\u5c06\u65e0\u6cd5\u5224\u65ad\u53d1\u51fa\u7684\u8bf7\u6c42\u662f\u5426\u6210\u529f\u3002 \u66f4\u591a\u770b\u8fd9\u91cc\uff1ahttp://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html \u9519\u8bef\u5904\u7406\uff0c\u72b6\u6001\u7801\u662f4xx\u65f6\uff0c\u5e94\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0c\u63a8\u8350\u7528error\u5f53\u505akey\u3002 { error: \"Invalid API key\" } \u8fd4\u56de\u7ed3\u679c\uff0c\u9488\u5bf9\u4e0d\u540c\u64cd\u4f5c\uff0c\u670d\u52a1\u5668\u5411\u7528\u6237\u8fd4\u56de\u7684\u7ed3\u679c\u5e94\u8be5\u7b26\u5408\u4ee5\u4e0b\u89c4\u8303\u3002 GET /collection\uff1a\u8fd4\u56de\u8d44\u6e90\u5bf9\u8c61\u7684\u5217\u8868\uff08\u6570\u7ec4\uff09 GET /collection/resource\uff1a\u8fd4\u56de\u5355\u4e2a\u8d44\u6e90\u5bf9\u8c61 POST /collection\uff1a\u8fd4\u56de\u65b0\u751f\u6210\u7684\u8d44\u6e90\u5bf9\u8c61 PUT /collection/resource\uff1a\u8fd4\u56de\u5b8c\u6574\u7684\u8d44\u6e90\u5bf9\u8c61 PATCH /collection/resource\uff1a\u8fd4\u56de\u5b8c\u6574\u7684\u8d44\u6e90\u5bf9\u8c61 DELETE /collection/resource\uff1a\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6587\u6863 Hypermedia API\uff0cRESTful API\u6700\u597d\u505a\u5230Hypermedia\uff0c\u5373\u8fd4\u56de\u7ed3\u679c\u4e2d\u63d0\u4f9b\u94fe\u63a5\uff0c\u8fde\u5411\u5176\u4ed6API\u65b9\u6cd5\uff0c\u4f7f\u5f97\u7528\u6237\u4e0d\u67e5\u6587\u6863\uff0c\u4e5f\u77e5\u9053\u4e0b\u4e00\u6b65\u5e94\u8be5\u505a\u4ec0\u4e48\u3002\uff08\u5176\u5b9e\u5c31\u662f\u4e3a\u4e86\u8ba9\u4f60\u7701\u4e8b\uff0c\u518d\u7ed9\u4f60\u8fd4\u56de\u4e00\u4e2aurl\uff09 { \"link\": { \"rel\": \"collection https://www.example.com/zoos\", \"href\": \"https://api.example.com/zoos\", \"title\": \"List of zoos\", \"type\": \"application/vnd.yourformat+json\" } } \u8c08\u8c08\u4f60\u5bf9Restful\u89c4\u8303\u7684\u8ba4\u8bc6 \u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u89c4\u8303\uff0c\u8ba9\u540e\u53f0\u66f4\u5bb9\u6613\u5904\u7406\uff0c\u8ba9\u524d\u7aef\u66f4\u5bb9\u6613\u8bb0\u4f4f\u8fd9\u4e9burl\uff0c\u5728url\u4e0a\u80fd\u4f53\u73b0\u66f4\u591a\u7684\u64cd\u4f5c\u3002 restful\u6709\u4e9b\u9002\u7528\u9879\u76ee\uff0c\u6709\u4e9b\u4e5f\u4e0d\u9002\u7528\uff0c\u4e0d\u4e00\u5b9a\u8981\u5b8c\u5168\u7b26\u5408\u8fd9\u4e2a\u6807\u51c6\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u5951\u5408\u9879\u76ee\u3002 \u534f\u540c\u5f00\u53d1\u7684\u65f6\u5019\u5171\u540c\u9075\u5faa\u8fd9\u4e2a\u89c4\u8303\uff0c\u8ba9\u64cd\u4f5c\u66f4\u52a0\u7edf\u4e00\u3002 \u63a8\u8350\u4f7f\u7528CBV\u7684\u65b9\u5f0f DRF\u7684\u5b89\u88c5 \u00b6 # \u5b89\u88c5\u8fc7\u7a0b\u6781\u5176\u7b80\u5355 pip3 install djangorestframework","title":"01-Restful\u4ecb\u7ecd"},{"location":"django/DRF/01-Restful/#drf","text":"\u6b66Sir\u535a\u5ba2","title":"DRF"},{"location":"django/DRF/01-Restful/#restful","text":"","title":"RestFul"},{"location":"django/DRF/01-Restful/#restful_1","text":"REST\u4e0e\u6280\u672f\u65e0\u5173\uff0c\u4ee3\u8868\u7684\u662f\u4e00\u79cd\u8f6f\u4ef6\u67b6\u6784\u98ce\u683c\uff0cREST\u662fRepresentational State Transfer\u7684\u7b80\u79f0\uff0c\u4e2d\u6587\u7ffb\u8bd1\u4e3a\u201c\u8868\u5f81\u72b6\u6001\u8f6c\u79fb\u201d REST\u4ece\u8d44\u6e90\u7684\u89d2\u5ea6\u7c7b\u5ba1\u89c6\u6574\u4e2a\u7f51\u7edc\uff0c\u5b83\u5c06\u5206\u5e03\u5728\u7f51\u7edc\u4e2d\u67d0\u4e2a\u8282\u70b9\u7684\u8d44\u6e90\u901a\u8fc7URL\u8fdb\u884c\u6807\u8bc6\uff0c\u5ba2\u6237\u7aef\u5e94\u7528\u901a\u8fc7URL\u6765\u83b7\u53d6\u8d44\u6e90\u7684\u8868\u5f81\uff0c\u83b7\u5f97\u8fd9\u4e9b\u8868\u5f81\u81f4\u4f7f\u8fd9\u4e9b\u5e94\u7528\u8f6c\u53d8\u72b6\u6001 \u6240\u6709\u7684\u6570\u636e\uff0c\u4e0d\u7ba1\u662f\u901a\u8fc7\u7f51\u7edc\u83b7\u53d6\u7684\u8fd8\u662f\u64cd\u4f5c\uff08\u589e\u5220\u6539\u67e5\uff09\u7684\u6570\u636e\uff0c\u90fd\u662f\u8d44\u6e90\uff0c\u5c06\u4e00\u5207\u6570\u636e\u89c6\u4e3a\u8d44\u6e90\u662fREST\u533a\u522b\u4e0e\u5176\u4ed6\u67b6\u6784\u98ce\u683c\u7684\u6700\u672c\u8d28\u5c5e\u6027 \u5bf9\u4e8eREST\u8fd9\u79cd\u9762\u5411\u8d44\u6e90\u7684\u67b6\u6784\u98ce\u683c\uff0c\u6709\u4eba\u63d0\u51fa\u4e00\u79cd\u5168\u65b0\u7684\u7ed3\u6784\u7406\u5ff5\uff0c\u5373\uff1a\u9762\u5411\u8d44\u6e90\u67b6\u6784\uff08ROA\uff1aResource Oriented Architecture\uff09","title":"Restful\u8bf4\u660e"},{"location":"django/DRF/01-Restful/#restful_2","text":"API\u4e0e\u7528\u6237\u7684\u901a\u4fe1\u534f\u8bae\uff0c\u603b\u662f\u4f7f\u7528 HTTPs\u534f\u8bae \u3002\uff08\u63a8\u8350\u4f7f\u7528https\uff09 \u57df\u540d - https : // api . example . com \uff1a\u5c3d\u91cf\u5c06 API\u90e8\u7f72\u5728\u4e13\u7528\u57df\u540d \uff08\u4f1a\u5b58\u5728\u8de8\u57df\u95ee\u9898\uff0c\u9700\u8981\u81ea\u5df1\u89e3\u51b3\uff09 - https : // example . org / api / \uff1a\u5c3d\u91cf\u4f7f\u7528\u8fd9\u79cd\uff0c\u8fd9\u6837\u7684 API\u5f88\u7b80\u5355 \u7248\u672c\uff1a\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u7248\u672c\u5171\u5b58\u7684\u60c5\u51b5\uff0c\u7248\u672c\u4e4b\u95f4\u53ef\u80fd\u4e5f\u9700\u8981\u8fc7\u6e21\uff0c\u56e0\u6b64url\u540e\u9762\u4e00\u822c\u8fd8\u4f1a\u5e26\u4e00\u4e2a\u7248\u672c - URL \uff0c\u5982\uff1a https : // api . example . com / v1 / \u4e00\u822c\u7248\u672c\u53f7\u653e\u5728 url - \u7248\u672c\u597d\u4e5f\u53ef\u4ee5\u52a0\u5230\u8bf7\u6c42\u5934\u8de8\u57df\u65f6\uff0c\u5f15\u53d1\u53d1\u9001\u591a\u6b21\u8bf7\u6c42 \u8def\u5f84\uff0c\u89c6\u7f51\u7edc\u4e0a\u4efb\u4f55\u4e1c\u897f\u90fd\u662f\u8d44\u6e90\uff08\u9762\u5411\u8d44\u6e90\u7f16\u7a0b\uff09\uff0c\u5747\u4f7f\u7528\u540d\u8bcd\u8868\u793a\uff08\u53ef\u590d\u6570\uff09\uff0c\u6bd4\u5982\u8ba2\u5355order\uff0c\u800c\u4e0d\u662fget_order\uff0c\u6216\u8005delete_order\u8fd9\u6837\u7684url\u3002 - https : // api . example . com / v1 / zoos - https : // api . example . com / v1 / animals - https : // api . example . com / v1 / employees method - GET \uff1a\u4ece\u670d\u52a1\u5668\u53d6\u51fa\u8d44\u6e90\uff08\u4e00\u9879\u6216\u591a\u9879\uff09 - POST \uff1a\u5728\u670d\u52a1\u5668\u65b0\u5efa\u4e00\u4e2a\u8d44\u6e90 - PUT \uff1a\u5728\u670d\u52a1\u5668\u66f4\u65b0\u8d44\u6e90\uff08\u5ba2\u6237\u7aef\u63d0\u4f9b\u6539\u53d8\u540e\u7684\u5b8c\u6574\u8d44\u6e90\uff0c\u5373\u5168\u90e8\u66f4\u65b0\uff09 - PATCH \uff1a\u5728\u670d\u52a1\u5668\u66f4\u65b0\u8d44\u6e90\uff08\u5ba2\u6237\u7aef\u63d0\u4f9b\u6539\u53d8\u7684\u5c5e\u6027\uff0c\u5373\u5c40\u90e8\u66f4\u65b0\uff09 - DELETE \uff1a\u4ece\u670d\u52a1\u5668\u5220\u9664\u8d44\u6e90 \u8fc7\u6ee4\uff0c\u901a\u8fc7\u5728url\u4e0a\u4f20\u53c2\u7684\u5f62\u5f0f\u4f20\u9012\u641c\u7d22\u6761\u4ef6 - https : // api . example . com / v1 / zoos ? limit = 10 \uff1a\u6307\u5b9a\u8fd4\u56de\u8bb0\u5f55\u7684\u6570\u91cf - https : // api . example . com / v1 / zoos ? offset = 10 \uff1a\u6307\u5b9a\u8fd4\u56de\u8bb0\u5f55\u7684\u5f00\u59cb\u4f4d\u7f6e - https : // api . example . com / v1 / zoos ? page = 2 & per_page = 100 \uff1a\u6307\u5b9a\u7b2c\u51e0\u9875\uff0c\u4ee5\u53ca\u6bcf\u9875\u7684\u8bb0\u5f55\u6570 - https : // api . example . com / v1 / zoos ? sortby = name & order = asc \uff1a\u6307\u5b9a\u8fd4\u56de\u7ed3\u679c\u6309\u7167\u54ea\u4e2a\u5c5e\u6027\u6392\u5e8f\uff0c\u4ee5\u53ca\u6392\u5e8f\u987a\u5e8f - https : // api . example . com / v1 / zoos ? animal_type_id = 1 \uff1a\u6307\u5b9a\u7b5b\u9009\u6761\u4ef6 \u72b6\u6001\u7801\uff1a\u6839\u636e\u72b6\u6001\u7801\u7ed9\u7528\u6237\u505a\u63d0\u793a\uff0c\u4f46\u662f\u4ec5\u4ec5\u7528\u72b6\u6001\u7801\u662f\u4e0d\u591f\u7684\uff0c\u56e0\u6b64\u5927\u591a\u4f7f\u7528code+\u72b6\u6001\u7801\u7ed3\u5408\u4f7f\u7528\u3002status code\u53ef\u4ee5\u5728HTTPResponse\u4e2d\u4ee5\u53c2\u6570\u5f62\u5f0f\u8fd4\u56de\u3002\u73b0\u5728\u4e3b\u8981\u8fd8\u662f\u4ee5code\u4e3a\u4e3b\u3002\u6709\u7684\u5bf9\u72b6\u6001\u7801\u6709\u9700\u6c42\uff0c\u6709\u7684\u6ca1\u6709\u9700\u6c42\uff0c\u5728\u5199\u63a5\u53e3\u524d\u8981\u95ee\u6e05\u695a\u3002 200 OK - [GET]\uff1a\u670d\u52a1\u5668\u6210\u529f\u8fd4\u56de\u7528\u6237\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u8be5\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\uff08Idempotent\uff09\u3002 201 CREATED - [POST/PUT/PATCH]\uff1a\u7528\u6237\u65b0\u5efa\u6216\u4fee\u6539\u6570\u636e\u6210\u529f\u3002 202 Accepted - [*]\uff1a\u8868\u793a\u4e00\u4e2a\u8bf7\u6c42\u5df2\u7ecf\u8fdb\u5165\u540e\u53f0\u6392\u961f\uff08\u5f02\u6b65\u4efb\u52a1\uff09 204 NO CONTENT - [DELETE]\uff1a\u7528\u6237\u5220\u9664\u6570\u636e\u6210\u529f\u3002 400 INVALID REQUEST - [POST/PUT/PATCH]\uff1a\u7528\u6237\u53d1\u51fa\u7684\u8bf7\u6c42\u6709\u9519\u8bef\uff0c\u670d\u52a1\u5668\u6ca1\u6709\u8fdb\u884c\u65b0\u5efa\u6216\u4fee\u6539\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\u3002 401 Unauthorized - [*]\uff1a\u8868\u793a\u7528\u6237\u6ca1\u6709\u6743\u9650\uff08\u4ee4\u724c\u3001\u7528\u6237\u540d\u3001\u5bc6\u7801\u9519\u8bef\uff09\u3002 403 Forbidden - [*] \u8868\u793a\u7528\u6237\u5f97\u5230\u6388\u6743\uff08\u4e0e401\u9519\u8bef\u76f8\u5bf9\uff09\uff0c\u4f46\u662f\u8bbf\u95ee\u662f\u88ab\u7981\u6b62\u7684\u3002 404 NOT FOUND - [*]\uff1a\u7528\u6237\u53d1\u51fa\u7684\u8bf7\u6c42\u9488\u5bf9\u7684\u662f\u4e0d\u5b58\u5728\u7684\u8bb0\u5f55\uff0c\u670d\u52a1\u5668\u6ca1\u6709\u8fdb\u884c\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\u3002 406 Not Acceptable - [GET]\uff1a\u7528\u6237\u8bf7\u6c42\u7684\u683c\u5f0f\u4e0d\u53ef\u5f97\uff08\u6bd4\u5982\u7528\u6237\u8bf7\u6c42JSON\u683c\u5f0f\uff0c\u4f46\u662f\u53ea\u6709XML\u683c\u5f0f\uff09\u3002 410 Gone -[GET]\uff1a\u7528\u6237\u8bf7\u6c42\u7684\u8d44\u6e90\u88ab\u6c38\u4e45\u5220\u9664\uff0c\u4e14\u4e0d\u4f1a\u518d\u5f97\u5230\u7684\u3002 422 Unprocesable entity - [POST/PUT/PATCH] \u5f53\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u53d1\u751f\u4e00\u4e2a\u9a8c\u8bc1\u9519\u8bef\u3002 500 INTERNAL SERVER ERROR - [*]\uff1a\u670d\u52a1\u5668\u53d1\u751f\u9519\u8bef\uff0c\u7528\u6237\u5c06\u65e0\u6cd5\u5224\u65ad\u53d1\u51fa\u7684\u8bf7\u6c42\u662f\u5426\u6210\u529f\u3002 \u66f4\u591a\u770b\u8fd9\u91cc\uff1ahttp://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html \u9519\u8bef\u5904\u7406\uff0c\u72b6\u6001\u7801\u662f4xx\u65f6\uff0c\u5e94\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0c\u63a8\u8350\u7528error\u5f53\u505akey\u3002 { error: \"Invalid API key\" } \u8fd4\u56de\u7ed3\u679c\uff0c\u9488\u5bf9\u4e0d\u540c\u64cd\u4f5c\uff0c\u670d\u52a1\u5668\u5411\u7528\u6237\u8fd4\u56de\u7684\u7ed3\u679c\u5e94\u8be5\u7b26\u5408\u4ee5\u4e0b\u89c4\u8303\u3002 GET /collection\uff1a\u8fd4\u56de\u8d44\u6e90\u5bf9\u8c61\u7684\u5217\u8868\uff08\u6570\u7ec4\uff09 GET /collection/resource\uff1a\u8fd4\u56de\u5355\u4e2a\u8d44\u6e90\u5bf9\u8c61 POST /collection\uff1a\u8fd4\u56de\u65b0\u751f\u6210\u7684\u8d44\u6e90\u5bf9\u8c61 PUT /collection/resource\uff1a\u8fd4\u56de\u5b8c\u6574\u7684\u8d44\u6e90\u5bf9\u8c61 PATCH /collection/resource\uff1a\u8fd4\u56de\u5b8c\u6574\u7684\u8d44\u6e90\u5bf9\u8c61 DELETE /collection/resource\uff1a\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6587\u6863 Hypermedia API\uff0cRESTful API\u6700\u597d\u505a\u5230Hypermedia\uff0c\u5373\u8fd4\u56de\u7ed3\u679c\u4e2d\u63d0\u4f9b\u94fe\u63a5\uff0c\u8fde\u5411\u5176\u4ed6API\u65b9\u6cd5\uff0c\u4f7f\u5f97\u7528\u6237\u4e0d\u67e5\u6587\u6863\uff0c\u4e5f\u77e5\u9053\u4e0b\u4e00\u6b65\u5e94\u8be5\u505a\u4ec0\u4e48\u3002\uff08\u5176\u5b9e\u5c31\u662f\u4e3a\u4e86\u8ba9\u4f60\u7701\u4e8b\uff0c\u518d\u7ed9\u4f60\u8fd4\u56de\u4e00\u4e2aurl\uff09 { \"link\": { \"rel\": \"collection https://www.example.com/zoos\", \"href\": \"https://api.example.com/zoos\", \"title\": \"List of zoos\", \"type\": \"application/vnd.yourformat+json\" } } \u8c08\u8c08\u4f60\u5bf9Restful\u89c4\u8303\u7684\u8ba4\u8bc6 \u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u89c4\u8303\uff0c\u8ba9\u540e\u53f0\u66f4\u5bb9\u6613\u5904\u7406\uff0c\u8ba9\u524d\u7aef\u66f4\u5bb9\u6613\u8bb0\u4f4f\u8fd9\u4e9burl\uff0c\u5728url\u4e0a\u80fd\u4f53\u73b0\u66f4\u591a\u7684\u64cd\u4f5c\u3002 restful\u6709\u4e9b\u9002\u7528\u9879\u76ee\uff0c\u6709\u4e9b\u4e5f\u4e0d\u9002\u7528\uff0c\u4e0d\u4e00\u5b9a\u8981\u5b8c\u5168\u7b26\u5408\u8fd9\u4e2a\u6807\u51c6\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u5951\u5408\u9879\u76ee\u3002 \u534f\u540c\u5f00\u53d1\u7684\u65f6\u5019\u5171\u540c\u9075\u5faa\u8fd9\u4e2a\u89c4\u8303\uff0c\u8ba9\u64cd\u4f5c\u66f4\u52a0\u7edf\u4e00\u3002 \u63a8\u8350\u4f7f\u7528CBV\u7684\u65b9\u5f0f","title":"Restful\u8bbe\u8ba1\u89c4\u8303"},{"location":"django/DRF/01-Restful/#drf_1","text":"# \u5b89\u88c5\u8fc7\u7a0b\u6781\u5176\u7b80\u5355 pip3 install djangorestframework","title":"DRF\u7684\u5b89\u88c5"},{"location":"django/DRF/02-Request\u7684\u5c01\u88c5/","text":"Request\u7684\u5c01\u88c5 \u00b6 \u5728Django\u7684RestFrameWork\u4e2d\uff0c\u6211\u4eec\u5e38\u7528\u7684\u662fCBV\uff08\u6ce8\u610f\u4e0d\u662f\u4e0d\u80fd\u7528FBV\uff0cFBV\u53ef\u4ee5\u901a\u8fc7\u88c5\u9970\u5668\u7684\u5f62\u5f0f\u53bb\u5b9e\u73b0\uff09\uff0c\u800c\u4e14CBV\u7ee7\u627f\u7684\u4e0d\u662f\u539f\u751f\u7684django\u7684View\uff0c\u800c\u662fDRF\u5728Django\u7684view\u57fa\u7840\u4e0a\u8fdb\u4e00\u6b65\u5c01\u88c5\u7684APIView\uff0c\u5728\u8fd9\u4e00\u6b65\u8fdb\u884c\u4e86Request\u7684\u91cd\u65b0\u5c01\u88c5\uff0c\u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\u65b0\u7684Request\u90fd\u5c01\u88c5\u4e86\u54ea\u4e9b\u5185\u5bb9\u3002 \u5c01\u88c5\u8fc7\u7a0b \u00b6 \u6574\u4e2a\u6d41\u7a0b\u4ece\u4e00\u4e2a\u8bf7\u6c42\u8fdb\u6765\u5f00\u59cb\u8bf4\uff1a from rest_framework.views import APIView class AuthView ( APIView ): pass rest_framework\u7684APIView\u9ed8\u8ba4\u7ee7\u627fDjango\u7684View\uff0cCBV\u4e2d\u627e\u5230\u5bf9\u5e94\u7684request\u7684\u8bf7\u6c42\u65b9\u6cd5\u662f\u5229\u7528\u53cd\u5c04\u6765\u5b9e\u73b0\u7684\uff0c\u539f\u751fDjango View\u901a\u8fc7dispatch\u65b9\u6cd5\u6765\u5b9e\u73b0\uff1a # \u539f\u751fDjango View def dispatch ( self , request , * args , ** kwargs ): # Try to dispatch to the right method; if a method doesn't exist, # defer to the error handler. Also defer to the error handler if the # request method isn't on the approved list. if request . method . lower () in self . http_method_names : handler = getattr ( self , request . method . lower (), self . http_method_not_allowed ) else : handler = self . http_method_not_allowed return handler ( request , * args , ** kwargs ) \u4e0d\u8fc7\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u81ea\u5df1\u7684CBV\u4e2d\u91cd\u5199\u8fd9\u4e2adispatch\uff0c\u501f\u6b64\u6765\u5b9e\u73b0\u66f4\u591a\u7684\u64cd\u4f5c\u3002\u5148\u8c03\u7528\u4e00\u4e0b\u7236\u7c7b\uff08View\uff09\u7684dispatch\u65b9\u6cd5\uff0c\u7136\u540e\u5728\u8c03\u7528\u4e4b\u524d\u548c\u8c03\u7528\u4e4b\u540e\u5c31\u53ef\u4ee5\u505a\u4e00\u4e9b\u6211\u4eec\u81ea\u5df1\u7684\u64cd\u4f5c\u4e86\uff0c\u5176\u5b9eDRF\u7684APIView\u4e5f\u662f\u8fd9\u4e48\u5e72\u7684\u3002 # DRF\u7684dispatch\uff0cdrf\u7684dispatch\u548cdjango\u7684dispatch\u51e0\u4e4e\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u4e0d\u8fc7\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u52a0\u4e86\u4e00\u4e9b\u94a9\u5b50\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u5728\u8c03\u7528\u7236\u7c7b\u7684\u64cd\u4f5c\u4e4b\u524d\uff0c\u6267\u884c\u4e00\u4e9b\u5176\u4ed6\u7684\u65b9\u6cd5\u3002\u8fd9\u4e9b\u94a9\u5b50\u5206\u522b\u5b58\u5728\u4e8e\u5f00\u59cb\uff0c\u7ed3\u675f\u4ee5\u53ca\u5f02\u5e38\u7684\u65f6\u5019\u3002 def dispatch ( self , request , * args , ** kwargs ): self . args = args self . kwargs = kwargs # 1\u3001\u9996\u5148\u4ece\u8fd9\u91cc\u5f00\u59cb\uff0cDRF\u5bf9django\u7684request\u505a\u4e86\u5c01\u88c5\u3002 # \u8fd9\u4e2arequest\u5df2\u7ecf\u53d1\u751f\u53d8\u5316\u4e86\uff0c\u662f\u7ecf\u8fc7drf\u52a0\u5de5\u8fc7\u540e\u7684request\u4e86\u3002 request = self . initialize_request ( request , * args , ** kwargs ) self . request = request self . headers = self . default_response_headers # deprecate? try : self . initial ( request , * args , ** kwargs ) # Get the appropriate handler method if request . method . lower () in self . http_method_names : handler = getattr ( self , request . method . lower (), self . http_method_not_allowed ) else : handler = self . http_method_not_allowed response = handler ( request , * args , ** kwargs ) except Exception as exc : response = self . handle_exception ( exc ) self . response = self . finalize_response ( request , response , * args , ** kwargs ) return self . response \u5728dispatch\u8fd9\u4e00\u6b65\u9aa4\uff0crequest\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c\u5df2\u7ecf\u4e0d\u662f\u539f\u751f\u7684request\u4e86\uff0c\u800c\u662f\u7ecf\u8fc7DRF\u5c01\u88c5\u4e4b\u540e\u7684Request\u3002\u8c03\u7528\u4e86\u521d\u59cb\u5316\u7684\u65b9\u6cd5\uff0c\u6765\u770b\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u5177\u4f53\u505a\u4e86\u4ec0\u4e48\uff1a # initialize_request def initialize_request ( self , request , * args , ** kwargs ): \"\"\" \u8fd4\u56de\u521d\u59cb\u5316\u7684request\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u662fdrf\u7684Request\u7684\u5bf9\u8c61\uff0c\u76f8\u5f53\u4e8e\u5728\u539f\u57fa\u7840\u4e0a\u5c01\u88c5\u4e86\u66f4\u591a\u7684\u5185\u5bb9 \u4f46\u662f\u539f\u6765\u7684django\u7684request\u7ed9\u5c01\u88c5\u5230\u4e86\u8fd4\u56de\u7684\u5bf9\u8c61\u91cc\uff0c\u6240\u4ee5\u8bf4\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u7684request\u3002 \"\"\" parser_context = self . get_parser_context ( request ) # _request\uff1a\u539f\u751f\u7684request\uff0cauthenticators\u83b7\u53d6\u8ba4\u8bc1\u7c7b\u7684\u5bf9\u8c61\u3002 return Request ( request , # \u8fd9\u91cc\u8fd4\u56de\u7684Request\u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u5c06\u539f\u751f\u7684Django\u7684request\u5c01\u88c5\u8fdb\u53bb\u4e86\u3002 parsers = self . get_parsers (), authenticators = self . get_authenticators (), negotiator = self . get_content_negotiator (), parser_context = parser_context ) \u5728\u521d\u59cb\u5316\u7684\u8fd9\u4e00\u6b65\u91cc\u8fd4\u56de\u4e86Request\u5b9e\u4f8b\u5316\u540e\u7684\u5bf9\u8c61\u5e76\u590d\u5236\u7ed9request\uff0c\u5230\u6b64\u4e3a\u6b62\uff0cRequest\u88ab\u5c01\u88c5\u5b8c\u6bd5\uff0c\u63a5\u4e0b\u6765\u5927\u6982\u7c97\u7565\u7684\u6d4f\u89c8\u4e00\u4e0b\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u5c01\u88c5\u7684request\u7684\u4ec0\u4e48\u5c5e\u6027\u3002 \u5e38\u7528\u5c5e\u6027 \u00b6 _request\uff1a \u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c self._request = request \uff0c\u539f\u751f\u7684request\u88ab\u5c01\u88c5\u8fdb_request\u4e2d content_type\uff1a\u8fd4\u56de\u8bf7\u6c42\u5934\u7684\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4ece self._request.META \u4e2d\u53bb\u53d6\u3002 query_params\uff1aGET\u8bf7\u6c42\u7684\u53c2\u6570\uff0c\u5982\u679c\u6211\u4eec\u81ea\u5df1\u62ff\u7684\u8bdd\u9700\u8981 request._request.GET.get \uff0c\u5176\u5b9e\u8fd9\u4e00\u4e2a\u6b65\u9aa4\u76f8\u5f53\u4e8eDRF\u5e2e\u6211\u53bb\u505a\u4e86\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u5c31\u662frequest\u5185\u90e8\u8fd8\u6709\u4e00\u4e2a __getattr__ \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5141\u8bb8\u6211\u4eec\u8c03\u7528\u5c01\u88c5\u7684request\u4e2d\u6ca1\u6709\u7684\u5c5e\u6027\u7684\u65f6\u5019\uff0c\u4f1a\u53bb\u539f\u751f\u7684request\u4e2d\u53bb\u8c03\u7528\u8fd4\u56de\u3002 def __getattr__ ( self , attr ): \"\"\" If an attribute does not exist on this instance, then we also attempt to proxy it to the underlying HttpRequest object. \"\"\" try : return getattr ( self . _request , attr ) except AttributeError : return self . __getattribute__ ( attr )","title":"02-Request\u5c01\u88c5"},{"location":"django/DRF/02-Request\u7684\u5c01\u88c5/#request","text":"\u5728Django\u7684RestFrameWork\u4e2d\uff0c\u6211\u4eec\u5e38\u7528\u7684\u662fCBV\uff08\u6ce8\u610f\u4e0d\u662f\u4e0d\u80fd\u7528FBV\uff0cFBV\u53ef\u4ee5\u901a\u8fc7\u88c5\u9970\u5668\u7684\u5f62\u5f0f\u53bb\u5b9e\u73b0\uff09\uff0c\u800c\u4e14CBV\u7ee7\u627f\u7684\u4e0d\u662f\u539f\u751f\u7684django\u7684View\uff0c\u800c\u662fDRF\u5728Django\u7684view\u57fa\u7840\u4e0a\u8fdb\u4e00\u6b65\u5c01\u88c5\u7684APIView\uff0c\u5728\u8fd9\u4e00\u6b65\u8fdb\u884c\u4e86Request\u7684\u91cd\u65b0\u5c01\u88c5\uff0c\u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\u65b0\u7684Request\u90fd\u5c01\u88c5\u4e86\u54ea\u4e9b\u5185\u5bb9\u3002","title":"Request\u7684\u5c01\u88c5"},{"location":"django/DRF/02-Request\u7684\u5c01\u88c5/#_1","text":"\u6574\u4e2a\u6d41\u7a0b\u4ece\u4e00\u4e2a\u8bf7\u6c42\u8fdb\u6765\u5f00\u59cb\u8bf4\uff1a from rest_framework.views import APIView class AuthView ( APIView ): pass rest_framework\u7684APIView\u9ed8\u8ba4\u7ee7\u627fDjango\u7684View\uff0cCBV\u4e2d\u627e\u5230\u5bf9\u5e94\u7684request\u7684\u8bf7\u6c42\u65b9\u6cd5\u662f\u5229\u7528\u53cd\u5c04\u6765\u5b9e\u73b0\u7684\uff0c\u539f\u751fDjango View\u901a\u8fc7dispatch\u65b9\u6cd5\u6765\u5b9e\u73b0\uff1a # \u539f\u751fDjango View def dispatch ( self , request , * args , ** kwargs ): # Try to dispatch to the right method; if a method doesn't exist, # defer to the error handler. Also defer to the error handler if the # request method isn't on the approved list. if request . method . lower () in self . http_method_names : handler = getattr ( self , request . method . lower (), self . http_method_not_allowed ) else : handler = self . http_method_not_allowed return handler ( request , * args , ** kwargs ) \u4e0d\u8fc7\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u81ea\u5df1\u7684CBV\u4e2d\u91cd\u5199\u8fd9\u4e2adispatch\uff0c\u501f\u6b64\u6765\u5b9e\u73b0\u66f4\u591a\u7684\u64cd\u4f5c\u3002\u5148\u8c03\u7528\u4e00\u4e0b\u7236\u7c7b\uff08View\uff09\u7684dispatch\u65b9\u6cd5\uff0c\u7136\u540e\u5728\u8c03\u7528\u4e4b\u524d\u548c\u8c03\u7528\u4e4b\u540e\u5c31\u53ef\u4ee5\u505a\u4e00\u4e9b\u6211\u4eec\u81ea\u5df1\u7684\u64cd\u4f5c\u4e86\uff0c\u5176\u5b9eDRF\u7684APIView\u4e5f\u662f\u8fd9\u4e48\u5e72\u7684\u3002 # DRF\u7684dispatch\uff0cdrf\u7684dispatch\u548cdjango\u7684dispatch\u51e0\u4e4e\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u4e0d\u8fc7\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u52a0\u4e86\u4e00\u4e9b\u94a9\u5b50\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u5728\u8c03\u7528\u7236\u7c7b\u7684\u64cd\u4f5c\u4e4b\u524d\uff0c\u6267\u884c\u4e00\u4e9b\u5176\u4ed6\u7684\u65b9\u6cd5\u3002\u8fd9\u4e9b\u94a9\u5b50\u5206\u522b\u5b58\u5728\u4e8e\u5f00\u59cb\uff0c\u7ed3\u675f\u4ee5\u53ca\u5f02\u5e38\u7684\u65f6\u5019\u3002 def dispatch ( self , request , * args , ** kwargs ): self . args = args self . kwargs = kwargs # 1\u3001\u9996\u5148\u4ece\u8fd9\u91cc\u5f00\u59cb\uff0cDRF\u5bf9django\u7684request\u505a\u4e86\u5c01\u88c5\u3002 # \u8fd9\u4e2arequest\u5df2\u7ecf\u53d1\u751f\u53d8\u5316\u4e86\uff0c\u662f\u7ecf\u8fc7drf\u52a0\u5de5\u8fc7\u540e\u7684request\u4e86\u3002 request = self . initialize_request ( request , * args , ** kwargs ) self . request = request self . headers = self . default_response_headers # deprecate? try : self . initial ( request , * args , ** kwargs ) # Get the appropriate handler method if request . method . lower () in self . http_method_names : handler = getattr ( self , request . method . lower (), self . http_method_not_allowed ) else : handler = self . http_method_not_allowed response = handler ( request , * args , ** kwargs ) except Exception as exc : response = self . handle_exception ( exc ) self . response = self . finalize_response ( request , response , * args , ** kwargs ) return self . response \u5728dispatch\u8fd9\u4e00\u6b65\u9aa4\uff0crequest\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c\u5df2\u7ecf\u4e0d\u662f\u539f\u751f\u7684request\u4e86\uff0c\u800c\u662f\u7ecf\u8fc7DRF\u5c01\u88c5\u4e4b\u540e\u7684Request\u3002\u8c03\u7528\u4e86\u521d\u59cb\u5316\u7684\u65b9\u6cd5\uff0c\u6765\u770b\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u5177\u4f53\u505a\u4e86\u4ec0\u4e48\uff1a # initialize_request def initialize_request ( self , request , * args , ** kwargs ): \"\"\" \u8fd4\u56de\u521d\u59cb\u5316\u7684request\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u662fdrf\u7684Request\u7684\u5bf9\u8c61\uff0c\u76f8\u5f53\u4e8e\u5728\u539f\u57fa\u7840\u4e0a\u5c01\u88c5\u4e86\u66f4\u591a\u7684\u5185\u5bb9 \u4f46\u662f\u539f\u6765\u7684django\u7684request\u7ed9\u5c01\u88c5\u5230\u4e86\u8fd4\u56de\u7684\u5bf9\u8c61\u91cc\uff0c\u6240\u4ee5\u8bf4\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u7684request\u3002 \"\"\" parser_context = self . get_parser_context ( request ) # _request\uff1a\u539f\u751f\u7684request\uff0cauthenticators\u83b7\u53d6\u8ba4\u8bc1\u7c7b\u7684\u5bf9\u8c61\u3002 return Request ( request , # \u8fd9\u91cc\u8fd4\u56de\u7684Request\u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u5c06\u539f\u751f\u7684Django\u7684request\u5c01\u88c5\u8fdb\u53bb\u4e86\u3002 parsers = self . get_parsers (), authenticators = self . get_authenticators (), negotiator = self . get_content_negotiator (), parser_context = parser_context ) \u5728\u521d\u59cb\u5316\u7684\u8fd9\u4e00\u6b65\u91cc\u8fd4\u56de\u4e86Request\u5b9e\u4f8b\u5316\u540e\u7684\u5bf9\u8c61\u5e76\u590d\u5236\u7ed9request\uff0c\u5230\u6b64\u4e3a\u6b62\uff0cRequest\u88ab\u5c01\u88c5\u5b8c\u6bd5\uff0c\u63a5\u4e0b\u6765\u5927\u6982\u7c97\u7565\u7684\u6d4f\u89c8\u4e00\u4e0b\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u5c01\u88c5\u7684request\u7684\u4ec0\u4e48\u5c5e\u6027\u3002","title":"\u5c01\u88c5\u8fc7\u7a0b"},{"location":"django/DRF/02-Request\u7684\u5c01\u88c5/#_2","text":"_request\uff1a \u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c self._request = request \uff0c\u539f\u751f\u7684request\u88ab\u5c01\u88c5\u8fdb_request\u4e2d content_type\uff1a\u8fd4\u56de\u8bf7\u6c42\u5934\u7684\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4ece self._request.META \u4e2d\u53bb\u53d6\u3002 query_params\uff1aGET\u8bf7\u6c42\u7684\u53c2\u6570\uff0c\u5982\u679c\u6211\u4eec\u81ea\u5df1\u62ff\u7684\u8bdd\u9700\u8981 request._request.GET.get \uff0c\u5176\u5b9e\u8fd9\u4e00\u4e2a\u6b65\u9aa4\u76f8\u5f53\u4e8eDRF\u5e2e\u6211\u53bb\u505a\u4e86\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u5c31\u662frequest\u5185\u90e8\u8fd8\u6709\u4e00\u4e2a __getattr__ \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5141\u8bb8\u6211\u4eec\u8c03\u7528\u5c01\u88c5\u7684request\u4e2d\u6ca1\u6709\u7684\u5c5e\u6027\u7684\u65f6\u5019\uff0c\u4f1a\u53bb\u539f\u751f\u7684request\u4e2d\u53bb\u8c03\u7528\u8fd4\u56de\u3002 def __getattr__ ( self , attr ): \"\"\" If an attribute does not exist on this instance, then we also attempt to proxy it to the underlying HttpRequest object. \"\"\" try : return getattr ( self . _request , attr ) except AttributeError : return self . __getattribute__ ( attr )","title":"\u5e38\u7528\u5c5e\u6027"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/","text":"Django Rest FrameWork \u00b6 DRF\u7684\u8ba4\u8bc1 \u00b6 \u7b80\u5355\u73af\u5883\u51c6\u5907 \u00b6 model class\u7b80\u5355\u70b9\uff0c\u4e00\u4e2a\u7528\u6765\u5b58\u50a8\u7528\u6237\u4fe1\u606f\u4e00\u4e2a\u7528\u6765\u5b58\u50a8token\u8ba4\u8bc1\u4fe1\u606f\u3002 from django.db import models class UserInfo ( models . Model ): user_type_choices = ( ( 1 , '\u666e\u901a\u7528\u6237' ), ( 2 , 'VIP' ), ( 3 , 'SVIP' ), ) user_type = models . IntegerField ( choices = user_type_choices ) username = models . CharField ( max_length = 64 , unique = True ) password = models . CharField ( max_length = 64 ) class UserToken ( models . Model ): # \u8fd8\u53ef\u4ee5\u5728\u8fd9\u91cc\u52a0token\u65f6\u95f4\uff0c\u6700\u591a\u4f7f\u7528\u6b21\u6570\uff0c\u6bd4\u5982\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2aexpire_time\u4f5c\u4e3a\u8fc7\u671f\u65f6\u95f4 # \u907f\u514d\u6bcf\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\u90fd\u5237\u65b0token user = models . OneToOneField ( 'UserInfo' , on_delete = models . CASCADE ) token = models . CharField ( max_length = 64 ) \u8ba4\u8bc1\u6e90\u7801\u89e3\u6790 \u00b6 \u4ecd\u7136\u4ee5dispatch\u4f5c\u4e3a\u5207\u5165\u53e3\uff0c\u67e5\u770brequest\u5c01\u88c5\u8fc7\u7a0b\u7684\u65f6\u5019\u6709\u5bf9\u8ba4\u8bc1\u90e8\u5206\u7684\u5c01\u88c5 \u8fd9\u91cc\u53ea\u7740\u91cd\u8ba4\u8bc1\u90e8\u5206\uff0c\u5176\u4ed6\u7684\u90e8\u5206\u4f1a\u56de\u8fc7\u5934\u6765\u91cd\u65b0\u8bf4\u660e\u7684\u3002 # initialize_request def initialize_request ( self , request , * args , ** kwargs ): \"\"\" \u8fd4\u56de\u521d\u59cb\u5316\u7684request\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u662fdrf\u7684Request\u7684\u5bf9\u8c61\uff0c\u76f8\u5f53\u4e8e\u5728\u539f\u57fa\u7840\u4e0a\u5c01\u88c5\u4e86\u66f4\u591a\u7684\u5185\u5bb9 \u4f46\u662f\u539f\u6765\u7684django\u7684request\u7ed9\u5c01\u88c5\u5230\u4e86\u8fd4\u56de\u7684\u5bf9\u8c61\u91cc\uff0c\u6240\u4ee5\u8bf4\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u7684request\u3002 \"\"\" parser_context = self . get_parser_context ( request ) return Request ( request , parsers = self . get_parsers (), # self.authentication_classes\u4e2d\u5217\u51fa\u7684\u7c7b\u7684\u5bf9\u8c61 authenticators = self . get_authenticators (), negotiator = self . get_content_negotiator (), parser_context = parser_context ) \u5728\u521d\u59cb\u5316\u5c01\u88c5request\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd4\u56de\u4e86\u4e00\u4e2aDRF\u7684Request\u5bf9\u8c61\uff0c\u91cc\u9762\u5c01\u88c5\u4e86\u539f\u751f\u7684request\u4ee5\u53ca\u4e00\u4e2aauthenticators\uff0c\u8fd9\u4e2aauthenticators\u662f\u8c03\u7528 self.get_authenticators() \u83b7\u5f97\u7684\u3002 \u6765\u770b\u4e00\u4e0bget_authenticators\u662f\u5982\u4f55\u64cd\u4f5c\u7684\u3002 # \u904d\u5386self.authentications_classes\u8fd4\u56de\u5bf9\u5e94\u6bcf\u4e00\u4e2aitem\u7684\u5b9e\u4f8b\uff0c\u586b\u5145\u5230\u5217\u8868\u91cc\u3002\u56e0\u6b64\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684CBV\u4e2d\u5e94\u8be5\u9700\u8981\u5b58\u5728\u4e00\u4e2a\u5217\u8868authentication_classes\uff0c\u5217\u8868\u91cc\u662f\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u8ba4\u8bc1\u7c7b def get_authenticators ( self ): \"\"\" Instantiates and returns the list of authenticators that this view can use. \"\"\" return [ auth () for auth in self . authentication_classes ] \u6b64\u65f6\u7684\u8fd9\u4e2aself\u662f\u8c01\uff1f\u8fd9\u4e2aself\u73b0\u5728\u662f\u6211\u4eec\u5b9a\u4e49\u7684CBV\uff0c\u56e0\u6b64\u53bb\u627eself.authentication_classes\u7684\u65f6\u5019\u4f1a\u4f18\u5148\u5230\u6211\u4eec\u81ea\u5df1\u7684\u7c7b\u91cc\u9762\u53bb\u627e\uff0c\u5047\u5982\u6211\u5728\u6211\u81ea\u5df1\u7684\u7c7b\u91cc\u9762\u5b9a\u4e49\u4e86\u8fd9\u4e2a\u5185\u5bb9\uff1a class OrderView ( APIView ): # \u8868\u793a\u5728\u4f60\u5199\u7684\u8fd9\u4e2a\u7c7b\u4e2d\u5e94\u7528drf\u7684\u8ba4\u8bc1\u89c4\u5219 authentication_classes = [ Authtication , ] def get ( self , request , * args , ** kwargs ): pass def post ( self , request , * args , ** kwargs ): pass \u90a3\u4e48get_authenticators\u8fd4\u56de\u7684\u5c31\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684authentication_classes\u4e2d\u7684\u5bf9\u8c61\u7684\u5217\u8868\u3002\u5230\u6b64\u4e3a\u6b62\u6211\u4eec\u5728\u8ba4\u8bc1\u65b9\u9762\u77e5\u9053dispatch\u5728DRF\u4e2d\u88ab\u521d\u59cb\u5316\uff0crequest\u88ab\u91cd\u65b0\u5c01\u88c5\uff0c\u800c\u4e14\u5c01\u88c5\u540e\u7684\u5185\u5bb9\u5305\u542b\u539f\u751f\u7684request\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6211\u4eec\u81ea\u5b9a\u5236\u7684\u8ba4\u8bc1\u89c4\u5219\u7c7b\u7684\u5bf9\u8c61\u5217\u8868\u3002 \u63a5\u4e0b\u6765\u7ee7\u7eed\u770bdispatch\u7684\u5185\u5bb9\uff0c\u5728dispatch\u7684\u540e\u7eed\u4ee3\u7801\u4e2d\u8c03\u7528\u4e86initial\u65b9\u6cd5\u3002 def dispatch ( self , request , * args , ** kwargs ): self . args = args self . kwargs = kwargs request = self . initialize_request ( request , * args , ** kwargs ) self . request = request self . headers = self . default_response_headers # deprecate? try : # \u8c03\u7528initial\u65b9\u6cd5 self . initial ( request , * args , ** kwargs ) if request . method . lower () in self . http_method_names : handler = getattr ( self , request . method . lower (), self . http_method_not_allowed ) else : handler = self . http_method_not_allowed response = handler ( request , * args , ** kwargs ) except Exception as exc : response = self . handle_exception ( exc ) self . response = self . finalize_response ( request , response , * args , ** kwargs ) return self . response \u627e\u5230self.initial\u65b9\u6cd5 def initial ( self , request , * args , ** kwargs ): \"\"\" Runs anything that needs to occur prior to calling the method handler. \"\"\" self . format_kwarg = self . get_format_suffix ( ** kwargs ) # Perform content negotiation and store the accepted info on the request neg = self . perform_content_negotiation ( request ) request . accepted_renderer , request . accepted_media_type = neg # Determine the API version, if versioning is in use. version , scheme = self . determine_version ( request , * args , ** kwargs ) request . version , request . versioning_scheme = version , scheme # \u786e\u8ba4\u8fdb\u6765\u7684\u8bf7\u6c42\u662f\u5426\u88ab\u5141\u8bb8\u3002 self . perform_authentication ( request ) self . check_permissions ( request ) self . check_throttles ( request ) \u770b\u6700\u540e\u7684self.perform_authentication\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u7528\u6765\u786e\u8ba4\u8fd9\u4e2a\u8fdb\u6765\u7684\u8bf7\u6c42\u662f\u5426\u7ecf\u8fc7\u5141\u8bb8\uff0c\u4e5f\u5c31\u662f\u8fdb\u6765\u7684\u8fd9\u4e2a\u8bf7\u6c42\u662f\u5426\u8ba4\u8bc1\u6210\u529f\uff1f def perform_authentication ( self , request ): \"\"\" Perform authentication on the incoming request. Note that if you override this and simply 'pass', then authentication will instead be performed lazily, the first time either `request.user` or `request.auth` is accessed. \"\"\" request . user \u8fd4\u56de\u4e86\u4e00\u4e2arequest\u5bf9\u8c61\u7684user\u65b9\u6cd5\uff0c\u6ce8\u610f\u6b64\u65f6\u7684request\u662f\u5df2\u7ecf\u88ab\u5c01\u88c5\u8fc7\u7684request\uff0c\u6211\u4eec\u53bbDRF\u7684Request\u7c7b\u4e2d\u53bb\u627e\u8fd9\u4e48\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4e4b\u6240\u4ee5\u6ca1\u6709\u52a0\u62ec\u53f7\u662f\u56e0\u4e3a\u88abproperty\u4fee\u9970\u8fc7\u4e86\uff1a @property def user ( self ): \"\"\" Returns the user associated with the current request, as authenticated by the authentication classes provided to the request. \"\"\" # \u5982\u679c\u5f53\u524d\u5bf9\u8c61\u4e2d(\u6ce8\u610fself\u6307\u7684\u662fCBV\u7684\u5bf9\u8c61)\u6ca1\u6709_user\u8fd9\u4e2a\u5c5e\u6027\u7684\u8bdd\u90a3\u4e48\u5c31\u8c03\u7528_authenticate\u65b9\u6cd5 # \u5982\u679c\u6709\u76f4\u63a5\u8fd4\u56deself._user if not hasattr ( self , '_user' ): with wrap_attributeerrors (): self . _authenticate () return self . _user \u6211\u4eec\u770b\uff0c\u5982\u679c\u8bf4\u8ba4\u8bc1\u6210\u529f\u4ee5\u540e\u4f1a\u8fd4\u56deself._user\uff0c\u5982\u679c\u6ca1\u6709_user\u5219\u4f1a\u8c03\u7528self._authentication()\u65b9\u6cd5 # \u6765\u770b\u4e00\u4e0b_authenticate\u5e72\u4e86\u70b9\u4ec0\u4e48 def _authenticate ( self ): \"\"\" Attempt to authenticate the request using each authentication instance in turn. \"\"\" # \u5faa\u73afself.authenticators\u4e2d\u7684\u5bf9\u8c61 for authenticator in self . authenticators : try : # \u6267\u884c\u8ba4\u8bc1\u7c7b\u5bf9\u8c61\u7684authenticate\u65b9\u6cd5\uff0c\u5982\u679c\u6ca1\u6709\u5f02\u5e38\u7684\u8bdd\uff0c\u8fd4\u56de\u4e00\u4e2a\u7528\u6237\u8ba4\u8bc1\u7684\u5143\u7ec4 # \u6240\u4ee5\u6211\u4eec\u5728\u5199authenticate\u65b9\u6cd5\u7684\u65f6\u5019\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4 user_auth_tuple = authenticator . authenticate ( self ) except exceptions . APIException : # \u5982\u679c\u6355\u83b7\u5230\u5f02\u5e38\u4e86\uff0c\u90a3\u4e48\u5c31\u8c03\u7528_not_authenticated\u65b9\u6cd5\u3002 self . _not_authenticated () # \u5411\u4e0a\u7ea7\u629b\u51fa\u5f02\u5e38 raise if user_auth_tuple is not None : # \u5982\u679c\u6709\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u8bc1\u660e\u6267\u884c\u8fc7\u76f8\u5173\u8ba4\u8bc1\u8d4b\u503c\u64cd\u4f5c # \u5982\u679c\u8fd4\u56deNone\u7684\u8bdd\uff0c\u90a3\u4e48\u5faa\u73af\u7ee7\u7eed\uff0c\u8868\u793a\u5f53\u524d\u8ba4\u8bc1\u4e0d\u5904\u7406\uff0c\u4ea4\u7ed9\u4e0b\u4e00\u4e2a\u8ba4\u8bc1\u7c7b\u53bb\u5904\u7406\u3002 # \u8d4b\u503c\uff0crequest.user\u548crequest.auth\u5c31\u662f\u8fd9\u4e48\u6765\u7684\u3002\u56e0\u6b64\u6709\u8fd4\u56de\u503c\u5fc5\u987b\u662f\u4e00\u4e2a\u5143\u7ec4 # \u5143\u7ec4\u91cc\u9762\u5fc5\u987b\u6709\u4e24\u4e2a\u5143\u7d20\uff0c\u7b2c\u4e00\u4e2a\u7ed9request.user\uff0c\u7b2c\u4e8c\u4e2a\u7ed9request.auth # \u5bf9\u5e94\u7684request.user\u5c31\u662fuser\u5bf9\u8c61\uff0crequest.auth\u5c31\u662ftoken\u5bf9\u8c61\u3002 self . _authenticator = authenticator self . user , self . auth = user_auth_tuple return # \u4e5f\u6709\u53ef\u80fd\u90fd\u4e0d\u5904\u7406\uff0c\u8fd4\u56de\u7684\u90fd\u662fNone\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9ed8\u8ba4\u8d4b\u503c self . _not_authenticated () \u6211\u4eec\u5728_authenticate\u4e2d\u53d1\u73b0\uff0c\u5faa\u73af\u904d\u5386\u4e86\u6211\u4eec\u5c01\u88c5\u7684self.authenticators\u4e2d\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u5bf9\u8c61\u7684authenticate\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u6211\u4eec\u81ea\u5df1\u5199\u7684\u7c7b\u91cc\u9762\u8981\u6709\u4e00\u4e2aauthenticate\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5e94\u8be5\u8fd4\u56de\u4ec0\u4e48\uff1f\u4e0a\u9762\u7684\u65b9\u6cd5\u652f\u6301\u4e09\u79cd\u8fd4\u56de\u503c\uff1a \u81ea\u5df1\u8fd4\u56de\u5143\u7ec4\uff1a\u5143\u7ec4\u4e2d\u5305\u542b\u8ba4\u8bc1\u7528\u6237\u7684user\u5bf9\u8c61\uff0c\u4ee5\u53ca\u8ba4\u8bc1\u7ed3\u679c\u7684\u8ba4\u8bc1\u5bf9\u8c61\uff08\u6bd4\u5982token\u8868\u4e2d\u7684\u5bf9\u8c61\uff09\u3002 \u629b\u51fa\u5f02\u5e38\uff1a\u8c03\u7528 self._not_authenticated() \uff0c\u629b\u51fa\u7684\u5f02\u5e38\u4f1a\u5728_authenticate\u4e2d\u6355\u83b7\u5230\u3002 \u8fd4\u56deNone\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u7684\u8ba4\u8bc1\u89c4\u5219\u5168\u90e8\u901a\u8fc7\uff0c\u4f46\u662f\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u6b64\u65f6\u8c03\u7528 self._not_authenticated() . \u6765\u770b\u770b self._not_authenticated() \u90fd\u5e72\u4e86\u70b9\u4ec0\u4e48\uff1f def _not_authenticated ( self ): # \u8bbe\u7f6e\u9ed8\u8ba4\u7684_authenticator\u4e3a\u7a7a\uff0c self . _authenticator = None # \u5982\u679c\u8bbe\u7f6e\u4e86UNAUTHENTICATED_USER\u90a3\u4e48\u5c31\u8c03\u7528\uff08AnonymousUser\uff09\uff0c\u5426\u5219\u5c31\u8fd4\u56deNone if api_settings . UNAUTHENTICATED_USER : self . user = api_settings . UNAUTHENTICATED_USER () else : self . user = None # \u5982\u679c\u8bbe\u7f6e\u4e86UNAUTHENTICATED_TOKEN\u90a3\u4e48\u5c31\u8c03\u7528\uff0c\u5426\u5219\u5c31\u8fd4\u56deNone if api_settings . UNAUTHENTICATED_TOKEN : self . auth = api_settings . UNAUTHENTICATED_TOKEN () else : self . auth = None \u5176\u5b9e\u5c31\u662f\u4e3a\u9ed8\u8ba4\u7684\u7528\u6237\u505a\u4e00\u4e2a\u8bbe\u7f6e\uff0c\u7ed9\u901a\u8fc7\u8ba4\u8bc1\u5374\u6ca1\u6709\u8fd4\u56de\u5177\u4f53\u8ba4\u8bc1\u4fe1\u606f\u7684\u4eba\u4e00\u4e2a\u8eab\u4efd\uff08\u533f\u540d\u7528\u6237\uff09\u3002\u5230\u6b64\u4e3a\u6b62\uff0c\u8ba4\u8bc1\u662fok\u4e86\u3002\u4e0d\u8fc7\u521a\u624d\u8d70\u7684authenticate_classes\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\uff0c\u96be\u9053\u6211\u4eec\u6bcf\u5199\u4e00\u4e2a\u7c7b\u90fd\u8981\u81ea\u5df1\u8fd9\u6837\u5b9a\u4e49\u4e00\u4e0b\u4e48\uff1f\u5176\u5b9e\u4e0d\u662f\u7684\uff0c\u9488\u5bf9\u8fd9\u4e2a\u8ba4\u8bc1\u89c4\u5219\u662f\u6709\u4e00\u4e2a\u5168\u5c40\u8bbe\u7f6e\u7684\u3002 \u4e4b\u524d\u7684authenticate_classes\u662f\u9ed8\u8ba4\u4f18\u5148\u627e\u81ea\u5df1\u5b9a\u4e49\u7684cbv\u4e2d\u7684\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5047\u5982\u8bf4\u6ca1\u6709\u7684\u8bdd\u90a3\u4e48\u5c31\u5e94\u8be5\u53bb\u7236\u7c7b\u53bb\u627e\u4e86\uff0c\u90a3\u4e48\u7236\u7c7b\u4e2d\u662f\u5982\u4f55\u5b9a\u4e49\u7684\uff1f\u6700\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u5185\u7f6e\u7684authentication_classess\uff0c\u5b83\u662f\u4e00\u4e2aapi_settings\u7684\u4e00\u4e2a\u914d\u7f6e\u9879\uff1a class APIView ( View ): # \u4e0b\u9762\u7684\u8fd9\u4e9b\u7b56\u7565\u53ef\u4ee5\u8bbe\u7f6e\u6210\u5168\u5c40\u7684\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u6bcf\u4e00\u4e2a\u5355\u72ec\u7684CBV\u53bb\u8bbe\u7f6e\u3002 renderer_classes = api_settings . DEFAULT_RENDERER_CLASSES parser_classes = api_settings . DEFAULT_PARSER_CLASSES authentication_classes = api_settings . DEFAULT_AUTHENTICATION_CLASSES \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 # \u8fd9\u4e2a\u914d\u7f6e\u662f\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u7684\u3002 api_settings = APISettings ( None , DEFAULTS , IMPORT_STRINGS ) def reload_api_settings ( * args , ** kwargs ): setting = kwargs [ 'setting' ] # \u4f1a\u53bb\u914d\u7f6e\u6587\u4ef6\u4e2d\u627eREST_FRAMEWORK\u8fd9\u6837\u4e00\u4e2akey\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u914d\u7f6e\u9879\u5199\u5230\u8fd9\u91cc\u3002 if setting == 'REST_FRAMEWORK' : api_settings . reload () \u9ed8\u8ba4\u8fd9\u4e2a\u53d8\u91cf\u662f\u6ca1\u6709\u4e1c\u897f\u7684\uff0c\u9700\u8981\u6211\u4eec\u81ea\u5df1\u53bb\u52a0\uff0c\u52a0\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a # settings.py\u6587\u4ef6\u6700\u540e\u8fdb\u884c\u6dfb\u52a0 REST_FRAMEWORK = { # \u8fd9\u91cc\u5199\u7684\u662f\u8ba4\u8bc1\u7c7b\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u5355\u72ec\u6254\u5230\u4e00\u4e2apy\u6587\u4ef6\u91cc 'DEFAULT_AUTHENTICATION_CLASSES' : [ 'api.utils.auth.FirstAuth' , 'api.utils.xxx.xxx' ], # \u63a8\u8350\u4f7f\u7528None\uff0c\u8fd9\u4e2a\u73a9\u610f\u662f\u53ef\u4ee5\u8c03\u7528\u7684\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u5199\u4e00\u4e2alambda\u8868\u8fbe\u5f0f\u8fd4\u56de\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u4fe1\u606f\u5c31\u53ef\u4ee5\u4e86\u3002 'UNAUTHENTICATED_USER' : None , # request.user = None 'UNAUTHENTICATED_TOKEN' : None , # request.auth = None } \u8ba4\u8bc1\u7c7b\u4e0d\u8981\u548cview\u5199\u5230\u4e00\u8d77\uff0c\u8fd9\u6837\u89c6\u56fe\u51fd\u6570\u5c31\u53ea\u6709\u89c6\u56fe\u76f8\u5173\u7684\u903b\u8f91\uff0c\u800c\u8ba4\u8bc1\u76f8\u5173\u7684\u88ab\u5265\u79bb\u5230auth.py\u4e2d\u4e86\u3002\u56e0\u6b64\u5728api\u9879\u76ee\u4e0b\u65b0\u5efa\u4e00\u4e2autils\u7684\u76ee\u5f55\uff0c\u65b0\u5efa\u4e00\u4e2aauth.py\u5c06\u6211\u4eec\u7684\u8ba4\u8bc1\u903b\u8f91\u90fd\u6254\u5230auth.py\u91cc\u9762\u53bb\uff0c\u8fd9\u91cc\u7684\u503c\u6211\u4eec\u77e5\u9053\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u91cc\u9762\u5199\u7684\u90fd\u662f\u7c7b\u7684\u5168\u8def\u5f84\uff08\u7c7b\u4f3cmiddleware\u90a3\u79cd\u5199\u6cd5\uff09\u3002 \u8fd9\u6837\u6211\u4eec\u5b9e\u9645\u7684\u6bcf\u4e00\u4e2a\u4e1a\u52a1\u7c7b\u5c31\u4e0d\u7528\u5199\u8fd9\u4e9b\u5185\u5bb9\u4e86\uff0c\u76f8\u5f53\u4e8e\u5168\u5c40\u6dfb\u52a0\u4e86\u8ba4\u8bc1\uff0c\u4f46\u662f\u4e5f\u6709\u4f8b\u5916\u7684\u9875\u9762\uff0c\u6bd4\u5982\u8ba4\u8bc1\u9875\u9762\uff0c\u8ba4\u8bc1\u9875\u9762\u662f\u4e0d\u9700\u8981\u6dfb\u52a0\u8ba4\u8bc1\u673a\u5236\u7684\uff0c\u4f60\u5f97\u5148\u901a\u8fc7\u4e86\u8ba4\u8bc1\u9875\u9762\u62ff\u5230\u4e86token\u8bbf\u95ee\u522b\u7684\u9700\u8981\u8ba4\u8bc1\u7684\u9875\u9762\u7684\u65f6\u5019\u624d\u9700\u8981\u8ba4\u8bc1\uff0c\u4f60\u73b0\u5728\u90fd\u6ca1\u767b\u5f55\uff0c\u6211\u8ba4\u8bc1\u9875\u9762\u8fd8\u52a0\u4e86\u8ba4\u8bc1\uff0c\u90a3\u5c31\u6ca1\u529e\u6cd5\u8bbf\u95ee\u4e86\u3002\u56e0\u6b64\u9488\u5bf9\u4e00\u4e9b\u4e1a\u52a1\u7c7b\u9700\u8981\u653e\u5f00\u8fd9\u4e2a\u6743\u9650\uff0c\u653e\u5f00\u7684\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7a7a\u5217\u8868\u5c31\u884c\u4e86\u3002\u56e0\u4e3a\u5728\u7c7b\u7684\u5185\u90e8\u5b9a\u4e49\u4e86\uff0c\u56e0\u6b64\u4f1a\u4f18\u5148\u8d70\u7c7b\u5185\u90e8\u7684\uff0c\u5b9e\u73b0\u4e86\u5355\u72ec\u7684\u7c7b\u7684\u7279\u6b8a\u653e\u5f00\u3002 class AuthView ( APIView ): # \u76f4\u63a5\u8df3\u8fc7\u9a8c\u8bc1 authentication_classes = [] def post ( self , request , * args , ** kwargs ): \u2026\u2026\u2026\u2026\u2026\u2026 def get ( self , request , * args , ** kwargs ): \u2026\u2026\u2026\u2026\u2026\u2026 \u5185\u7f6e\u8ba4\u8bc1\u7c7b \u00b6 from rest_framework.authentication import BaseAuthentication \u4e3a\u4e86\u89c4\u8303\u90fd\u8981\u7ee7\u627f\u9ed8\u8ba4\u7684BaseAuthentication\u7c7b\u3002authenticate_header\u662f\u8ba4\u8bc1\u5931\u8d25\uff08\u8fd9\u4e2a\u662f\u6d4f\u89c8\u5668\u7684\u4e00\u79cd\u8ba4\u8bc1\u673a\u5236\uff09\u7684\u65f6\u5019\u7ed9\u4f60\u7684\u6d4f\u89c8\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u5934\u3002BaseAuthentication\u8fd9\u4e2a\u7c7b\u5176\u5b9e\u5565\u90fd\u6ca1\u5199\uff0c\u5c31\u662f\u5b9a\u4e49\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff0c\u4e00\u4e2aauthenticate\u4e00\u4e2aauthenticate_header\u65b9\u6cd5\u3002\u800c\u4e14authenticate\u5fc5\u987b\u8981\u91cd\u5199\uff0c\u5426\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\u3002 \u5176\u4ed6\u7684\u5185\u7f6e\u8ba4\u8bc1\u7c7b\u578b\u8fd8\u5305\u62ecSession\u7684\uff0cToken\u7684\uff0cRemoteUser\u7684\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u8ba4\u8bc1\u90fd\u662f\u57fa\u4e8eDjango\u7684\uff0c\u4ee5Session\u4e3a\u4f8b\uff0c\u5b83\u4f1a\u53bb\u83b7\u53d6request.user\u8fd9\u4e2a\u9009\u9879\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u81ea\u5df1\u53bb\u5199session\u7684\u65f6\u5019\u662f\u6ca1\u6709\u8fd9\u4e2a\u5185\u5bb9\u7684\u3002request.user\u662f\u57fa\u4e8eDjango\u7684\u3002\u518d\u6bd4\u5982RemoteUser\u662f\u57fa\u4e8eDjango\u7684auth\u53bb\u8fdb\u884c\u8ba4\u8bc1\u7684\u3002\u56e0\u6b64\u5185\u7f6e\u7684\u8fd9\u51e0\u79cd\u65b9\u6cd5\u5176\u5b9e\u90fd\u662f\u6709\u4e00\u5b9a\u5c40\u9650\u6027\u7684\uff0c\u56e0\u6b64\u8ba4\u8bc1\u7c7b\uff0c\u4e00\u822c\u662f\u6211\u4eec\u81ea\u5df1\u53bb\u5199\uff0c\u4e0d\u4f1a\u53bb\u7528\u5230DRF\u539f\u751f\u7684\u3002 \u8bf4\u4e00\u4e0bBasicAuthentication\uff0c\u8fd9\u4e2a\u662f\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u8d26\u53f7\u5bc6\u7801\u8ba4\u8bc1\uff0c\u5728\u8bbf\u95ee\u9875\u9762\u7684\u65f6\u5019\u4f1a\u4ee5\u6d4f\u89c8\u5668\u7684\u5f62\u5f0f\u5f39\u51fa\u6765\u4e00\u4e2a\u8d26\u53f7\u5bc6\u7801\u7684\u8ba4\u8bc1\u8f93\u5165\u6846\uff0c\u6d4f\u89c8\u5668\u4f1a\u628a\u8f93\u5165\u7684\u8d26\u53f7\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u6254\u5230\u8bf7\u6c42\u5934\uff0c\u52a0\u5bc6\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a HTTP_AUTHORIZATION : \"basic (\u7528\u6237\u540d+\u5bc6\u7801)base64\u8f6c\u7801\" \u5728BasicAuthentication\u4e2d\u4f1a\u53bb\u83b7\u53d6\u8fd9\u4e00\u90e8\u5206\uff1a def get_authorization_header ( request ): \"\"\" Return request's 'Authorization:' header, as a bytestring. Hide some test client ickyness where the header can be unicode. \"\"\" # \u4ecerequest.META\u4e2d\u628a\u8fd9\u4e2aHTTP_AUTHORIZATION\u53d6\u51fa\u6765\u3002 auth = request . META . get ( 'HTTP_AUTHORIZATION' , b '' ) if isinstance ( auth , text_type ): # Work around django test client oddness auth = auth . encode ( HTTP_HEADER_ENCODING ) return auth \u62ff\u5230base64\u8f6c\u7801\u540e\u7684\u5185\u5bb9\u8fdb\u884c\u89e3\u7801\u7684\u64cd\u4f5c\u3002 class BasicAuthentication ( BaseAuthentication ): \"\"\" HTTP Basic authentication against username/password. \"\"\" www_authenticate_realm = 'api' def authenticate ( self , request ): \"\"\" Returns a `User` if a correct username and password have been supplied using HTTP Basic authentication. Otherwise returns `None`. \"\"\" auth = get_authorization_header ( request ) . split () # \u5982\u679c\u8fd4\u56de\u4e3aNone\u6216\u8005\u4e0d\u662fbasic\u8ba4\u8bc1\uff0c\u90a3\u4e48return None if not auth or auth [ 0 ] . lower () != b 'basic' : return None if len ( auth ) == 1 : msg = _ ( 'Invalid basic header. No credentials provided.' ) raise exceptions . AuthenticationFailed ( msg ) elif len ( auth ) > 2 : msg = _ ( 'Invalid basic header. Credentials string should not contain spaces.' ) raise exceptions . AuthenticationFailed ( msg ) try : # \u5f00\u59cbbase64\u89e3\u7801\uff0c\u6ce8\u610fsplit\u548cpartition\u7c7b\u4f3c\uff0csplit\u4e0d\u4f1a\u53d6\u5206\u9694\u7b26\uff0c\u4f46\u662fpartition\u4f1a\u53d6 auth_parts = base64 . b64decode ( auth [ 1 ]) . decode ( HTTP_HEADER_ENCODING ) . partition ( ':' ) except ( TypeError , UnicodeDecodeError , binascii . Error ): msg = _ ( 'Invalid basic header. Credentials not correctly base64 encoded.' ) raise exceptions . AuthenticationFailed ( msg ) userid , password = auth_parts [ 0 ], auth_parts [ 2 ] return self . authenticate_credentials ( userid , password , request ) \u5c0f\u7ed3 \u00b6 authenticate\u8fd4\u56de\u503c \u00b6 None\uff1a\u6211\u4e0d\u7ba1\u4e86\uff0c\u4e0b\u4e00\u4e2a\u8ba4\u8bc1\u6765\u6267\u884c \u629b\u51fa\u5f02\u5e38\uff0c raise exception.AuthenticationFailed('Auth Failed') \u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c(user obj\uff0cauth obj)\uff0c\u56e0\u6b64\u5143\u7d20\u4e00\u8d4b\u503c\u7ed9request.user\uff0c\u5143\u7d20\u4e8c\u8d4b\u503c\u7ed9request.auth \u4f7f\u7528\u8303\u56f4 \u00b6 \u5c40\u90e8\u4f7f\u7528\uff1a\u89c6\u56fe\u7c7b\u4e2d\u5199\u4e00\u4e2a\u9759\u6001\u5b57\u6bb5\uff0cauthentication_classes\uff0c\u5217\u8868\u91cc\u9762\u662f\u7c7b\u7684\u540d\u79f0\uff0c\u8fd9\u91cc\u548c\u5168\u5c40\u4e0d\u4e00\u6837\u3002 \u5168\u5c40\u4f7f\u7528\uff0c\u5728settings\u4e2d\u914d\u7f6e\uff1a REST_FRAMEWORK = { # \u8fd9\u91cc\u5199\u7684\u662f\u8ba4\u8bc1\u7c7b\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u5355\u72ec\u6254\u5230\u4e00\u4e2apy\u6587\u4ef6\u91cc 'DEFAULT_AUTHENTION_CLASSES' : [ 'api.utils.auth.Authtication' , ], 'UNAUTHENTICATED_USER' : None , 'UNAUTHENTICATED_TOKEN' : None , }","title":"03-DRF\u7684\u8ba4\u8bc1"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#django-rest-framework","text":"","title":"Django Rest FrameWork"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#drf","text":"","title":"DRF\u7684\u8ba4\u8bc1"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#_1","text":"model class\u7b80\u5355\u70b9\uff0c\u4e00\u4e2a\u7528\u6765\u5b58\u50a8\u7528\u6237\u4fe1\u606f\u4e00\u4e2a\u7528\u6765\u5b58\u50a8token\u8ba4\u8bc1\u4fe1\u606f\u3002 from django.db import models class UserInfo ( models . Model ): user_type_choices = ( ( 1 , '\u666e\u901a\u7528\u6237' ), ( 2 , 'VIP' ), ( 3 , 'SVIP' ), ) user_type = models . IntegerField ( choices = user_type_choices ) username = models . CharField ( max_length = 64 , unique = True ) password = models . CharField ( max_length = 64 ) class UserToken ( models . Model ): # \u8fd8\u53ef\u4ee5\u5728\u8fd9\u91cc\u52a0token\u65f6\u95f4\uff0c\u6700\u591a\u4f7f\u7528\u6b21\u6570\uff0c\u6bd4\u5982\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2aexpire_time\u4f5c\u4e3a\u8fc7\u671f\u65f6\u95f4 # \u907f\u514d\u6bcf\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\u90fd\u5237\u65b0token user = models . OneToOneField ( 'UserInfo' , on_delete = models . CASCADE ) token = models . CharField ( max_length = 64 )","title":"\u7b80\u5355\u73af\u5883\u51c6\u5907"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#_2","text":"\u4ecd\u7136\u4ee5dispatch\u4f5c\u4e3a\u5207\u5165\u53e3\uff0c\u67e5\u770brequest\u5c01\u88c5\u8fc7\u7a0b\u7684\u65f6\u5019\u6709\u5bf9\u8ba4\u8bc1\u90e8\u5206\u7684\u5c01\u88c5 \u8fd9\u91cc\u53ea\u7740\u91cd\u8ba4\u8bc1\u90e8\u5206\uff0c\u5176\u4ed6\u7684\u90e8\u5206\u4f1a\u56de\u8fc7\u5934\u6765\u91cd\u65b0\u8bf4\u660e\u7684\u3002 # initialize_request def initialize_request ( self , request , * args , ** kwargs ): \"\"\" \u8fd4\u56de\u521d\u59cb\u5316\u7684request\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u662fdrf\u7684Request\u7684\u5bf9\u8c61\uff0c\u76f8\u5f53\u4e8e\u5728\u539f\u57fa\u7840\u4e0a\u5c01\u88c5\u4e86\u66f4\u591a\u7684\u5185\u5bb9 \u4f46\u662f\u539f\u6765\u7684django\u7684request\u7ed9\u5c01\u88c5\u5230\u4e86\u8fd4\u56de\u7684\u5bf9\u8c61\u91cc\uff0c\u6240\u4ee5\u8bf4\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u7684request\u3002 \"\"\" parser_context = self . get_parser_context ( request ) return Request ( request , parsers = self . get_parsers (), # self.authentication_classes\u4e2d\u5217\u51fa\u7684\u7c7b\u7684\u5bf9\u8c61 authenticators = self . get_authenticators (), negotiator = self . get_content_negotiator (), parser_context = parser_context ) \u5728\u521d\u59cb\u5316\u5c01\u88c5request\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd4\u56de\u4e86\u4e00\u4e2aDRF\u7684Request\u5bf9\u8c61\uff0c\u91cc\u9762\u5c01\u88c5\u4e86\u539f\u751f\u7684request\u4ee5\u53ca\u4e00\u4e2aauthenticators\uff0c\u8fd9\u4e2aauthenticators\u662f\u8c03\u7528 self.get_authenticators() \u83b7\u5f97\u7684\u3002 \u6765\u770b\u4e00\u4e0bget_authenticators\u662f\u5982\u4f55\u64cd\u4f5c\u7684\u3002 # \u904d\u5386self.authentications_classes\u8fd4\u56de\u5bf9\u5e94\u6bcf\u4e00\u4e2aitem\u7684\u5b9e\u4f8b\uff0c\u586b\u5145\u5230\u5217\u8868\u91cc\u3002\u56e0\u6b64\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684CBV\u4e2d\u5e94\u8be5\u9700\u8981\u5b58\u5728\u4e00\u4e2a\u5217\u8868authentication_classes\uff0c\u5217\u8868\u91cc\u662f\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u8ba4\u8bc1\u7c7b def get_authenticators ( self ): \"\"\" Instantiates and returns the list of authenticators that this view can use. \"\"\" return [ auth () for auth in self . authentication_classes ] \u6b64\u65f6\u7684\u8fd9\u4e2aself\u662f\u8c01\uff1f\u8fd9\u4e2aself\u73b0\u5728\u662f\u6211\u4eec\u5b9a\u4e49\u7684CBV\uff0c\u56e0\u6b64\u53bb\u627eself.authentication_classes\u7684\u65f6\u5019\u4f1a\u4f18\u5148\u5230\u6211\u4eec\u81ea\u5df1\u7684\u7c7b\u91cc\u9762\u53bb\u627e\uff0c\u5047\u5982\u6211\u5728\u6211\u81ea\u5df1\u7684\u7c7b\u91cc\u9762\u5b9a\u4e49\u4e86\u8fd9\u4e2a\u5185\u5bb9\uff1a class OrderView ( APIView ): # \u8868\u793a\u5728\u4f60\u5199\u7684\u8fd9\u4e2a\u7c7b\u4e2d\u5e94\u7528drf\u7684\u8ba4\u8bc1\u89c4\u5219 authentication_classes = [ Authtication , ] def get ( self , request , * args , ** kwargs ): pass def post ( self , request , * args , ** kwargs ): pass \u90a3\u4e48get_authenticators\u8fd4\u56de\u7684\u5c31\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684authentication_classes\u4e2d\u7684\u5bf9\u8c61\u7684\u5217\u8868\u3002\u5230\u6b64\u4e3a\u6b62\u6211\u4eec\u5728\u8ba4\u8bc1\u65b9\u9762\u77e5\u9053dispatch\u5728DRF\u4e2d\u88ab\u521d\u59cb\u5316\uff0crequest\u88ab\u91cd\u65b0\u5c01\u88c5\uff0c\u800c\u4e14\u5c01\u88c5\u540e\u7684\u5185\u5bb9\u5305\u542b\u539f\u751f\u7684request\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6211\u4eec\u81ea\u5b9a\u5236\u7684\u8ba4\u8bc1\u89c4\u5219\u7c7b\u7684\u5bf9\u8c61\u5217\u8868\u3002 \u63a5\u4e0b\u6765\u7ee7\u7eed\u770bdispatch\u7684\u5185\u5bb9\uff0c\u5728dispatch\u7684\u540e\u7eed\u4ee3\u7801\u4e2d\u8c03\u7528\u4e86initial\u65b9\u6cd5\u3002 def dispatch ( self , request , * args , ** kwargs ): self . args = args self . kwargs = kwargs request = self . initialize_request ( request , * args , ** kwargs ) self . request = request self . headers = self . default_response_headers # deprecate? try : # \u8c03\u7528initial\u65b9\u6cd5 self . initial ( request , * args , ** kwargs ) if request . method . lower () in self . http_method_names : handler = getattr ( self , request . method . lower (), self . http_method_not_allowed ) else : handler = self . http_method_not_allowed response = handler ( request , * args , ** kwargs ) except Exception as exc : response = self . handle_exception ( exc ) self . response = self . finalize_response ( request , response , * args , ** kwargs ) return self . response \u627e\u5230self.initial\u65b9\u6cd5 def initial ( self , request , * args , ** kwargs ): \"\"\" Runs anything that needs to occur prior to calling the method handler. \"\"\" self . format_kwarg = self . get_format_suffix ( ** kwargs ) # Perform content negotiation and store the accepted info on the request neg = self . perform_content_negotiation ( request ) request . accepted_renderer , request . accepted_media_type = neg # Determine the API version, if versioning is in use. version , scheme = self . determine_version ( request , * args , ** kwargs ) request . version , request . versioning_scheme = version , scheme # \u786e\u8ba4\u8fdb\u6765\u7684\u8bf7\u6c42\u662f\u5426\u88ab\u5141\u8bb8\u3002 self . perform_authentication ( request ) self . check_permissions ( request ) self . check_throttles ( request ) \u770b\u6700\u540e\u7684self.perform_authentication\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u7528\u6765\u786e\u8ba4\u8fd9\u4e2a\u8fdb\u6765\u7684\u8bf7\u6c42\u662f\u5426\u7ecf\u8fc7\u5141\u8bb8\uff0c\u4e5f\u5c31\u662f\u8fdb\u6765\u7684\u8fd9\u4e2a\u8bf7\u6c42\u662f\u5426\u8ba4\u8bc1\u6210\u529f\uff1f def perform_authentication ( self , request ): \"\"\" Perform authentication on the incoming request. Note that if you override this and simply 'pass', then authentication will instead be performed lazily, the first time either `request.user` or `request.auth` is accessed. \"\"\" request . user \u8fd4\u56de\u4e86\u4e00\u4e2arequest\u5bf9\u8c61\u7684user\u65b9\u6cd5\uff0c\u6ce8\u610f\u6b64\u65f6\u7684request\u662f\u5df2\u7ecf\u88ab\u5c01\u88c5\u8fc7\u7684request\uff0c\u6211\u4eec\u53bbDRF\u7684Request\u7c7b\u4e2d\u53bb\u627e\u8fd9\u4e48\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4e4b\u6240\u4ee5\u6ca1\u6709\u52a0\u62ec\u53f7\u662f\u56e0\u4e3a\u88abproperty\u4fee\u9970\u8fc7\u4e86\uff1a @property def user ( self ): \"\"\" Returns the user associated with the current request, as authenticated by the authentication classes provided to the request. \"\"\" # \u5982\u679c\u5f53\u524d\u5bf9\u8c61\u4e2d(\u6ce8\u610fself\u6307\u7684\u662fCBV\u7684\u5bf9\u8c61)\u6ca1\u6709_user\u8fd9\u4e2a\u5c5e\u6027\u7684\u8bdd\u90a3\u4e48\u5c31\u8c03\u7528_authenticate\u65b9\u6cd5 # \u5982\u679c\u6709\u76f4\u63a5\u8fd4\u56deself._user if not hasattr ( self , '_user' ): with wrap_attributeerrors (): self . _authenticate () return self . _user \u6211\u4eec\u770b\uff0c\u5982\u679c\u8bf4\u8ba4\u8bc1\u6210\u529f\u4ee5\u540e\u4f1a\u8fd4\u56deself._user\uff0c\u5982\u679c\u6ca1\u6709_user\u5219\u4f1a\u8c03\u7528self._authentication()\u65b9\u6cd5 # \u6765\u770b\u4e00\u4e0b_authenticate\u5e72\u4e86\u70b9\u4ec0\u4e48 def _authenticate ( self ): \"\"\" Attempt to authenticate the request using each authentication instance in turn. \"\"\" # \u5faa\u73afself.authenticators\u4e2d\u7684\u5bf9\u8c61 for authenticator in self . authenticators : try : # \u6267\u884c\u8ba4\u8bc1\u7c7b\u5bf9\u8c61\u7684authenticate\u65b9\u6cd5\uff0c\u5982\u679c\u6ca1\u6709\u5f02\u5e38\u7684\u8bdd\uff0c\u8fd4\u56de\u4e00\u4e2a\u7528\u6237\u8ba4\u8bc1\u7684\u5143\u7ec4 # \u6240\u4ee5\u6211\u4eec\u5728\u5199authenticate\u65b9\u6cd5\u7684\u65f6\u5019\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4 user_auth_tuple = authenticator . authenticate ( self ) except exceptions . APIException : # \u5982\u679c\u6355\u83b7\u5230\u5f02\u5e38\u4e86\uff0c\u90a3\u4e48\u5c31\u8c03\u7528_not_authenticated\u65b9\u6cd5\u3002 self . _not_authenticated () # \u5411\u4e0a\u7ea7\u629b\u51fa\u5f02\u5e38 raise if user_auth_tuple is not None : # \u5982\u679c\u6709\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u8bc1\u660e\u6267\u884c\u8fc7\u76f8\u5173\u8ba4\u8bc1\u8d4b\u503c\u64cd\u4f5c # \u5982\u679c\u8fd4\u56deNone\u7684\u8bdd\uff0c\u90a3\u4e48\u5faa\u73af\u7ee7\u7eed\uff0c\u8868\u793a\u5f53\u524d\u8ba4\u8bc1\u4e0d\u5904\u7406\uff0c\u4ea4\u7ed9\u4e0b\u4e00\u4e2a\u8ba4\u8bc1\u7c7b\u53bb\u5904\u7406\u3002 # \u8d4b\u503c\uff0crequest.user\u548crequest.auth\u5c31\u662f\u8fd9\u4e48\u6765\u7684\u3002\u56e0\u6b64\u6709\u8fd4\u56de\u503c\u5fc5\u987b\u662f\u4e00\u4e2a\u5143\u7ec4 # \u5143\u7ec4\u91cc\u9762\u5fc5\u987b\u6709\u4e24\u4e2a\u5143\u7d20\uff0c\u7b2c\u4e00\u4e2a\u7ed9request.user\uff0c\u7b2c\u4e8c\u4e2a\u7ed9request.auth # \u5bf9\u5e94\u7684request.user\u5c31\u662fuser\u5bf9\u8c61\uff0crequest.auth\u5c31\u662ftoken\u5bf9\u8c61\u3002 self . _authenticator = authenticator self . user , self . auth = user_auth_tuple return # \u4e5f\u6709\u53ef\u80fd\u90fd\u4e0d\u5904\u7406\uff0c\u8fd4\u56de\u7684\u90fd\u662fNone\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9ed8\u8ba4\u8d4b\u503c self . _not_authenticated () \u6211\u4eec\u5728_authenticate\u4e2d\u53d1\u73b0\uff0c\u5faa\u73af\u904d\u5386\u4e86\u6211\u4eec\u5c01\u88c5\u7684self.authenticators\u4e2d\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u5bf9\u8c61\u7684authenticate\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u6211\u4eec\u81ea\u5df1\u5199\u7684\u7c7b\u91cc\u9762\u8981\u6709\u4e00\u4e2aauthenticate\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5e94\u8be5\u8fd4\u56de\u4ec0\u4e48\uff1f\u4e0a\u9762\u7684\u65b9\u6cd5\u652f\u6301\u4e09\u79cd\u8fd4\u56de\u503c\uff1a \u81ea\u5df1\u8fd4\u56de\u5143\u7ec4\uff1a\u5143\u7ec4\u4e2d\u5305\u542b\u8ba4\u8bc1\u7528\u6237\u7684user\u5bf9\u8c61\uff0c\u4ee5\u53ca\u8ba4\u8bc1\u7ed3\u679c\u7684\u8ba4\u8bc1\u5bf9\u8c61\uff08\u6bd4\u5982token\u8868\u4e2d\u7684\u5bf9\u8c61\uff09\u3002 \u629b\u51fa\u5f02\u5e38\uff1a\u8c03\u7528 self._not_authenticated() \uff0c\u629b\u51fa\u7684\u5f02\u5e38\u4f1a\u5728_authenticate\u4e2d\u6355\u83b7\u5230\u3002 \u8fd4\u56deNone\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u7684\u8ba4\u8bc1\u89c4\u5219\u5168\u90e8\u901a\u8fc7\uff0c\u4f46\u662f\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u6b64\u65f6\u8c03\u7528 self._not_authenticated() . \u6765\u770b\u770b self._not_authenticated() \u90fd\u5e72\u4e86\u70b9\u4ec0\u4e48\uff1f def _not_authenticated ( self ): # \u8bbe\u7f6e\u9ed8\u8ba4\u7684_authenticator\u4e3a\u7a7a\uff0c self . _authenticator = None # \u5982\u679c\u8bbe\u7f6e\u4e86UNAUTHENTICATED_USER\u90a3\u4e48\u5c31\u8c03\u7528\uff08AnonymousUser\uff09\uff0c\u5426\u5219\u5c31\u8fd4\u56deNone if api_settings . UNAUTHENTICATED_USER : self . user = api_settings . UNAUTHENTICATED_USER () else : self . user = None # \u5982\u679c\u8bbe\u7f6e\u4e86UNAUTHENTICATED_TOKEN\u90a3\u4e48\u5c31\u8c03\u7528\uff0c\u5426\u5219\u5c31\u8fd4\u56deNone if api_settings . UNAUTHENTICATED_TOKEN : self . auth = api_settings . UNAUTHENTICATED_TOKEN () else : self . auth = None \u5176\u5b9e\u5c31\u662f\u4e3a\u9ed8\u8ba4\u7684\u7528\u6237\u505a\u4e00\u4e2a\u8bbe\u7f6e\uff0c\u7ed9\u901a\u8fc7\u8ba4\u8bc1\u5374\u6ca1\u6709\u8fd4\u56de\u5177\u4f53\u8ba4\u8bc1\u4fe1\u606f\u7684\u4eba\u4e00\u4e2a\u8eab\u4efd\uff08\u533f\u540d\u7528\u6237\uff09\u3002\u5230\u6b64\u4e3a\u6b62\uff0c\u8ba4\u8bc1\u662fok\u4e86\u3002\u4e0d\u8fc7\u521a\u624d\u8d70\u7684authenticate_classes\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\uff0c\u96be\u9053\u6211\u4eec\u6bcf\u5199\u4e00\u4e2a\u7c7b\u90fd\u8981\u81ea\u5df1\u8fd9\u6837\u5b9a\u4e49\u4e00\u4e0b\u4e48\uff1f\u5176\u5b9e\u4e0d\u662f\u7684\uff0c\u9488\u5bf9\u8fd9\u4e2a\u8ba4\u8bc1\u89c4\u5219\u662f\u6709\u4e00\u4e2a\u5168\u5c40\u8bbe\u7f6e\u7684\u3002 \u4e4b\u524d\u7684authenticate_classes\u662f\u9ed8\u8ba4\u4f18\u5148\u627e\u81ea\u5df1\u5b9a\u4e49\u7684cbv\u4e2d\u7684\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5047\u5982\u8bf4\u6ca1\u6709\u7684\u8bdd\u90a3\u4e48\u5c31\u5e94\u8be5\u53bb\u7236\u7c7b\u53bb\u627e\u4e86\uff0c\u90a3\u4e48\u7236\u7c7b\u4e2d\u662f\u5982\u4f55\u5b9a\u4e49\u7684\uff1f\u6700\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u5185\u7f6e\u7684authentication_classess\uff0c\u5b83\u662f\u4e00\u4e2aapi_settings\u7684\u4e00\u4e2a\u914d\u7f6e\u9879\uff1a class APIView ( View ): # \u4e0b\u9762\u7684\u8fd9\u4e9b\u7b56\u7565\u53ef\u4ee5\u8bbe\u7f6e\u6210\u5168\u5c40\u7684\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u6bcf\u4e00\u4e2a\u5355\u72ec\u7684CBV\u53bb\u8bbe\u7f6e\u3002 renderer_classes = api_settings . DEFAULT_RENDERER_CLASSES parser_classes = api_settings . DEFAULT_PARSER_CLASSES authentication_classes = api_settings . DEFAULT_AUTHENTICATION_CLASSES \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 # \u8fd9\u4e2a\u914d\u7f6e\u662f\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u7684\u3002 api_settings = APISettings ( None , DEFAULTS , IMPORT_STRINGS ) def reload_api_settings ( * args , ** kwargs ): setting = kwargs [ 'setting' ] # \u4f1a\u53bb\u914d\u7f6e\u6587\u4ef6\u4e2d\u627eREST_FRAMEWORK\u8fd9\u6837\u4e00\u4e2akey\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u914d\u7f6e\u9879\u5199\u5230\u8fd9\u91cc\u3002 if setting == 'REST_FRAMEWORK' : api_settings . reload () \u9ed8\u8ba4\u8fd9\u4e2a\u53d8\u91cf\u662f\u6ca1\u6709\u4e1c\u897f\u7684\uff0c\u9700\u8981\u6211\u4eec\u81ea\u5df1\u53bb\u52a0\uff0c\u52a0\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a # settings.py\u6587\u4ef6\u6700\u540e\u8fdb\u884c\u6dfb\u52a0 REST_FRAMEWORK = { # \u8fd9\u91cc\u5199\u7684\u662f\u8ba4\u8bc1\u7c7b\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u5355\u72ec\u6254\u5230\u4e00\u4e2apy\u6587\u4ef6\u91cc 'DEFAULT_AUTHENTICATION_CLASSES' : [ 'api.utils.auth.FirstAuth' , 'api.utils.xxx.xxx' ], # \u63a8\u8350\u4f7f\u7528None\uff0c\u8fd9\u4e2a\u73a9\u610f\u662f\u53ef\u4ee5\u8c03\u7528\u7684\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u5199\u4e00\u4e2alambda\u8868\u8fbe\u5f0f\u8fd4\u56de\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u4fe1\u606f\u5c31\u53ef\u4ee5\u4e86\u3002 'UNAUTHENTICATED_USER' : None , # request.user = None 'UNAUTHENTICATED_TOKEN' : None , # request.auth = None } \u8ba4\u8bc1\u7c7b\u4e0d\u8981\u548cview\u5199\u5230\u4e00\u8d77\uff0c\u8fd9\u6837\u89c6\u56fe\u51fd\u6570\u5c31\u53ea\u6709\u89c6\u56fe\u76f8\u5173\u7684\u903b\u8f91\uff0c\u800c\u8ba4\u8bc1\u76f8\u5173\u7684\u88ab\u5265\u79bb\u5230auth.py\u4e2d\u4e86\u3002\u56e0\u6b64\u5728api\u9879\u76ee\u4e0b\u65b0\u5efa\u4e00\u4e2autils\u7684\u76ee\u5f55\uff0c\u65b0\u5efa\u4e00\u4e2aauth.py\u5c06\u6211\u4eec\u7684\u8ba4\u8bc1\u903b\u8f91\u90fd\u6254\u5230auth.py\u91cc\u9762\u53bb\uff0c\u8fd9\u91cc\u7684\u503c\u6211\u4eec\u77e5\u9053\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u91cc\u9762\u5199\u7684\u90fd\u662f\u7c7b\u7684\u5168\u8def\u5f84\uff08\u7c7b\u4f3cmiddleware\u90a3\u79cd\u5199\u6cd5\uff09\u3002 \u8fd9\u6837\u6211\u4eec\u5b9e\u9645\u7684\u6bcf\u4e00\u4e2a\u4e1a\u52a1\u7c7b\u5c31\u4e0d\u7528\u5199\u8fd9\u4e9b\u5185\u5bb9\u4e86\uff0c\u76f8\u5f53\u4e8e\u5168\u5c40\u6dfb\u52a0\u4e86\u8ba4\u8bc1\uff0c\u4f46\u662f\u4e5f\u6709\u4f8b\u5916\u7684\u9875\u9762\uff0c\u6bd4\u5982\u8ba4\u8bc1\u9875\u9762\uff0c\u8ba4\u8bc1\u9875\u9762\u662f\u4e0d\u9700\u8981\u6dfb\u52a0\u8ba4\u8bc1\u673a\u5236\u7684\uff0c\u4f60\u5f97\u5148\u901a\u8fc7\u4e86\u8ba4\u8bc1\u9875\u9762\u62ff\u5230\u4e86token\u8bbf\u95ee\u522b\u7684\u9700\u8981\u8ba4\u8bc1\u7684\u9875\u9762\u7684\u65f6\u5019\u624d\u9700\u8981\u8ba4\u8bc1\uff0c\u4f60\u73b0\u5728\u90fd\u6ca1\u767b\u5f55\uff0c\u6211\u8ba4\u8bc1\u9875\u9762\u8fd8\u52a0\u4e86\u8ba4\u8bc1\uff0c\u90a3\u5c31\u6ca1\u529e\u6cd5\u8bbf\u95ee\u4e86\u3002\u56e0\u6b64\u9488\u5bf9\u4e00\u4e9b\u4e1a\u52a1\u7c7b\u9700\u8981\u653e\u5f00\u8fd9\u4e2a\u6743\u9650\uff0c\u653e\u5f00\u7684\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7a7a\u5217\u8868\u5c31\u884c\u4e86\u3002\u56e0\u4e3a\u5728\u7c7b\u7684\u5185\u90e8\u5b9a\u4e49\u4e86\uff0c\u56e0\u6b64\u4f1a\u4f18\u5148\u8d70\u7c7b\u5185\u90e8\u7684\uff0c\u5b9e\u73b0\u4e86\u5355\u72ec\u7684\u7c7b\u7684\u7279\u6b8a\u653e\u5f00\u3002 class AuthView ( APIView ): # \u76f4\u63a5\u8df3\u8fc7\u9a8c\u8bc1 authentication_classes = [] def post ( self , request , * args , ** kwargs ): \u2026\u2026\u2026\u2026\u2026\u2026 def get ( self , request , * args , ** kwargs ): \u2026\u2026\u2026\u2026\u2026\u2026","title":"\u8ba4\u8bc1\u6e90\u7801\u89e3\u6790"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#_3","text":"from rest_framework.authentication import BaseAuthentication \u4e3a\u4e86\u89c4\u8303\u90fd\u8981\u7ee7\u627f\u9ed8\u8ba4\u7684BaseAuthentication\u7c7b\u3002authenticate_header\u662f\u8ba4\u8bc1\u5931\u8d25\uff08\u8fd9\u4e2a\u662f\u6d4f\u89c8\u5668\u7684\u4e00\u79cd\u8ba4\u8bc1\u673a\u5236\uff09\u7684\u65f6\u5019\u7ed9\u4f60\u7684\u6d4f\u89c8\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u5934\u3002BaseAuthentication\u8fd9\u4e2a\u7c7b\u5176\u5b9e\u5565\u90fd\u6ca1\u5199\uff0c\u5c31\u662f\u5b9a\u4e49\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff0c\u4e00\u4e2aauthenticate\u4e00\u4e2aauthenticate_header\u65b9\u6cd5\u3002\u800c\u4e14authenticate\u5fc5\u987b\u8981\u91cd\u5199\uff0c\u5426\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\u3002 \u5176\u4ed6\u7684\u5185\u7f6e\u8ba4\u8bc1\u7c7b\u578b\u8fd8\u5305\u62ecSession\u7684\uff0cToken\u7684\uff0cRemoteUser\u7684\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u8ba4\u8bc1\u90fd\u662f\u57fa\u4e8eDjango\u7684\uff0c\u4ee5Session\u4e3a\u4f8b\uff0c\u5b83\u4f1a\u53bb\u83b7\u53d6request.user\u8fd9\u4e2a\u9009\u9879\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u81ea\u5df1\u53bb\u5199session\u7684\u65f6\u5019\u662f\u6ca1\u6709\u8fd9\u4e2a\u5185\u5bb9\u7684\u3002request.user\u662f\u57fa\u4e8eDjango\u7684\u3002\u518d\u6bd4\u5982RemoteUser\u662f\u57fa\u4e8eDjango\u7684auth\u53bb\u8fdb\u884c\u8ba4\u8bc1\u7684\u3002\u56e0\u6b64\u5185\u7f6e\u7684\u8fd9\u51e0\u79cd\u65b9\u6cd5\u5176\u5b9e\u90fd\u662f\u6709\u4e00\u5b9a\u5c40\u9650\u6027\u7684\uff0c\u56e0\u6b64\u8ba4\u8bc1\u7c7b\uff0c\u4e00\u822c\u662f\u6211\u4eec\u81ea\u5df1\u53bb\u5199\uff0c\u4e0d\u4f1a\u53bb\u7528\u5230DRF\u539f\u751f\u7684\u3002 \u8bf4\u4e00\u4e0bBasicAuthentication\uff0c\u8fd9\u4e2a\u662f\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u8d26\u53f7\u5bc6\u7801\u8ba4\u8bc1\uff0c\u5728\u8bbf\u95ee\u9875\u9762\u7684\u65f6\u5019\u4f1a\u4ee5\u6d4f\u89c8\u5668\u7684\u5f62\u5f0f\u5f39\u51fa\u6765\u4e00\u4e2a\u8d26\u53f7\u5bc6\u7801\u7684\u8ba4\u8bc1\u8f93\u5165\u6846\uff0c\u6d4f\u89c8\u5668\u4f1a\u628a\u8f93\u5165\u7684\u8d26\u53f7\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u6254\u5230\u8bf7\u6c42\u5934\uff0c\u52a0\u5bc6\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a HTTP_AUTHORIZATION : \"basic (\u7528\u6237\u540d+\u5bc6\u7801)base64\u8f6c\u7801\" \u5728BasicAuthentication\u4e2d\u4f1a\u53bb\u83b7\u53d6\u8fd9\u4e00\u90e8\u5206\uff1a def get_authorization_header ( request ): \"\"\" Return request's 'Authorization:' header, as a bytestring. Hide some test client ickyness where the header can be unicode. \"\"\" # \u4ecerequest.META\u4e2d\u628a\u8fd9\u4e2aHTTP_AUTHORIZATION\u53d6\u51fa\u6765\u3002 auth = request . META . get ( 'HTTP_AUTHORIZATION' , b '' ) if isinstance ( auth , text_type ): # Work around django test client oddness auth = auth . encode ( HTTP_HEADER_ENCODING ) return auth \u62ff\u5230base64\u8f6c\u7801\u540e\u7684\u5185\u5bb9\u8fdb\u884c\u89e3\u7801\u7684\u64cd\u4f5c\u3002 class BasicAuthentication ( BaseAuthentication ): \"\"\" HTTP Basic authentication against username/password. \"\"\" www_authenticate_realm = 'api' def authenticate ( self , request ): \"\"\" Returns a `User` if a correct username and password have been supplied using HTTP Basic authentication. Otherwise returns `None`. \"\"\" auth = get_authorization_header ( request ) . split () # \u5982\u679c\u8fd4\u56de\u4e3aNone\u6216\u8005\u4e0d\u662fbasic\u8ba4\u8bc1\uff0c\u90a3\u4e48return None if not auth or auth [ 0 ] . lower () != b 'basic' : return None if len ( auth ) == 1 : msg = _ ( 'Invalid basic header. No credentials provided.' ) raise exceptions . AuthenticationFailed ( msg ) elif len ( auth ) > 2 : msg = _ ( 'Invalid basic header. Credentials string should not contain spaces.' ) raise exceptions . AuthenticationFailed ( msg ) try : # \u5f00\u59cbbase64\u89e3\u7801\uff0c\u6ce8\u610fsplit\u548cpartition\u7c7b\u4f3c\uff0csplit\u4e0d\u4f1a\u53d6\u5206\u9694\u7b26\uff0c\u4f46\u662fpartition\u4f1a\u53d6 auth_parts = base64 . b64decode ( auth [ 1 ]) . decode ( HTTP_HEADER_ENCODING ) . partition ( ':' ) except ( TypeError , UnicodeDecodeError , binascii . Error ): msg = _ ( 'Invalid basic header. Credentials not correctly base64 encoded.' ) raise exceptions . AuthenticationFailed ( msg ) userid , password = auth_parts [ 0 ], auth_parts [ 2 ] return self . authenticate_credentials ( userid , password , request )","title":"\u5185\u7f6e\u8ba4\u8bc1\u7c7b"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#_4","text":"","title":"\u5c0f\u7ed3"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#authenticate","text":"None\uff1a\u6211\u4e0d\u7ba1\u4e86\uff0c\u4e0b\u4e00\u4e2a\u8ba4\u8bc1\u6765\u6267\u884c \u629b\u51fa\u5f02\u5e38\uff0c raise exception.AuthenticationFailed('Auth Failed') \u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c(user obj\uff0cauth obj)\uff0c\u56e0\u6b64\u5143\u7d20\u4e00\u8d4b\u503c\u7ed9request.user\uff0c\u5143\u7d20\u4e8c\u8d4b\u503c\u7ed9request.auth","title":"authenticate\u8fd4\u56de\u503c"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#_5","text":"\u5c40\u90e8\u4f7f\u7528\uff1a\u89c6\u56fe\u7c7b\u4e2d\u5199\u4e00\u4e2a\u9759\u6001\u5b57\u6bb5\uff0cauthentication_classes\uff0c\u5217\u8868\u91cc\u9762\u662f\u7c7b\u7684\u540d\u79f0\uff0c\u8fd9\u91cc\u548c\u5168\u5c40\u4e0d\u4e00\u6837\u3002 \u5168\u5c40\u4f7f\u7528\uff0c\u5728settings\u4e2d\u914d\u7f6e\uff1a REST_FRAMEWORK = { # \u8fd9\u91cc\u5199\u7684\u662f\u8ba4\u8bc1\u7c7b\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u5355\u72ec\u6254\u5230\u4e00\u4e2apy\u6587\u4ef6\u91cc 'DEFAULT_AUTHENTION_CLASSES' : [ 'api.utils.auth.Authtication' , ], 'UNAUTHENTICATED_USER' : None , 'UNAUTHENTICATED_TOKEN' : None , }","title":"\u4f7f\u7528\u8303\u56f4"},{"location":"django/DRF/04-DRF\u6743\u9650/","text":"DRF\u6743\u9650 \u00b6 DRF\u7684\u6743\u9650\u662f\u5728\u8ba4\u8bc1\u7684\u57fa\u7840\u4e0a\u505a\u8fdb\u4e00\u6b65\u7684\u8ba4\u8bc1\uff0c\u6bd4\u5982\u7528\u6237\u6839\u636e\u4e0d\u540c\u7684\u7528\u6237\u7c7b\u578b\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u6743\u9650\uff0c\u6bd4\u5982\u666e\u901a\u7528\u6237\uff0c\u7ba1\u7406\u5458\uff0c\u8d85\u7ea7\u7ba1\u7406\u5458\u7b49\u7b49\u3002 \u6743\u9650\u7684\u57fa\u672c\u4f7f\u7528 \u00b6 DRF\u7684\u6743\u9650\u7684\u8bbe\u7f6e\u6d41\u7a0b\u5176\u5b9e\u548c\u8ba4\u8bc1\u662f\u5927\u540c\u5c0f\u5f02\u7684\uff0c\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u6743\u9650\u7684\u4f7f\u7528\u8303\u56f4\uff0c\u914d\u7f6e\u5728settings\u914d\u7f6e\u6587\u4ef6\u7684\u5c31\u662f\u5168\u5c40\u6027\u8d28\u7684\uff0c\u5c40\u90e8\u89c6\u56fe\u7684\u76f4\u63a5\u5728\u5bf9\u5e94\u7684\u89c6\u56fe\u7c7b\u8bbe\u7f6e permission_classes \u5c5e\u6027\u3002 \u6e90\u7801\u6d41\u7a0b \u00b6 \u5728\u6e90\u7801\u6d41\u7a0b\u90e8\u5206\u5176\u5b9e\u548c\u8ba4\u8bc1\u90e8\u5206\u662f\u5927\u540c\u5c0f\u5f02\u7684\uff0c\u5165\u53e3\u4f9d\u65e7\u662fdispatch\u3002 \u627e\u5230dispatch\u4e2d\u5c01\u88c5\u7684initial\u65b9\u6cd5 def initial ( self , request , * args , ** kwargs ): \"\"\"\u6b64\u5904\u7701\u7565\u5f88\u591a\u4ee3\u7801~~~~~\"\"\" self . perform_authentication ( request ) # \u627e\u5230\u8fd9\u4e00\u6b65\u9aa4 self . check_permissions ( request ) self . check_throttles ( request ) \u770b\u770bcheck_permissions\u505a\u4e86\u4ec0\u4e48 def check_permissions ( self , request ): \"\"\" Check if the request should be permitted. Raises an appropriate exception if the request is not permitted. \"\"\" for permission in self . get_permissions (): if not permission . has_permission ( request , self ): self . permission_denied ( request , message = getattr ( permission , 'message' , None ) ) \u6211\u4eec\u53d1\u73b0\u5b83\u53c8\u5728self\uff08\u4e5f\u5c31\u662f\u6211\u4eecCBV\u7684\u5bf9\u8c61\u91cc\uff09\u627e\u8fd9\u4e2aget_permissions\u4e86\uff0c\u5982\u679c\u6211\u4eec\u81ea\u5df1\u6ca1\u6709\u5b9a\u4e49\u7684\u8bdd\u90a3\u4e48\u5c31\u4f1a\u53bb\u7236\u7c7b\u91cc\u9762\u627e\u3002\u627e\u5230\u7236\u7c7b\u7684APIView\uff0c\u5bf9\u5e94\u7684\u6709\u8fd9\u4e48\u4e00\u6761\uff1a class APIView ( View ): \u2026\u2026\u2026\u2026\u2026\u2026 permission_classes = api_settings . DEFAULT_PERMISSION_CLASSES \u2026\u2026\u2026\u2026\u2026\u2026 \u8fd9\u6837\u5c31\u548c\u4e4b\u524d\u7684\u8ba4\u8bc1\u90e8\u5206\u4e00\u81f4\u4e86\uff0c\u5982\u679c\u8981\u81ea\u5df1\u5b9a\u4e49\u7684\u8bdd\u8bb0\u5f97KEY\u8981\u5199\u6210\u5bf9\u5e94\u7684\u4e0a\u9762\u7684\u540d\u5b57\uff0c\u522b\u5199\u9519\u4e86\uff0c\u5426\u5219\u662f\u4e0d\u4f1a\u751f\u6548\u7684\u3002 \u7ee7\u7eed\u6765\u770bcheck_permissions\uff1a # get_permissions()\u505a\u4e86\u4e00\u4ef6\u4e8b\u5c31\u662f\u904d\u5386self.permission_classes\u7136\u540e\u901a\u8fc7\u5217\u8868\u751f\u6210\u5f0f\u8fd4\u56de\u6240\u6709\u6743\u9650\u7c7b\u7684\u5bf9\u8c61\u5217\u8868\u3002 def get_permissions ( self ): \"\"\" Instantiates and returns the list of permissions that this view requires. \"\"\" return [ permission () for permission in self . permission_classes ] # permission_denied\u4e2d\u629b\u51fa\u4e86\u5f02\u5e38 def permission_denied ( self , request , message = None ): \"\"\" If request is not permitted, determine what kind of exception to raise. \"\"\" if request . authenticators and not request . successful_authenticator : raise exceptions . NotAuthenticated () raise exceptions . PermissionDenied ( detail = message ) for permission in self . get_permissions (): # \u8c03\u7528\u6743\u9650\u5bf9\u8c61\u7684has_permission\u65b9\u6cd5\uff0c\u5982\u679c\u8fd4\u56de\u7684\u662fTrue\uff0c\u5373\u6743\u9650\u901a\u8fc7\u5219\u7ee7\u7eed\u5faa\u73af # \u5982\u679c\u8fd4\u56deFalse\uff0c\u5219\u6743\u9650\u4e0d\u901a\u8fc7\uff0c\u8fdb\u5165if\u6761\u4ef6\u4e2d\u3002 if not permission . has_permission ( request , self ): # \u8c03\u7528self\u7684permission_denied\uff0c self . permission_denied ( # messages\u5728permission\u4e2d\u53d6\u4e86\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8fd9\u4e2amessage request , message = getattr ( permission , 'message' , None ) ) \u5185\u7f6e\u6743\u9650 \u00b6 @six.add_metaclass ( BasePermissionMetaclass ) class BasePermission ( object ): \"\"\" A base class from which all permission classes should inherit. \"\"\" def has_permission ( self , request , view ): \"\"\" Return `True` if permission is granted, `False` otherwise. \"\"\" return True def has_object_permission ( self , request , view , obj ): \"\"\" Return `True` if permission is granted, `False` otherwise. \"\"\" return True \u4e3a\u4e86\u89c4\u8303\uff0c\u6211\u4eec\u5199\u7684\u6743\u9650\u7c7b\u90fd\u8981\u7ee7\u627fBasePermission\u7c7b\uff0c\u5176\u4ed6\u7684\u8fd8\u6709\u4e00\u4e9b\u9ed8\u8ba4\u7684\u6743\u9650\u7c7b\uff0c\u8fd9\u91cc\u4ec5\u4f5c\u53c2\u8003\uff0c\u4e00\u822c\u751f\u4ea7\u73af\u5883\u7684\u65f6\u5019\u662f\u4e0d\u4f1a\u7528\u5230\u8fd9\u4e9b\u5185\u7f6e\u7c7b\u7684\uff0c\u800c\u662f\u6839\u636e\u4e1a\u52a1\u81ea\u5df1\u5f00\u53d1\u6743\u9650\u3002 class AllowAny ( BasePermission ): \"\"\" Allow any access. This isn't strictly required, since you could use an empty permission_classes list, but it's useful because it makes the intention more explicit. \"\"\" def has_permission ( self , request , view ): return True class IsAuthenticated ( BasePermission ): \"\"\" Allows access only to authenticated users. \"\"\" def has_permission ( self , request , view ): return bool ( request . user and request . user . is_authenticated ) class IsAdminUser ( BasePermission ): \"\"\" Allows access only to admin users. \"\"\" def has_permission ( self , request , view ): return bool ( request . user and request . user . is_staff ) class IsAuthenticatedOrReadOnly ( BasePermission ): \"\"\" The request is authenticated as a user, or is a read-only request. \"\"\" def has_permission ( self , request , view ): return bool ( request . method in SAFE_METHODS or request . user and request . user . is_authenticated ) class DjangoModelPermissions ( BasePermission ): \"\"\" The request is authenticated using `django.contrib.auth` permissions. See: https://docs.djangoproject.com/en/dev/topics/auth/#permissions It ensures that the user is authenticated, and has the appropriate `add`/`change`/`delete` permissions on the model. This permission can only be applied against view classes that provide a `.queryset` attribute. \"\"\" # Map methods into required permission codes. # Override this if you need to also provide 'view' permissions, # or if you want to provide custom permission codes. perms_map = { 'GET' : [], 'OPTIONS' : [], 'HEAD' : [], 'POST' : [ ' %(app_label)s .add_ %(model_name)s ' ], 'PUT' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'PATCH' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'DELETE' : [ ' %(app_label)s .delete_ %(model_name)s ' ], } authenticated_users_only = True def get_required_permissions ( self , method , model_cls ): \"\"\" Given a model and an HTTP method, return the list of permission codes that the user is required to have. \"\"\" kwargs = { 'app_label' : model_cls . _meta . app_label , 'model_name' : model_cls . _meta . model_name } if method not in self . perms_map : raise exceptions . MethodNotAllowed ( method ) return [ perm % kwargs for perm in self . perms_map [ method ]] def _queryset ( self , view ): assert hasattr ( view , 'get_queryset' ) \\ or getattr ( view , 'queryset' , None ) is not None , ( 'Cannot apply {} on a view that does not set ' '`.queryset` or have a `.get_queryset()` method.' ) . format ( self . __class__ . __name__ ) if hasattr ( view , 'get_queryset' ): queryset = view . get_queryset () assert queryset is not None , ( '{}.get_queryset() returned None' . format ( view . __class__ . __name__ ) ) return queryset return view . queryset def has_permission ( self , request , view ): # Workaround to ensure DjangoModelPermissions are not applied # to the root view when using DefaultRouter. if getattr ( view , '_ignore_model_permissions' , False ): return True if not request . user or ( not request . user . is_authenticated and self . authenticated_users_only ): return False queryset = self . _queryset ( view ) perms = self . get_required_permissions ( request . method , queryset . model ) return request . user . has_perms ( perms ) class DjangoModelPermissionsOrAnonReadOnly ( DjangoModelPermissions ): \"\"\" Similar to DjangoModelPermissions, except that anonymous users are allowed read-only access. \"\"\" authenticated_users_only = False # \u9488\u5bf9\u5bf9\u8c61\u7684\u8ba4\u8bc1 class DjangoObjectPermissions ( DjangoModelPermissions ): \"\"\" The request is authenticated using Django's object-level permissions. It requires an object-permissions-enabled backend, such as Django Guardian. It ensures that the user is authenticated, and has the appropriate `add`/`change`/`delete` permissions on the object using .has_perms. This permission can only be applied against view classes that provide a `.queryset` attribute. \"\"\" perms_map = { 'GET' : [], 'OPTIONS' : [], 'HEAD' : [], 'POST' : [ ' %(app_label)s .add_ %(model_name)s ' ], 'PUT' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'PATCH' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'DELETE' : [ ' %(app_label)s .delete_ %(model_name)s ' ], } def get_required_object_permissions ( self , method , model_cls ): kwargs = { 'app_label' : model_cls . _meta . app_label , 'model_name' : model_cls . _meta . model_name } if method not in self . perms_map : raise exceptions . MethodNotAllowed ( method ) return [ perm % kwargs for perm in self . perms_map [ method ]] def has_object_permission ( self , request , view , obj ): # authentication checks have already executed via has_permission queryset = self . _queryset ( view ) model_cls = queryset . model user = request . user perms = self . get_required_object_permissions ( request . method , model_cls ) if not user . has_perms ( perms , obj ): # If the user does not have permissions we need to determine if # they have read permissions to see 403, or not, and simply see # a 404 response. if request . method in SAFE_METHODS : # Read permissions already checked and failed, no need # to make another lookup. raise Http404 read_perms = self . get_required_object_permissions ( 'GET' , model_cls ) if not user . has_perms ( read_perms , obj ): raise Http404 # Has read permissions. return False return True","title":"04-DRF\u7684\u6743\u9650"},{"location":"django/DRF/04-DRF\u6743\u9650/#drf","text":"DRF\u7684\u6743\u9650\u662f\u5728\u8ba4\u8bc1\u7684\u57fa\u7840\u4e0a\u505a\u8fdb\u4e00\u6b65\u7684\u8ba4\u8bc1\uff0c\u6bd4\u5982\u7528\u6237\u6839\u636e\u4e0d\u540c\u7684\u7528\u6237\u7c7b\u578b\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u6743\u9650\uff0c\u6bd4\u5982\u666e\u901a\u7528\u6237\uff0c\u7ba1\u7406\u5458\uff0c\u8d85\u7ea7\u7ba1\u7406\u5458\u7b49\u7b49\u3002","title":"DRF\u6743\u9650"},{"location":"django/DRF/04-DRF\u6743\u9650/#_1","text":"DRF\u7684\u6743\u9650\u7684\u8bbe\u7f6e\u6d41\u7a0b\u5176\u5b9e\u548c\u8ba4\u8bc1\u662f\u5927\u540c\u5c0f\u5f02\u7684\uff0c\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u6743\u9650\u7684\u4f7f\u7528\u8303\u56f4\uff0c\u914d\u7f6e\u5728settings\u914d\u7f6e\u6587\u4ef6\u7684\u5c31\u662f\u5168\u5c40\u6027\u8d28\u7684\uff0c\u5c40\u90e8\u89c6\u56fe\u7684\u76f4\u63a5\u5728\u5bf9\u5e94\u7684\u89c6\u56fe\u7c7b\u8bbe\u7f6e permission_classes \u5c5e\u6027\u3002","title":"\u6743\u9650\u7684\u57fa\u672c\u4f7f\u7528"},{"location":"django/DRF/04-DRF\u6743\u9650/#_2","text":"\u5728\u6e90\u7801\u6d41\u7a0b\u90e8\u5206\u5176\u5b9e\u548c\u8ba4\u8bc1\u90e8\u5206\u662f\u5927\u540c\u5c0f\u5f02\u7684\uff0c\u5165\u53e3\u4f9d\u65e7\u662fdispatch\u3002 \u627e\u5230dispatch\u4e2d\u5c01\u88c5\u7684initial\u65b9\u6cd5 def initial ( self , request , * args , ** kwargs ): \"\"\"\u6b64\u5904\u7701\u7565\u5f88\u591a\u4ee3\u7801~~~~~\"\"\" self . perform_authentication ( request ) # \u627e\u5230\u8fd9\u4e00\u6b65\u9aa4 self . check_permissions ( request ) self . check_throttles ( request ) \u770b\u770bcheck_permissions\u505a\u4e86\u4ec0\u4e48 def check_permissions ( self , request ): \"\"\" Check if the request should be permitted. Raises an appropriate exception if the request is not permitted. \"\"\" for permission in self . get_permissions (): if not permission . has_permission ( request , self ): self . permission_denied ( request , message = getattr ( permission , 'message' , None ) ) \u6211\u4eec\u53d1\u73b0\u5b83\u53c8\u5728self\uff08\u4e5f\u5c31\u662f\u6211\u4eecCBV\u7684\u5bf9\u8c61\u91cc\uff09\u627e\u8fd9\u4e2aget_permissions\u4e86\uff0c\u5982\u679c\u6211\u4eec\u81ea\u5df1\u6ca1\u6709\u5b9a\u4e49\u7684\u8bdd\u90a3\u4e48\u5c31\u4f1a\u53bb\u7236\u7c7b\u91cc\u9762\u627e\u3002\u627e\u5230\u7236\u7c7b\u7684APIView\uff0c\u5bf9\u5e94\u7684\u6709\u8fd9\u4e48\u4e00\u6761\uff1a class APIView ( View ): \u2026\u2026\u2026\u2026\u2026\u2026 permission_classes = api_settings . DEFAULT_PERMISSION_CLASSES \u2026\u2026\u2026\u2026\u2026\u2026 \u8fd9\u6837\u5c31\u548c\u4e4b\u524d\u7684\u8ba4\u8bc1\u90e8\u5206\u4e00\u81f4\u4e86\uff0c\u5982\u679c\u8981\u81ea\u5df1\u5b9a\u4e49\u7684\u8bdd\u8bb0\u5f97KEY\u8981\u5199\u6210\u5bf9\u5e94\u7684\u4e0a\u9762\u7684\u540d\u5b57\uff0c\u522b\u5199\u9519\u4e86\uff0c\u5426\u5219\u662f\u4e0d\u4f1a\u751f\u6548\u7684\u3002 \u7ee7\u7eed\u6765\u770bcheck_permissions\uff1a # get_permissions()\u505a\u4e86\u4e00\u4ef6\u4e8b\u5c31\u662f\u904d\u5386self.permission_classes\u7136\u540e\u901a\u8fc7\u5217\u8868\u751f\u6210\u5f0f\u8fd4\u56de\u6240\u6709\u6743\u9650\u7c7b\u7684\u5bf9\u8c61\u5217\u8868\u3002 def get_permissions ( self ): \"\"\" Instantiates and returns the list of permissions that this view requires. \"\"\" return [ permission () for permission in self . permission_classes ] # permission_denied\u4e2d\u629b\u51fa\u4e86\u5f02\u5e38 def permission_denied ( self , request , message = None ): \"\"\" If request is not permitted, determine what kind of exception to raise. \"\"\" if request . authenticators and not request . successful_authenticator : raise exceptions . NotAuthenticated () raise exceptions . PermissionDenied ( detail = message ) for permission in self . get_permissions (): # \u8c03\u7528\u6743\u9650\u5bf9\u8c61\u7684has_permission\u65b9\u6cd5\uff0c\u5982\u679c\u8fd4\u56de\u7684\u662fTrue\uff0c\u5373\u6743\u9650\u901a\u8fc7\u5219\u7ee7\u7eed\u5faa\u73af # \u5982\u679c\u8fd4\u56deFalse\uff0c\u5219\u6743\u9650\u4e0d\u901a\u8fc7\uff0c\u8fdb\u5165if\u6761\u4ef6\u4e2d\u3002 if not permission . has_permission ( request , self ): # \u8c03\u7528self\u7684permission_denied\uff0c self . permission_denied ( # messages\u5728permission\u4e2d\u53d6\u4e86\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8fd9\u4e2amessage request , message = getattr ( permission , 'message' , None ) )","title":"\u6e90\u7801\u6d41\u7a0b"},{"location":"django/DRF/04-DRF\u6743\u9650/#_3","text":"@six.add_metaclass ( BasePermissionMetaclass ) class BasePermission ( object ): \"\"\" A base class from which all permission classes should inherit. \"\"\" def has_permission ( self , request , view ): \"\"\" Return `True` if permission is granted, `False` otherwise. \"\"\" return True def has_object_permission ( self , request , view , obj ): \"\"\" Return `True` if permission is granted, `False` otherwise. \"\"\" return True \u4e3a\u4e86\u89c4\u8303\uff0c\u6211\u4eec\u5199\u7684\u6743\u9650\u7c7b\u90fd\u8981\u7ee7\u627fBasePermission\u7c7b\uff0c\u5176\u4ed6\u7684\u8fd8\u6709\u4e00\u4e9b\u9ed8\u8ba4\u7684\u6743\u9650\u7c7b\uff0c\u8fd9\u91cc\u4ec5\u4f5c\u53c2\u8003\uff0c\u4e00\u822c\u751f\u4ea7\u73af\u5883\u7684\u65f6\u5019\u662f\u4e0d\u4f1a\u7528\u5230\u8fd9\u4e9b\u5185\u7f6e\u7c7b\u7684\uff0c\u800c\u662f\u6839\u636e\u4e1a\u52a1\u81ea\u5df1\u5f00\u53d1\u6743\u9650\u3002 class AllowAny ( BasePermission ): \"\"\" Allow any access. This isn't strictly required, since you could use an empty permission_classes list, but it's useful because it makes the intention more explicit. \"\"\" def has_permission ( self , request , view ): return True class IsAuthenticated ( BasePermission ): \"\"\" Allows access only to authenticated users. \"\"\" def has_permission ( self , request , view ): return bool ( request . user and request . user . is_authenticated ) class IsAdminUser ( BasePermission ): \"\"\" Allows access only to admin users. \"\"\" def has_permission ( self , request , view ): return bool ( request . user and request . user . is_staff ) class IsAuthenticatedOrReadOnly ( BasePermission ): \"\"\" The request is authenticated as a user, or is a read-only request. \"\"\" def has_permission ( self , request , view ): return bool ( request . method in SAFE_METHODS or request . user and request . user . is_authenticated ) class DjangoModelPermissions ( BasePermission ): \"\"\" The request is authenticated using `django.contrib.auth` permissions. See: https://docs.djangoproject.com/en/dev/topics/auth/#permissions It ensures that the user is authenticated, and has the appropriate `add`/`change`/`delete` permissions on the model. This permission can only be applied against view classes that provide a `.queryset` attribute. \"\"\" # Map methods into required permission codes. # Override this if you need to also provide 'view' permissions, # or if you want to provide custom permission codes. perms_map = { 'GET' : [], 'OPTIONS' : [], 'HEAD' : [], 'POST' : [ ' %(app_label)s .add_ %(model_name)s ' ], 'PUT' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'PATCH' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'DELETE' : [ ' %(app_label)s .delete_ %(model_name)s ' ], } authenticated_users_only = True def get_required_permissions ( self , method , model_cls ): \"\"\" Given a model and an HTTP method, return the list of permission codes that the user is required to have. \"\"\" kwargs = { 'app_label' : model_cls . _meta . app_label , 'model_name' : model_cls . _meta . model_name } if method not in self . perms_map : raise exceptions . MethodNotAllowed ( method ) return [ perm % kwargs for perm in self . perms_map [ method ]] def _queryset ( self , view ): assert hasattr ( view , 'get_queryset' ) \\ or getattr ( view , 'queryset' , None ) is not None , ( 'Cannot apply {} on a view that does not set ' '`.queryset` or have a `.get_queryset()` method.' ) . format ( self . __class__ . __name__ ) if hasattr ( view , 'get_queryset' ): queryset = view . get_queryset () assert queryset is not None , ( '{}.get_queryset() returned None' . format ( view . __class__ . __name__ ) ) return queryset return view . queryset def has_permission ( self , request , view ): # Workaround to ensure DjangoModelPermissions are not applied # to the root view when using DefaultRouter. if getattr ( view , '_ignore_model_permissions' , False ): return True if not request . user or ( not request . user . is_authenticated and self . authenticated_users_only ): return False queryset = self . _queryset ( view ) perms = self . get_required_permissions ( request . method , queryset . model ) return request . user . has_perms ( perms ) class DjangoModelPermissionsOrAnonReadOnly ( DjangoModelPermissions ): \"\"\" Similar to DjangoModelPermissions, except that anonymous users are allowed read-only access. \"\"\" authenticated_users_only = False # \u9488\u5bf9\u5bf9\u8c61\u7684\u8ba4\u8bc1 class DjangoObjectPermissions ( DjangoModelPermissions ): \"\"\" The request is authenticated using Django's object-level permissions. It requires an object-permissions-enabled backend, such as Django Guardian. It ensures that the user is authenticated, and has the appropriate `add`/`change`/`delete` permissions on the object using .has_perms. This permission can only be applied against view classes that provide a `.queryset` attribute. \"\"\" perms_map = { 'GET' : [], 'OPTIONS' : [], 'HEAD' : [], 'POST' : [ ' %(app_label)s .add_ %(model_name)s ' ], 'PUT' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'PATCH' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'DELETE' : [ ' %(app_label)s .delete_ %(model_name)s ' ], } def get_required_object_permissions ( self , method , model_cls ): kwargs = { 'app_label' : model_cls . _meta . app_label , 'model_name' : model_cls . _meta . model_name } if method not in self . perms_map : raise exceptions . MethodNotAllowed ( method ) return [ perm % kwargs for perm in self . perms_map [ method ]] def has_object_permission ( self , request , view , obj ): # authentication checks have already executed via has_permission queryset = self . _queryset ( view ) model_cls = queryset . model user = request . user perms = self . get_required_object_permissions ( request . method , model_cls ) if not user . has_perms ( perms , obj ): # If the user does not have permissions we need to determine if # they have read permissions to see 403, or not, and simply see # a 404 response. if request . method in SAFE_METHODS : # Read permissions already checked and failed, no need # to make another lookup. raise Http404 read_perms = self . get_required_object_permissions ( 'GET' , model_cls ) if not user . has_perms ( read_perms , obj ): raise Http404 # Has read permissions. return False return True","title":"\u5185\u7f6e\u6743\u9650"},{"location":"django/DRF/05-DRF\u8bbf\u95ee\u9650\u5236/","text":"DRF\u8bbf\u95ee\u9650\u5236 \u00b6 \u63a5\u53e3\u9700\u8981\u6709\u8bbf\u95ee\u7684\u9650\u5236\uff0c\u800c\u4e0d\u662f\u968f\u610f\u7684\u65e0\u9650\u5236\u7684\u8bbf\u95ee\uff0cDRF\u63d0\u4f9b\u4e86\u8bbf\u95ee\u9650\u5236\u65b9\u9762\u7684\u5185\u5bb9\u3002 \u63a7\u5236\u8bbf\u95ee\u9891\u7387 \u00b6 \u9996\u5148\u6765\u770b\u9488\u5bf9\u533f\u540d\u7528\u6237\u7684\u8bbf\u95ee\u9650\u5236\u7684\u8bbe\u8ba1\u601d\u8def\uff0c\u9996\u5148\u8bf4\u8bbf\u95ee\u9650\u5236\u4e0d\u662f\u7edd\u5bf9\u7684\uff0c\u9488\u5bf9\u975e\u767b\u5f55\u7684\u533f\u540d\u7528\u6237\u6765\u8bb2\uff0cIP\u53ef\u4ee5\u8bf4\u662f\u7528\u6237\u552f\u4e00\u7684\u6807\u8bc6\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u8bbf\u95ee\u7684\u6e90IP\u6765\u505a\u9650\u5236\uff0c\u4f46\u662f\u7528\u6237\u7684IP\u662f\u53ef\u4ee5\u6362\u7684\uff0c\u6bd4\u5982\u7528\u6237\u66f4\u6362\u4ee3\u7406\uff0c\u90a3\u4e48\u53ef\u80fd\u7684IP\u5c31\u662f\u65e0\u9650\u591a\u4e2a\uff0c\u4f46\u662f\u8bbf\u95ee\u4eba\u662f\u540c\u4e00\u4e2a\uff0c\u56e0\u6b64\u6ca1\u6709\u529e\u6cd5\u505a\u5230\u7edd\u5bf9\u7684\u9650\u5236\u3002 \u540c\u6837\u7684\uff0c\u9488\u5bf9\u767b\u5f55\u7528\u6237\u4e5f\u662f\u4e0d\u80fd\u505a\u5230\u7edd\u5bf9\u7684\u5b8c\u5168\u7684\u9650\u5236\uff0c\u73b0\u5728\u57fa\u672c\u6bcf\u4e2a\u8d26\u53f7\u90fd\u4f1a\u7ed1\u5b9a\u624b\u673a\u53f7\uff0c\u4f46\u662f\u4f60\u62e6\u4e0d\u4f4f\u7528\u6237\u76f4\u63a5\u53bb\u67d0\u5b9d\u4e70\u624b\u673a\u53f7\uff0c\u4ee3\u7406\u6ce8\u518c\uff0c\u6240\u4ee5\u8bf4\u8fd9\u4e9b\u9650\u5236\u5728\u5e94\u7528\u5c42\u9762\u4e0a\u6765\u8bb2\uff0c\u53ea\u80fd\u8bf4\u662f\u4e00\u5b9a\u7a0b\u5ea6\u505a\u4e86\u9650\u5236\u3002 \u533f\u540d\u7528\u6237\u8bbf\u95ee\u9891\u7387\u7684\u8bbe\u8ba1\u601d\u8def\uff1a \u9996\u5148\u6355\u83b7\u7528\u6237\u7684IP\u5730\u5740\uff0c\u8fd9\u4e2aip\u5730\u5740\u53ef\u4ee5\u5728request\u7684META\u4fe1\u606f\u4e2d\u53bb\u53d6\u5230\uff0cremote_addr\u6216\u8005\u662fx_forward_for \u51c6\u5907\u4e00\u4e2a\u5b57\u5178\uff0c\u8fd9\u4e2a\u5b57\u5178\u53ef\u4ee5\u662f\u4e00\u4e2a\u5168\u5c40\u7ea7\u522b\u7684\u53d8\u91cf\uff0c\u6216\u8005\u662f\u6570\u636e\u5e93\u4ea6\u6216\u662fredis\u3002 \u6355\u83b7\u5230\u7684IP\u4f5c\u4e3akey\uff0c\u800cvalue\u4e3a\u4e00\u4e2a\u5217\u8868\u53bb\u5b58\u50a8\u7528\u6237\u7684\u8bbf\u95ee\u8bb0\u5f55 - \u8bbf\u95ee\u8bb0\u5f55\u7684\u5b9e\u4f53\u4e3a\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u7528\u6237\u6bcf\u8bbf\u95ee\u4e00\u6b21\u5411 value\u5217\u8868\u4e2d\u7684\u9996\u90e8\u6dfb\u52a0\u4e00\u4e2a - \u5f53\u7528\u6237\u6765\u8bbf\u95ee\u7684\u65f6\u5019\u9996\u5148\u6765\u770b\u8fd9\u4e2a\u5168\u5c40\u5b57\u5178\u4e2d\u6709\u6ca1\u6709\u5bf9\u5e94\u7684 IP\u7684key \uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\u90a3\u4e48\u5c31\u6dfb\u52a0\uff0c\u5e76\u5411\u5217\u8868\u4e2d\u8ffd\u52a0\u5f53\u524d\u7684\u65f6\u95f4\u6233\u3002 - \u5982\u679c\u6709\u5f53\u524d\u7684 key\u8bc1\u660e\u8fd9\u4e2aip\u7684\u533f\u540d\u7528\u6237\u4e4b\u524d\u6709\u8bbf\u95ee\u8fc7 \uff0c\u90a3\u4e48\u5c31\u4ece\u540e\u5f80\u524d\u9010\u4e2a\u5bf9\u6bd4\u65f6\u95f4\u5dee\u503c\u662f\u5426\u8d85\u8fc7\u8bbe\u7f6e\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5982\u679c\u6709\u8d85\u8fc7\u7684\u5c31 POP\u6389 \uff0c\u8fd9\u5c31\u662f\u4e3a\u5565\u8bb0\u5f55\u65f6\u95f4\u6233\u7684\u65f6\u5019\u8981\u8bb0\u5f55\u5728\u524d\u9762\uff0c\u56e0\u4e3a\u5728\u6e05\u7406\u8fc7\u671f\u8bbf\u95ee\u8bb0\u5f55\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 pop\u65b9\u4fbf\u7684\u53bb\u5220\u9664\u8bb0\u5f55 \u3002 - \u53bb\u9664\u6389\u8fc7\u671f\u8bb0\u5f55\u4ee5\u540e\u53bb\u6392\u67e5\u5f53\u524d\u5217\u8868\u7684\u957f\u5ea6\uff0c\u6bd4\u5982\u4e00\u5206\u949f\u5185\u53ea\u8ba9\u8bbf\u95ee 10 \u6b21\uff0c\u90a3\u4e48\u5047\u5982\u5f53\u524d\u7684\u5217\u8868\u957f\u5ea6\u53ea\u6709\u5c0f\u4e8e 10 \u7684\u65f6\u5019\u624d\u5141\u8bb8\u4f60\u8fdb\u884c\u4e0b\u4e00\u6b21\u8bbf\u95ee\u3002 \u90a3\u4e48\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u903b\u8f91\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u7b80\u5355\u4ee3\u7801 \"\"\"\u6240\u6709\u5bfc\u5165\u7684\u5305\u90fd\u7701\u7565\u4e86\"\"\" def md5 ( user ): ctime = time . time () m = hashlib . md5 ( bytes ( user , encoding = 'utf8' )) m . update ( bytes ( str ( ctime ), encoding = 'utf8' )) return m . hexdigest () # \u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\uff0c\u6570\u636e\u5e93\u53ef\u4ee5\uff0credis\u4e5f\u53ef\u4ee5 VISIT_RECORD = {} class VisitThrottle ( BaseThrottle ): def __init__ ( self ): self . history = None def allow_request ( self , request , view ): \"\"\" \u5982\u679creturn true\u8868\u793a\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\uff0c\u5982\u679c\u8fd4\u56defalse\uff0c\u8868\u793a\u8bbf\u95ee\u9891\u7387\u592a\u9ad8\uff0c\u88ab\u9650\u5236\u8bbf\u95ee :param request: :param view: :return: \"\"\" # 1\u3001\u83b7\u53d6\u7528\u6237IP\uff0c\u6211\u4eec\u77e5\u9053\u8bf4\u8fd9\u91cc\u7684request\u662f\u5df2\u7ecf\u88ab\u5c01\u88c5\u8fc7\u7684 # \u4e4b\u524d\u770b\u5c01\u88c5\u7684request\u7684\u65f6\u5019\uff0c\u91cc\u9762\u6709\u4e00\u4e2agetattr\u65b9\u6cd5\uff0c\u5f53\u6211\u4eec\u8c03\u7528META\u7684\u65f6\u5019\uff0c\u5c01\u88c5\u7684 # request\u4e2d\u5e76\u4e0d\u5b58\u5728\u8fd9\u4e2a\u5c5e\u6027\uff0c\u56e0\u6b64\u4f1a\u53bb\u539f\u751f\u7684request\u53bb\u627e\uff0c\u56e0\u6b64\u4ecd\u7136\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u3002 # \u56e0\u6b64\u8fd9\u91cc\u53ef\u4ee5\u7701\u7565_request\uff0c\u76f4\u63a5\u8c03\u7528META remote_addr = request . META . get ( 'REMOTE_ADDR' ) current_time = time . time () # \u5982\u679c\u6355\u83b7\u5230\u7684IP\u5730\u5740\u6ca1\u6709\u518d\u8fd9\u4e2a\u8bbf\u95ee\u8bb0\u5f55\u7684\u5b57\u5178\u91cc\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u589e\u52a0\u4e00\u4e0b\u3002 if remote_addr not in VISIT_RECORD : VISIT_RECORD [ remote_addr ] = [ current_time , ] return True # \u5982\u679c\u8bf4\u6709\u8bbf\u95ee\u8bb0\u5f55\uff0c\u90a3\u4e48\u5c31\u628a\u8bbf\u95ee\u8bb0\u5f55\u7684\u5217\u8868\u8d4b\u503c\u7ed9self.history self . history = VISIT_RECORD . get ( remote_addr ) # \u6e05\u7406\u8fc7\u671f\u7684\u8bbf\u95ee\u8bb0\u5f55\uff0c\u6bd4\u5982\u6211\u73b0\u5728\u5141\u8bb8\u4f60\u4e00\u5206\u949f\u4f60\u8bbf\u95ee10\u6b21\uff0c\u4e5f\u5c31\u662f60s\u5185\u8bbf\u95ee10\u6b21 # \u90a3\u4e48\u65b0\u7684\u4e00\u6b21\u8bbf\u95ee\u8fdb\u6765\u4ee5\u540e\uff0c\u9996\u5148\u6bd4\u5bf9\u65b0\u7684\u65f6\u95f4\u6233\u548c\u6700\u8001\u7684\u65f6\u95f4\u6233\uff0c\u5982\u679c\u5dee\u503c\u5927\u4e8e60s # \u90a3\u4e48\u8bc1\u660e\u8fd9\u4e2a\u8bbf\u95ee\u8bb0\u5f55\u53ef\u80fd\u5df2\u7ecf\u5f88\u4e45\u8fdc\u4e86\uff0c\u5c31\u53ef\u4ee5\u5220\u6389\u4e86\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4f9d\u6b21\u5bf9\u6bd4\u3002 while self . history and self . history [ - 1 ] < ( current_time - 10 ): self . history . pop () # \u5c06\u8001\u65e7\u7684\u4fe1\u606f\u5220\u6389\u4ee5\u540e\uff0c\u7136\u540e\u770b\u770b\u5217\u8868\u7684\u957f\u5ea6\uff0c\u4e00\u5206\u949f\u518510\u6b21\u7684\u8bdd\u90a3\u4e48\u5217\u8868\u957f\u5ea6\u5c31\u5e94\u8be5\u5c0f\u4e8e\u7b49\u4e8e10 # \u5f5310\u7684\u65f6\u5019\u6b64\u65f6\u5c31\u5df2\u7ecf\u8fbe\u5230\u8bbf\u95ee\u4e0a\u9650\u4e86\uff0c\u56e0\u6b64\u53ea\u6709\u5f53\u5217\u8868\u957f\u5ea6\u5c0f\u4e8e10\u7684\u624d\u5141\u8bb8\u7ee7\u7eed\u8bbf\u95ee\u63d2\u503c\u3002 if len ( self . history ) < 3 : # \u65f6\u95f4\u8d8a\u8fd1\u7684\u585e\u5230\u5217\u8868\u7684\u9996\u90e8 self . history . insert ( 0 , current_time ) return True def wait ( self ): \"\"\"\u63d0\u793a\u4f60\u8ddd\u79bb\u8bbf\u95ee\u8fd8\u9700\u8981\u591a\u4e45\"\"\" return time . time () - self . history [ - 1 ] class AuthView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [ VisitThrottle , ] def post ( self , request , * args , ** kwargs ): ret = { 'errmsg' : None , 'errcode' : 0 } try : user = request . _request . POST . get ( 'username' ) pwd = request . _request . POST . get ( 'password' ) user_obj = models . UserInfo . objects . filter ( username = user , password = pwd ) . first () if not user_obj : ret [ 'errcode' ] = 1000 ret [ 'errmsg' ] = '\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef' return JsonResponse ( ret ) token = md5 ( user ) models . UserToken . objects . update_or_create ( user = user_obj , defaults = { 'token' : token }) ret [ 'token' ] = token ret [ 'errmsg' ] = 'ok' except Exception as e : ret [ 'errcode' ] = 1002 ret [ 'errmsg' ] = '\u8bf7\u6c42\u5f02\u5e38' ret [ 'token' ] = '' return JsonResponse ( ret ) \u7ecf\u8fc7\u8fd9\u6837\u4e00\u4e2a\u6d41\u7a0b\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6211\u4eec\u7684\u8bbf\u95ee\u9891\u6b21\u7684\u9650\u5236\u4e86\uff0c\u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\u8fd9\u90e8\u5206\u6e90\u7801\u6d41\u7a0b\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002 \u6e90\u7801\u6d41\u7a0b \u00b6 \u5176\u5b9e\u4ed4\u7ec6\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e00\u5757\u7684\u903b\u8f91\u548c\u8ba4\u8bc1\u4ee5\u53ca\u6743\u9650\u7684\u903b\u8f91\u662f\u975e\u5e38\u76f8\u50cf\u7684\uff0c\u5165\u53e3\u4f9d\u7136\u662fdispatch\u3002 def initial ( self , request , * args , ** kwargs ): \"\"\"\u6b64\u5904\u7701\u7565\u5f88\u591a\u4ee3\u7801\"\"\" self . perform_authentication ( request ) self . check_permissions ( request ) # \u627e\u5230\u8fd9\u91cc\uff0c\u8282\u6d41\u7684\u76f8\u5173\u8bbe\u7f6e self . check_throttles ( request ) \u770b\u4e00\u4e0bcheck_throttles\u90fd\u5e72\u4e86\u4ec0\u4e48 # get_throttles\u7684\u903b\u8f91\u548c\u524d\u9762\u7684\u8ba4\u8bc1\u548c\u6743\u9650\u7684\u7ba1\u7406\u90fd\u662f\u4e00\u4e2a\u5957\u8def\uff0c\u8fd9\u91cc\u4e0d\u591a\u505a\u8d58\u8ff0\u4e86 # \u8fd9\u91cc\u4f9d\u7136\u662f\u8fd4\u56de\u4e86self\u4e2d\u7684throtle_classes\u7684\u7c7b\u7684\u5bf9\u8c61\u7684\u5217\u8868\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd # \u4f1a\u627e\u5230\u7236\u7c7bAPIView\u4e2d\u7684\u5982\u4e0b\u8fd9\u4e00\u6bb5\u5185\u5bb9\uff0c\u5982\u679c\u8981\u5168\u5c40\u5316\u76f4\u63a5\u5199\u5230settings\u4e2d\u5373\u53ef\u3002 # throttle_classes = api_settings.DEFAULT_THROTTLE_CLASSES def get_throttles ( self ): \"\"\" Instantiates and returns the list of throttles that this view uses. \"\"\" return [ throttle () for throttle in self . throttle_classes ] def check_throttles ( self , request ): \"\"\" Check if request should be throttled. Raises an appropriate exception if the request is throttled. \"\"\" for throttle in self . get_throttles (): # \u8c03\u7528\u5bf9\u8c61\u7684allow_request\u65b9\u6cd5\uff0c\u5982\u679c\u8fd4\u56detrue\u8868\u660e\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\uff0c\u5982\u679c\u4e0d\u53cd\u56de\u6216\u8005\u8fd4\u56deFalse # \u8868\u793a\u4e0d\u80fd\u591f\u7ee7\u7eed\u8bbf\u95ee\u3002\u5f53\u4e0d\u80fd\u591f\u7ee7\u7eed\u8bbf\u95ee\u7684\u65f6\u5019\u4f1a\u8fdb\u5165\u5230\u4e0b\u9762\u7684\u6761\u4ef6\u4e2d\uff0c\u6307\u5b9athrottled\u65b9\u6cd5 # \u8c03\u7528throttled\u65b9\u6cd5\u7684\u540c\u65f6\u8fd8\u8c03\u7528\u4e86throttle\u7684wait\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u81ea\u5b9a\u4e49\u7684wait\u65b9\u6cd5 if not throttle . allow_request ( request , self ): self . throttled ( request , throttle . wait ()) throttled\u65b9\u6cd5\u76f4\u63a5\u629b\u51fa\u4e86\u5f02\u5e38\uff0c\u8fd9\u91cc\u63a5\u6536\u7684wait\u5c31\u662f\u6211\u4eec\u8fd4\u56de\u7684\u79d2\u6570\u3002 def throttled ( self , request , wait ): \"\"\" If request is throttled, determine what kind of exception to raise. \"\"\" raise exceptions . Throttled ( wait ) # \u770b\u4e00\u4e0b\u8fd9\u4e2a\u5f02\u5e38\u7c7b\u7684\u8c03\u7528 class Throttled ( APIException ): status_code = status . HTTP_429_TOO_MANY_REQUESTS default_detail = _ ( 'Request was throttled.' ) extra_detail_singular = 'Expected available in {wait} second.' extra_detail_plural = 'Expected available in {wait} seconds.' default_code = 'throttled' def __init__ ( self , wait = None , detail = None , code = None ): if detail is None : detail = force_text ( self . default_detail ) if wait is not None : wait = math . ceil ( wait ) detail = ' ' . join (( detail , force_text ( ungettext ( self . extra_detail_singular . format ( wait = wait ), self . extra_detail_plural . format ( wait = wait ), wait )))) self . wait = wait super ( Throttled , self ) . __init__ ( detail , code ) \u5185\u7f6e\u7684\u8282\u6d41\u7c7b \u00b6 \u5176\u5b9e\u4e0a\u9762\u8fd9\u4e00\u5806\u64cd\u4f5c\u5185\u7f6e\u7684\u8282\u6d41\u7c7b\u5c31\u5df2\u7ecf\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86 \u9996\u5148\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u8282\u6d41\u7c7b\u90fd\u5e94\u8be5\u7ee7\u627fBaseThrottle\u3002 class BaseThrottle ( object ): \"\"\" Rate throttling of requests. \"\"\" def allow_request ( self , request , view ): \"\"\" Return `True` if the request should be allowed, `False` otherwise. \"\"\" raise NotImplementedError ( '.allow_request() must be overridden' ) def get_ident ( self , request ): \"\"\" Identify the machine making the request by parsing HTTP_X_FORWARDED_FOR if present and number of proxies is > 0. If not use all of HTTP_X_FORWARDED_FOR if it is available, if not use REMOTE_ADDR. \u6ce8\u610f\u8fd9\u91cc\u5df2\u7ecf\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86\u83b7\u53d6IP\u7684\u903b\u8f91\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u9700\u8981\u81ea\u5df1\u4eceMETA\u4e2d\u53bb\u53d6\u4e86\uff0c\u76f4\u63a5\u8c03\u7528 self.get_indent\u5c31\u53ef\u4ee5\u62ff\u5230\u533f\u540d\u7528\u6237\u7684\u5730\u5740\u6807\u8bc6\u4e86\u3002 \"\"\" xff = request . META . get ( 'HTTP_X_FORWARDED_FOR' ) remote_addr = request . META . get ( 'REMOTE_ADDR' ) num_proxies = api_settings . NUM_PROXIES if num_proxies is not None : if num_proxies == 0 or xff is None : return remote_addr addrs = xff . split ( ',' ) client_addr = addrs [ - min ( num_proxies , len ( addrs ))] return client_addr . strip () return '' . join ( xff . split ()) if xff else remote_addr def wait ( self ): \"\"\" Optionally, return a recommended number of seconds to wait before the next request. \"\"\" return None \u6211\u4eec\u4e0a\u9762\u5199\u5230\u4e86\u4e00\u5b9a\u65f6\u95f4\u5185\u9650\u5236\u7528\u6237\u7684\u8bbf\u95ee\u9891\u6b21\uff0c\u5176\u5b9eDRF\u5185\u90e8\u5df2\u7ecf\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u9650\u6d41\u7c7b\u5e2e\u6211\u4eec\u5199\u597d\u4e86\uff0c\u5177\u4f53\u5185\u5bb9\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a class SimpleRateThrottle ( BaseThrottle ): \"\"\" A simple cache implementation, that only requires `.get_cache_key()` to be overridden. The rate (requests / seconds) is set by a `rate` attribute on the View class. The attribute is a string of the form 'number_of_requests/period'. Period should be one of: ('s', 'sec', 'm', 'min', 'h', 'hour', 'd', 'day') Previous request information used for throttling is stored in the cache. \"\"\" cache = default_cache timer = time . time cache_format = 'throttle_ %(scope)s _ %(ident)s ' scope = None # 4\u3001\u4ece\u8fd9\u91cc\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2akey\u662f\u4ecesettings\u4e2d\u53d6\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728REST_FRAMEWORK\u4e2d\u914d\u7f6e\u8fd9\u4e2akey # \u5bf9\u5e94\u7684value\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5bf9\u5e94\u7684\u6709\u4e00\u4e2ascope\u7684key\uff0c\u6bd4\u5982\u6211\u5728\u6211\u81ea\u5df1\u5b9a\u4e49\u7684\u7c7b\u91cc\u914d\u7f6escope\u4e3atest_throttle # \u90a3\u4e48\u5b83\u5c31\u4f1a\u53bb\u914d\u7f6e\u6587\u4ef6\u91cc\u627ekey\u4e3ascope\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u5b9a\u4e49\u7684\u8fd9\u4e2ascope\u5176\u5b9e\u5c31\u662f\u914d\u7f6e\u6587\u4ef6\u91cc\u5bf9\u5e94\u7684key # \u90a3\u4e48\u8fd9\u4e2akey\u5bf9\u5e94\u7684value\u5e94\u8be5\u586b\u5199\u4ec0\u4e48\u5462\uff1f\u5e94\u8be5\u586b\u5199\u7c7b\u4f3c\u4e8e3/m\u8fd9\u6837\u7c7b\u4f3c\u7684\u5185\u5bb9\uff0c\u5176\u4e2dm\u4ee3\u8868\u5206\u949f\uff0cs\u79d2\uff0ch\u5c0f\u65f6 # d\u4ee3\u8868day\uff0c3/m\u5c31\u8868\u793a\u6bcf\u5206\u949f3\u6b21\u7684\u610f\u601d\uff0c\u5176\u4ed6\u7684\u7c7b\u63a8\u3002\u90a3\u4e48\u6700\u540e\u6211\u4eec\u62ff\u5230\u7684\u8fd9\u4e2aTHROTTLE_RATES\u5176\u5b9e\u5c31\u662f3/m THROTTLE_RATES = api_settings . DEFAULT_THROTTLE_RATES # 1\u3001\u5b9e\u73b0\u6784\u9020\u65b9\u6cd5\uff0c\u5728\u5bf9\u8c61\u5185\u90e8\u627erate\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5982\u679crate\u5c5e\u6027\u4e0d\u5b58\u5728\u8fd9\u56de\u8c03\u7528self.get_rate def __init__ ( self ): if not getattr ( self , 'rate' , None ): # 5\u3001\u56de\u5230\u8fd9\u91cc\uff0cselt.rate\u5176\u5b9e\u5c31\u662f3/m\u4e86\u3002 self . rate = self . get_rate () # 6\u3001\u8c03\u7528parse_rate\u5bf9\u6211\u4eec\u76843/m\u8fdb\u884c\u6570\u636e\u5904\u7406\uff0c\u63a5\u6536\u5230\u8bf7\u6c42\u6570\u548c\u79d2\u6570\u3002 self . num_requests , self . duration = self . parse_rate ( self . rate ) def get_cache_key ( self , request , view ): \"\"\" Should return a unique cache-key which can be used for throttling. Must be overridden. May return `None` if the request should not be throttled. \"\"\" raise NotImplementedError ( '.get_cache_key() must be overridden' ) # 2\u3001\u5f53rate\u4e0d\u5b58\u5728\u7684\u65f6\u5019\u8c03\u7528\u5f53\u524d\u65b9\u6cd5\uff0c\u65b9\u6cd5\u5185\u90e8\u53bb\u8c03\u7528scope\u5c5e\u6027\uff0c\u5f53\u6ca1\u6709\u8bbe\u7f6escope\u7684\u65f6\u5019\u4f1a\u629b\u51fa\u5f02\u5e38 def get_rate ( self ): \"\"\" Determine the string representation of the allowed request rate. \"\"\" if not getattr ( self , 'scope' , None ): msg = ( \"You must set either `.scope` or `.rate` for ' %s ' throttle\" % self . __class__ . __name__ ) raise ImproperlyConfigured ( msg ) try : # 3\u3001\u5982\u679c\u8bbe\u7f6e\u4e86scope\u90a3\u4e48\u5c31\u4f1a\u53bbself.THROTTLE_RATES\u4e2d\u627e\u5bf9\u5e94\u7684key\uff0c\u8fd9\u4e2a\u503c\u662f\u4e00\u4e2a\u5b57\u5178 return self . THROTTLE_RATES [ self . scope ] except KeyError : msg = \"No default throttle rate set for ' %s ' scope\" % self . scope raise ImproperlyConfigured ( msg ) # 7\u3001\u5bf9self.rate\u8fdb\u884c\u6570\u636e\u5904\u7406 def parse_rate ( self , rate ): \"\"\" Given the request rate string, return a two tuple of: <allowed number of requests>, <period of time in seconds> \"\"\" if rate is None : return ( None , None ) # 8\u3001\u6211\u4eec\u7684\u6a21\u5f0f\u90fd\u662fx/x\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5\u7528/\u7ed9\u9694\u5f00\u4e86\uff0c\u83b7\u53d6\u5230\u7684num\u5c31\u662f\u6b21\u6570\uff0cperiod\u5c31\u662f\u95f4\u9694\u3002 num , period = rate . split ( '/' ) # 9\u3001int\u8f6c\u6362\u6210\u6574\u5f62 num_requests = int ( num ) # 10\u3001\u5c06\u5bf9\u5e94\u7684\u65e5\u671f\u8f6c\u6362\u6210\u79d2\uff0cperiod\u53ef\u80fd\u4e3as\uff0cm\uff0ch\uff0cd\uff0c\u53d6\u7b2c\u4e00\u4e2a\uff0c\u6240\u4ee5\u4f60\u5199day\uff0chour\uff0cminute\uff0csecond # \u5176\u5b9e\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u56e0\u4e3a\u90fd\u662f\u53d6\u7684\u9996\u5b57\u6bcd\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u76f8\u5f53\u4e8e\u53d6\u5bf9\u5e94\u7684\u5b57\u5178\u7684key\u5f97\u5230\u5bf9\u5e94\u7684\u79d2\u6570 duration = { 's' : 1 , 'm' : 60 , 'h' : 3600 , 'd' : 86400 }[ period [ 0 ]] # 11\u3001\u8fd4\u56de\u8bf7\u6c42\u6570\u548c\u79d2\u6570 return ( num_requests , duration ) # 12\u3001\u8bf7\u6c42\u8fdb\u6765\u4ee5\u540e\u5728\u6e90\u7801\u6d41\u7a0b\u4e2d\u4f1a\u8c03\u7528allow_request\u65b9\u6cd5\u3002 def allow_request ( self , request , view ): \"\"\" Implement the check to see if the request should be throttled. On success calls `throttle_success`. On failure calls `throttle_failure`. \"\"\" if self . rate is None : return True # 13\u3001\u8fd9\u91cc\u76f4\u63a5\u8c03\u7528self.get_cache_key\uff0c\u5982\u679c\u4ed4\u7ec6\u770b\u4e0a\u9762\u7684\u6e90\u7801\u7684\u8bdd\u4f1a\u53d1\u73b0\u8c03\u7528\u539f\u751f\u7684\u4f1a\u76f4\u63a5\u629b\u5f02\u5e38 # \u62a5\u9519\u4fe1\u606f\u544a\u77e5\u6211\u4eec\u5fc5\u987b\u81ea\u5df1\u91cd\u5199\u53bb\u8986\u76d6\u539f\u6765\u7684\u65b9\u6cd5\uff0c\u5176\u5b9e\u539f\u6765\u7684\u65b9\u6cd5\u5c31\u662f\u4e2a\u6846\u5b50\u3002 # \u6211\u4eec\u6700\u4e0a\u9762\u9488\u5bf9\u533f\u540d\u7528\u6237\u662f\u4ee5\u533f\u540d\u7528\u6237\u7684ip\u4f5c\u4e3akey\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u5728\u6211\u4eec\u7684\u9650\u6d41\u7c7b\u91cc\u8c03\u7528 # self.get_ident\u8fd4\u56deip\u8d4b\u503c\u7ed9self.key\u3002 self . key = self . get_cache_key ( request , view ) if self . key is None : return True # 14\u3001\u4ece\u7f13\u5b58\u4e2d\u62ff\u5230\u6240\u6709\u7684\u8bb0\u5f55\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e4b\u524d\u7684VISIT_RECORD\uff0c\u8fd9\u4e2a\u7f13\u5b58\u662fDjango\u5185\u7f6e\u7684\u7f13\u5b58 self . history = self . cache . get ( self . key , []) # 15\u3001\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 self . now = self . timer () # 16\u3001\u8fd9\u4e00\u5757\u7684\u903b\u8f91\u57fa\u672c\u5c31\u548c\u6211\u4eec\u4e4b\u524d\u5199\u7684\u662f\u4e00\u6837\u7684\u4e86\u3002 while self . history and self . history [ - 1 ] <= self . now - self . duration : self . history . pop () if len ( self . history ) >= self . num_requests : # 17\u3001\u5982\u679c\u8bf4\u5217\u8868\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e\u8bf7\u6c42\u6570\u90a3\u4e48\u8bc1\u660e\u5df2\u7ecf\u5230\u4e86\u8bbf\u95ee\u4e0a\u7ebf\u4e86\uff0c\u76f4\u63a5return False return self . throttle_failure () # 18\u3001\u5426\u5219\u8c03\u7528throttle_success\u63d2\u5165\u65f6\u95f4\u6233\u5230\u5217\u8868\u5934\u90e8\uff0c\u5e76\u8fd4\u56deTrue\u8868\u793a\u4e0d\u9650\u6d41\u3002 return self . throttle_success () def throttle_success ( self ): \"\"\" Inserts the current request's timestamp along with the key into the cache. \"\"\" self . history . insert ( 0 , self . now ) self . cache . set ( self . key , self . history , self . duration ) return True def throttle_failure ( self ): \"\"\" Called when a request to the API has failed due to throttling. \"\"\" return False def wait ( self ): \"\"\" Returns the recommended next request time in seconds. \"\"\" if self . history : remaining_duration = self . duration - ( self . now - self . history [ - 1 ]) else : remaining_duration = self . duration available_requests = self . num_requests - len ( self . history ) + 1 if available_requests <= 0 : return None return remaining_duration / float ( available_requests ) \u90a3\u4e48\u6211\u4eec\u81ea\u5df1\u7684\u9650\u6d41\u7c7b\u5176\u5b9e\u76f8\u5bf9\u6765\u8bb2\u5c31\u7b80\u5355\u5f88\u591a\u4e86\uff0c\u53ea\u9700\u8981\u7ee7\u627f\u5982\u4e0a\u9762\u8fd9\u4e2a\u7c7b\u518d\u505a\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\uff1a from rest_framework.throttling import SimpleRateThrottle # \u6700\u540e\u6211\u4eec\u9700\u8981\u505a\u7684\u5185\u5bb9\u5c31\u7b80\u7b80\u5355\u5355\u7684\u8fd9\u4e00\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002 class VisitThrottle ( SimpleRateThrottle ): scope = 'test_throttle' def get_cache_key ( self , request , view ): # \u5982\u679c\u662f\u9488\u5bf9\u767b\u5f55\u7528\u6237\u6211\u4eec\u53ef\u4ee5\u8fd4\u56de\u7528\u6237\u7684\u552f\u4e00\u767b\u5f55\u540d\uff0c\u6216\u8005\u7528\u6237\u7684pk(id) return self . get_ident ( request ) \u5bf9\u5e94\u7684settings\u914d\u7f6e\u5982\u4e0b: REST_FRAMEWORK = { 'DEFAULT_AUTHENTICATION_CLASSES' : [ 'api.utils.auth.Authtication' , ], 'UNAUTHENTICATED_USER' : None , 'UNAUTHENTICATED_TOKEN' : None , 'DEFAULT_PERMISSION_CLASSES' : [ 'api.utils.permission.MyPermission' ], 'DEFAULT_THROTTLE_CLASSES' : [ '' ], 'DEFAULT_THROTTLE_RATES' : { 'test_throttle' : '10/m' } } \u5176\u4ed6\u7684\u63d0\u4f9b\u5185\u7f6e\u9650\u6d41\u7c7b\u5982\u4e0b\u4ee5\u4f9b\u53c2\u8003\uff1a # \u9650\u5236\u533f\u540d\u7528\u6237 class AnonRateThrottle ( SimpleRateThrottle ): \"\"\" Limits the rate of API calls that may be made by a anonymous users. The IP address of the request will be used as the unique cache key. \"\"\" scope = 'anon' def get_cache_key ( self , request , view ): if request . user . is_authenticated : return None # Only throttle unauthenticated requests. return self . cache_format % { 'scope' : self . scope , 'ident' : self . get_ident ( request ) } # \u9650\u5236\u767b\u5f55\u7528\u6237\u7684 class UserRateThrottle ( SimpleRateThrottle ): \"\"\" Limits the rate of API calls that may be made by a given user. The user id will be used as a unique cache key if the user is authenticated. For anonymous requests, the IP address of the request will be used. \"\"\" scope = 'user' def get_cache_key ( self , request , view ): if request . user . is_authenticated : ident = request . user . pk else : ident = self . get_ident ( request ) return self . cache_format % { 'scope' : self . scope , 'ident' : ident } # \u8fd9\u4e2a\u662f\u5e94\u7528\u5728\u5c40\u90e8\u89c6\u56fe\u4e0a\u7684\uff0c\u4f46\u662f\u6211\u4eec\u5e94\u7528\u5230\u5c40\u90e8\u89c6\u56fe\u76f4\u63a5\u5728\u5bf9\u5e94\u7684\u89c6\u56fe\u7c7b\u5199throttle_classes\u5c31\u53ef\u4ee5\u4e86 # \u56e0\u6b64\u8fd9\u4e2a\u57fa\u672c\u7528\u4e0d\u5230\u3002 class ScopedRateThrottle ( SimpleRateThrottle ): \"\"\" Limits the rate of API calls by different amounts for various parts of the API. Any view that has the `throttle_scope` property set will be throttled. The unique cache key will be generated by concatenating the user id of the request, and the scope of the view being accessed. \"\"\" scope_attr = 'throttle_scope' def __init__ ( self ): # Override the usual SimpleRateThrottle, because we can't determine # the rate until called by the view. pass def allow_request ( self , request , view ): # We can only determine the scope once we're called by the view. self . scope = getattr ( view , self . scope_attr , None ) # If a view does not have a `throttle_scope` always allow the request if not self . scope : return True # Determine the allowed request rate as we normally would during # the `__init__` call. self . rate = self . get_rate () self . num_requests , self . duration = self . parse_rate ( self . rate ) # We can now proceed as normal. return super ( ScopedRateThrottle , self ) . allow_request ( request , view ) def get_cache_key ( self , request , view ): \"\"\" If `view.throttle_scope` is not set, don't apply this throttle. Otherwise generate the unique cache key by concatenating the user id with the '.throttle_scope` property of the view. \"\"\" if request . user . is_authenticated : ident = request . user . pk else : ident = self . get_ident ( request ) return self . cache_format % { 'scope' : self . scope , 'ident' : ident } \u5c0f\u7ed3 \u00b6 \u4f9d\u7136\u9700\u8981\u6ce8\u610f\uff0c\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u7684\u8282\u6d41\u7c7b\u662f\u5168\u5c40\u7684\uff0c\u662f\u7ed9\u6240\u6709\u7684\u4eba\u7528\u7684\uff0c\u5982\u679c\u8bf4\u5355\u72ec\u9700\u8981\u5176\u4ed6\u7684\u65b9\u6848\u7684\u9700\u8981\u5355\u72ec\u5904\u7406\uff0c\u76f4\u63a5\u5728\u5bf9\u5e94\u7684\u89c6\u56feCBV\u4e2d\u5199 throttle_classes = [] \u5355\u72ec\u5904\u7406\u5c31\u53ef\u4ee5\u4e86\u3002","title":"05-DRF\u8bbf\u95ee\u9650\u5236"},{"location":"django/DRF/05-DRF\u8bbf\u95ee\u9650\u5236/#drf","text":"\u63a5\u53e3\u9700\u8981\u6709\u8bbf\u95ee\u7684\u9650\u5236\uff0c\u800c\u4e0d\u662f\u968f\u610f\u7684\u65e0\u9650\u5236\u7684\u8bbf\u95ee\uff0cDRF\u63d0\u4f9b\u4e86\u8bbf\u95ee\u9650\u5236\u65b9\u9762\u7684\u5185\u5bb9\u3002","title":"DRF\u8bbf\u95ee\u9650\u5236"},{"location":"django/DRF/05-DRF\u8bbf\u95ee\u9650\u5236/#_1","text":"\u9996\u5148\u6765\u770b\u9488\u5bf9\u533f\u540d\u7528\u6237\u7684\u8bbf\u95ee\u9650\u5236\u7684\u8bbe\u8ba1\u601d\u8def\uff0c\u9996\u5148\u8bf4\u8bbf\u95ee\u9650\u5236\u4e0d\u662f\u7edd\u5bf9\u7684\uff0c\u9488\u5bf9\u975e\u767b\u5f55\u7684\u533f\u540d\u7528\u6237\u6765\u8bb2\uff0cIP\u53ef\u4ee5\u8bf4\u662f\u7528\u6237\u552f\u4e00\u7684\u6807\u8bc6\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u8bbf\u95ee\u7684\u6e90IP\u6765\u505a\u9650\u5236\uff0c\u4f46\u662f\u7528\u6237\u7684IP\u662f\u53ef\u4ee5\u6362\u7684\uff0c\u6bd4\u5982\u7528\u6237\u66f4\u6362\u4ee3\u7406\uff0c\u90a3\u4e48\u53ef\u80fd\u7684IP\u5c31\u662f\u65e0\u9650\u591a\u4e2a\uff0c\u4f46\u662f\u8bbf\u95ee\u4eba\u662f\u540c\u4e00\u4e2a\uff0c\u56e0\u6b64\u6ca1\u6709\u529e\u6cd5\u505a\u5230\u7edd\u5bf9\u7684\u9650\u5236\u3002 \u540c\u6837\u7684\uff0c\u9488\u5bf9\u767b\u5f55\u7528\u6237\u4e5f\u662f\u4e0d\u80fd\u505a\u5230\u7edd\u5bf9\u7684\u5b8c\u5168\u7684\u9650\u5236\uff0c\u73b0\u5728\u57fa\u672c\u6bcf\u4e2a\u8d26\u53f7\u90fd\u4f1a\u7ed1\u5b9a\u624b\u673a\u53f7\uff0c\u4f46\u662f\u4f60\u62e6\u4e0d\u4f4f\u7528\u6237\u76f4\u63a5\u53bb\u67d0\u5b9d\u4e70\u624b\u673a\u53f7\uff0c\u4ee3\u7406\u6ce8\u518c\uff0c\u6240\u4ee5\u8bf4\u8fd9\u4e9b\u9650\u5236\u5728\u5e94\u7528\u5c42\u9762\u4e0a\u6765\u8bb2\uff0c\u53ea\u80fd\u8bf4\u662f\u4e00\u5b9a\u7a0b\u5ea6\u505a\u4e86\u9650\u5236\u3002 \u533f\u540d\u7528\u6237\u8bbf\u95ee\u9891\u7387\u7684\u8bbe\u8ba1\u601d\u8def\uff1a \u9996\u5148\u6355\u83b7\u7528\u6237\u7684IP\u5730\u5740\uff0c\u8fd9\u4e2aip\u5730\u5740\u53ef\u4ee5\u5728request\u7684META\u4fe1\u606f\u4e2d\u53bb\u53d6\u5230\uff0cremote_addr\u6216\u8005\u662fx_forward_for \u51c6\u5907\u4e00\u4e2a\u5b57\u5178\uff0c\u8fd9\u4e2a\u5b57\u5178\u53ef\u4ee5\u662f\u4e00\u4e2a\u5168\u5c40\u7ea7\u522b\u7684\u53d8\u91cf\uff0c\u6216\u8005\u662f\u6570\u636e\u5e93\u4ea6\u6216\u662fredis\u3002 \u6355\u83b7\u5230\u7684IP\u4f5c\u4e3akey\uff0c\u800cvalue\u4e3a\u4e00\u4e2a\u5217\u8868\u53bb\u5b58\u50a8\u7528\u6237\u7684\u8bbf\u95ee\u8bb0\u5f55 - \u8bbf\u95ee\u8bb0\u5f55\u7684\u5b9e\u4f53\u4e3a\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u7528\u6237\u6bcf\u8bbf\u95ee\u4e00\u6b21\u5411 value\u5217\u8868\u4e2d\u7684\u9996\u90e8\u6dfb\u52a0\u4e00\u4e2a - \u5f53\u7528\u6237\u6765\u8bbf\u95ee\u7684\u65f6\u5019\u9996\u5148\u6765\u770b\u8fd9\u4e2a\u5168\u5c40\u5b57\u5178\u4e2d\u6709\u6ca1\u6709\u5bf9\u5e94\u7684 IP\u7684key \uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\u90a3\u4e48\u5c31\u6dfb\u52a0\uff0c\u5e76\u5411\u5217\u8868\u4e2d\u8ffd\u52a0\u5f53\u524d\u7684\u65f6\u95f4\u6233\u3002 - \u5982\u679c\u6709\u5f53\u524d\u7684 key\u8bc1\u660e\u8fd9\u4e2aip\u7684\u533f\u540d\u7528\u6237\u4e4b\u524d\u6709\u8bbf\u95ee\u8fc7 \uff0c\u90a3\u4e48\u5c31\u4ece\u540e\u5f80\u524d\u9010\u4e2a\u5bf9\u6bd4\u65f6\u95f4\u5dee\u503c\u662f\u5426\u8d85\u8fc7\u8bbe\u7f6e\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5982\u679c\u6709\u8d85\u8fc7\u7684\u5c31 POP\u6389 \uff0c\u8fd9\u5c31\u662f\u4e3a\u5565\u8bb0\u5f55\u65f6\u95f4\u6233\u7684\u65f6\u5019\u8981\u8bb0\u5f55\u5728\u524d\u9762\uff0c\u56e0\u4e3a\u5728\u6e05\u7406\u8fc7\u671f\u8bbf\u95ee\u8bb0\u5f55\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 pop\u65b9\u4fbf\u7684\u53bb\u5220\u9664\u8bb0\u5f55 \u3002 - \u53bb\u9664\u6389\u8fc7\u671f\u8bb0\u5f55\u4ee5\u540e\u53bb\u6392\u67e5\u5f53\u524d\u5217\u8868\u7684\u957f\u5ea6\uff0c\u6bd4\u5982\u4e00\u5206\u949f\u5185\u53ea\u8ba9\u8bbf\u95ee 10 \u6b21\uff0c\u90a3\u4e48\u5047\u5982\u5f53\u524d\u7684\u5217\u8868\u957f\u5ea6\u53ea\u6709\u5c0f\u4e8e 10 \u7684\u65f6\u5019\u624d\u5141\u8bb8\u4f60\u8fdb\u884c\u4e0b\u4e00\u6b21\u8bbf\u95ee\u3002 \u90a3\u4e48\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u903b\u8f91\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u7b80\u5355\u4ee3\u7801 \"\"\"\u6240\u6709\u5bfc\u5165\u7684\u5305\u90fd\u7701\u7565\u4e86\"\"\" def md5 ( user ): ctime = time . time () m = hashlib . md5 ( bytes ( user , encoding = 'utf8' )) m . update ( bytes ( str ( ctime ), encoding = 'utf8' )) return m . hexdigest () # \u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\uff0c\u6570\u636e\u5e93\u53ef\u4ee5\uff0credis\u4e5f\u53ef\u4ee5 VISIT_RECORD = {} class VisitThrottle ( BaseThrottle ): def __init__ ( self ): self . history = None def allow_request ( self , request , view ): \"\"\" \u5982\u679creturn true\u8868\u793a\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\uff0c\u5982\u679c\u8fd4\u56defalse\uff0c\u8868\u793a\u8bbf\u95ee\u9891\u7387\u592a\u9ad8\uff0c\u88ab\u9650\u5236\u8bbf\u95ee :param request: :param view: :return: \"\"\" # 1\u3001\u83b7\u53d6\u7528\u6237IP\uff0c\u6211\u4eec\u77e5\u9053\u8bf4\u8fd9\u91cc\u7684request\u662f\u5df2\u7ecf\u88ab\u5c01\u88c5\u8fc7\u7684 # \u4e4b\u524d\u770b\u5c01\u88c5\u7684request\u7684\u65f6\u5019\uff0c\u91cc\u9762\u6709\u4e00\u4e2agetattr\u65b9\u6cd5\uff0c\u5f53\u6211\u4eec\u8c03\u7528META\u7684\u65f6\u5019\uff0c\u5c01\u88c5\u7684 # request\u4e2d\u5e76\u4e0d\u5b58\u5728\u8fd9\u4e2a\u5c5e\u6027\uff0c\u56e0\u6b64\u4f1a\u53bb\u539f\u751f\u7684request\u53bb\u627e\uff0c\u56e0\u6b64\u4ecd\u7136\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u3002 # \u56e0\u6b64\u8fd9\u91cc\u53ef\u4ee5\u7701\u7565_request\uff0c\u76f4\u63a5\u8c03\u7528META remote_addr = request . META . get ( 'REMOTE_ADDR' ) current_time = time . time () # \u5982\u679c\u6355\u83b7\u5230\u7684IP\u5730\u5740\u6ca1\u6709\u518d\u8fd9\u4e2a\u8bbf\u95ee\u8bb0\u5f55\u7684\u5b57\u5178\u91cc\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u589e\u52a0\u4e00\u4e0b\u3002 if remote_addr not in VISIT_RECORD : VISIT_RECORD [ remote_addr ] = [ current_time , ] return True # \u5982\u679c\u8bf4\u6709\u8bbf\u95ee\u8bb0\u5f55\uff0c\u90a3\u4e48\u5c31\u628a\u8bbf\u95ee\u8bb0\u5f55\u7684\u5217\u8868\u8d4b\u503c\u7ed9self.history self . history = VISIT_RECORD . get ( remote_addr ) # \u6e05\u7406\u8fc7\u671f\u7684\u8bbf\u95ee\u8bb0\u5f55\uff0c\u6bd4\u5982\u6211\u73b0\u5728\u5141\u8bb8\u4f60\u4e00\u5206\u949f\u4f60\u8bbf\u95ee10\u6b21\uff0c\u4e5f\u5c31\u662f60s\u5185\u8bbf\u95ee10\u6b21 # \u90a3\u4e48\u65b0\u7684\u4e00\u6b21\u8bbf\u95ee\u8fdb\u6765\u4ee5\u540e\uff0c\u9996\u5148\u6bd4\u5bf9\u65b0\u7684\u65f6\u95f4\u6233\u548c\u6700\u8001\u7684\u65f6\u95f4\u6233\uff0c\u5982\u679c\u5dee\u503c\u5927\u4e8e60s # \u90a3\u4e48\u8bc1\u660e\u8fd9\u4e2a\u8bbf\u95ee\u8bb0\u5f55\u53ef\u80fd\u5df2\u7ecf\u5f88\u4e45\u8fdc\u4e86\uff0c\u5c31\u53ef\u4ee5\u5220\u6389\u4e86\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4f9d\u6b21\u5bf9\u6bd4\u3002 while self . history and self . history [ - 1 ] < ( current_time - 10 ): self . history . pop () # \u5c06\u8001\u65e7\u7684\u4fe1\u606f\u5220\u6389\u4ee5\u540e\uff0c\u7136\u540e\u770b\u770b\u5217\u8868\u7684\u957f\u5ea6\uff0c\u4e00\u5206\u949f\u518510\u6b21\u7684\u8bdd\u90a3\u4e48\u5217\u8868\u957f\u5ea6\u5c31\u5e94\u8be5\u5c0f\u4e8e\u7b49\u4e8e10 # \u5f5310\u7684\u65f6\u5019\u6b64\u65f6\u5c31\u5df2\u7ecf\u8fbe\u5230\u8bbf\u95ee\u4e0a\u9650\u4e86\uff0c\u56e0\u6b64\u53ea\u6709\u5f53\u5217\u8868\u957f\u5ea6\u5c0f\u4e8e10\u7684\u624d\u5141\u8bb8\u7ee7\u7eed\u8bbf\u95ee\u63d2\u503c\u3002 if len ( self . history ) < 3 : # \u65f6\u95f4\u8d8a\u8fd1\u7684\u585e\u5230\u5217\u8868\u7684\u9996\u90e8 self . history . insert ( 0 , current_time ) return True def wait ( self ): \"\"\"\u63d0\u793a\u4f60\u8ddd\u79bb\u8bbf\u95ee\u8fd8\u9700\u8981\u591a\u4e45\"\"\" return time . time () - self . history [ - 1 ] class AuthView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [ VisitThrottle , ] def post ( self , request , * args , ** kwargs ): ret = { 'errmsg' : None , 'errcode' : 0 } try : user = request . _request . POST . get ( 'username' ) pwd = request . _request . POST . get ( 'password' ) user_obj = models . UserInfo . objects . filter ( username = user , password = pwd ) . first () if not user_obj : ret [ 'errcode' ] = 1000 ret [ 'errmsg' ] = '\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef' return JsonResponse ( ret ) token = md5 ( user ) models . UserToken . objects . update_or_create ( user = user_obj , defaults = { 'token' : token }) ret [ 'token' ] = token ret [ 'errmsg' ] = 'ok' except Exception as e : ret [ 'errcode' ] = 1002 ret [ 'errmsg' ] = '\u8bf7\u6c42\u5f02\u5e38' ret [ 'token' ] = '' return JsonResponse ( ret ) \u7ecf\u8fc7\u8fd9\u6837\u4e00\u4e2a\u6d41\u7a0b\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6211\u4eec\u7684\u8bbf\u95ee\u9891\u6b21\u7684\u9650\u5236\u4e86\uff0c\u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\u8fd9\u90e8\u5206\u6e90\u7801\u6d41\u7a0b\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002","title":"\u63a7\u5236\u8bbf\u95ee\u9891\u7387"},{"location":"django/DRF/05-DRF\u8bbf\u95ee\u9650\u5236/#_2","text":"\u5176\u5b9e\u4ed4\u7ec6\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e00\u5757\u7684\u903b\u8f91\u548c\u8ba4\u8bc1\u4ee5\u53ca\u6743\u9650\u7684\u903b\u8f91\u662f\u975e\u5e38\u76f8\u50cf\u7684\uff0c\u5165\u53e3\u4f9d\u7136\u662fdispatch\u3002 def initial ( self , request , * args , ** kwargs ): \"\"\"\u6b64\u5904\u7701\u7565\u5f88\u591a\u4ee3\u7801\"\"\" self . perform_authentication ( request ) self . check_permissions ( request ) # \u627e\u5230\u8fd9\u91cc\uff0c\u8282\u6d41\u7684\u76f8\u5173\u8bbe\u7f6e self . check_throttles ( request ) \u770b\u4e00\u4e0bcheck_throttles\u90fd\u5e72\u4e86\u4ec0\u4e48 # get_throttles\u7684\u903b\u8f91\u548c\u524d\u9762\u7684\u8ba4\u8bc1\u548c\u6743\u9650\u7684\u7ba1\u7406\u90fd\u662f\u4e00\u4e2a\u5957\u8def\uff0c\u8fd9\u91cc\u4e0d\u591a\u505a\u8d58\u8ff0\u4e86 # \u8fd9\u91cc\u4f9d\u7136\u662f\u8fd4\u56de\u4e86self\u4e2d\u7684throtle_classes\u7684\u7c7b\u7684\u5bf9\u8c61\u7684\u5217\u8868\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd # \u4f1a\u627e\u5230\u7236\u7c7bAPIView\u4e2d\u7684\u5982\u4e0b\u8fd9\u4e00\u6bb5\u5185\u5bb9\uff0c\u5982\u679c\u8981\u5168\u5c40\u5316\u76f4\u63a5\u5199\u5230settings\u4e2d\u5373\u53ef\u3002 # throttle_classes = api_settings.DEFAULT_THROTTLE_CLASSES def get_throttles ( self ): \"\"\" Instantiates and returns the list of throttles that this view uses. \"\"\" return [ throttle () for throttle in self . throttle_classes ] def check_throttles ( self , request ): \"\"\" Check if request should be throttled. Raises an appropriate exception if the request is throttled. \"\"\" for throttle in self . get_throttles (): # \u8c03\u7528\u5bf9\u8c61\u7684allow_request\u65b9\u6cd5\uff0c\u5982\u679c\u8fd4\u56detrue\u8868\u660e\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\uff0c\u5982\u679c\u4e0d\u53cd\u56de\u6216\u8005\u8fd4\u56deFalse # \u8868\u793a\u4e0d\u80fd\u591f\u7ee7\u7eed\u8bbf\u95ee\u3002\u5f53\u4e0d\u80fd\u591f\u7ee7\u7eed\u8bbf\u95ee\u7684\u65f6\u5019\u4f1a\u8fdb\u5165\u5230\u4e0b\u9762\u7684\u6761\u4ef6\u4e2d\uff0c\u6307\u5b9athrottled\u65b9\u6cd5 # \u8c03\u7528throttled\u65b9\u6cd5\u7684\u540c\u65f6\u8fd8\u8c03\u7528\u4e86throttle\u7684wait\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u81ea\u5b9a\u4e49\u7684wait\u65b9\u6cd5 if not throttle . allow_request ( request , self ): self . throttled ( request , throttle . wait ()) throttled\u65b9\u6cd5\u76f4\u63a5\u629b\u51fa\u4e86\u5f02\u5e38\uff0c\u8fd9\u91cc\u63a5\u6536\u7684wait\u5c31\u662f\u6211\u4eec\u8fd4\u56de\u7684\u79d2\u6570\u3002 def throttled ( self , request , wait ): \"\"\" If request is throttled, determine what kind of exception to raise. \"\"\" raise exceptions . Throttled ( wait ) # \u770b\u4e00\u4e0b\u8fd9\u4e2a\u5f02\u5e38\u7c7b\u7684\u8c03\u7528 class Throttled ( APIException ): status_code = status . HTTP_429_TOO_MANY_REQUESTS default_detail = _ ( 'Request was throttled.' ) extra_detail_singular = 'Expected available in {wait} second.' extra_detail_plural = 'Expected available in {wait} seconds.' default_code = 'throttled' def __init__ ( self , wait = None , detail = None , code = None ): if detail is None : detail = force_text ( self . default_detail ) if wait is not None : wait = math . ceil ( wait ) detail = ' ' . join (( detail , force_text ( ungettext ( self . extra_detail_singular . format ( wait = wait ), self . extra_detail_plural . format ( wait = wait ), wait )))) self . wait = wait super ( Throttled , self ) . __init__ ( detail , code )","title":"\u6e90\u7801\u6d41\u7a0b"},{"location":"django/DRF/05-DRF\u8bbf\u95ee\u9650\u5236/#_3","text":"\u5176\u5b9e\u4e0a\u9762\u8fd9\u4e00\u5806\u64cd\u4f5c\u5185\u7f6e\u7684\u8282\u6d41\u7c7b\u5c31\u5df2\u7ecf\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86 \u9996\u5148\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u8282\u6d41\u7c7b\u90fd\u5e94\u8be5\u7ee7\u627fBaseThrottle\u3002 class BaseThrottle ( object ): \"\"\" Rate throttling of requests. \"\"\" def allow_request ( self , request , view ): \"\"\" Return `True` if the request should be allowed, `False` otherwise. \"\"\" raise NotImplementedError ( '.allow_request() must be overridden' ) def get_ident ( self , request ): \"\"\" Identify the machine making the request by parsing HTTP_X_FORWARDED_FOR if present and number of proxies is > 0. If not use all of HTTP_X_FORWARDED_FOR if it is available, if not use REMOTE_ADDR. \u6ce8\u610f\u8fd9\u91cc\u5df2\u7ecf\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86\u83b7\u53d6IP\u7684\u903b\u8f91\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u9700\u8981\u81ea\u5df1\u4eceMETA\u4e2d\u53bb\u53d6\u4e86\uff0c\u76f4\u63a5\u8c03\u7528 self.get_indent\u5c31\u53ef\u4ee5\u62ff\u5230\u533f\u540d\u7528\u6237\u7684\u5730\u5740\u6807\u8bc6\u4e86\u3002 \"\"\" xff = request . META . get ( 'HTTP_X_FORWARDED_FOR' ) remote_addr = request . META . get ( 'REMOTE_ADDR' ) num_proxies = api_settings . NUM_PROXIES if num_proxies is not None : if num_proxies == 0 or xff is None : return remote_addr addrs = xff . split ( ',' ) client_addr = addrs [ - min ( num_proxies , len ( addrs ))] return client_addr . strip () return '' . join ( xff . split ()) if xff else remote_addr def wait ( self ): \"\"\" Optionally, return a recommended number of seconds to wait before the next request. \"\"\" return None \u6211\u4eec\u4e0a\u9762\u5199\u5230\u4e86\u4e00\u5b9a\u65f6\u95f4\u5185\u9650\u5236\u7528\u6237\u7684\u8bbf\u95ee\u9891\u6b21\uff0c\u5176\u5b9eDRF\u5185\u90e8\u5df2\u7ecf\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u9650\u6d41\u7c7b\u5e2e\u6211\u4eec\u5199\u597d\u4e86\uff0c\u5177\u4f53\u5185\u5bb9\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a class SimpleRateThrottle ( BaseThrottle ): \"\"\" A simple cache implementation, that only requires `.get_cache_key()` to be overridden. The rate (requests / seconds) is set by a `rate` attribute on the View class. The attribute is a string of the form 'number_of_requests/period'. Period should be one of: ('s', 'sec', 'm', 'min', 'h', 'hour', 'd', 'day') Previous request information used for throttling is stored in the cache. \"\"\" cache = default_cache timer = time . time cache_format = 'throttle_ %(scope)s _ %(ident)s ' scope = None # 4\u3001\u4ece\u8fd9\u91cc\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2akey\u662f\u4ecesettings\u4e2d\u53d6\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728REST_FRAMEWORK\u4e2d\u914d\u7f6e\u8fd9\u4e2akey # \u5bf9\u5e94\u7684value\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5bf9\u5e94\u7684\u6709\u4e00\u4e2ascope\u7684key\uff0c\u6bd4\u5982\u6211\u5728\u6211\u81ea\u5df1\u5b9a\u4e49\u7684\u7c7b\u91cc\u914d\u7f6escope\u4e3atest_throttle # \u90a3\u4e48\u5b83\u5c31\u4f1a\u53bb\u914d\u7f6e\u6587\u4ef6\u91cc\u627ekey\u4e3ascope\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u5b9a\u4e49\u7684\u8fd9\u4e2ascope\u5176\u5b9e\u5c31\u662f\u914d\u7f6e\u6587\u4ef6\u91cc\u5bf9\u5e94\u7684key # \u90a3\u4e48\u8fd9\u4e2akey\u5bf9\u5e94\u7684value\u5e94\u8be5\u586b\u5199\u4ec0\u4e48\u5462\uff1f\u5e94\u8be5\u586b\u5199\u7c7b\u4f3c\u4e8e3/m\u8fd9\u6837\u7c7b\u4f3c\u7684\u5185\u5bb9\uff0c\u5176\u4e2dm\u4ee3\u8868\u5206\u949f\uff0cs\u79d2\uff0ch\u5c0f\u65f6 # d\u4ee3\u8868day\uff0c3/m\u5c31\u8868\u793a\u6bcf\u5206\u949f3\u6b21\u7684\u610f\u601d\uff0c\u5176\u4ed6\u7684\u7c7b\u63a8\u3002\u90a3\u4e48\u6700\u540e\u6211\u4eec\u62ff\u5230\u7684\u8fd9\u4e2aTHROTTLE_RATES\u5176\u5b9e\u5c31\u662f3/m THROTTLE_RATES = api_settings . DEFAULT_THROTTLE_RATES # 1\u3001\u5b9e\u73b0\u6784\u9020\u65b9\u6cd5\uff0c\u5728\u5bf9\u8c61\u5185\u90e8\u627erate\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5982\u679crate\u5c5e\u6027\u4e0d\u5b58\u5728\u8fd9\u56de\u8c03\u7528self.get_rate def __init__ ( self ): if not getattr ( self , 'rate' , None ): # 5\u3001\u56de\u5230\u8fd9\u91cc\uff0cselt.rate\u5176\u5b9e\u5c31\u662f3/m\u4e86\u3002 self . rate = self . get_rate () # 6\u3001\u8c03\u7528parse_rate\u5bf9\u6211\u4eec\u76843/m\u8fdb\u884c\u6570\u636e\u5904\u7406\uff0c\u63a5\u6536\u5230\u8bf7\u6c42\u6570\u548c\u79d2\u6570\u3002 self . num_requests , self . duration = self . parse_rate ( self . rate ) def get_cache_key ( self , request , view ): \"\"\" Should return a unique cache-key which can be used for throttling. Must be overridden. May return `None` if the request should not be throttled. \"\"\" raise NotImplementedError ( '.get_cache_key() must be overridden' ) # 2\u3001\u5f53rate\u4e0d\u5b58\u5728\u7684\u65f6\u5019\u8c03\u7528\u5f53\u524d\u65b9\u6cd5\uff0c\u65b9\u6cd5\u5185\u90e8\u53bb\u8c03\u7528scope\u5c5e\u6027\uff0c\u5f53\u6ca1\u6709\u8bbe\u7f6escope\u7684\u65f6\u5019\u4f1a\u629b\u51fa\u5f02\u5e38 def get_rate ( self ): \"\"\" Determine the string representation of the allowed request rate. \"\"\" if not getattr ( self , 'scope' , None ): msg = ( \"You must set either `.scope` or `.rate` for ' %s ' throttle\" % self . __class__ . __name__ ) raise ImproperlyConfigured ( msg ) try : # 3\u3001\u5982\u679c\u8bbe\u7f6e\u4e86scope\u90a3\u4e48\u5c31\u4f1a\u53bbself.THROTTLE_RATES\u4e2d\u627e\u5bf9\u5e94\u7684key\uff0c\u8fd9\u4e2a\u503c\u662f\u4e00\u4e2a\u5b57\u5178 return self . THROTTLE_RATES [ self . scope ] except KeyError : msg = \"No default throttle rate set for ' %s ' scope\" % self . scope raise ImproperlyConfigured ( msg ) # 7\u3001\u5bf9self.rate\u8fdb\u884c\u6570\u636e\u5904\u7406 def parse_rate ( self , rate ): \"\"\" Given the request rate string, return a two tuple of: <allowed number of requests>, <period of time in seconds> \"\"\" if rate is None : return ( None , None ) # 8\u3001\u6211\u4eec\u7684\u6a21\u5f0f\u90fd\u662fx/x\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5\u7528/\u7ed9\u9694\u5f00\u4e86\uff0c\u83b7\u53d6\u5230\u7684num\u5c31\u662f\u6b21\u6570\uff0cperiod\u5c31\u662f\u95f4\u9694\u3002 num , period = rate . split ( '/' ) # 9\u3001int\u8f6c\u6362\u6210\u6574\u5f62 num_requests = int ( num ) # 10\u3001\u5c06\u5bf9\u5e94\u7684\u65e5\u671f\u8f6c\u6362\u6210\u79d2\uff0cperiod\u53ef\u80fd\u4e3as\uff0cm\uff0ch\uff0cd\uff0c\u53d6\u7b2c\u4e00\u4e2a\uff0c\u6240\u4ee5\u4f60\u5199day\uff0chour\uff0cminute\uff0csecond # \u5176\u5b9e\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u56e0\u4e3a\u90fd\u662f\u53d6\u7684\u9996\u5b57\u6bcd\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u76f8\u5f53\u4e8e\u53d6\u5bf9\u5e94\u7684\u5b57\u5178\u7684key\u5f97\u5230\u5bf9\u5e94\u7684\u79d2\u6570 duration = { 's' : 1 , 'm' : 60 , 'h' : 3600 , 'd' : 86400 }[ period [ 0 ]] # 11\u3001\u8fd4\u56de\u8bf7\u6c42\u6570\u548c\u79d2\u6570 return ( num_requests , duration ) # 12\u3001\u8bf7\u6c42\u8fdb\u6765\u4ee5\u540e\u5728\u6e90\u7801\u6d41\u7a0b\u4e2d\u4f1a\u8c03\u7528allow_request\u65b9\u6cd5\u3002 def allow_request ( self , request , view ): \"\"\" Implement the check to see if the request should be throttled. On success calls `throttle_success`. On failure calls `throttle_failure`. \"\"\" if self . rate is None : return True # 13\u3001\u8fd9\u91cc\u76f4\u63a5\u8c03\u7528self.get_cache_key\uff0c\u5982\u679c\u4ed4\u7ec6\u770b\u4e0a\u9762\u7684\u6e90\u7801\u7684\u8bdd\u4f1a\u53d1\u73b0\u8c03\u7528\u539f\u751f\u7684\u4f1a\u76f4\u63a5\u629b\u5f02\u5e38 # \u62a5\u9519\u4fe1\u606f\u544a\u77e5\u6211\u4eec\u5fc5\u987b\u81ea\u5df1\u91cd\u5199\u53bb\u8986\u76d6\u539f\u6765\u7684\u65b9\u6cd5\uff0c\u5176\u5b9e\u539f\u6765\u7684\u65b9\u6cd5\u5c31\u662f\u4e2a\u6846\u5b50\u3002 # \u6211\u4eec\u6700\u4e0a\u9762\u9488\u5bf9\u533f\u540d\u7528\u6237\u662f\u4ee5\u533f\u540d\u7528\u6237\u7684ip\u4f5c\u4e3akey\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u5728\u6211\u4eec\u7684\u9650\u6d41\u7c7b\u91cc\u8c03\u7528 # self.get_ident\u8fd4\u56deip\u8d4b\u503c\u7ed9self.key\u3002 self . key = self . get_cache_key ( request , view ) if self . key is None : return True # 14\u3001\u4ece\u7f13\u5b58\u4e2d\u62ff\u5230\u6240\u6709\u7684\u8bb0\u5f55\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e4b\u524d\u7684VISIT_RECORD\uff0c\u8fd9\u4e2a\u7f13\u5b58\u662fDjango\u5185\u7f6e\u7684\u7f13\u5b58 self . history = self . cache . get ( self . key , []) # 15\u3001\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 self . now = self . timer () # 16\u3001\u8fd9\u4e00\u5757\u7684\u903b\u8f91\u57fa\u672c\u5c31\u548c\u6211\u4eec\u4e4b\u524d\u5199\u7684\u662f\u4e00\u6837\u7684\u4e86\u3002 while self . history and self . history [ - 1 ] <= self . now - self . duration : self . history . pop () if len ( self . history ) >= self . num_requests : # 17\u3001\u5982\u679c\u8bf4\u5217\u8868\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e\u8bf7\u6c42\u6570\u90a3\u4e48\u8bc1\u660e\u5df2\u7ecf\u5230\u4e86\u8bbf\u95ee\u4e0a\u7ebf\u4e86\uff0c\u76f4\u63a5return False return self . throttle_failure () # 18\u3001\u5426\u5219\u8c03\u7528throttle_success\u63d2\u5165\u65f6\u95f4\u6233\u5230\u5217\u8868\u5934\u90e8\uff0c\u5e76\u8fd4\u56deTrue\u8868\u793a\u4e0d\u9650\u6d41\u3002 return self . throttle_success () def throttle_success ( self ): \"\"\" Inserts the current request's timestamp along with the key into the cache. \"\"\" self . history . insert ( 0 , self . now ) self . cache . set ( self . key , self . history , self . duration ) return True def throttle_failure ( self ): \"\"\" Called when a request to the API has failed due to throttling. \"\"\" return False def wait ( self ): \"\"\" Returns the recommended next request time in seconds. \"\"\" if self . history : remaining_duration = self . duration - ( self . now - self . history [ - 1 ]) else : remaining_duration = self . duration available_requests = self . num_requests - len ( self . history ) + 1 if available_requests <= 0 : return None return remaining_duration / float ( available_requests ) \u90a3\u4e48\u6211\u4eec\u81ea\u5df1\u7684\u9650\u6d41\u7c7b\u5176\u5b9e\u76f8\u5bf9\u6765\u8bb2\u5c31\u7b80\u5355\u5f88\u591a\u4e86\uff0c\u53ea\u9700\u8981\u7ee7\u627f\u5982\u4e0a\u9762\u8fd9\u4e2a\u7c7b\u518d\u505a\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\uff1a from rest_framework.throttling import SimpleRateThrottle # \u6700\u540e\u6211\u4eec\u9700\u8981\u505a\u7684\u5185\u5bb9\u5c31\u7b80\u7b80\u5355\u5355\u7684\u8fd9\u4e00\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002 class VisitThrottle ( SimpleRateThrottle ): scope = 'test_throttle' def get_cache_key ( self , request , view ): # \u5982\u679c\u662f\u9488\u5bf9\u767b\u5f55\u7528\u6237\u6211\u4eec\u53ef\u4ee5\u8fd4\u56de\u7528\u6237\u7684\u552f\u4e00\u767b\u5f55\u540d\uff0c\u6216\u8005\u7528\u6237\u7684pk(id) return self . get_ident ( request ) \u5bf9\u5e94\u7684settings\u914d\u7f6e\u5982\u4e0b: REST_FRAMEWORK = { 'DEFAULT_AUTHENTICATION_CLASSES' : [ 'api.utils.auth.Authtication' , ], 'UNAUTHENTICATED_USER' : None , 'UNAUTHENTICATED_TOKEN' : None , 'DEFAULT_PERMISSION_CLASSES' : [ 'api.utils.permission.MyPermission' ], 'DEFAULT_THROTTLE_CLASSES' : [ '' ], 'DEFAULT_THROTTLE_RATES' : { 'test_throttle' : '10/m' } } \u5176\u4ed6\u7684\u63d0\u4f9b\u5185\u7f6e\u9650\u6d41\u7c7b\u5982\u4e0b\u4ee5\u4f9b\u53c2\u8003\uff1a # \u9650\u5236\u533f\u540d\u7528\u6237 class AnonRateThrottle ( SimpleRateThrottle ): \"\"\" Limits the rate of API calls that may be made by a anonymous users. The IP address of the request will be used as the unique cache key. \"\"\" scope = 'anon' def get_cache_key ( self , request , view ): if request . user . is_authenticated : return None # Only throttle unauthenticated requests. return self . cache_format % { 'scope' : self . scope , 'ident' : self . get_ident ( request ) } # \u9650\u5236\u767b\u5f55\u7528\u6237\u7684 class UserRateThrottle ( SimpleRateThrottle ): \"\"\" Limits the rate of API calls that may be made by a given user. The user id will be used as a unique cache key if the user is authenticated. For anonymous requests, the IP address of the request will be used. \"\"\" scope = 'user' def get_cache_key ( self , request , view ): if request . user . is_authenticated : ident = request . user . pk else : ident = self . get_ident ( request ) return self . cache_format % { 'scope' : self . scope , 'ident' : ident } # \u8fd9\u4e2a\u662f\u5e94\u7528\u5728\u5c40\u90e8\u89c6\u56fe\u4e0a\u7684\uff0c\u4f46\u662f\u6211\u4eec\u5e94\u7528\u5230\u5c40\u90e8\u89c6\u56fe\u76f4\u63a5\u5728\u5bf9\u5e94\u7684\u89c6\u56fe\u7c7b\u5199throttle_classes\u5c31\u53ef\u4ee5\u4e86 # \u56e0\u6b64\u8fd9\u4e2a\u57fa\u672c\u7528\u4e0d\u5230\u3002 class ScopedRateThrottle ( SimpleRateThrottle ): \"\"\" Limits the rate of API calls by different amounts for various parts of the API. Any view that has the `throttle_scope` property set will be throttled. The unique cache key will be generated by concatenating the user id of the request, and the scope of the view being accessed. \"\"\" scope_attr = 'throttle_scope' def __init__ ( self ): # Override the usual SimpleRateThrottle, because we can't determine # the rate until called by the view. pass def allow_request ( self , request , view ): # We can only determine the scope once we're called by the view. self . scope = getattr ( view , self . scope_attr , None ) # If a view does not have a `throttle_scope` always allow the request if not self . scope : return True # Determine the allowed request rate as we normally would during # the `__init__` call. self . rate = self . get_rate () self . num_requests , self . duration = self . parse_rate ( self . rate ) # We can now proceed as normal. return super ( ScopedRateThrottle , self ) . allow_request ( request , view ) def get_cache_key ( self , request , view ): \"\"\" If `view.throttle_scope` is not set, don't apply this throttle. Otherwise generate the unique cache key by concatenating the user id with the '.throttle_scope` property of the view. \"\"\" if request . user . is_authenticated : ident = request . user . pk else : ident = self . get_ident ( request ) return self . cache_format % { 'scope' : self . scope , 'ident' : ident }","title":"\u5185\u7f6e\u7684\u8282\u6d41\u7c7b"},{"location":"django/DRF/05-DRF\u8bbf\u95ee\u9650\u5236/#_4","text":"\u4f9d\u7136\u9700\u8981\u6ce8\u610f\uff0c\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u7684\u8282\u6d41\u7c7b\u662f\u5168\u5c40\u7684\uff0c\u662f\u7ed9\u6240\u6709\u7684\u4eba\u7528\u7684\uff0c\u5982\u679c\u8bf4\u5355\u72ec\u9700\u8981\u5176\u4ed6\u7684\u65b9\u6848\u7684\u9700\u8981\u5355\u72ec\u5904\u7406\uff0c\u76f4\u63a5\u5728\u5bf9\u5e94\u7684\u89c6\u56feCBV\u4e2d\u5199 throttle_classes = [] \u5355\u72ec\u5904\u7406\u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u5c0f\u7ed3"},{"location":"django/DRF/06-DRF\u7248\u672c&\u89e3\u6790\u5668/","text":"DRF\u7248\u672c&\u89e3\u6790\u5668 \u00b6 \u7f16\u8f91\u65e5\u671f\uff1a2019-2-13 \u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1arestframework\u4f60\u90fd\u7ee7\u627f\u8fc7\u54ea\u4e9b\u7c7b DRF\u7248\u672c \u00b6 \u7248\u672c\u53ef\u4ee5\u653e\u5728URL\u91cc\uff0c\u4e5f\u53ef\u4ee5\u653e\u5728\u8bf7\u6c42\u5934\uff0c\u53ea\u8981\u662f\u53ef\u4ee5\u83b7\u53d6\u5230\u5c31\u884c\u3002 def initial ( self , request , * args , ** kwargs ): \"\"\" Runs anything that needs to occur prior to calling the method handler. \"\"\" self . format_kwarg = self . get_format_suffix ( ** kwargs ) neg = self . perform_content_negotiation ( request ) request . accepted_renderer , request . accepted_media_type = neg # Determine the API version, if versioning is in use. # \u8c03\u7528self.determine_version\u65b9\u6cd5\uff0c\u4f1a\u6536\u5230\u4e24\u4e2a\u8fd4\u56de\u503c # \u4e24\u4e2a\u8fd4\u56de\u503c\u5206\u522b\u5bf9\u5e94\u7684\u7b2c\u4e00\u4e2a\u662fdetermine_version\u7684\u8fd4\u56de\u503c\uff0c\u53e6\u5916\u4e00\u4e2a\u5c31\u662f\u8fd9\u4e2aversion\u7c7b\u5bf9\u8c61\u3002 version , scheme = self . determine_version ( request , * args , ** kwargs ) # \u5bf9\u5e94\u7684\u7248\u672c\u53f7\u548cversion\u7c7b\u5bf9\u8c61\u4f1a\u88ab\u8d4b\u503c\u7ed9request.version\u548crequest.versioning_scheme request . version , request . versioning_scheme = version , scheme # Ensure that the incoming request is permitted self . perform_authentication ( request ) self . check_permissions ( request ) self . check_throttles ( request ) def determine_version ( self , request , * args , ** kwargs ): \"\"\" If versioning is being used, then determine any API version for the incoming request. Returns a two-tuple of (version, versioning_scheme) \"\"\" if self . versioning_class is None : # \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u7684\u8bdd\u4e5f\u5c31\u662f\u8bf4\u6839\u672c\u4e0d\u7528\uff0c\u90a3\u5c31\u8fd4\u56deNone\uff0cNone\u7684\u5143\u7ec4 return ( None , None ) # versioning_class = api_settings.DEFAULT_VERSIONING_CLASS scheme = self . versioning_class () # \u8fd4\u56de\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u3002\u8c03\u7528\u5bf9\u8c61\u7684determine_version\u65b9\u6cd5 return ( scheme . determine_version ( request , * args , ** kwargs ), scheme ) \u6ce8\u610f\u8fd9\u4e2a\u5728\u7c7b\u4e2d\u58f0\u660e\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53ef\u4e0d\u662f\u7c7b\u5217\u8868\uff0cclass\u540e\u9762\u6ca1\u6709es\uff0c\u8fd9\u4e2a\u5c31\u662f\u5355\u72ec\u7684\u4e00\u4e2a\u7c7b\u3002 class UserView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] versioning_class = ParamVersion def get ( self , request , * args , ** kwargs ): return HttpResponse ( 'userlist' ) \u4ee5\u53c2\u6570\u5f62\u5f0f\u83b7\u53d6 \u00b6 \u4e0d\u8fc7\u5728\u7248\u672c\u8fd9\u4e00\u5757\uff0c\u4e0d\u7528\u81ea\u5df1\u5199\uff0cdrf\u4e2d\u5df2\u7ecf\u63d0\u4f9b\u4e86\u8fd9\u4e00\u5757\u7684\u5185\u5bb9\u3002 # \u76f4\u63a5\u8c03\u7528\u5185\u7f6e\u7684QueryParameterVersioning\u5c31\u53ef\u4ee5\u4e86\u3002 from rest_framework.versioning import QueryParameterVersioning class UserView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] versioning_class = [ QueryParameterVersioning , ] def get ( self , request , * args , ** kwargs ): return HttpResponse ( '\u5f53\u524d\u7684\u7248\u672c\u4e3a\uff1a \" %s \"' % request . version ) \u6765\u770b\u4e00\u4e0b\u8fd9\u4e2a\u7248\u672c\u7c7b\u7684\u5b9e\u73b0\uff1a class QueryParameterVersioning ( BaseVersioning ): \"\"\" GET /something/?version=0.1 HTTP/1.1 Host: example.com Accept: application/json \"\"\" invalid_version_message = _ ( 'Invalid version in query parameter.' ) def determine_version ( self , request , * args , ** kwargs ): # \u800c\u4e14\u8fd9\u91cc\u5982\u679c\u83b7\u53d6\u4e0d\u5230\u914d\u7f6e\u7684VERSION_PARAM\u8fd8\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684version\u914d\u7f6e\uff1aDEFAULT_VERSION # version_param\u5c31\u662f\u4f60\u4f20\u9012\u7684\u90a3\u4e2aversion\u7684key\u662f\u4ec0\u4e48\uff0c\u540e\u9762\u7684\u5c31\u662f\u4f60\u4e0d\u4f20\u9ed8\u8ba4\u662f\u4ec0\u4e48 # \u8fd9\u4e9b\u90fd\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u53bb\u4f53\u73b0\u3002 version = request . query_params . get ( self . version_param , self . default_version ) if not self . is_allowed_version ( version ): raise exceptions . NotFound ( self . invalid_version_message ) return version # reverse\u7528\u6765\u53cd\u5411\u751f\u6210url\uff0cviewname\u5c31\u662f\u6211\u4eec\u7684\u90a3\u4e2aname\uff0c\u800c\u4e14version\u6211\u4eec\u4e0d\u7528\u52a0 # \u56e0\u4e3arequest.version\u643a\u5e26\u5728request\u91cc\u9762\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7701\u7565\u8fd9\u4e2a\u53c2\u6570\u3002 def reverse ( self , viewname , args = None , kwargs = None , request = None , format = None , ** extra ): url = super ( QueryParameterVersioning , self ) . reverse ( viewname , args , kwargs , request , format , ** extra ) if request . version is not None : return replace_query_param ( url , self . version_param , request . version ) return url # \u8bbe\u7f6e\u90fd\u5141\u8bb8\u54ea\u4e9bversion # allowed_versions = api_settings.ALLOWED_VERSIONS def is_allowed_version ( self , version ): if not self . allowed_versions : return True return (( version is not None and version == self . default_version ) or ( version in self . allowed_versions )) \u5728\u8def\u5f84\u4e2d\u4f53\u73b0 \u00b6 \u4e0a\u9762\u7684version\u53c2\u6570\u4f20\u9012\u662f\u4ee5\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u60c5\u51b5\u4e0b\u8fd9\u79cd\u4f7f\u7528\u7684\u5176\u5b9e\u5e76\u4e0d\u591a\uff0c\u66f4\u591a\u7684\u5176\u5b9e\u662f\u5c06version\u5305\u542b\u5728\u8def\u5f84\u4e2d\uff0c\u6bd4\u5982xxx.xxx.com/api/v1\u8fd9\u6837\u7684\u5f62\u5f0f\u3002\u5f53\u7136DRF\u5173\u4e8e\u8fd9\u79cd\u60c5\u51b5\u4e5f\u7ed9\u4f60\u5199\u597d\u4e86\u3002 class URLPathVersioning ( BaseVersioning ): \"\"\" To the client this is the same style as `NamespaceVersioning`. The difference is in the backend - this implementation uses Django's URL keyword arguments to determine the version. An example URL conf for two views that accept two different versions. urlpatterns = [ url(r'^(?P<version>[v1|v2]+)/users/$', users_list, name='users-list'), url(r'^(?P<version>[v1|v2]+)/users/(?P<pk>[0-9]+)/$', users_detail, name='users-detail') ] GET /1.0/something/ HTTP/1.1 Host: example.com Accept: application/json \"\"\" invalid_version_message = _ ( 'Invalid version in URL path.' ) def determine_version ( self , request , * args , ** kwargs ): version = kwargs . get ( self . version_param , self . default_version ) if version is None : version = self . default_version if not self . is_allowed_version ( version ): raise exceptions . NotFound ( self . invalid_version_message ) return version def reverse ( self , viewname , args = None , kwargs = None , request = None , format = None , ** extra ): if request . version is not None : kwargs = {} if ( kwargs is None ) else kwargs kwargs [ self . version_param ] = request . version return super ( URLPathVersioning , self ) . reverse ( viewname , args , kwargs , request , format , ** extra ) \u66f4\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u914d\u7f6e\uff0c\u5176\u4ed6\u7684\u5185\u7f6e\u65b9\u6848\u4ec5\u4f9b\u53c2\u8003\uff1a class NamespaceVersioning ( BaseVersioning ): \"\"\" To the client this is the same style as `URLPathVersioning`. The difference is in the backend - this implementation uses Django's URL namespaces to determine the version. An example URL conf that is namespaced into two separate versions # users/urls.py urlpatterns = [ url(r'^/users/$', users_list, name='users-list'), url(r'^/users/(?P<pk>[0-9]+)/$', users_detail, name='users-detail') ] # urls.py urlpatterns = [ url(r'^v1/', include('users.urls', namespace='v1')), url(r'^v2/', include('users.urls', namespace='v2')) ] GET /1.0/something/ HTTP/1.1 Host: example.com Accept: application/json \"\"\" invalid_version_message = _ ( 'Invalid version in URL path. Does not match any version namespace.' ) def determine_version ( self , request , * args , ** kwargs ): resolver_match = getattr ( request , 'resolver_match' , None ) if resolver_match is None or not resolver_match . namespace : return self . default_version # Allow for possibly nested namespaces. possible_versions = resolver_match . namespace . split ( ':' ) for version in possible_versions : if self . is_allowed_version ( version ): return version raise exceptions . NotFound ( self . invalid_version_message ) def reverse ( self , viewname , args = None , kwargs = None , request = None , format = None , ** extra ): if request . version is not None : viewname = self . get_versioned_viewname ( viewname , request ) return super ( NamespaceVersioning , self ) . reverse ( viewname , args , kwargs , request , format , ** extra ) def get_versioned_viewname ( self , viewname , request ): return request . version + ':' + viewname class HostNameVersioning ( BaseVersioning ): \"\"\" GET /something/ HTTP/1.1 Host: v1.example.com Accept: application/json \"\"\" hostname_regex = re . compile ( r '^([a-zA-Z0-9]+)\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$' ) invalid_version_message = _ ( 'Invalid version in hostname.' ) def determine_version ( self , request , * args , ** kwargs ): hostname , separator , port = request . get_host () . partition ( ':' ) match = self . hostname_regex . match ( hostname ) if not match : return self . default_version version = match . group ( 1 ) if not self . is_allowed_version ( version ): raise exceptions . NotFound ( self . invalid_version_message ) return version # We don't need to implement `reverse`, as the hostname will already be # preserved as part of the REST framework `reverse` implementation. class AcceptHeaderVersioning ( BaseVersioning ): \"\"\" GET /something/ HTTP/1.1 Host: example.com Accept: application/json; version=1.0 \"\"\" invalid_version_message = _ ( 'Invalid version in \"Accept\" header.' ) def determine_version ( self , request , * args , ** kwargs ): media_type = _MediaType ( request . accepted_media_type ) version = media_type . params . get ( self . version_param , self . default_version ) version = unicode_http_header ( version ) if not self . is_allowed_version ( version ): raise exceptions . NotAcceptable ( self . invalid_version_message ) return version # We don't need to implement `reverse`, as the versioning is based # on the `Accept` header, not on the request URL. DRF\u89e3\u6790\u5668 \u00b6 def _load_post_and_files ( self ): \"\"\"Populate self._post and self._files if the content-type is a form type\"\"\" if self . method != 'POST' : self . _post , self . _files = QueryDict ( encoding = self . _encoding ), MultiValueDict () return if self . _read_started and not hasattr ( self , '_body' ): self . _mark_post_parse_error () return if self . content_type == 'multipart/form-data' : if hasattr ( self , '_body' ): # Use already read data data = BytesIO ( self . _body ) else : data = self try : self . _post , self . _files = self . parse_file_upload ( self . META , data ) except MultiPartParserError : # An error occurred while parsing POST data. Since when # formatting the error the request handler might access # self.POST, set self._post and self._file to prevent # attempts to parse POST data again. # Mark that an error occurred. This allows self.__repr__ to # be explicit about it instead of simply representing an # empty POST self . _mark_post_parse_error () raise # \u5982\u679c\u662f\u8fd9\u4e2a\u5934\u624d\u53bbrequest.body\u4e2d\u53bb\u89e3\u6790\u6570\u636e\uff0c\u4e0d\u4ec5\u5982\u6b64\uff0c\u8fd8\u5bf9\u6570\u636e\u683c\u5f0f\u6709\u8981\u6c42 # \u6570\u636e\u683c\u5f0f\u8981\u6c42\u5fc5\u987b\u662fa=1&b=2&c=3\u8fd9\u79cd\u7684\u3002form\u8868\u5355\u7684\u63d0\u4ea4\u9ed8\u8ba4\u5c31\u662f\u8fd9\u4e2a\u5934\uff0c\u6570\u636e\u683c\u5f0f\u9ed8\u8ba4\u4e5f\u662f\u8fd9\u6837\u7684 # \u5f53\u7136Ajax\u4e5f\u662f\u53ef\u4ee5\u63d0\u4ea4\u7684\uff0c\u867d\u7136\u4f60data\u5199\u7684\u662f\u5b57\u5178\uff0c\u4e0d\u8fc7\u5185\u90e8\u4e5f\u4f1a\u7ed9\u4f60\u8f6c\u6210\u4e0a\u9762\u7684\u6570\u636e\u683c\u5f0f\uff0c\u800c\u4e14ajax\u8fd8\u53ef\u4ee5 # \u5b9a\u5236\u8bf7\u6c42\u5934headers\u3002 elif self . content_type == 'application/x-www-form-urlencoded' : self . _post , self . _files = QueryDict ( self . body , encoding = self . _encoding ), MultiValueDict () else : self . _post , self . _files = QueryDict ( encoding = self . _encoding ), MultiValueDict () \u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u4e5f\u662frequest.body\u6709\u503c\uff0c\u4f46\u662frequest.post\u6ca1\u6709\u503c # \u8fd9\u4e2a\u65f6\u5019\u4e0d\u4ec5\u5934\u4e0d\u6ee1\u8db3 \uff0c \u6570\u636e\u683c\u5f0f\u4e5f\u4e0d\u6ee1\u8db3 \uff0c \u90fd\u4e0d\u6ee1\u8db3 \u3002 \u6240\u6709request . post\u4f9d\u7136\u6ca1\u6709\u503c \u3002 $ . ajax ({ url : xxx , method : xxx , data : JSON . Stringfy ({ 'a' : 1 , 'b' : 2 }) }) \u4e0a\u9762\u8fd9\u4e2a\u662fDjango\u7684\uff0c\u63a5\u4e0b\u6765\u770bDRF\u89e3\u6790\u5668 \u83b7\u53d6\u7528\u6237\u8bf7\u6c42 \u83b7\u53d6\u7528\u6237\u8bf7\u6c42\u4f53 \u6839\u636e\u7528\u6237\u8bf7\u6c42\u5934\u548cparser_classes\u4e2d\u652f\u6301\u7684\u5168\u7ed9\u4f60\u6c42\u5934\u8fdb\u884c\u6bd4\u8f83 \u7b26\u5408\u7684\u5904\u7406\u7c7b\u8fdb\u884c\u8bf7\u6c42\u7684\u5904\u7406 \u8d4b\u503c\u7ed9request.data \u8c03\u7528request.data\u7684\u65f6\u5019\u751f\u6548\u3002 # JSONParser class JSONParser ( BaseParser ): \"\"\" Parses JSON-serialized data. \"\"\" # \u5728JSONParser\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2amedia type media_type = 'application/json' renderer_class = renderers . JSONRenderer strict = api_settings . STRICT_JSON def parse ( self , stream , media_type = None , parser_context = None ): \"\"\" Parses the incoming bytestream as JSON and returns the resulting data. \"\"\" parser_context = parser_context or {} encoding = parser_context . get ( 'encoding' , settings . DEFAULT_CHARSET ) try : decoded_stream = codecs . getreader ( encoding )( stream ) parse_constant = json . strict_constant if self . strict else None return json . load ( decoded_stream , parse_constant = parse_constant ) except ValueError as exc : raise ParseError ( 'JSON parse error - %s ' % six . text_type ( exc )) # FormParser class FormParser ( BaseParser ): \"\"\" Parser for form data. \"\"\" media_type = 'application/x-www-form-urlencoded' def parse ( self , stream , media_type = None , parser_context = None ): \"\"\" Parses the incoming bytestream as a URL encoded form, and returns the resulting QueryDict. \"\"\" parser_context = parser_context or {} encoding = parser_context . get ( 'encoding' , settings . DEFAULT_CHARSET ) data = QueryDict ( stream . read (), encoding = encoding ) return data # 1\u3001\u6211\u4eec\u77e5\u9053\u6700\u540e\u83b7\u53d6\u5230\u7684\u7ed3\u679c\u53ef\u4ee5\u4ecerequest.data\u4e2d\u62ff\u5230\uff0c\u4f46\u662f\u8fd9\u4e2arequest\u662f\u7ecf\u8fc7\u5c01\u88c5\u540e\u7684Request\u7684\u5bf9\u8c61 # \u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u53bbRequest\u91cc\u9762\u53bb\u627edata\u5c5e\u6027\uff0c\u9996\u5148\u8c03\u7528\u4e86_hasattr\uff0c\u6ce8\u610f\u8fd9\u91cc\u662f\u5e26\u4e0b\u5212\u7ebf\u7684 @property def data ( self ): # 3\u3001\u9ed8\u8ba4\u7684self._full_data\u4e3aEmpty\uff0c\u90a3\u4e48_hasattr\u4f1a\u8fd4\u56deFalse\uff0c\u76f4\u63a5\u8c03\u7528_load_data_and_files if not _hasattr ( self , '_full_data' ): self . _load_data_and_files () return self . _full_data # 2\u3001\u627e\u5230\u4e0b\u5212\u7ebf_has_attr,\u5b83\u4f1a\u4ece\u5f53\u524dself\u4e2d\u53bb\u53d6\u5bf9\u5e94\u7684name\uff0c\u5982\u679c\u8fd9\u4e2aname\u53d6\u5230\u4e86\u662fEmpty\uff0c\u90a3\u4e48\u5c31\u8fd4\u56deFalse def _hasattr ( obj , name ): return not getattr ( obj , name ) is Empty # 4\u3001_full_data\u9ed8\u8ba4\u503c self . _full_data = Empty # 5\u3001Empty\u7684\u5b9a\u4e49 class Empty ( object ): \"\"\" Placeholder for unset attributes. Cannot use `None`, as that may be a valid value. \"\"\" pass # 6\u3001_load_data_and_files\u65b9\u6cd5 def _load_data_and_files ( self ): \"\"\" Parses the request content into `self.data`. \"\"\" # \u9ed8\u8ba4\u7684self._data = Empty\uff0c\u6240\u4ee5\u6761\u4ef6\u6ee1\u8db3\u76f4\u63a5\u8fdb\u5165\u8c03\u7528 if not _hasattr ( self , '_data' ): # \u8c03\u7528self._parse\u65b9\u6cd5 self . _data , self . _files = self . _parse () if self . _files : self . _full_data = self . _data . copy () self . _full_data . update ( self . _files ) else : self . _full_data = self . _data # if a form media type, copy data & files refs to the underlying # http request so that closable objects are handled appropriately. if is_form_media_type ( self . content_type ): self . _request . _post = self . POST self . _request . _files = self . FILES # 7\u3001self._parse\u65b9\u6cd5 def _parse ( self ): \"\"\" \u683c\u5f0f\u5316request\u7684\u6587\u672c\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u4e24\u4e2a\u5143\u7d20\u7684\u5143\u7ec4(data\uff0cfiles) May raise an `UnsupportedMediaType`, or `ParseError` exception. \"\"\" # 8\u3001\u83b7\u53d6\u7528\u6237\u7684\u8bf7\u6c42\u5934 media_type = self . content_type try : # 10\u3001\u83b7\u53d6\u7528\u6237\u7684request.body\u7684\u5185\u5bb9\uff0c\u4ee5stream\u7684\u5f62\u5f0f stream = self . stream except RawPostDataException : if not hasattr ( self . _request , '_post' ): raise # If request.POST has been accessed in middleware, and a method='POST' # request was made with 'multipart/form-data', then the request stream # will already have been exhausted. if self . _supports_form_parsing (): return ( self . _request . POST , self . _request . FILES ) stream = None if stream is None or media_type is None : if media_type and is_form_media_type ( media_type ): empty_data = QueryDict ( '' , encoding = self . _request . _encoding ) else : empty_data = {} empty_files = MultiValueDict () return ( empty_data , empty_files ) # 13\u3001\u8c03\u7528parser\u9009\u62e9\u5668\uff0c\u540e\u9762\u7684self.parsers\u5176\u5b9e\u5c31\u662f\u652f\u6301\u7684\u5bf9\u8c61\u3002parser_classes # self\u4e2d\u4e5f\u6709content-type\uff0c\u6240\u4ee5\u8fd9\u4e2aself\u662f\u8bf7\u6c42\u5bf9\u8c61\uff0c\u5305\u542b\u7528\u6237\u8bf7\u6c42\u7684content-type parser = self . negotiator . select_parser ( self , self . parsers ) if not parser : raise exceptions . UnsupportedMediaType ( media_type ) try : parsed = parser . parse ( stream , media_type , self . parser_context ) except Exception : # If we get an exception during parsing, fill in empty data and # re-raise. Ensures we don't simply repeat the error when # attempting to render the browsable renderer response, or when # logging the request or similar. self . _data = QueryDict ( '' , encoding = self . _request . _encoding ) self . _files = MultiValueDict () self . _full_data = self . _data raise # Parser classes may return the raw data, or a # DataAndFiles object. Unpack the result as required. try : return ( parsed . data , parsed . files ) except AttributeError : empty_files = MultiValueDict () return ( parsed , empty_files ) # 9\u3001\u52a0\u4e86property\u5c5e\u6027\uff0c\u53ef\u4ee5\u76f4\u63a5\u50cf\u503c\u4e00\u6837\u53bb\u4f7f\u7528\uff0c\u8fd9\u4e2acontent_type\u5b9e\u9645\u4e0a\u5c31\u662f\u53bb\u83b7\u53d6\u7528\u6237\u5b9e\u9645\u7684\u8bf7\u6c42\u5934\u3002 @property def content_type ( self ): meta = self . _request . META return meta . get ( 'CONTENT_TYPE' , meta . get ( 'HTTP_CONTENT_TYPE' , '' )) # 11\u3001stream @property def stream ( self ): \"\"\" Returns an object that may be used to stream the request content. \"\"\" # \u9ed8\u8ba4\u7684_stream\u5c31\u662fEmpty\u6240\u4ee5\uff0c\u76f4\u63a5\u8c03\u7528_load_stream\u65b9\u6cd5 if not _hasattr ( self , '_stream' ): self . _load_stream () return self . _stream # 12\u3001\u8fd4\u56deBytesIO\u5f62\u5f0f\u7684body\u4fe1\u606f def _load_stream ( self ): \"\"\" Return the content body of the request, as a stream. \"\"\" meta = self . _request . META try : content_length = int ( meta . get ( 'CONTENT_LENGTH' , meta . get ( 'HTTP_CONTENT_LENGTH' , 0 )) ) except ( ValueError , TypeError ): content_length = 0 if content_length == 0 : self . _stream = None elif not self . _request . _read_started : self . _stream = self . _request else : self . _stream = io . BytesIO ( self . body ) \u770b\u4e00\u5207\u7684\u5f00\u5934\uff0c\u5165\u53e3\u8fd8\u662fdispatch def initialize_request ( self , request , * args , ** kwargs ): \"\"\" Returns the initial request object. \"\"\" parser_context = self . get_parser_context ( request ) return Request ( request , # \u8fd9\u6837Request\u7684\u5b9e\u4f8b\u5c31\u4f1a\u5b58\u5728self.parsers\u8fd9\u4e2a\u5c5e\u6027\u53ef\u4ee5\u8c03\u7528\u3002 parsers = self . get_parsers (), authenticators = self . get_authenticators (), negotiator = self . get_content_negotiator (), parser_context = parser_context ) def get_parsers ( self ): \"\"\" Instantiates and returns the list of parsers that this view can use. \"\"\" return [ parser () for parser in self . parser_classes ] \u6700\u540e\u8fd9\u4e2a\u89e3\u6790\u5668\u7684\u5c5e\u6027\u5199\u5728\u5168\u5c40\u5c31\u53ef\u4ee5\u4e86\u3002 http\u534f\u8bae\u7684\u8bf7\u6c42\u65b9\u6cd5 \u5e38\u7528\u7684\u8bf7\u6c42\u5934\uff08\u72b6\u6001\u7801\uff0c\u65b9\u6cd5\u7b49\uff09\uff1a application/ refer\u7528\u6765\u505a\u9632\u76d7\u94fe\uff0cuser_agent\uff0caccept\uff0chost\u7b49\u3002","title":"06-DRF\u7248\u672c&\u89e3\u6790\u5668"},{"location":"django/DRF/06-DRF\u7248\u672c&\u89e3\u6790\u5668/#drf","text":"\u7f16\u8f91\u65e5\u671f\uff1a2019-2-13 \u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1arestframework\u4f60\u90fd\u7ee7\u627f\u8fc7\u54ea\u4e9b\u7c7b","title":"DRF\u7248\u672c&amp;\u89e3\u6790\u5668"},{"location":"django/DRF/06-DRF\u7248\u672c&\u89e3\u6790\u5668/#drf_1","text":"\u7248\u672c\u53ef\u4ee5\u653e\u5728URL\u91cc\uff0c\u4e5f\u53ef\u4ee5\u653e\u5728\u8bf7\u6c42\u5934\uff0c\u53ea\u8981\u662f\u53ef\u4ee5\u83b7\u53d6\u5230\u5c31\u884c\u3002 def initial ( self , request , * args , ** kwargs ): \"\"\" Runs anything that needs to occur prior to calling the method handler. \"\"\" self . format_kwarg = self . get_format_suffix ( ** kwargs ) neg = self . perform_content_negotiation ( request ) request . accepted_renderer , request . accepted_media_type = neg # Determine the API version, if versioning is in use. # \u8c03\u7528self.determine_version\u65b9\u6cd5\uff0c\u4f1a\u6536\u5230\u4e24\u4e2a\u8fd4\u56de\u503c # \u4e24\u4e2a\u8fd4\u56de\u503c\u5206\u522b\u5bf9\u5e94\u7684\u7b2c\u4e00\u4e2a\u662fdetermine_version\u7684\u8fd4\u56de\u503c\uff0c\u53e6\u5916\u4e00\u4e2a\u5c31\u662f\u8fd9\u4e2aversion\u7c7b\u5bf9\u8c61\u3002 version , scheme = self . determine_version ( request , * args , ** kwargs ) # \u5bf9\u5e94\u7684\u7248\u672c\u53f7\u548cversion\u7c7b\u5bf9\u8c61\u4f1a\u88ab\u8d4b\u503c\u7ed9request.version\u548crequest.versioning_scheme request . version , request . versioning_scheme = version , scheme # Ensure that the incoming request is permitted self . perform_authentication ( request ) self . check_permissions ( request ) self . check_throttles ( request ) def determine_version ( self , request , * args , ** kwargs ): \"\"\" If versioning is being used, then determine any API version for the incoming request. Returns a two-tuple of (version, versioning_scheme) \"\"\" if self . versioning_class is None : # \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u7684\u8bdd\u4e5f\u5c31\u662f\u8bf4\u6839\u672c\u4e0d\u7528\uff0c\u90a3\u5c31\u8fd4\u56deNone\uff0cNone\u7684\u5143\u7ec4 return ( None , None ) # versioning_class = api_settings.DEFAULT_VERSIONING_CLASS scheme = self . versioning_class () # \u8fd4\u56de\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u3002\u8c03\u7528\u5bf9\u8c61\u7684determine_version\u65b9\u6cd5 return ( scheme . determine_version ( request , * args , ** kwargs ), scheme ) \u6ce8\u610f\u8fd9\u4e2a\u5728\u7c7b\u4e2d\u58f0\u660e\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53ef\u4e0d\u662f\u7c7b\u5217\u8868\uff0cclass\u540e\u9762\u6ca1\u6709es\uff0c\u8fd9\u4e2a\u5c31\u662f\u5355\u72ec\u7684\u4e00\u4e2a\u7c7b\u3002 class UserView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] versioning_class = ParamVersion def get ( self , request , * args , ** kwargs ): return HttpResponse ( 'userlist' )","title":"DRF\u7248\u672c"},{"location":"django/DRF/06-DRF\u7248\u672c&\u89e3\u6790\u5668/#_1","text":"\u4e0d\u8fc7\u5728\u7248\u672c\u8fd9\u4e00\u5757\uff0c\u4e0d\u7528\u81ea\u5df1\u5199\uff0cdrf\u4e2d\u5df2\u7ecf\u63d0\u4f9b\u4e86\u8fd9\u4e00\u5757\u7684\u5185\u5bb9\u3002 # \u76f4\u63a5\u8c03\u7528\u5185\u7f6e\u7684QueryParameterVersioning\u5c31\u53ef\u4ee5\u4e86\u3002 from rest_framework.versioning import QueryParameterVersioning class UserView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] versioning_class = [ QueryParameterVersioning , ] def get ( self , request , * args , ** kwargs ): return HttpResponse ( '\u5f53\u524d\u7684\u7248\u672c\u4e3a\uff1a \" %s \"' % request . version ) \u6765\u770b\u4e00\u4e0b\u8fd9\u4e2a\u7248\u672c\u7c7b\u7684\u5b9e\u73b0\uff1a class QueryParameterVersioning ( BaseVersioning ): \"\"\" GET /something/?version=0.1 HTTP/1.1 Host: example.com Accept: application/json \"\"\" invalid_version_message = _ ( 'Invalid version in query parameter.' ) def determine_version ( self , request , * args , ** kwargs ): # \u800c\u4e14\u8fd9\u91cc\u5982\u679c\u83b7\u53d6\u4e0d\u5230\u914d\u7f6e\u7684VERSION_PARAM\u8fd8\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684version\u914d\u7f6e\uff1aDEFAULT_VERSION # version_param\u5c31\u662f\u4f60\u4f20\u9012\u7684\u90a3\u4e2aversion\u7684key\u662f\u4ec0\u4e48\uff0c\u540e\u9762\u7684\u5c31\u662f\u4f60\u4e0d\u4f20\u9ed8\u8ba4\u662f\u4ec0\u4e48 # \u8fd9\u4e9b\u90fd\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u53bb\u4f53\u73b0\u3002 version = request . query_params . get ( self . version_param , self . default_version ) if not self . is_allowed_version ( version ): raise exceptions . NotFound ( self . invalid_version_message ) return version # reverse\u7528\u6765\u53cd\u5411\u751f\u6210url\uff0cviewname\u5c31\u662f\u6211\u4eec\u7684\u90a3\u4e2aname\uff0c\u800c\u4e14version\u6211\u4eec\u4e0d\u7528\u52a0 # \u56e0\u4e3arequest.version\u643a\u5e26\u5728request\u91cc\u9762\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7701\u7565\u8fd9\u4e2a\u53c2\u6570\u3002 def reverse ( self , viewname , args = None , kwargs = None , request = None , format = None , ** extra ): url = super ( QueryParameterVersioning , self ) . reverse ( viewname , args , kwargs , request , format , ** extra ) if request . version is not None : return replace_query_param ( url , self . version_param , request . version ) return url # \u8bbe\u7f6e\u90fd\u5141\u8bb8\u54ea\u4e9bversion # allowed_versions = api_settings.ALLOWED_VERSIONS def is_allowed_version ( self , version ): if not self . allowed_versions : return True return (( version is not None and version == self . default_version ) or ( version in self . allowed_versions ))","title":"\u4ee5\u53c2\u6570\u5f62\u5f0f\u83b7\u53d6"},{"location":"django/DRF/06-DRF\u7248\u672c&\u89e3\u6790\u5668/#_2","text":"\u4e0a\u9762\u7684version\u53c2\u6570\u4f20\u9012\u662f\u4ee5\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u60c5\u51b5\u4e0b\u8fd9\u79cd\u4f7f\u7528\u7684\u5176\u5b9e\u5e76\u4e0d\u591a\uff0c\u66f4\u591a\u7684\u5176\u5b9e\u662f\u5c06version\u5305\u542b\u5728\u8def\u5f84\u4e2d\uff0c\u6bd4\u5982xxx.xxx.com/api/v1\u8fd9\u6837\u7684\u5f62\u5f0f\u3002\u5f53\u7136DRF\u5173\u4e8e\u8fd9\u79cd\u60c5\u51b5\u4e5f\u7ed9\u4f60\u5199\u597d\u4e86\u3002 class URLPathVersioning ( BaseVersioning ): \"\"\" To the client this is the same style as `NamespaceVersioning`. The difference is in the backend - this implementation uses Django's URL keyword arguments to determine the version. An example URL conf for two views that accept two different versions. urlpatterns = [ url(r'^(?P<version>[v1|v2]+)/users/$', users_list, name='users-list'), url(r'^(?P<version>[v1|v2]+)/users/(?P<pk>[0-9]+)/$', users_detail, name='users-detail') ] GET /1.0/something/ HTTP/1.1 Host: example.com Accept: application/json \"\"\" invalid_version_message = _ ( 'Invalid version in URL path.' ) def determine_version ( self , request , * args , ** kwargs ): version = kwargs . get ( self . version_param , self . default_version ) if version is None : version = self . default_version if not self . is_allowed_version ( version ): raise exceptions . NotFound ( self . invalid_version_message ) return version def reverse ( self , viewname , args = None , kwargs = None , request = None , format = None , ** extra ): if request . version is not None : kwargs = {} if ( kwargs is None ) else kwargs kwargs [ self . version_param ] = request . version return super ( URLPathVersioning , self ) . reverse ( viewname , args , kwargs , request , format , ** extra ) \u66f4\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u914d\u7f6e\uff0c\u5176\u4ed6\u7684\u5185\u7f6e\u65b9\u6848\u4ec5\u4f9b\u53c2\u8003\uff1a class NamespaceVersioning ( BaseVersioning ): \"\"\" To the client this is the same style as `URLPathVersioning`. The difference is in the backend - this implementation uses Django's URL namespaces to determine the version. An example URL conf that is namespaced into two separate versions # users/urls.py urlpatterns = [ url(r'^/users/$', users_list, name='users-list'), url(r'^/users/(?P<pk>[0-9]+)/$', users_detail, name='users-detail') ] # urls.py urlpatterns = [ url(r'^v1/', include('users.urls', namespace='v1')), url(r'^v2/', include('users.urls', namespace='v2')) ] GET /1.0/something/ HTTP/1.1 Host: example.com Accept: application/json \"\"\" invalid_version_message = _ ( 'Invalid version in URL path. Does not match any version namespace.' ) def determine_version ( self , request , * args , ** kwargs ): resolver_match = getattr ( request , 'resolver_match' , None ) if resolver_match is None or not resolver_match . namespace : return self . default_version # Allow for possibly nested namespaces. possible_versions = resolver_match . namespace . split ( ':' ) for version in possible_versions : if self . is_allowed_version ( version ): return version raise exceptions . NotFound ( self . invalid_version_message ) def reverse ( self , viewname , args = None , kwargs = None , request = None , format = None , ** extra ): if request . version is not None : viewname = self . get_versioned_viewname ( viewname , request ) return super ( NamespaceVersioning , self ) . reverse ( viewname , args , kwargs , request , format , ** extra ) def get_versioned_viewname ( self , viewname , request ): return request . version + ':' + viewname class HostNameVersioning ( BaseVersioning ): \"\"\" GET /something/ HTTP/1.1 Host: v1.example.com Accept: application/json \"\"\" hostname_regex = re . compile ( r '^([a-zA-Z0-9]+)\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$' ) invalid_version_message = _ ( 'Invalid version in hostname.' ) def determine_version ( self , request , * args , ** kwargs ): hostname , separator , port = request . get_host () . partition ( ':' ) match = self . hostname_regex . match ( hostname ) if not match : return self . default_version version = match . group ( 1 ) if not self . is_allowed_version ( version ): raise exceptions . NotFound ( self . invalid_version_message ) return version # We don't need to implement `reverse`, as the hostname will already be # preserved as part of the REST framework `reverse` implementation. class AcceptHeaderVersioning ( BaseVersioning ): \"\"\" GET /something/ HTTP/1.1 Host: example.com Accept: application/json; version=1.0 \"\"\" invalid_version_message = _ ( 'Invalid version in \"Accept\" header.' ) def determine_version ( self , request , * args , ** kwargs ): media_type = _MediaType ( request . accepted_media_type ) version = media_type . params . get ( self . version_param , self . default_version ) version = unicode_http_header ( version ) if not self . is_allowed_version ( version ): raise exceptions . NotAcceptable ( self . invalid_version_message ) return version # We don't need to implement `reverse`, as the versioning is based # on the `Accept` header, not on the request URL.","title":"\u5728\u8def\u5f84\u4e2d\u4f53\u73b0"},{"location":"django/DRF/06-DRF\u7248\u672c&\u89e3\u6790\u5668/#drf_2","text":"def _load_post_and_files ( self ): \"\"\"Populate self._post and self._files if the content-type is a form type\"\"\" if self . method != 'POST' : self . _post , self . _files = QueryDict ( encoding = self . _encoding ), MultiValueDict () return if self . _read_started and not hasattr ( self , '_body' ): self . _mark_post_parse_error () return if self . content_type == 'multipart/form-data' : if hasattr ( self , '_body' ): # Use already read data data = BytesIO ( self . _body ) else : data = self try : self . _post , self . _files = self . parse_file_upload ( self . META , data ) except MultiPartParserError : # An error occurred while parsing POST data. Since when # formatting the error the request handler might access # self.POST, set self._post and self._file to prevent # attempts to parse POST data again. # Mark that an error occurred. This allows self.__repr__ to # be explicit about it instead of simply representing an # empty POST self . _mark_post_parse_error () raise # \u5982\u679c\u662f\u8fd9\u4e2a\u5934\u624d\u53bbrequest.body\u4e2d\u53bb\u89e3\u6790\u6570\u636e\uff0c\u4e0d\u4ec5\u5982\u6b64\uff0c\u8fd8\u5bf9\u6570\u636e\u683c\u5f0f\u6709\u8981\u6c42 # \u6570\u636e\u683c\u5f0f\u8981\u6c42\u5fc5\u987b\u662fa=1&b=2&c=3\u8fd9\u79cd\u7684\u3002form\u8868\u5355\u7684\u63d0\u4ea4\u9ed8\u8ba4\u5c31\u662f\u8fd9\u4e2a\u5934\uff0c\u6570\u636e\u683c\u5f0f\u9ed8\u8ba4\u4e5f\u662f\u8fd9\u6837\u7684 # \u5f53\u7136Ajax\u4e5f\u662f\u53ef\u4ee5\u63d0\u4ea4\u7684\uff0c\u867d\u7136\u4f60data\u5199\u7684\u662f\u5b57\u5178\uff0c\u4e0d\u8fc7\u5185\u90e8\u4e5f\u4f1a\u7ed9\u4f60\u8f6c\u6210\u4e0a\u9762\u7684\u6570\u636e\u683c\u5f0f\uff0c\u800c\u4e14ajax\u8fd8\u53ef\u4ee5 # \u5b9a\u5236\u8bf7\u6c42\u5934headers\u3002 elif self . content_type == 'application/x-www-form-urlencoded' : self . _post , self . _files = QueryDict ( self . body , encoding = self . _encoding ), MultiValueDict () else : self . _post , self . _files = QueryDict ( encoding = self . _encoding ), MultiValueDict () \u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u4e5f\u662frequest.body\u6709\u503c\uff0c\u4f46\u662frequest.post\u6ca1\u6709\u503c # \u8fd9\u4e2a\u65f6\u5019\u4e0d\u4ec5\u5934\u4e0d\u6ee1\u8db3 \uff0c \u6570\u636e\u683c\u5f0f\u4e5f\u4e0d\u6ee1\u8db3 \uff0c \u90fd\u4e0d\u6ee1\u8db3 \u3002 \u6240\u6709request . post\u4f9d\u7136\u6ca1\u6709\u503c \u3002 $ . ajax ({ url : xxx , method : xxx , data : JSON . Stringfy ({ 'a' : 1 , 'b' : 2 }) }) \u4e0a\u9762\u8fd9\u4e2a\u662fDjango\u7684\uff0c\u63a5\u4e0b\u6765\u770bDRF\u89e3\u6790\u5668 \u83b7\u53d6\u7528\u6237\u8bf7\u6c42 \u83b7\u53d6\u7528\u6237\u8bf7\u6c42\u4f53 \u6839\u636e\u7528\u6237\u8bf7\u6c42\u5934\u548cparser_classes\u4e2d\u652f\u6301\u7684\u5168\u7ed9\u4f60\u6c42\u5934\u8fdb\u884c\u6bd4\u8f83 \u7b26\u5408\u7684\u5904\u7406\u7c7b\u8fdb\u884c\u8bf7\u6c42\u7684\u5904\u7406 \u8d4b\u503c\u7ed9request.data \u8c03\u7528request.data\u7684\u65f6\u5019\u751f\u6548\u3002 # JSONParser class JSONParser ( BaseParser ): \"\"\" Parses JSON-serialized data. \"\"\" # \u5728JSONParser\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2amedia type media_type = 'application/json' renderer_class = renderers . JSONRenderer strict = api_settings . STRICT_JSON def parse ( self , stream , media_type = None , parser_context = None ): \"\"\" Parses the incoming bytestream as JSON and returns the resulting data. \"\"\" parser_context = parser_context or {} encoding = parser_context . get ( 'encoding' , settings . DEFAULT_CHARSET ) try : decoded_stream = codecs . getreader ( encoding )( stream ) parse_constant = json . strict_constant if self . strict else None return json . load ( decoded_stream , parse_constant = parse_constant ) except ValueError as exc : raise ParseError ( 'JSON parse error - %s ' % six . text_type ( exc )) # FormParser class FormParser ( BaseParser ): \"\"\" Parser for form data. \"\"\" media_type = 'application/x-www-form-urlencoded' def parse ( self , stream , media_type = None , parser_context = None ): \"\"\" Parses the incoming bytestream as a URL encoded form, and returns the resulting QueryDict. \"\"\" parser_context = parser_context or {} encoding = parser_context . get ( 'encoding' , settings . DEFAULT_CHARSET ) data = QueryDict ( stream . read (), encoding = encoding ) return data # 1\u3001\u6211\u4eec\u77e5\u9053\u6700\u540e\u83b7\u53d6\u5230\u7684\u7ed3\u679c\u53ef\u4ee5\u4ecerequest.data\u4e2d\u62ff\u5230\uff0c\u4f46\u662f\u8fd9\u4e2arequest\u662f\u7ecf\u8fc7\u5c01\u88c5\u540e\u7684Request\u7684\u5bf9\u8c61 # \u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u53bbRequest\u91cc\u9762\u53bb\u627edata\u5c5e\u6027\uff0c\u9996\u5148\u8c03\u7528\u4e86_hasattr\uff0c\u6ce8\u610f\u8fd9\u91cc\u662f\u5e26\u4e0b\u5212\u7ebf\u7684 @property def data ( self ): # 3\u3001\u9ed8\u8ba4\u7684self._full_data\u4e3aEmpty\uff0c\u90a3\u4e48_hasattr\u4f1a\u8fd4\u56deFalse\uff0c\u76f4\u63a5\u8c03\u7528_load_data_and_files if not _hasattr ( self , '_full_data' ): self . _load_data_and_files () return self . _full_data # 2\u3001\u627e\u5230\u4e0b\u5212\u7ebf_has_attr,\u5b83\u4f1a\u4ece\u5f53\u524dself\u4e2d\u53bb\u53d6\u5bf9\u5e94\u7684name\uff0c\u5982\u679c\u8fd9\u4e2aname\u53d6\u5230\u4e86\u662fEmpty\uff0c\u90a3\u4e48\u5c31\u8fd4\u56deFalse def _hasattr ( obj , name ): return not getattr ( obj , name ) is Empty # 4\u3001_full_data\u9ed8\u8ba4\u503c self . _full_data = Empty # 5\u3001Empty\u7684\u5b9a\u4e49 class Empty ( object ): \"\"\" Placeholder for unset attributes. Cannot use `None`, as that may be a valid value. \"\"\" pass # 6\u3001_load_data_and_files\u65b9\u6cd5 def _load_data_and_files ( self ): \"\"\" Parses the request content into `self.data`. \"\"\" # \u9ed8\u8ba4\u7684self._data = Empty\uff0c\u6240\u4ee5\u6761\u4ef6\u6ee1\u8db3\u76f4\u63a5\u8fdb\u5165\u8c03\u7528 if not _hasattr ( self , '_data' ): # \u8c03\u7528self._parse\u65b9\u6cd5 self . _data , self . _files = self . _parse () if self . _files : self . _full_data = self . _data . copy () self . _full_data . update ( self . _files ) else : self . _full_data = self . _data # if a form media type, copy data & files refs to the underlying # http request so that closable objects are handled appropriately. if is_form_media_type ( self . content_type ): self . _request . _post = self . POST self . _request . _files = self . FILES # 7\u3001self._parse\u65b9\u6cd5 def _parse ( self ): \"\"\" \u683c\u5f0f\u5316request\u7684\u6587\u672c\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u4e24\u4e2a\u5143\u7d20\u7684\u5143\u7ec4(data\uff0cfiles) May raise an `UnsupportedMediaType`, or `ParseError` exception. \"\"\" # 8\u3001\u83b7\u53d6\u7528\u6237\u7684\u8bf7\u6c42\u5934 media_type = self . content_type try : # 10\u3001\u83b7\u53d6\u7528\u6237\u7684request.body\u7684\u5185\u5bb9\uff0c\u4ee5stream\u7684\u5f62\u5f0f stream = self . stream except RawPostDataException : if not hasattr ( self . _request , '_post' ): raise # If request.POST has been accessed in middleware, and a method='POST' # request was made with 'multipart/form-data', then the request stream # will already have been exhausted. if self . _supports_form_parsing (): return ( self . _request . POST , self . _request . FILES ) stream = None if stream is None or media_type is None : if media_type and is_form_media_type ( media_type ): empty_data = QueryDict ( '' , encoding = self . _request . _encoding ) else : empty_data = {} empty_files = MultiValueDict () return ( empty_data , empty_files ) # 13\u3001\u8c03\u7528parser\u9009\u62e9\u5668\uff0c\u540e\u9762\u7684self.parsers\u5176\u5b9e\u5c31\u662f\u652f\u6301\u7684\u5bf9\u8c61\u3002parser_classes # self\u4e2d\u4e5f\u6709content-type\uff0c\u6240\u4ee5\u8fd9\u4e2aself\u662f\u8bf7\u6c42\u5bf9\u8c61\uff0c\u5305\u542b\u7528\u6237\u8bf7\u6c42\u7684content-type parser = self . negotiator . select_parser ( self , self . parsers ) if not parser : raise exceptions . UnsupportedMediaType ( media_type ) try : parsed = parser . parse ( stream , media_type , self . parser_context ) except Exception : # If we get an exception during parsing, fill in empty data and # re-raise. Ensures we don't simply repeat the error when # attempting to render the browsable renderer response, or when # logging the request or similar. self . _data = QueryDict ( '' , encoding = self . _request . _encoding ) self . _files = MultiValueDict () self . _full_data = self . _data raise # Parser classes may return the raw data, or a # DataAndFiles object. Unpack the result as required. try : return ( parsed . data , parsed . files ) except AttributeError : empty_files = MultiValueDict () return ( parsed , empty_files ) # 9\u3001\u52a0\u4e86property\u5c5e\u6027\uff0c\u53ef\u4ee5\u76f4\u63a5\u50cf\u503c\u4e00\u6837\u53bb\u4f7f\u7528\uff0c\u8fd9\u4e2acontent_type\u5b9e\u9645\u4e0a\u5c31\u662f\u53bb\u83b7\u53d6\u7528\u6237\u5b9e\u9645\u7684\u8bf7\u6c42\u5934\u3002 @property def content_type ( self ): meta = self . _request . META return meta . get ( 'CONTENT_TYPE' , meta . get ( 'HTTP_CONTENT_TYPE' , '' )) # 11\u3001stream @property def stream ( self ): \"\"\" Returns an object that may be used to stream the request content. \"\"\" # \u9ed8\u8ba4\u7684_stream\u5c31\u662fEmpty\u6240\u4ee5\uff0c\u76f4\u63a5\u8c03\u7528_load_stream\u65b9\u6cd5 if not _hasattr ( self , '_stream' ): self . _load_stream () return self . _stream # 12\u3001\u8fd4\u56deBytesIO\u5f62\u5f0f\u7684body\u4fe1\u606f def _load_stream ( self ): \"\"\" Return the content body of the request, as a stream. \"\"\" meta = self . _request . META try : content_length = int ( meta . get ( 'CONTENT_LENGTH' , meta . get ( 'HTTP_CONTENT_LENGTH' , 0 )) ) except ( ValueError , TypeError ): content_length = 0 if content_length == 0 : self . _stream = None elif not self . _request . _read_started : self . _stream = self . _request else : self . _stream = io . BytesIO ( self . body ) \u770b\u4e00\u5207\u7684\u5f00\u5934\uff0c\u5165\u53e3\u8fd8\u662fdispatch def initialize_request ( self , request , * args , ** kwargs ): \"\"\" Returns the initial request object. \"\"\" parser_context = self . get_parser_context ( request ) return Request ( request , # \u8fd9\u6837Request\u7684\u5b9e\u4f8b\u5c31\u4f1a\u5b58\u5728self.parsers\u8fd9\u4e2a\u5c5e\u6027\u53ef\u4ee5\u8c03\u7528\u3002 parsers = self . get_parsers (), authenticators = self . get_authenticators (), negotiator = self . get_content_negotiator (), parser_context = parser_context ) def get_parsers ( self ): \"\"\" Instantiates and returns the list of parsers that this view can use. \"\"\" return [ parser () for parser in self . parser_classes ] \u6700\u540e\u8fd9\u4e2a\u89e3\u6790\u5668\u7684\u5c5e\u6027\u5199\u5728\u5168\u5c40\u5c31\u53ef\u4ee5\u4e86\u3002 http\u534f\u8bae\u7684\u8bf7\u6c42\u65b9\u6cd5 \u5e38\u7528\u7684\u8bf7\u6c42\u5934\uff08\u72b6\u6001\u7801\uff0c\u65b9\u6cd5\u7b49\uff09\uff1a application/ refer\u7528\u6765\u505a\u9632\u76d7\u94fe\uff0cuser_agent\uff0caccept\uff0chost\u7b49\u3002","title":"DRF\u89e3\u6790\u5668"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/","text":"DRF\u5e8f\u5217\u5316 \u00b6 \u8bf7\u6c42\u8ba4\u8bc1 QuerySet\u8fdb\u884c\u5e8f\u5217\u5316 \u7b80\u5355\u4f7f\u7528 \u00b6 QuerySet\u5e8f\u5217\u5316 \u00b6 class UserInfoSer ( serializers . Serializer ): \"\"\" \u4ee5userinfo\u8868\u4e3a\u4f8b\u5b50\uff0c\u5982\u4e0b\u662f\u6211\u60f3\u8981\u663e\u793a\u7684\u5b57\u6bb5 1-username\u548cpassword\u90fd\u662f\u672c\u8868\u5b57\u6bb5\uff0c\u76f4\u63a5\u5c55\u793a\u5c31\u53ef\u4ee5\uff0c\u8c03\u7528\u5bf9\u5e94\u7c7b\u522b\u4e3aCharField 2-user_type\u4e3a\u7528\u6237\u7c7b\u578b\uff0c\u8fd9\u5728\u6211\u4eec\u7684models\u5b9a\u4e49\u4e2d\u662f\u4e00\u4e2achoice\u5b57\u6bb5\uff0c\u5982\u679c\u76f4\u63a5\u53d6IntegerField\u7684\u8bdd \u90a3\u4e48\u8fd4\u56de\u7684\u5c06\u662f\u4e00\u4e2aid\u800c\u5df2\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684typeid\u5bf9\u5e94\u7684\u4e2d\u6587\u540d\u79f0\uff0c\u56e0\u6b64\u8fd9\u4e00\u5757\u8981\u6307\u5b9a\u6e90source\u3002 orm\u5185\u90e8\u9488\u5bf9choice\u5b57\u6bb5\u5b58\u5728\u4e00\u4e2aget_Foo_display\u7684\u65b9\u6cd5\uff0c\u4f1a\u8fd4\u56de\u5bf9\u5e94\u7684choice\u5bf9\u5e94\u7684\u503c\uff0c\u90a3\u4e48\u5bf9\u5e94\u5230\u8fd9\u91cc\u5c31\u662f \u8981\u663e\u793auser_type\u5b57\u6bb5\u5bf9\u5e94\u7684choice\u7684\u9009\u9879\u503c\u3002 3-\u5916\u952e\u5b57\u6bb5\uff0c\u8fd9\u91cc\u8fd8\u53ef\u4ee5\u586b\u5199\u5bf9\u5e94\u7684\u5916\u952e\u5b57\u6bb5\uff0c\u6bd4\u5982group\uff0c\u5bf9\u5e94\u7684\u5c31\u662fgroup\u5bf9\u8c61\uff0c.title\uff0c\u5c31\u662f\u8c03\u7528group\u5bf9\u8c61 \u7684title\u5b57\u6bb5\u7684\u503c\uff0c\u540c\u6837\u4e5f\u8981\u6307\u5b9asource\u3002 4-\u800c\u9488\u5bf9\u591a\u5bf9\u591a\u5b57\u5178\u5728\u8fd9\u91cc\u6307\u5b9a\u65b9\u6cd5\u7684\u8bdd\u5176\u5b9e\u5c31\u4e0d\u662f\u90a3\u4e48\u65b9\u4fbf\u4e86\uff0c\u56e0\u6b64\u91c7\u7528\u4e00\u4e2a\u65b0\u7684\u7c7bSerializerMethodField \uff0c\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u5141\u8bb8\u6211\u4eec\u81ea\u5b9a\u4e49\u65b9\u6cd5\u6765\u6307\u5b9a\u663e\u793a\u5185\u5bb9\uff0c\u5047\u5982\u5b57\u6bb5\u540d\u53ebrls\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u547d\u540d\u4e00\u4e2aget_rls\u7684\u65b9\u6cd5\uff0c\u5185\u90e8 \u64cd\u4f5c\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u62ff\u5230\u6240\u6709\u7684role\u5bf9\u8c61\u4ee5\u540e\u7136\u540e\u628a\u5bf9\u8c61\u7684id\u548ctitle\u53d6\u51fa\u6765\u6dfb\u52a0\u5230ret\u91cc\uff0c\u8fd4\u56de\u7684ret\u5373\u662frls\u7684\u503c \"\"\" username = serializers . CharField () password = serializers . CharField () # choices\u5b57\u6bb5 ut = serializers . CharField ( source = 'get_user_type_display' ) # \u5916\u952e\u5b57\u6bb5\u5185\u90e8\u662f\u6839\u636e.\u505asplit\uff0c\u53d6\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e00\u76f4.\u4e0b\u53bb\u3002 gp = serializers . CharField ( source = 'group.title' ) # \u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u7528SerializerMethod\u8fdb\u884c\u81ea\u5b9a\u4e49\u65b9\u6cd5\u663e\u793a\uff0c\u4e0a\u7ebf\u7684choice\uff0cgp\u90fd\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u7684\u5f62\u5f0f rls = serializers . SerializerMethodField () def get_rls ( self , row ): role_obj_list = row . roles . all () ret = [] for item in role_obj_list : ret . append ({ 'id' : item . id , 'title' : item . title }) return ret # \u5bf9\u5e94\u7684CBV class UserInfo ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def get ( self , request , * args , ** kwargs ): users = models . UserInfo . objects . all () ser = UserInfoSer ( instance = users , many = True ) # ser.data\u8fd4\u56de\u7684\u662f\u4e00\u4e2aOrderedDIct\u662f\u4e00\u4e2a\u6709\u5e8f\u5b57\u5178\uff0c\u5b9e\u8d28\u4e0a\u8fd8\u662f\u4e00\u4e2a\u5b57\u5178 ret = json . dumps ( ser . data , ensure_ascii = False ) return HttpResponse ( ret ) \u8bbf\u95ee\u5bf9\u5e94\u7684\u8def\u7531\u5f97\u5230\u7684\u7ed3\u679c\u5982\u4e0b\uff1a [{ \"username\" : \"lamber\" , \"password\" : \"123\" , \"ut\" : \"\u666e\u901a\u7528\u6237\" , \"gp\" : \"A\u7ec4\" , \"rls\" : [{ \"id\" : 1 , \"title\" : \"\u533b\u751f\" }, { \"id\" : 2 , \"title\" : \"\u5b66\u751f\" }]}, { \"username\" : \"maxiaoyu\" , \"password\" : \"123\" , \"ut\" : \"VIP\" , \"gp\" : \"b\u7ec4\" , \"rls\" : [{ \"id\" : 2 , \"title\" : \"\u5b66\u751f\" }, { \"id\" : 3 , \"title\" : \"\u8001\u5e08\" }]}, { \"username\" : \"qimaosen\" , \"password\" : \"123\" , \"ut\" : \"SVIP\" , \"gp\" : \"A\u7ec4\" , \"rls\" : [{ \"id\" : 3 , \"title\" : \"\u8001\u5e08\" }]}] \u5176\u5b9e\u6211\u4eec\u53ea\u505a\u4e86\u4e24\u4e2a\u4e8b\u60c5\uff1a \u5b9a\u4e49\u4e00\u4e2a\u5e8f\u5217\u5316\u7684\u7c7b\uff0c\u5199\u4e0a\u5bf9\u5e94\u7684\u5b57\u6bb5 \u5728CBV\u4e2d\u5b9e\u4f8b\u5316\u5e8f\u5217\u7c7b\uff0c\u751f\u6210\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\uff0c\u8fd4\u56de\u7ed9\u524d\u7aef\u3002 \u5728\u5e8f\u5217\u5316\u7c7b\u4e2d\u6211\u4eec\u5355\u72ec\u6307\u5b9a\u4e86\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u7684\u663e\u793a\uff0c\u5176\u5b9e\u8fd9\u4e2a\u8fd8\u53ef\u4ee5\u66f4\u7b80\u5355\u7684\u7684\u53bb\u64cd\u4f5c\uff0c\u53ea\u8981\u7ee7\u627f\u5185\u7f6e\u7684ModelSerializer\u7c7b\u5373\u53ef\uff0c\u56e0\u6b64\u4e0a\u9762\u7684\u5185\u5bb9\u5c31\u53ef\u4ee5\u6539\u6210\u5982\u4e0b\u7684\u5f62\u5f0f\uff1a class UserInfoSer ( serializers . ModelSerializer ): class Meta : model = models . UserInfo fields = \"__all__\" \u5f53fields\u8bbe\u7f6e\u4e3a __all__ \u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u5e2e\u4f60\u663e\u793a\u6240\u6709\u7684\u5b57\u6bb5\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u81ea\u5df1\u4e00\u4e2a\u4e00\u4e2a\u624b\u5199\u4e86\uff0c\u4e0d\u8fc7\u4e5f\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u8fd9\u91cc\u7684\u5904\u7406\u90fd\u662f\u6700\u7b80\u5355\u5316\u7684\u5904\u7406\uff0c\u5373\u5bf9\u5e94\u7684group\u4e5f\u53ea\u662f\u7ed9\u4f60\u663e\u793a\u7ec4id\uff0cchoices\u4e5f\u662f\u663e\u793achoice\u7684id\u800c\u4e0d\u662f\u663e\u793achoice\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u90e8\u5206\u5b57\u6bb5\u8fd8\u662f\u9700\u8981\u6211\u4eec\u81ea\u5df1\u6765\u8fdb\u884c\u5904\u7406\uff0c\u6765\u8fdb\u884c\u4e00\u4e0b\u6539\u8fdb\u5982\u4e0b\uff1a class UserInfoSer ( serializers . ModelSerializer ): ut = serializers . CharField ( source = 'get_user_type_display' ) gp = serializers . CharField ( source = 'group.title' ) rls = serializers . SerializerMethodField () class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'ut' , 'rls' , 'gp' ] def get_rls ( self , row ): role_obj_list = row . roles . all () ret = [] for item in role_obj_list : ret . append ({ 'id' : item . id , 'title' : item . title }) return ret \u4e0d\u8fc7\u8fd8\u6709\u4e00\u79cd\u66f4\u4e3a\u7b80\u5355\u7684\u5199\u6cd5\uff0c\u6307\u5b9a\u4e00\u4e2adepth\uff0cdepth\u8868\u793a\u6df1\u5ea6\uff0c\u6211\u4eec\u5728\u5916\u952e\u8fdb\u884c\u8054\u8868\u67e5\u8be2\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u201c.\u201d\u4e00\u76f4\u591a\u7ea7\u53bb\u83b7\u53d6\uff0c\u5373\u4e00\u76f4\u201c.\u201d\u4e0b\u53bb\uff0c\u8fd9\u91ccdepth\u5c31\u662f\u6307\u5b9a\u8981\u6df1\u5165\u8d70\u591a\u5c11\u5c42\uff0c\uff1a class UserInfoSer ( serializers . ModelSerializer ): class Meta : model = models . UserInfo fields = \"__all__\" # \u9ed8\u8ba4ModelSerializer\u4f7f\u7528\u4e3b\u952e\u4f5c\u4e3a\u5173\u8054\u5b57\u6bb5\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528depth\u6765\u7b80\u5355\u7684\u751f\u6210\u5d4c\u5957\u8868\u793a\uff0c # depth\u5e94\u8be5\u662f\u6574\u6570\uff0c\u8868\u660e\u5d4c\u5957\u7684\u5c42\u7ea7\u6570\u91cf\uff0c\u5efa\u8bae3~4\u5c42\u5c31\u5dee\u4e0d\u591a\u4e86\uff0c\u518d\u591a\u5c31\u4f1a\u6162\u4e86\u3002 depth = 1 \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b57\u6bb5\u663e\u793a\uff0c\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u5236\u7684Field\u7684\u7c7b\uff0c\u5728\u5185\u90e8\u91cd\u5199to_representtation\u65b9\u6cd5\uff0c\u65b9\u6cd5\u8fd4\u56de\u4ec0\u4e48\u5c31\u663e\u793a\u4ec0\u4e48\u3002 class MyField ( serializers . CharField ): def to_representation ( self , value ): \"\"\" \u53ef\u4ee5\u81ea\u5b9a\u4e49\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u4ec0\u4e48\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u9875\u9762\u6570\u636e\u5c31\u662f\u4ec0\u4e48\uff0cvalue\u662f\u4ece\u6570\u636e\u5e93\u53d6\u5230\u7684\u503c\uff0c \u8fd9\u4e2a\u65b9\u6cd5\u4e00\u822c\u662f\u7528\u4e0d\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u81ea\u5b9a\u4e49\u65b9\u6cd5\u4e00\u822c\u5c31\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002 \"\"\" return time . time () class UserInfoSer ( serializers . ModelSerializer ): ut = serializers . CharField ( source = 'get_user_type_display' ) gp = serializers . CharField ( source = 'group.title' ) x1 = MyField ( source = 'username' ) class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'ut' , 'gp' , 'x1' ] \u5bf9\u5e94\u7684\u7ed3\u679c\u5982\u4e0b\uff1a [{ \"id\" : 1 , \"username\" : \"lamber\" , \"ut\" : \"\u666e\u901a\u7528\u6237\" , \"gp\" : \"A\u7ec4\" , \"x1\" : 1550142281.049991 }, { \"id\" : 2 , \"username\" : \"maxiaoyu\" , \"ut\" : \"VIP\" , \"gp\" : \"b\u7ec4\" , \"x1\" : 1550142281.052642 }, { \"id\" : 3 , \"username\" : \"qimaosen\" , \"ut\" : \"SVIP\" , \"gp\" : \"A\u7ec4\" , \"x1\" : 1550142281.054938 }] Hypermedia API \u00b6 Hypermedia API\uff0cRESTful API\u6700\u597d\u505a\u5230Hypermedia\uff0c\u5373\u8fd4\u56de\u7ed3\u679c\u4e2d\u63d0\u4f9b\u94fe\u63a5\uff0c\u8fde\u5411\u5176\u4ed6API\u65b9\u6cd5\uff0c\u4f7f\u5f97\u7528\u6237\u4e0d\u67e5\u6587\u6863\uff0c\u4e5f\u77e5\u9053\u4e0b\u4e00\u6b65\u5e94\u8be5\u505a\u4ec0\u4e48\u3002\u4ee5\u7528\u6237\u7ec4\u4e3a\u4f8b\uff1a class UserInfoSer ( serializers . ModelSerializer ): \"\"\" \u8fd9\u91cc\u7684lookup_url_kwarg\u662f\u6307\u7684\u6211\u53bb\u53cd\u5411\u751f\u6210url\u7684\u65f6\u5019\uff0c\u53c2\u6570\u5199\u7684\u503c\u662f\u4ec0\u4e48\uff0c \u5982\u679c\u662fpk\u90a3\u5c31\u662fpk\uff0c\u5982\u679c\u662fxxx\u90a3\u5339\u914d\u5230\u7684\u5c31\u662fxxx\uff0c\u8fd9\u4e2a\u662f\u9488\u5bf9URL\u4e0a\u6709\u53c2\u6570\u7684\u60c5\u51b5 lookup_field\u7528\u4e8e\u6267\u884c\u5404\u4e2a\u6a21\u578b\u5b9e\u4f8b\u7684\u5bf9\u8c61\u67e5\u627e\u7684\u6a21\u578b\u5b57\u6bb5\u3002\u9ed8\u8ba4\u4e3a 'pk'\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f7f\u7528 hyperlinked API \u65f6\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u81ea\u5b9a\u4e49\u503c\uff0c \u5219\u9700\u8981\u786e\u4fdd API \u89c6\u56fe\u548c\u5e8f\u5217\u5316\u7c7b\u8bbe\u7f6e\u4e86 lookup field\uff0c\u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u6309\u7167pk\u6765\uff0c\u6570\u636e\u53ef\u80fd\u662f\u4e0d\u5bf9\u7684\u3002 \u751f\u6210\u53cd\u5411URL\u5730\u5740\uff0c\u5e2e\u52a9\u63a5\u53e3\u4eba\u8c03\u7528\u7684\u65f6\u5019\u53ef\u4ee5\u4e86\u89e3\u5230\u8fde\u63a5\u7684\u5185\u5bb9\u3002 \"\"\" group = serializers . HyperlinkedIdentityField ( view_name = 'gp' , lookup_url_kwarg = 'pk' , lookup_field = 'group_id' ) class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'group' ] class UserInfo ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def get ( self , request , * args , ** kwargs ): users = models . UserInfo . objects . all () ser = UserInfoSer ( instance = users , many = True ) # \u8fd4\u56de\u7684ser.data\u662f\u4e00\u4e2aOrderedDIct\u662f\u4e00\u4e2a\u6709\u5e8f\u5b57\u5178\uff0c\u5b9e\u8d28\u4e0a\u8fd8\u662f\u4e00\u4e2a\u5b57\u5178 ret = json . dumps ( ser . data , ensure_ascii = False ) return HttpResponse ( ret ) class GroupSer ( serializers . ModelSerializer ): group = serializers . HyperlinkedIdentityField ( view_name = 'gp' , lookup_url_kwarg = 'pk' , lookup_field = 'id' ) class Meta : model = models . UserGroup fields = \"__all__\" class Group ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def get ( self , request , * args , ** kwargs ): pk = kwargs . get ( 'pk' ) obj = models . UserGroup . objects . filter ( id = pk ) . first () # \u4f46\u51e1\u4f60\u8981\u662f\u4f7f\u7528HyperlinkedIdentityField\u4e86\uff0c\u4f60\u5c31\u8981\u52a0\u4e0acontext\u8fd9\u4e2a\u53c2\u6570\uff0c\u8fd9\u6837\u5c31\u80fd\u83b7\u5f97\u53cd\u5411\u7684url # \u5426\u5219\u4f1a\u62a5\u5982\u4e0b\u5f02\u5e38\uff1a # `HyperlinkedIdentityField` requires the request in the serializer context. Add `context={'request': request}` when instantiating the serializer. ser = GroupSer ( instance = obj , many = False , context = { 'request' : request }) ret = json . dumps ( ser . data ) return HttpResponse ( ret ) \u8fd4\u56de\u7684\u7ed3\u679c\u5185\u5bb9\u5982\u4e0b\uff1a [ { \"id\" : 1 , \"username\" : \"lamber\" , \"group\" : \"http://127.0.0.1:8000/group/1\" }, { \"id\" : 2 , \"username\" : \"maxiaoyu\" , \"group\" : \"http://127.0.0.1:8000/group/2\" }, { \"id\" : 3 , \"username\" : \"qimaosen\" , \"group\" : \"http://127.0.0.1:8000/group/1\" } ] \u8bf7\u6c42\u8ba4\u8bc1 \u00b6 \u5728\u8bf7\u6c42\u8ba4\u8bc1\u8fd9\u91cc\u5176\u5b9e\u5f88\u7c7b\u4f3c\u4e8eForm\u7ec4\u4ef6\u7684\u8bf7\u6c42\u8ba4\u8bc1\uff0c\u6bd4\u5982\u6211\u8981\u9488\u5bf9username\u505a\u4e00\u4e2a\u8bf7\u6c42\u8ba4\u8bc1 class xxValidator ( object ): def __init__ ( self , base ): self . base = base def __call__ ( self , value , * args , ** kwargs ): if not value . startswith ( self . base ): message = '\u6807\u9898\u5fc5\u987b\u4ee5 %s \u5f00\u5934' % self . base raise serializers . ValidationError ( message ) class UserInfoSer ( serializers . ModelSerializer ): username = serializers . CharField ( # \u8fd9\u91cc\u9762\u5305\u542b\u4e86\u5f88\u591a\u539f\u751f\u7684\u9a8c\u8bc1\u89c4\u5219\uff0c\u6bd4\u5982required\uff0c\u4e0d\u80fd\u4e3a\u7a7a error_messages = { 'required' : '\u4e0d\u80fd\u4e3a\u7a7a' }, # \u4f46\u662f\u6211\u4eec\u8fd8\u53ef\u4ee5\u81ea\u5df1\u53bb\u5b9a\u4e49\u9a8c\u8bc1\u89c4\u5219\uff0c\u65b9\u6cd5\u5c31\u662f\u5b9a\u4e00\u4e2a\u7c7b\u5c31\u53ef\u4ee5\u4e86\uff0c\u6bd4\u5982\u4e0a\u9762\u7684xxValidator\u7c7b # \u5982\u679c\u6ee1\u8db3\u7684\u8bdd\u4e0d\u4f5c\u64cd\u4f5c\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3raise\u4e00\u4e2aValidationError # \u8fd9\u91cc\u8c03\u7528\u4e86__call__\u65b9\u6cd5\uff0c\u56e0\u6b64\u7c7b\u53ef\u4ee5\u76f4\u63a5\u52a0\u62ec\u53f7\u8c03\u7528\uff0c\u9ed8\u8ba4\u5c31\u662f\u8c03\u7528\u7684__call__\u65b9\u6cd5\u3002 validators = [ xxValidator ( '\u5475\u5475\u54d2' ), ], ) group = serializers . HyperlinkedIdentityField ( view_name = 'gp' , lookup_url_kwarg = 'pk' , lookup_field = 'group_id' ) class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'group' ] class UserInfo ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def post ( self , request , * args , ** kwargs ): ser = UserInfoSer ( data = request . data ) if ser . is_valid (): print ( ser . validated_data ) else : print ( ser . errors ) return HttpResponse ( '\u6d4b\u8bd5\u7684post\u8bf7\u6c42' ) \u5982\u679cpost\u8bf7\u6c42\u8fc7\u6765\u7684\u5185\u5bb9\u4e0d\u662f\u4ee5\u201c\u5475\u5475\u54d2\u201d\u5f00\u5934\u7684\u8bdd\uff0cser.errors\u5c31\u4f1a\u6253\u5370\u51fa\u5bf9\u5e94\u7684\u62a5\u9519 { 'username' : [ ErrorDetail ( string = '\u6807\u9898\u5fc5\u987b\u4ee5\u5475\u5475\u54d2\u5f00\u5934' , code = 'invalid' )]} \u5f53\u7136\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u4e0d\u4f1a\u53bb\u8fd9\u4e48\u505a\uff0cForm\u7ec4\u4ef6\u4e2d\u6709\u94a9\u5b50\uff0c\u8fd9\u91cc\u540c\u6837\u4e5f\u6709\u3002 def is_valid ( self , raise_exception = False ): \"\"\"\u7701\u7565\u4e00\u90e8\u5206\u4ee3\u7801\"\"\" # \u5982\u679c\u6ca1\u6709_validated_data\u5c5e\u6027\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u4f1a\u53bb\u8c03\u7528run_validation\u65b9\u6cd5\u3002 if not hasattr ( self , '_validated_data' ): try : self . _validated_data = self . run_validation ( self . initial_data ) except ValidationError as exc : self . _validated_data = {} self . _errors = exc . detail else : self . _errors = {} if self . _errors and raise_exception : raise ValidationError ( self . errors ) return not bool ( self . _errors ) def run_validation ( self , data = empty ): \"\"\" Validate a simple representation and return the internal value. The provided data may be `empty` if no representation was included in the input. May raise `SkipField` if the field should not be included in the validated data. \"\"\" ( is_empty_value , data ) = self . validate_empty_values ( data ) if is_empty_value : return data value = self . to_internal_value ( data ) self . run_validators ( value ) return value def validate_empty_values ( self , data ): \"\"\" Validate empty values, and either: * Raise `ValidationError`, \u6307\u51fa\u65e0\u6548\u7684\u6570\u636e * Raise `SkipField`, \u6307\u51fa\u8fd9\u4e2a\u5b57\u6bb5\u5e94\u8be5\u88ab\u5ffd\u7565 * Return (True, data), indicating an empty value that should be returned without any further validation being applied. * Return (False, data), indicating a non-empty value, that should have validation applied as normal. \"\"\" if self . read_only : return ( True , self . get_default ()) if data is empty : if getattr ( self . root , 'partial' , False ): raise SkipField () if self . required : self . fail ( 'required' ) return ( True , self . get_default ()) if data is None : if not self . allow_null : self . fail ( 'null' ) return ( True , None ) return ( False , data ) \u6e90\u7801\u6d41\u7a0b \u00b6 \u6211\u4eec\u5199\u4e00\u4e2a\u8981\u505a\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u5047\u5982\u8bf4\u7ee7\u627f\u4e86serializers.Serializer\u7c7b\uff0c\u6211\u4eec\u5728CBV\u4e2d\u8981\u8fdb\u884c\u8c03\u7528\uff1a # \u4e5f\u5c31\u662f\u5b9e\u4f8b\u5316\uff0c\u90a3\u4e48\u6574\u4e2a\u4ee3\u7801\u6d41\u7a0b\u5c31\u4ece\u5b9e\u4f8b\u5316\u5f00\u59cb\u770b ser = UserInfoSer ( instance = users , many = True ) \u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u4f1a\u4f18\u5148\u6307\u5b9a\u7684\u4e24\u4e2a\u65b9\u6cd5\u4e00\u4e2a\u662f __new__ \u53e6\u5916\u4e00\u4e2a\u5c31\u662f\u6784\u9020\u65b9\u6cd5 __init__ \u3002\u4f46\u662f\u6211\u4eec\u5728Serializer\u4e2d\u5e76\u6ca1\u6709\u53d1\u73b0\uff0c\u6240\u4ee5\u5230\u5b83\u96c6\u6210\u7684\u7236\u7c7bBaseSerializer\u4e2d\u53bb\u627e\u3002 def __init__ ( self , instance = None , data = empty , ** kwargs ): # \u8fd9\u4e2a\u5c31\u662f\u6211\u4eec\u4f20\u9012\u7684instance\uff0c\u53ef\u80fd\u662f\u4e00\u4e2a\uff0c\u4e5f\u53ef\u80fd\u662f\u591a\u4e2a\u3002 self . instance = instance if data is not empty : self . initial_data = data self . partial = kwargs . pop ( 'partial' , False ) self . _context = kwargs . pop ( 'context' , {}) kwargs . pop ( 'many' , None ) super ( BaseSerializer , self ) . __init__ ( ** kwargs ) def __new__ ( cls , * args , ** kwargs ): # \u91cd\u5199\u8fd9\u4e2a\u7c7b\u6765\u81ea\u52a8\u6784\u5efaListSerializer\u7c7b\u4ee3\u66ff\uff0c\u5f53\u8bbe\u7f6e\u4e86many=True\u65f6\u5019 # \u6211\u4eec\u4f1a\u53bb\u628amany\u8fd9\u4e2a\u9009\u9879pop\u51fa\u6765\uff0c\u5982\u679c\u6ca1\u6709\u90a3\u5c31\u662fFalse\uff0c\u4e0d\u8d70\u8fd9\u91cc\u7684\u6761\u4ef6 # \u76f4\u63a5\u53bb\u8c03\u7528\u7236\u7c7b\u7684__new__\u65b9\u6cd5. if kwargs . pop ( 'many' , False ): # \u5982\u679c\u8bf4\u6709many\uff0c\u90a3\u4e48\u8c03\u7528\u7c7b\u65b9\u6cd5many_init return cls . many_init ( * args , ** kwargs ) return super ( BaseSerializer , cls ) . __new__ ( cls , * args , ** kwargs ) \u5728Serializer\uff0c\u5982\u679c\u6ca1\u6709\u7ed9meta\u8bbe\u7f6elist_serializer_class\u5c5e\u6027\uff0c\u90a3\u4e48list_serializer_class\u5c5e\u6027\u5c31\u662fListSerializer\uff0c\u6700\u540e\u8fd4\u56de\u7684\u4e5f\u5c31\u662fListSerializer\u7684\u5bf9\u8c61\uff0c\u63a5\u4e0b\u6765\u6267\u884cListSerializer\u5bf9\u8c61\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5426\u5219\u6267\u884cBaseSerializer\u91cc\u9762\u7684\u6784\u9020\u65b9\u6cd5\uff08\u5982\u679c\u6211\u4eec\u91cd\u5199\u4e86\u8fd9\u4e2a\u5c31\u4f1a\u8c03\u7528\u6211\u4eec\u81ea\u5df1\u7684\u6784\u9020\u65b9\u6cd5\uff09\u3002 @classmethod def many_init ( cls , * args , ** kwargs ): \"\"\" This method implements the creation of a `ListSerializer` parent class when `many=True` is used. You can customize it if you need to control which keyword arguments are passed to the parent, and which are passed to the child. Note that we're over-cautious in passing most arguments to both parent and child classes in order to try to cover the general case. If you're overriding this method you'll probably want something much simpler, eg: @classmethod def many_init(cls, *args, **kwargs): kwargs['child'] = cls() return CustomListSerializer(*args, **kwargs) \"\"\" allow_empty = kwargs . pop ( 'allow_empty' , None ) child_serializer = cls ( * args , ** kwargs ) list_kwargs = { 'child' : child_serializer , } if allow_empty is not None : list_kwargs [ 'allow_empty' ] = allow_empty list_kwargs . update ({ key : value for key , value in kwargs . items () if key in LIST_SERIALIZER_KWARGS }) meta = getattr ( cls , 'Meta' , None ) list_serializer_class = getattr ( meta , 'list_serializer_class' , ListSerializer ) return list_serializer_class ( * args , ** list_kwargs ) \u7136\u540e\u6211\u4eec\u8c03\u7528\u4e86\u8fd9\u4e2a\u8fd9\u4e2a\u5bf9\u8c61\u7684data\u5c5e\u6027\uff1a ret = json . dumps ( ser . data , ensure_ascii = False ) \u6765\u770b\u4e00\u4e0b\u8fd9\u4e2adata\u65b9\u6cd5\u7684\u5b9e\u73b0 @property def data ( self ): ret = super ( Serializer , self ) . data return ReturnDict ( ret , serializer = self ) @property def data ( self ): if hasattr ( self , 'initial_data' ) and not hasattr ( self , '_validated_data' ): msg = ( 'When a serializer is passed a `data` keyword argument you ' 'must call `.is_valid()` before attempting to access the ' 'serialized `.data` representation. \\n ' 'You should either call `.is_valid()` first, ' 'or access `.initial_data` instead.' ) raise AssertionError ( msg ) if not hasattr ( self , '_data' ): if self . instance is not None and not getattr ( self , '_errors' , None ): self . _data = self . to_representation ( self . instance ) elif hasattr ( self , '_validated_data' ) and not getattr ( self , '_errors' , None ): self . _data = self . to_representation ( self . validated_data ) else : self . _data = self . get_initial () return self . _data def to_representation ( self , instance ): raise NotImplementedError ( '`to_representation()` must be implemented.' ) # Serializer\u7c7b\u7684\u7c7b\u65b9\u6cd5 def to_representation ( self , instance ): \"\"\" Object instance -> Dict of primitive datatypes. \"\"\" ret = OrderedDict () fields = self . _readable_fields # fields\u5176\u5b9e\u5c31\u662f\u54b1\u4eec\u5b9a\u4e49\u7684\u8fd9\u4e9b\u5b57\u6bb5 for field in fields : try : # \u8c03\u7528\u5b57\u6bb5\u7684get_attribute\u65b9\u6cd5\uff0c\u5e76\u628ainstance\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u8fdb\u53bb\u3002 attribute = field . get_attribute ( instance ) except SkipField : continue # We skip `to_representation` for `None` values so that fields do # not have to explicitly deal with that case. # # For related fields with `use_pk_only_optimization` we need to # resolve the pk value. check_for_none = attribute . pk if isinstance ( attribute , PKOnlyObject ) else attribute if check_for_none is None : ret [ field . field_name ] = None else : ret [ field . field_name ] = field . to_representation ( attribute ) return ret \u627e\u4e00\u4e2aCharfield\u770b\u770b # from rest_framework.serializers import CharField\uff0c\u53d1\u73b0CharField\u4e2d\u5e76\u6ca1\u6709get_attribute\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6240\u4ee5\u7ee7\u7eed\u627e\uff0c\u5b83\u7684\u7236\u7c7bField\u53d1\u73b0\u4e86\u8fd9\u4e2a\u65b9\u6cd5 def get_attribute ( self , instance ): \"\"\" Given the *outgoing* object instance, return the primitive value that should be used for this field. \"\"\" try : return get_attribute ( instance , self . source_attrs ) except ( KeyError , AttributeError ) as exc : if self . default is not empty : return self . get_default () if self . allow_null : return None if not self . required : raise SkipField () msg = ( 'Got {exc_type} when attempting to get a value for field ' '`{field}` on serializer `{serializer}`. \\n The serializer ' 'field might be named incorrectly and not match ' 'any attribute or key on the `{instance}` instance. \\n ' 'Original exception text was: {exc}.' . format ( exc_type = type ( exc ) . __name__ , field = self . field_name , serializer = self . parent . __class__ . __name__ , instance = instance . __class__ . __name__ , exc = exc ) ) raise type ( exc )( msg ) # source if self . source == '*' : self . source_attrs = [] else : # \u6bd4\u5982group.title\uff0c\u5206\u9694\u540e\u5c31\u662fgroup\uff0ctitle self . source_attrs = self . source . split ( '.' ) def get_attribute ( instance , attrs ): \"\"\" Similar to Python's built in `getattr(instance, attr)`, but takes a list of nested attributes, instead of a single attribute. Also accepts either attribute lookup on objects or dictionary lookups. \"\"\" for attr in attrs : try : if isinstance ( instance , collections . Mapping ): instance = instance [ attr ] else : instance = getattr ( instance , attr ) except ObjectDoesNotExist : return None if is_simple_callable ( instance ): try : instance = instance () except ( AttributeError , KeyError ) as exc : # If we raised an Attribute or KeyError here it'd get treated # as an omitted field in `Field.get_attribute()`. Instead we # raise a ValueError to ensure the exception is not masked. raise ValueError ( 'Exception raised in callable attribute \"{0}\"; original exception was: {1}' . format ( attr , exc )) return instance def is_simple_callable ( obj ): \"\"\" True if the object is a callable that takes no arguments. \"\"\" if not ( inspect . isfunction ( obj ) or inspect . ismethod ( obj ) or isinstance ( obj , functools . partial )): return False sig = inspect . signature ( obj ) params = sig . parameters . values () return all ( param . kind == param . VAR_POSITIONAL or param . kind == param . VAR_KEYWORD or param . default != param . empty for param in params ) def isfunction ( object ): \"\"\"Return true if the object is a user-defined function. Function objects provide these attributes: __doc__ documentation string __name__ name with which this function was defined __code__ code object containing compiled function bytecode __defaults__ tuple of any default values for arguments __globals__ global namespace in which this function was defined __annotations__ dict of parameter annotations __kwdefaults__ dict of keyword only parameters with defaults\"\"\" # \u548ccallable\u662f\u7b49\u4ef7\u7684 return isinstance ( object , types . FunctionType ) def ismethod ( object ): \"\"\"Return true if the object is an instance method. Instance method objects provide these attributes: __doc__ documentation string __name__ name with which this method was defined __func__ function object containing implementation of method __self__ instance to which this method is bound\"\"\" return isinstance ( object , types . MethodType ) \u8bf7\u6c42\u6570\u636e\u6821\u9a8c \u00b6","title":"07-DRF\u5e8f\u5217\u5316"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#drf","text":"\u8bf7\u6c42\u8ba4\u8bc1 QuerySet\u8fdb\u884c\u5e8f\u5217\u5316","title":"DRF\u5e8f\u5217\u5316"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#_1","text":"","title":"\u7b80\u5355\u4f7f\u7528"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#queryset","text":"class UserInfoSer ( serializers . Serializer ): \"\"\" \u4ee5userinfo\u8868\u4e3a\u4f8b\u5b50\uff0c\u5982\u4e0b\u662f\u6211\u60f3\u8981\u663e\u793a\u7684\u5b57\u6bb5 1-username\u548cpassword\u90fd\u662f\u672c\u8868\u5b57\u6bb5\uff0c\u76f4\u63a5\u5c55\u793a\u5c31\u53ef\u4ee5\uff0c\u8c03\u7528\u5bf9\u5e94\u7c7b\u522b\u4e3aCharField 2-user_type\u4e3a\u7528\u6237\u7c7b\u578b\uff0c\u8fd9\u5728\u6211\u4eec\u7684models\u5b9a\u4e49\u4e2d\u662f\u4e00\u4e2achoice\u5b57\u6bb5\uff0c\u5982\u679c\u76f4\u63a5\u53d6IntegerField\u7684\u8bdd \u90a3\u4e48\u8fd4\u56de\u7684\u5c06\u662f\u4e00\u4e2aid\u800c\u5df2\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684typeid\u5bf9\u5e94\u7684\u4e2d\u6587\u540d\u79f0\uff0c\u56e0\u6b64\u8fd9\u4e00\u5757\u8981\u6307\u5b9a\u6e90source\u3002 orm\u5185\u90e8\u9488\u5bf9choice\u5b57\u6bb5\u5b58\u5728\u4e00\u4e2aget_Foo_display\u7684\u65b9\u6cd5\uff0c\u4f1a\u8fd4\u56de\u5bf9\u5e94\u7684choice\u5bf9\u5e94\u7684\u503c\uff0c\u90a3\u4e48\u5bf9\u5e94\u5230\u8fd9\u91cc\u5c31\u662f \u8981\u663e\u793auser_type\u5b57\u6bb5\u5bf9\u5e94\u7684choice\u7684\u9009\u9879\u503c\u3002 3-\u5916\u952e\u5b57\u6bb5\uff0c\u8fd9\u91cc\u8fd8\u53ef\u4ee5\u586b\u5199\u5bf9\u5e94\u7684\u5916\u952e\u5b57\u6bb5\uff0c\u6bd4\u5982group\uff0c\u5bf9\u5e94\u7684\u5c31\u662fgroup\u5bf9\u8c61\uff0c.title\uff0c\u5c31\u662f\u8c03\u7528group\u5bf9\u8c61 \u7684title\u5b57\u6bb5\u7684\u503c\uff0c\u540c\u6837\u4e5f\u8981\u6307\u5b9asource\u3002 4-\u800c\u9488\u5bf9\u591a\u5bf9\u591a\u5b57\u5178\u5728\u8fd9\u91cc\u6307\u5b9a\u65b9\u6cd5\u7684\u8bdd\u5176\u5b9e\u5c31\u4e0d\u662f\u90a3\u4e48\u65b9\u4fbf\u4e86\uff0c\u56e0\u6b64\u91c7\u7528\u4e00\u4e2a\u65b0\u7684\u7c7bSerializerMethodField \uff0c\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u5141\u8bb8\u6211\u4eec\u81ea\u5b9a\u4e49\u65b9\u6cd5\u6765\u6307\u5b9a\u663e\u793a\u5185\u5bb9\uff0c\u5047\u5982\u5b57\u6bb5\u540d\u53ebrls\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u547d\u540d\u4e00\u4e2aget_rls\u7684\u65b9\u6cd5\uff0c\u5185\u90e8 \u64cd\u4f5c\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u62ff\u5230\u6240\u6709\u7684role\u5bf9\u8c61\u4ee5\u540e\u7136\u540e\u628a\u5bf9\u8c61\u7684id\u548ctitle\u53d6\u51fa\u6765\u6dfb\u52a0\u5230ret\u91cc\uff0c\u8fd4\u56de\u7684ret\u5373\u662frls\u7684\u503c \"\"\" username = serializers . CharField () password = serializers . CharField () # choices\u5b57\u6bb5 ut = serializers . CharField ( source = 'get_user_type_display' ) # \u5916\u952e\u5b57\u6bb5\u5185\u90e8\u662f\u6839\u636e.\u505asplit\uff0c\u53d6\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e00\u76f4.\u4e0b\u53bb\u3002 gp = serializers . CharField ( source = 'group.title' ) # \u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u7528SerializerMethod\u8fdb\u884c\u81ea\u5b9a\u4e49\u65b9\u6cd5\u663e\u793a\uff0c\u4e0a\u7ebf\u7684choice\uff0cgp\u90fd\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u7684\u5f62\u5f0f rls = serializers . SerializerMethodField () def get_rls ( self , row ): role_obj_list = row . roles . all () ret = [] for item in role_obj_list : ret . append ({ 'id' : item . id , 'title' : item . title }) return ret # \u5bf9\u5e94\u7684CBV class UserInfo ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def get ( self , request , * args , ** kwargs ): users = models . UserInfo . objects . all () ser = UserInfoSer ( instance = users , many = True ) # ser.data\u8fd4\u56de\u7684\u662f\u4e00\u4e2aOrderedDIct\u662f\u4e00\u4e2a\u6709\u5e8f\u5b57\u5178\uff0c\u5b9e\u8d28\u4e0a\u8fd8\u662f\u4e00\u4e2a\u5b57\u5178 ret = json . dumps ( ser . data , ensure_ascii = False ) return HttpResponse ( ret ) \u8bbf\u95ee\u5bf9\u5e94\u7684\u8def\u7531\u5f97\u5230\u7684\u7ed3\u679c\u5982\u4e0b\uff1a [{ \"username\" : \"lamber\" , \"password\" : \"123\" , \"ut\" : \"\u666e\u901a\u7528\u6237\" , \"gp\" : \"A\u7ec4\" , \"rls\" : [{ \"id\" : 1 , \"title\" : \"\u533b\u751f\" }, { \"id\" : 2 , \"title\" : \"\u5b66\u751f\" }]}, { \"username\" : \"maxiaoyu\" , \"password\" : \"123\" , \"ut\" : \"VIP\" , \"gp\" : \"b\u7ec4\" , \"rls\" : [{ \"id\" : 2 , \"title\" : \"\u5b66\u751f\" }, { \"id\" : 3 , \"title\" : \"\u8001\u5e08\" }]}, { \"username\" : \"qimaosen\" , \"password\" : \"123\" , \"ut\" : \"SVIP\" , \"gp\" : \"A\u7ec4\" , \"rls\" : [{ \"id\" : 3 , \"title\" : \"\u8001\u5e08\" }]}] \u5176\u5b9e\u6211\u4eec\u53ea\u505a\u4e86\u4e24\u4e2a\u4e8b\u60c5\uff1a \u5b9a\u4e49\u4e00\u4e2a\u5e8f\u5217\u5316\u7684\u7c7b\uff0c\u5199\u4e0a\u5bf9\u5e94\u7684\u5b57\u6bb5 \u5728CBV\u4e2d\u5b9e\u4f8b\u5316\u5e8f\u5217\u7c7b\uff0c\u751f\u6210\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\uff0c\u8fd4\u56de\u7ed9\u524d\u7aef\u3002 \u5728\u5e8f\u5217\u5316\u7c7b\u4e2d\u6211\u4eec\u5355\u72ec\u6307\u5b9a\u4e86\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u7684\u663e\u793a\uff0c\u5176\u5b9e\u8fd9\u4e2a\u8fd8\u53ef\u4ee5\u66f4\u7b80\u5355\u7684\u7684\u53bb\u64cd\u4f5c\uff0c\u53ea\u8981\u7ee7\u627f\u5185\u7f6e\u7684ModelSerializer\u7c7b\u5373\u53ef\uff0c\u56e0\u6b64\u4e0a\u9762\u7684\u5185\u5bb9\u5c31\u53ef\u4ee5\u6539\u6210\u5982\u4e0b\u7684\u5f62\u5f0f\uff1a class UserInfoSer ( serializers . ModelSerializer ): class Meta : model = models . UserInfo fields = \"__all__\" \u5f53fields\u8bbe\u7f6e\u4e3a __all__ \u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u5e2e\u4f60\u663e\u793a\u6240\u6709\u7684\u5b57\u6bb5\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u81ea\u5df1\u4e00\u4e2a\u4e00\u4e2a\u624b\u5199\u4e86\uff0c\u4e0d\u8fc7\u4e5f\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u8fd9\u91cc\u7684\u5904\u7406\u90fd\u662f\u6700\u7b80\u5355\u5316\u7684\u5904\u7406\uff0c\u5373\u5bf9\u5e94\u7684group\u4e5f\u53ea\u662f\u7ed9\u4f60\u663e\u793a\u7ec4id\uff0cchoices\u4e5f\u662f\u663e\u793achoice\u7684id\u800c\u4e0d\u662f\u663e\u793achoice\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u90e8\u5206\u5b57\u6bb5\u8fd8\u662f\u9700\u8981\u6211\u4eec\u81ea\u5df1\u6765\u8fdb\u884c\u5904\u7406\uff0c\u6765\u8fdb\u884c\u4e00\u4e0b\u6539\u8fdb\u5982\u4e0b\uff1a class UserInfoSer ( serializers . ModelSerializer ): ut = serializers . CharField ( source = 'get_user_type_display' ) gp = serializers . CharField ( source = 'group.title' ) rls = serializers . SerializerMethodField () class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'ut' , 'rls' , 'gp' ] def get_rls ( self , row ): role_obj_list = row . roles . all () ret = [] for item in role_obj_list : ret . append ({ 'id' : item . id , 'title' : item . title }) return ret \u4e0d\u8fc7\u8fd8\u6709\u4e00\u79cd\u66f4\u4e3a\u7b80\u5355\u7684\u5199\u6cd5\uff0c\u6307\u5b9a\u4e00\u4e2adepth\uff0cdepth\u8868\u793a\u6df1\u5ea6\uff0c\u6211\u4eec\u5728\u5916\u952e\u8fdb\u884c\u8054\u8868\u67e5\u8be2\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u201c.\u201d\u4e00\u76f4\u591a\u7ea7\u53bb\u83b7\u53d6\uff0c\u5373\u4e00\u76f4\u201c.\u201d\u4e0b\u53bb\uff0c\u8fd9\u91ccdepth\u5c31\u662f\u6307\u5b9a\u8981\u6df1\u5165\u8d70\u591a\u5c11\u5c42\uff0c\uff1a class UserInfoSer ( serializers . ModelSerializer ): class Meta : model = models . UserInfo fields = \"__all__\" # \u9ed8\u8ba4ModelSerializer\u4f7f\u7528\u4e3b\u952e\u4f5c\u4e3a\u5173\u8054\u5b57\u6bb5\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528depth\u6765\u7b80\u5355\u7684\u751f\u6210\u5d4c\u5957\u8868\u793a\uff0c # depth\u5e94\u8be5\u662f\u6574\u6570\uff0c\u8868\u660e\u5d4c\u5957\u7684\u5c42\u7ea7\u6570\u91cf\uff0c\u5efa\u8bae3~4\u5c42\u5c31\u5dee\u4e0d\u591a\u4e86\uff0c\u518d\u591a\u5c31\u4f1a\u6162\u4e86\u3002 depth = 1 \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b57\u6bb5\u663e\u793a\uff0c\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u5236\u7684Field\u7684\u7c7b\uff0c\u5728\u5185\u90e8\u91cd\u5199to_representtation\u65b9\u6cd5\uff0c\u65b9\u6cd5\u8fd4\u56de\u4ec0\u4e48\u5c31\u663e\u793a\u4ec0\u4e48\u3002 class MyField ( serializers . CharField ): def to_representation ( self , value ): \"\"\" \u53ef\u4ee5\u81ea\u5b9a\u4e49\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u4ec0\u4e48\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u9875\u9762\u6570\u636e\u5c31\u662f\u4ec0\u4e48\uff0cvalue\u662f\u4ece\u6570\u636e\u5e93\u53d6\u5230\u7684\u503c\uff0c \u8fd9\u4e2a\u65b9\u6cd5\u4e00\u822c\u662f\u7528\u4e0d\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u81ea\u5b9a\u4e49\u65b9\u6cd5\u4e00\u822c\u5c31\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002 \"\"\" return time . time () class UserInfoSer ( serializers . ModelSerializer ): ut = serializers . CharField ( source = 'get_user_type_display' ) gp = serializers . CharField ( source = 'group.title' ) x1 = MyField ( source = 'username' ) class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'ut' , 'gp' , 'x1' ] \u5bf9\u5e94\u7684\u7ed3\u679c\u5982\u4e0b\uff1a [{ \"id\" : 1 , \"username\" : \"lamber\" , \"ut\" : \"\u666e\u901a\u7528\u6237\" , \"gp\" : \"A\u7ec4\" , \"x1\" : 1550142281.049991 }, { \"id\" : 2 , \"username\" : \"maxiaoyu\" , \"ut\" : \"VIP\" , \"gp\" : \"b\u7ec4\" , \"x1\" : 1550142281.052642 }, { \"id\" : 3 , \"username\" : \"qimaosen\" , \"ut\" : \"SVIP\" , \"gp\" : \"A\u7ec4\" , \"x1\" : 1550142281.054938 }]","title":"QuerySet\u5e8f\u5217\u5316"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#hypermedia-api","text":"Hypermedia API\uff0cRESTful API\u6700\u597d\u505a\u5230Hypermedia\uff0c\u5373\u8fd4\u56de\u7ed3\u679c\u4e2d\u63d0\u4f9b\u94fe\u63a5\uff0c\u8fde\u5411\u5176\u4ed6API\u65b9\u6cd5\uff0c\u4f7f\u5f97\u7528\u6237\u4e0d\u67e5\u6587\u6863\uff0c\u4e5f\u77e5\u9053\u4e0b\u4e00\u6b65\u5e94\u8be5\u505a\u4ec0\u4e48\u3002\u4ee5\u7528\u6237\u7ec4\u4e3a\u4f8b\uff1a class UserInfoSer ( serializers . ModelSerializer ): \"\"\" \u8fd9\u91cc\u7684lookup_url_kwarg\u662f\u6307\u7684\u6211\u53bb\u53cd\u5411\u751f\u6210url\u7684\u65f6\u5019\uff0c\u53c2\u6570\u5199\u7684\u503c\u662f\u4ec0\u4e48\uff0c \u5982\u679c\u662fpk\u90a3\u5c31\u662fpk\uff0c\u5982\u679c\u662fxxx\u90a3\u5339\u914d\u5230\u7684\u5c31\u662fxxx\uff0c\u8fd9\u4e2a\u662f\u9488\u5bf9URL\u4e0a\u6709\u53c2\u6570\u7684\u60c5\u51b5 lookup_field\u7528\u4e8e\u6267\u884c\u5404\u4e2a\u6a21\u578b\u5b9e\u4f8b\u7684\u5bf9\u8c61\u67e5\u627e\u7684\u6a21\u578b\u5b57\u6bb5\u3002\u9ed8\u8ba4\u4e3a 'pk'\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f7f\u7528 hyperlinked API \u65f6\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u81ea\u5b9a\u4e49\u503c\uff0c \u5219\u9700\u8981\u786e\u4fdd API \u89c6\u56fe\u548c\u5e8f\u5217\u5316\u7c7b\u8bbe\u7f6e\u4e86 lookup field\uff0c\u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u6309\u7167pk\u6765\uff0c\u6570\u636e\u53ef\u80fd\u662f\u4e0d\u5bf9\u7684\u3002 \u751f\u6210\u53cd\u5411URL\u5730\u5740\uff0c\u5e2e\u52a9\u63a5\u53e3\u4eba\u8c03\u7528\u7684\u65f6\u5019\u53ef\u4ee5\u4e86\u89e3\u5230\u8fde\u63a5\u7684\u5185\u5bb9\u3002 \"\"\" group = serializers . HyperlinkedIdentityField ( view_name = 'gp' , lookup_url_kwarg = 'pk' , lookup_field = 'group_id' ) class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'group' ] class UserInfo ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def get ( self , request , * args , ** kwargs ): users = models . UserInfo . objects . all () ser = UserInfoSer ( instance = users , many = True ) # \u8fd4\u56de\u7684ser.data\u662f\u4e00\u4e2aOrderedDIct\u662f\u4e00\u4e2a\u6709\u5e8f\u5b57\u5178\uff0c\u5b9e\u8d28\u4e0a\u8fd8\u662f\u4e00\u4e2a\u5b57\u5178 ret = json . dumps ( ser . data , ensure_ascii = False ) return HttpResponse ( ret ) class GroupSer ( serializers . ModelSerializer ): group = serializers . HyperlinkedIdentityField ( view_name = 'gp' , lookup_url_kwarg = 'pk' , lookup_field = 'id' ) class Meta : model = models . UserGroup fields = \"__all__\" class Group ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def get ( self , request , * args , ** kwargs ): pk = kwargs . get ( 'pk' ) obj = models . UserGroup . objects . filter ( id = pk ) . first () # \u4f46\u51e1\u4f60\u8981\u662f\u4f7f\u7528HyperlinkedIdentityField\u4e86\uff0c\u4f60\u5c31\u8981\u52a0\u4e0acontext\u8fd9\u4e2a\u53c2\u6570\uff0c\u8fd9\u6837\u5c31\u80fd\u83b7\u5f97\u53cd\u5411\u7684url # \u5426\u5219\u4f1a\u62a5\u5982\u4e0b\u5f02\u5e38\uff1a # `HyperlinkedIdentityField` requires the request in the serializer context. Add `context={'request': request}` when instantiating the serializer. ser = GroupSer ( instance = obj , many = False , context = { 'request' : request }) ret = json . dumps ( ser . data ) return HttpResponse ( ret ) \u8fd4\u56de\u7684\u7ed3\u679c\u5185\u5bb9\u5982\u4e0b\uff1a [ { \"id\" : 1 , \"username\" : \"lamber\" , \"group\" : \"http://127.0.0.1:8000/group/1\" }, { \"id\" : 2 , \"username\" : \"maxiaoyu\" , \"group\" : \"http://127.0.0.1:8000/group/2\" }, { \"id\" : 3 , \"username\" : \"qimaosen\" , \"group\" : \"http://127.0.0.1:8000/group/1\" } ]","title":"Hypermedia API"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#_2","text":"\u5728\u8bf7\u6c42\u8ba4\u8bc1\u8fd9\u91cc\u5176\u5b9e\u5f88\u7c7b\u4f3c\u4e8eForm\u7ec4\u4ef6\u7684\u8bf7\u6c42\u8ba4\u8bc1\uff0c\u6bd4\u5982\u6211\u8981\u9488\u5bf9username\u505a\u4e00\u4e2a\u8bf7\u6c42\u8ba4\u8bc1 class xxValidator ( object ): def __init__ ( self , base ): self . base = base def __call__ ( self , value , * args , ** kwargs ): if not value . startswith ( self . base ): message = '\u6807\u9898\u5fc5\u987b\u4ee5 %s \u5f00\u5934' % self . base raise serializers . ValidationError ( message ) class UserInfoSer ( serializers . ModelSerializer ): username = serializers . CharField ( # \u8fd9\u91cc\u9762\u5305\u542b\u4e86\u5f88\u591a\u539f\u751f\u7684\u9a8c\u8bc1\u89c4\u5219\uff0c\u6bd4\u5982required\uff0c\u4e0d\u80fd\u4e3a\u7a7a error_messages = { 'required' : '\u4e0d\u80fd\u4e3a\u7a7a' }, # \u4f46\u662f\u6211\u4eec\u8fd8\u53ef\u4ee5\u81ea\u5df1\u53bb\u5b9a\u4e49\u9a8c\u8bc1\u89c4\u5219\uff0c\u65b9\u6cd5\u5c31\u662f\u5b9a\u4e00\u4e2a\u7c7b\u5c31\u53ef\u4ee5\u4e86\uff0c\u6bd4\u5982\u4e0a\u9762\u7684xxValidator\u7c7b # \u5982\u679c\u6ee1\u8db3\u7684\u8bdd\u4e0d\u4f5c\u64cd\u4f5c\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3raise\u4e00\u4e2aValidationError # \u8fd9\u91cc\u8c03\u7528\u4e86__call__\u65b9\u6cd5\uff0c\u56e0\u6b64\u7c7b\u53ef\u4ee5\u76f4\u63a5\u52a0\u62ec\u53f7\u8c03\u7528\uff0c\u9ed8\u8ba4\u5c31\u662f\u8c03\u7528\u7684__call__\u65b9\u6cd5\u3002 validators = [ xxValidator ( '\u5475\u5475\u54d2' ), ], ) group = serializers . HyperlinkedIdentityField ( view_name = 'gp' , lookup_url_kwarg = 'pk' , lookup_field = 'group_id' ) class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'group' ] class UserInfo ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def post ( self , request , * args , ** kwargs ): ser = UserInfoSer ( data = request . data ) if ser . is_valid (): print ( ser . validated_data ) else : print ( ser . errors ) return HttpResponse ( '\u6d4b\u8bd5\u7684post\u8bf7\u6c42' ) \u5982\u679cpost\u8bf7\u6c42\u8fc7\u6765\u7684\u5185\u5bb9\u4e0d\u662f\u4ee5\u201c\u5475\u5475\u54d2\u201d\u5f00\u5934\u7684\u8bdd\uff0cser.errors\u5c31\u4f1a\u6253\u5370\u51fa\u5bf9\u5e94\u7684\u62a5\u9519 { 'username' : [ ErrorDetail ( string = '\u6807\u9898\u5fc5\u987b\u4ee5\u5475\u5475\u54d2\u5f00\u5934' , code = 'invalid' )]} \u5f53\u7136\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u4e0d\u4f1a\u53bb\u8fd9\u4e48\u505a\uff0cForm\u7ec4\u4ef6\u4e2d\u6709\u94a9\u5b50\uff0c\u8fd9\u91cc\u540c\u6837\u4e5f\u6709\u3002 def is_valid ( self , raise_exception = False ): \"\"\"\u7701\u7565\u4e00\u90e8\u5206\u4ee3\u7801\"\"\" # \u5982\u679c\u6ca1\u6709_validated_data\u5c5e\u6027\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u4f1a\u53bb\u8c03\u7528run_validation\u65b9\u6cd5\u3002 if not hasattr ( self , '_validated_data' ): try : self . _validated_data = self . run_validation ( self . initial_data ) except ValidationError as exc : self . _validated_data = {} self . _errors = exc . detail else : self . _errors = {} if self . _errors and raise_exception : raise ValidationError ( self . errors ) return not bool ( self . _errors ) def run_validation ( self , data = empty ): \"\"\" Validate a simple representation and return the internal value. The provided data may be `empty` if no representation was included in the input. May raise `SkipField` if the field should not be included in the validated data. \"\"\" ( is_empty_value , data ) = self . validate_empty_values ( data ) if is_empty_value : return data value = self . to_internal_value ( data ) self . run_validators ( value ) return value def validate_empty_values ( self , data ): \"\"\" Validate empty values, and either: * Raise `ValidationError`, \u6307\u51fa\u65e0\u6548\u7684\u6570\u636e * Raise `SkipField`, \u6307\u51fa\u8fd9\u4e2a\u5b57\u6bb5\u5e94\u8be5\u88ab\u5ffd\u7565 * Return (True, data), indicating an empty value that should be returned without any further validation being applied. * Return (False, data), indicating a non-empty value, that should have validation applied as normal. \"\"\" if self . read_only : return ( True , self . get_default ()) if data is empty : if getattr ( self . root , 'partial' , False ): raise SkipField () if self . required : self . fail ( 'required' ) return ( True , self . get_default ()) if data is None : if not self . allow_null : self . fail ( 'null' ) return ( True , None ) return ( False , data )","title":"\u8bf7\u6c42\u8ba4\u8bc1"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#_3","text":"\u6211\u4eec\u5199\u4e00\u4e2a\u8981\u505a\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u5047\u5982\u8bf4\u7ee7\u627f\u4e86serializers.Serializer\u7c7b\uff0c\u6211\u4eec\u5728CBV\u4e2d\u8981\u8fdb\u884c\u8c03\u7528\uff1a # \u4e5f\u5c31\u662f\u5b9e\u4f8b\u5316\uff0c\u90a3\u4e48\u6574\u4e2a\u4ee3\u7801\u6d41\u7a0b\u5c31\u4ece\u5b9e\u4f8b\u5316\u5f00\u59cb\u770b ser = UserInfoSer ( instance = users , many = True ) \u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u4f1a\u4f18\u5148\u6307\u5b9a\u7684\u4e24\u4e2a\u65b9\u6cd5\u4e00\u4e2a\u662f __new__ \u53e6\u5916\u4e00\u4e2a\u5c31\u662f\u6784\u9020\u65b9\u6cd5 __init__ \u3002\u4f46\u662f\u6211\u4eec\u5728Serializer\u4e2d\u5e76\u6ca1\u6709\u53d1\u73b0\uff0c\u6240\u4ee5\u5230\u5b83\u96c6\u6210\u7684\u7236\u7c7bBaseSerializer\u4e2d\u53bb\u627e\u3002 def __init__ ( self , instance = None , data = empty , ** kwargs ): # \u8fd9\u4e2a\u5c31\u662f\u6211\u4eec\u4f20\u9012\u7684instance\uff0c\u53ef\u80fd\u662f\u4e00\u4e2a\uff0c\u4e5f\u53ef\u80fd\u662f\u591a\u4e2a\u3002 self . instance = instance if data is not empty : self . initial_data = data self . partial = kwargs . pop ( 'partial' , False ) self . _context = kwargs . pop ( 'context' , {}) kwargs . pop ( 'many' , None ) super ( BaseSerializer , self ) . __init__ ( ** kwargs ) def __new__ ( cls , * args , ** kwargs ): # \u91cd\u5199\u8fd9\u4e2a\u7c7b\u6765\u81ea\u52a8\u6784\u5efaListSerializer\u7c7b\u4ee3\u66ff\uff0c\u5f53\u8bbe\u7f6e\u4e86many=True\u65f6\u5019 # \u6211\u4eec\u4f1a\u53bb\u628amany\u8fd9\u4e2a\u9009\u9879pop\u51fa\u6765\uff0c\u5982\u679c\u6ca1\u6709\u90a3\u5c31\u662fFalse\uff0c\u4e0d\u8d70\u8fd9\u91cc\u7684\u6761\u4ef6 # \u76f4\u63a5\u53bb\u8c03\u7528\u7236\u7c7b\u7684__new__\u65b9\u6cd5. if kwargs . pop ( 'many' , False ): # \u5982\u679c\u8bf4\u6709many\uff0c\u90a3\u4e48\u8c03\u7528\u7c7b\u65b9\u6cd5many_init return cls . many_init ( * args , ** kwargs ) return super ( BaseSerializer , cls ) . __new__ ( cls , * args , ** kwargs ) \u5728Serializer\uff0c\u5982\u679c\u6ca1\u6709\u7ed9meta\u8bbe\u7f6elist_serializer_class\u5c5e\u6027\uff0c\u90a3\u4e48list_serializer_class\u5c5e\u6027\u5c31\u662fListSerializer\uff0c\u6700\u540e\u8fd4\u56de\u7684\u4e5f\u5c31\u662fListSerializer\u7684\u5bf9\u8c61\uff0c\u63a5\u4e0b\u6765\u6267\u884cListSerializer\u5bf9\u8c61\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5426\u5219\u6267\u884cBaseSerializer\u91cc\u9762\u7684\u6784\u9020\u65b9\u6cd5\uff08\u5982\u679c\u6211\u4eec\u91cd\u5199\u4e86\u8fd9\u4e2a\u5c31\u4f1a\u8c03\u7528\u6211\u4eec\u81ea\u5df1\u7684\u6784\u9020\u65b9\u6cd5\uff09\u3002 @classmethod def many_init ( cls , * args , ** kwargs ): \"\"\" This method implements the creation of a `ListSerializer` parent class when `many=True` is used. You can customize it if you need to control which keyword arguments are passed to the parent, and which are passed to the child. Note that we're over-cautious in passing most arguments to both parent and child classes in order to try to cover the general case. If you're overriding this method you'll probably want something much simpler, eg: @classmethod def many_init(cls, *args, **kwargs): kwargs['child'] = cls() return CustomListSerializer(*args, **kwargs) \"\"\" allow_empty = kwargs . pop ( 'allow_empty' , None ) child_serializer = cls ( * args , ** kwargs ) list_kwargs = { 'child' : child_serializer , } if allow_empty is not None : list_kwargs [ 'allow_empty' ] = allow_empty list_kwargs . update ({ key : value for key , value in kwargs . items () if key in LIST_SERIALIZER_KWARGS }) meta = getattr ( cls , 'Meta' , None ) list_serializer_class = getattr ( meta , 'list_serializer_class' , ListSerializer ) return list_serializer_class ( * args , ** list_kwargs ) \u7136\u540e\u6211\u4eec\u8c03\u7528\u4e86\u8fd9\u4e2a\u8fd9\u4e2a\u5bf9\u8c61\u7684data\u5c5e\u6027\uff1a ret = json . dumps ( ser . data , ensure_ascii = False ) \u6765\u770b\u4e00\u4e0b\u8fd9\u4e2adata\u65b9\u6cd5\u7684\u5b9e\u73b0 @property def data ( self ): ret = super ( Serializer , self ) . data return ReturnDict ( ret , serializer = self ) @property def data ( self ): if hasattr ( self , 'initial_data' ) and not hasattr ( self , '_validated_data' ): msg = ( 'When a serializer is passed a `data` keyword argument you ' 'must call `.is_valid()` before attempting to access the ' 'serialized `.data` representation. \\n ' 'You should either call `.is_valid()` first, ' 'or access `.initial_data` instead.' ) raise AssertionError ( msg ) if not hasattr ( self , '_data' ): if self . instance is not None and not getattr ( self , '_errors' , None ): self . _data = self . to_representation ( self . instance ) elif hasattr ( self , '_validated_data' ) and not getattr ( self , '_errors' , None ): self . _data = self . to_representation ( self . validated_data ) else : self . _data = self . get_initial () return self . _data def to_representation ( self , instance ): raise NotImplementedError ( '`to_representation()` must be implemented.' ) # Serializer\u7c7b\u7684\u7c7b\u65b9\u6cd5 def to_representation ( self , instance ): \"\"\" Object instance -> Dict of primitive datatypes. \"\"\" ret = OrderedDict () fields = self . _readable_fields # fields\u5176\u5b9e\u5c31\u662f\u54b1\u4eec\u5b9a\u4e49\u7684\u8fd9\u4e9b\u5b57\u6bb5 for field in fields : try : # \u8c03\u7528\u5b57\u6bb5\u7684get_attribute\u65b9\u6cd5\uff0c\u5e76\u628ainstance\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u8fdb\u53bb\u3002 attribute = field . get_attribute ( instance ) except SkipField : continue # We skip `to_representation` for `None` values so that fields do # not have to explicitly deal with that case. # # For related fields with `use_pk_only_optimization` we need to # resolve the pk value. check_for_none = attribute . pk if isinstance ( attribute , PKOnlyObject ) else attribute if check_for_none is None : ret [ field . field_name ] = None else : ret [ field . field_name ] = field . to_representation ( attribute ) return ret \u627e\u4e00\u4e2aCharfield\u770b\u770b # from rest_framework.serializers import CharField\uff0c\u53d1\u73b0CharField\u4e2d\u5e76\u6ca1\u6709get_attribute\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6240\u4ee5\u7ee7\u7eed\u627e\uff0c\u5b83\u7684\u7236\u7c7bField\u53d1\u73b0\u4e86\u8fd9\u4e2a\u65b9\u6cd5 def get_attribute ( self , instance ): \"\"\" Given the *outgoing* object instance, return the primitive value that should be used for this field. \"\"\" try : return get_attribute ( instance , self . source_attrs ) except ( KeyError , AttributeError ) as exc : if self . default is not empty : return self . get_default () if self . allow_null : return None if not self . required : raise SkipField () msg = ( 'Got {exc_type} when attempting to get a value for field ' '`{field}` on serializer `{serializer}`. \\n The serializer ' 'field might be named incorrectly and not match ' 'any attribute or key on the `{instance}` instance. \\n ' 'Original exception text was: {exc}.' . format ( exc_type = type ( exc ) . __name__ , field = self . field_name , serializer = self . parent . __class__ . __name__ , instance = instance . __class__ . __name__ , exc = exc ) ) raise type ( exc )( msg ) # source if self . source == '*' : self . source_attrs = [] else : # \u6bd4\u5982group.title\uff0c\u5206\u9694\u540e\u5c31\u662fgroup\uff0ctitle self . source_attrs = self . source . split ( '.' ) def get_attribute ( instance , attrs ): \"\"\" Similar to Python's built in `getattr(instance, attr)`, but takes a list of nested attributes, instead of a single attribute. Also accepts either attribute lookup on objects or dictionary lookups. \"\"\" for attr in attrs : try : if isinstance ( instance , collections . Mapping ): instance = instance [ attr ] else : instance = getattr ( instance , attr ) except ObjectDoesNotExist : return None if is_simple_callable ( instance ): try : instance = instance () except ( AttributeError , KeyError ) as exc : # If we raised an Attribute or KeyError here it'd get treated # as an omitted field in `Field.get_attribute()`. Instead we # raise a ValueError to ensure the exception is not masked. raise ValueError ( 'Exception raised in callable attribute \"{0}\"; original exception was: {1}' . format ( attr , exc )) return instance def is_simple_callable ( obj ): \"\"\" True if the object is a callable that takes no arguments. \"\"\" if not ( inspect . isfunction ( obj ) or inspect . ismethod ( obj ) or isinstance ( obj , functools . partial )): return False sig = inspect . signature ( obj ) params = sig . parameters . values () return all ( param . kind == param . VAR_POSITIONAL or param . kind == param . VAR_KEYWORD or param . default != param . empty for param in params ) def isfunction ( object ): \"\"\"Return true if the object is a user-defined function. Function objects provide these attributes: __doc__ documentation string __name__ name with which this function was defined __code__ code object containing compiled function bytecode __defaults__ tuple of any default values for arguments __globals__ global namespace in which this function was defined __annotations__ dict of parameter annotations __kwdefaults__ dict of keyword only parameters with defaults\"\"\" # \u548ccallable\u662f\u7b49\u4ef7\u7684 return isinstance ( object , types . FunctionType ) def ismethod ( object ): \"\"\"Return true if the object is an instance method. Instance method objects provide these attributes: __doc__ documentation string __name__ name with which this method was defined __func__ function object containing implementation of method __self__ instance to which this method is bound\"\"\" return isinstance ( object , types . MethodType )","title":"\u6e90\u7801\u6d41\u7a0b"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#_4","text":"","title":"\u8bf7\u6c42\u6570\u636e\u6821\u9a8c"},{"location":"django/DRF/08-DRF\u5206\u9875/","text":"\u5206\u9875 \u00b6 \u7b80\u5355\u5206\u9875\uff1a\u770b\u7b2cn\u9875\uff0c\u6bcf\u9875\u663e\u793am\u6761\u6570\u636e \u6307\u5b9a\u5206\u9875\uff1a\u5728\u7b2cn\u4e2a\u4f4d\u7f6e\uff0c\u5411\u540e\u67e5\u770bn\u6761\u6570\u636e\u3002 \u52a0\u5bc6\u5206\u9875\uff1a\u53ea\u80fd\u770b\u4e0a\u4e00\u9875\u4e0b\u4e00\u9875 class GenericViewSet ( ViewSetMixin , generics . GenericAPIView ): \"\"\" The GenericViewSet class does not provide any actions by default, but does include the base set of generic view behavior, such as the `get_object` and `get_queryset` methods. \"\"\" pass","title":"\u5206\u9875"},{"location":"django/DRF/08-DRF\u5206\u9875/#_1","text":"\u7b80\u5355\u5206\u9875\uff1a\u770b\u7b2cn\u9875\uff0c\u6bcf\u9875\u663e\u793am\u6761\u6570\u636e \u6307\u5b9a\u5206\u9875\uff1a\u5728\u7b2cn\u4e2a\u4f4d\u7f6e\uff0c\u5411\u540e\u67e5\u770bn\u6761\u6570\u636e\u3002 \u52a0\u5bc6\u5206\u9875\uff1a\u53ea\u80fd\u770b\u4e0a\u4e00\u9875\u4e0b\u4e00\u9875 class GenericViewSet ( ViewSetMixin , generics . GenericAPIView ): \"\"\" The GenericViewSet class does not provide any actions by default, but does include the base set of generic view behavior, such as the `get_object` and `get_queryset` methods. \"\"\" pass","title":"\u5206\u9875"},{"location":"django/DRF/09-DRF\u89c6\u56fe/","text":"\u53ef\u4ee5\u5355\u72ec\u7ee7\u627fmixin\u4e2d\u7684create\uff0cretrieve\uff0cdestroy\u7b49\u7c7b\uff0c\u5982\u679c\u5199\u7684\u662f\u7279\u522b\u590d\u6742\u7684\u5c31\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u4e9b\u4e86\uff0c\u63a8\u8350\u4f7f\u7528APIVIEW\u6216\u8005\u4f7f\u7528ModelViewSet\uff0cModelViewSet\u6bd4\u8f83APIVIEW\u6709\u4e00\u4e2a\u597d\u5904\u5c31\u662f \u5982\u679c\u53ea\u60f3\u5b8c\u6210\u7b80\u5355\u7684CURD\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528ModelViewSet\uff0c\u5982\u679c\u8981\u5b8c\u6210\u590d\u6742\u7684\u903b\u8f91\uff0c\u5c31\u76f4\u63a5\u7528Generic\u6216\u8005\u76f4\u63a5\u4f7f\u7528APIView\u3002 has_object_permission Gerneric_api_view .API_VIEW.get_object,check_object_perssion Route \u00b6 \u6e32\u67d3\u5668 \u00b6 format=json/admin/form\uff0c\u4e3b\u8981\u5c31\u7528json\u8fd8\u6709\u4e00\u4e2abrowser\u7684\u3002 \u5141\u8bb8\u533f\u540d\u7528\u6237\u4e24\u5206\u949f\u8bbf\u95ee10\u6b21\uff0c\u6ce8\u518c\u7528\u6237\u4e24\u5206\u949f\u8bbf\u95ee20\u6b21\u3002CORS\u8de8\u57df","title":"09 DRF\u89c6\u56fe"},{"location":"django/DRF/09-DRF\u89c6\u56fe/#route","text":"","title":"Route"},{"location":"django/DRF/09-DRF\u89c6\u56fe/#_1","text":"format=json/admin/form\uff0c\u4e3b\u8981\u5c31\u7528json\u8fd8\u6709\u4e00\u4e2abrowser\u7684\u3002 \u5141\u8bb8\u533f\u540d\u7528\u6237\u4e24\u5206\u949f\u8bbf\u95ee10\u6b21\uff0c\u6ce8\u518c\u7528\u6237\u4e24\u5206\u949f\u8bbf\u95ee20\u6b21\u3002CORS\u8de8\u57df","title":"\u6e32\u67d3\u5668"},{"location":"django/DRF/10-DRF\u6e32\u67d3\u5668/","text":"","title":"10 DRF\u6e32\u67d3\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/","text":"Docker \u00b6 Docker\u662fDocker.Inc\u516c\u53f8\u5f00\u6e90\u7684\u4e00\u4e2a\u57fa\u4e8eLXC\u6280\u672f\u4e4b\u4e0a\u6784\u5efa\u7684Container\u5bb9\u5668\u5f15\u64ce\uff0c\u6e90\u4ee3\u7801\u6258\u7ba1\u5728github\u4e0a\uff0c\u57fa\u4e8eGo\u8bed\u8a00\u5e76\u9075\u5faaApache2.0\u534f\u8bae\u5f00\u6e90\u3002 Docker\u662f\u901a\u8fc7\u5185\u6838\u865a\u62df\u5316\u6280\u672f\uff08namespaces\u4ee5\u53cacgroups\u7b49\uff09\u6765\u63d0\u4f9b\u5bb9\u5668\u7684\u8d44\u6e90\u9694\u79bb\u4e0e\u5b89\u5168\u4fdd\u8bc1\u7b49\u3002\u7531\u4e8eDocker\u901a\u8fc7\u7cfb\u7edf\u5c42\u7684\u865a\u62df\u5316\u5b9e\u73b0\u9694\u79bb\uff0c\u6240\u4ee5Docker\u5bb9\u5668\u5728\u8fd0\u884c\u7684\u65f6\u5019\u4e0d\u9700\u8981\u7c7b\u4f3c\u865a\u62df\u673a\u989d\u5916\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f00\u9500\uff08\u7ecf\u9a8c\u6765\u770b\u4e00\u822c\u4e00\u4e2a\u5b8c\u6574\u7684\u7cfb\u7edf\u5927\u6982\u4f1a\u6d88\u8017\u4e00\u4e2a\u7269\u7406\u4e3b\u673a6%\u5de6\u53f3\u7684\u6027\u80fd\uff09\uff0c\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u3002 docker\u7684\u6838\u5fc3\u7406\u5ff5 \u6784\u5efa\uff08Build\uff09 \u8fd0\u8f93\uff08Ship\uff09 \u8fd0\u884c\uff08Run\uff09 Docker\u4ecb\u7ecd \u00b6 \u5bb9\u5668VS\u865a\u62df\u5316 \u00b6 \u865a\u62df\u673a\u662f\u5b8c\u6574\u7684\u8d44\u6e90\u9694\u79bb\u3002\u5bb9\u5668\u662f\u9694\u79bb\u4e0d\u662f\u865a\u62df\uff0c\u5b83\u4e0d\u9700\u8981\u865a\u62df\u51fa\u6765\u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u3002 Docker\u53ef\u4ee5\u505a\u4ec0\u4e48 \u00b6 \u7b80\u5316\u914d\u7f6e \u4ee3\u7801\u6d41\u6c34\u7ebf\u7684\u7ba1\u7406\uff0c\u8ba9\u5f00\u53d1\uff0c\u6d4b\u8bd5\u751f\u4ea7\u90fd\u8dd1\u5728\u540c\u6837\u4e00\u4e2a\u73af\u5883\uff0c\u4fdd\u8bc1\u5f00\u53d1\u73af\u5883\u7684\u4e00\u81f4\u6027\u3002 \u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u5e94\u7528\u7684\u9694\u79bb\uff08\u865a\u62df\u673a\u4e5f\u53ef\u4ee5\u505a\u5230\uff09 \u6574\u5408\u670d\u52a1\u5668\uff0c\u901a\u8fc7docker\u7684\u9694\u79bb\u80fd\u529b\u6574\u5408\u591a\u4e2a\u670d\u52a1\u5668\u964d\u4f4e\u6210\u672c\u3002 \u8c03\u8bd5\u80fd\u529b \u591a\u79df\u6237\u73af\u5883 \u5feb\u901f\u90e8\u7f72 Docker\u6539\u53d8\u4e86\u4ec0\u4e48\uff1f \u00b6 \u9762\u5411\u4ea7\u54c1\uff1a\u4ea7\u54c1\u4ea4\u4ed8 \u9762\u5411\u5f00\u53d1\uff1a\u7b80\u5316\u73af\u5883\u914d\u7f6e \u9762\u5411\u6d4b\u8bd5\uff1a\u591a\u7248\u672c\u6d4b\u8bd5 \u9762\u5411\u8fd0\u7ef4\uff1a\u73af\u5883\u4e00\u81f4\u6027\uff0c\u53ef\u4ee5\u73af\u5883\u548c\u4ee3\u7801\u4e00\u8d77\u53d1\u5e03\uff0c\u56de\u6eda\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u505a\u5230\u4e00\u8d77\u56de\u6eda\u3002 \u9762\u5411\u67b6\u6784\uff1a\u81ea\u52a8\u5316\u6269\u5bb9\uff08\u5fae\u670d\u52a1\uff09 Docker\u7684\u5b89\u88c5 \u00b6 \u6700\u65b0\u7684\u5b89\u88c5\u4fe1\u606f\u8bf7\u4ee5\u5b98\u65b9\u6587\u6863\u7684\u5b89\u88c5\u4fe1\u606f\u4e3a\u51c6\uff0c \u5b98\u65b9Doc\u6587\u6863\u5730\u5740 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b89\u88c5\u6b65\u9aa4\uff1a yum install -y yum-utils device-mapper-persistent-data lvm2 yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo yum install docker-ce systemctl start docker \u67e5\u770bdocker\u542f\u52a8\u72b6\u6001\uff1a [ root@localhost ~ ] # ps -ef | grep docker root 31551 1 2 00 :43 ? 00 :00:00 /usr/bin/dockerd root 31555 31551 0 00 :43 ? 00 :00:00 docker-containerd --config /var/run/docker/containerd/containerd.toml root 31667 31082 0 00 :43 pts/0 00 :00:00 grep --color = auto docker \u62c9\u53d6docker\u955c\u50cf\uff0c\u8fd9\u91cc\u5982\u679c\u76f4\u63a5\u62c9\u7684\u8bdd\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7f51\u901f\u6162\u5bfc\u81f4\u62c9\u4e0d\u4e0b\u6765\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e0b\u56fd\u5185\u7684docker\u955c\u50cf\u6e90 \u914d\u7f6e\u56fd\u5185docker\u955c\u50cf\u6e90 \u00b6 \u56fd\u5185\u7684Docker\u955c\u50cf\u6e90\u6709\u5f88\u591a\u53ef\u4ee5\u9009\u62e9\uff0c \u53c2\u8003\u539f\u6587 DaoCloud - Docker\u52a0\u901f\u5668 \u963f\u91cc\u4e91 - \u5f00\u53d1\u8005\u5e73\u53f0 \u5fae\u955c\u50cf - \u5e0c\u4e91cSphere \u955c\u50cf\u5e7f\u573a - \u65f6\u901f\u4e91 \u7075\u96c0\u4e91 \u7f51\u6613\u8702\u5de2 \u8fd9\u91cc\u4ee5\u963f\u91cc\u4e91\u7684Docker\u52a0\u901f\u5668\u4e3a\u4f8b\uff0c\u6ce8\u518c\u5e76\u767b\u9646 \u963f\u91cc\u4e91 - \u5f00\u53d1\u8005\u5e73\u53f0 \u4e4b\u540e\uff0c\u5728\u9996\u9875\u70b9\u51fb\u201c\u521b\u5efa\u6211\u7684\u5bb9\u5668\u955c\u50cf\u201d\uff0c\u7136\u540e\u5c31\u4f1a\u6765\u5230\u963f\u91cc\u4e91\u7684\u670d\u52a1\u9762\u677f\u3002\u70b9\u51fb\u52a0\u901f\u5668\u6807\u7b7e\u3002\u6839\u636e\u63d0\u793a\u8f93\u5165Docker\u767b\u5f55\u65f6\u9700\u8981\u4f7f\u7528\u7684\u5bc6\u7801\uff08\u540e\u671f\u53ef\u66f4\u6539\uff09\uff0c\u7528\u6237\u540d\u5c31\u662f\u767b\u5f55\u963f\u91cc\u4e91\u7684\u7528\u6237\u540d\u3002\u5728\u51fa\u73b0\u7684\u9875\u9762\u4e2d\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e13\u5c5e\u7684\u955c\u50cf\u52a0\u901f\u5730\u5740\uff0c\u7c7b\u4f3c\u4e8e\u201c https://1234abcd.mirror.aliyuncs.com \u201d\u3002\u6839\u636e\u9875\u9762\u4e2d\u7684\u201c\u64cd\u4f5c\u6587\u6863\u201d\u4fe1\u606f\uff0c\u914d\u7f6e\u81ea\u5df1\u7684Docker\u52a0\u901f\u5668\u3002 \u6216\u8005\uff0c\u767b\u5f55 \u963f\u91cc\u4e91 - \u5bb9\u5668Hub\u670d\u52a1\u63a7\u5236\u53f0 \u4e4b\u540e\uff0c\u70b9\u51fb\u52a0\u901f\u5668\u6807\u7b7e\uff0c\u4e5f\u4f1a\u51fa\u73b0\u76f8\u5e94\u4fe1\u606f\u3002 \u5176\u4ed6\u56fd\u5185Docker\u955c\u50cf\u7684\u914d\u7f6e\u65b9\u6cd5 \u56fd\u5185\u5176\u4ed6Docker\u52a0\u901f\u5668\u914d\u7f6e\u65b9\u6cd5\u548c\u963f\u91cc\u4e91\u7684\u5dee\u4e0d\u591a\uff1a \u6ce8\u518c\u8d26\u53f7\uff0c\u83b7\u53d6\u4e13\u5c5e\u7684\u955c\u50cf\u52a0\u901f\u5730\u5740 \u6839\u636e\u63d0\u793a\u548c\u7cfb\u7edf\u7c7b\u578b\uff0c\u5347\u7ea7\uff0c\u5e76\u914d\u7f6eDocker\uff0c\u7136\u540e\u91cd\u542f\u3002 \u9a8c\u8bc1\u64cd\u4f5c\u7ed3\u679c \u624b\u52a8\u914d\u7f6eDocker\u52a0\u901f\u5668 \u914d\u7f6eDocker\u52a0\u901f\u5668\u7684\u672c\u8d28\u5c31\u662f\u628aDocker\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u955c\u50cf\u4e0b\u8f7d\u5730\u5740\u7531\u9ed8\u8ba4\u7684Docker Hub\u5730\u5740\u53d8\u4e3a\u56fd\u5185\u955c\u50cf\u7684\u52a0\u901f\u5730\u5740\u3002 /lib/systemd/system/docker.service /etc/systemd/system/docker.service # \u6bd4\u5982centos7\u4e2d \u5c06 OPTIONS = --registry-mirror = http://abcd1234.m.daocloud.io\u52a0\u5165\u5230docker\u7684\u914d\u7f6e\u6587\u4ef6/etc/sysconfig/docker\u4e2d\uff0c\u7136\u540e\u91cd\u542fDocker Docker\u955c\u50cf \u00b6 \u955c\u50cf\u641c\u7d22 \u00b6 # docker\u6709\u4e00\u4e2adocker hub\u4ed3\u5e93\uff0c\u8fd9\u4e2a\u5176\u5b9e\u548cgithub\u5f88\u76f8\u4f3c\u3002\u4ed3\u5e93\u4e2d\u5b58\u4e86\u5f88\u591a\u5df2\u7ecf\u6784\u5efa\u597d\u7684\u955c\u50cf\u3002 # \u5927\u591a\u6570\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u4e00\u4e2a\u73b0\u6210\u7684\u955c\u50cf\u800c\u4e0d\u9700\u8981\u6211\u4eec\u81ea\u5df1\u6784\u5efa COMAND: $ sudo docker search TERM OPTIONS: --automated = false \u662f\u5426\u4ec5\u663e\u793a\u81ea\u52a8\u521b\u5efa\u7684\u955c\u50cf --no-trunc = false \u662f\u5426\u622a\u65ad\u8f93\u51fa -s, --stars = 0 \u4ec5\u663e\u793a\u81f3\u5c11\u6709x\u9897\u661f\u7684\u955c\u50cf \u793a\u4f8b: [ root@maxiaoyu ~ ] # docker search nginx INDEX NAME DESCRIPTION STARS OFFICIAL AUTOMATED docker.io docker.io/nginx Official build of Nginx. 7127 [ OK ] \u6211\u8fd9\u91cc\u622a\u53d6\u4e86\u641c\u7d22\u51fa\u7ed3\u679c\u7684\u7b2c\u4e00\u884c\uff0c\u5f53\u7136\u5982\u679c\u4f60\u5b9e\u9645\u641c\u7d22\u7684\u8bdd\u4f1a\u6709\u5f88\u591a\u884c\u7684\u5185\u5bb9\u7684\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5b98\u65b9\u7684\u4ee5\u53ca\u5404\u79cd\u81ea\u5236\u7684\u3002 NAME\uff1a\u955c\u50cf\u540d\u79f0 DESCRIPTION\uff1a\u4e5f\u5c31\u662f\u955c\u50cf\u7684\u63cf\u8ff0\uff0c STARS\u7c7b\u4f3c\u4e8egithub\u91cc\u9762\u7684stars\uff0c\u8868\u793a\u70b9\u8d5e\u548c\u70ed\u5ea6\u3002 OFFICIAL\uff1a\u6307docker\u6807\u51c6\u5e93, \u7531docker \u5b98\u65b9\u5efa\u7acb. \u7528\u6237\u5efa\u7acb\u7684image\u5219\u4f1a\u6709userid\u7684prefix. automated builds \uff1a\u5219\u662f\u901a\u8fc7\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u7f51\u7ad9\u7ed3\u5408docker hub\u63d0\u4f9b\u7684\u63a5\u53e3\u751f\u6210\u7684, \u4f8b\u5982github, bitbucket, \u4f60\u9700\u8981\u6ce8\u518cdocker hub, \u7136\u540e\u4f7f\u7528github\u6216bitbucket\u7684\u5728\u8d26\u6237\u94fe\u63a5\u5230docker hub, \u7136\u540e\u5c31\u53ef\u4ee5\u9009\u62e9\u5728github\u6216bitbucket\u91cc\u9762\u7684\u9879\u76ee\u81ea\u52a8build docker image, \u8fd9\u6837\u7684\u8bdd\u53ea\u8981\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u7f51\u7ad9\u7684\u9879\u76ee\u6709\u66f4\u65b0, \u5c31\u4f1a\u89e6\u53d1\u81ea\u52a8\u521b\u5efaimage.\u5bf9\u4e8e\u7684image\u5c5e\u4e8e\u4ec0\u4e48\u7248\u672c\uff0c\u4e0b\u9762\u7684\u201c[OK]\u201d\u5c31\u4f1a\u6253\u5728\u4ec0\u4e48\u5730\u65b9 \u83b7\u53d6\u955c\u50cf \u00b6 \u83b7\u53d6\u955c\u50cf\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u76f4\u63a5\u53bbpull\u6211\u4eec\u521a\u624d\u7528docker search\u641c\u7d22\u5230\u7684\u955c\u50cf\uff1a [ root@maxiaoyu ~ ] # docker pull docker.io/nginx Using default tag: latest Trying to pull repository docker.io/library/nginx ... latest: Pulling from docker.io/library/nginx bc95e04b23c0: Pull complete 110767c6efff: Pull complete f081e0c4df75: Pull complete Digest: sha256:004ac1d5e791e705f12a17c80d7bb1e8f7f01aa7dca7deee6e65a03465392072 [ root@maxiaoyu ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/nginx latest 1e5ab59102ce 2 weeks ago 108 .3 MB docker.io/centos latest 328edcd84f1b 12 weeks ago 192 .5 MB \u5bfc\u5165\u672c\u5730\u7684docker\u5305\uff1a docker load --input centos.tar \u6216\u8005 docker load < nginx.tar \u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7docker\u7684\u5bfc\u51fa\u529f\u80fd\u5c06\u6211\u4eecpull\u4e0b\u6765\u7684image\u5bfc\u51fa\u6210\u4e00\u4e2atar\u5305\uff0c\u751f\u6210\u7684tar\u5305\u4f1a\u4fdd\u5b58\u5728\u5f53\u524d\u7684\u76ee\u5f55\uff1a docker save -o centos.tar centos \u4f7f\u7528docker inspect\u53bb\u67e5\u770bimage\u7684\u5185\u5bb9\uff1a docker inspect docker.io/nginx:latest \u5217\u51fa\u5f53\u524d\u4e0b\u8f7d\u7684\u6240\u6709\u7684\u955c\u50cf\uff1a [ root@localhost ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE nginx latest ae513a47849c 10 days ago 109MB centos latest e934aafc2206 4 weeks ago 199MB \u5982\u679c\u6211\u4eec\u5728docker pull\u7684\u65f6\u5019\u4e0d\u52a0\u989d\u5916\u7684\u53c2\u6570\uff0c\u90a3\u4e48\u4e0b\u8f7d\u7684\u5c31\u662f\u6700\u65b0\u7684\uff0c\u53ef\u4ee5\u5728tag\u4e2d\u770b\u5230\u662flatest\u7684\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u7248\u672c\uff0c\u6bd4\u5982\uff1a # \u53c2\u8003\u793a\u4f8b docker pull centos:v1.0 \u5220\u9664\u955c\u50cf \u00b6 docker rmi \u955c\u50cfID\uff0c\u6bd4\u5982\uff1a [ root@maxiaoyu ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/nginx latest 1e5ab59102ce 2 weeks ago 108 .3 MB docker.io/centos latest 328edcd84f1b 12 weeks ago 192 .5 MB [ root@maxiaoyu ~ ] # docker rmi 1e5ab59102ce Untagged: docker.io/nginx:latest Untagged: docker.io/nginx@sha256:004ac1d5e791e705f12a17c80d7bb1e8f7f01aa7dca7deee6e65a03465392072 Deleted: sha256:1e5ab59102ce46c277eda5ed77affaa4e3b06a59fe209fe0b05200606db3aa7a Deleted: sha256:182a54bd28aa918a440f7edd3066ea838825c3d6a08cc73858ba070dc4f27211 Deleted: sha256:a527b2a06e67cab4b15e0fd831882f9e6a6485c24f3c56f870ac550b81938771 Deleted: sha256:cec7521cdf36a6d4ad8f2e92e41e3ac1b6fa6e05be07fa53cc84a63503bc5700 \u5b9e\u9645\u4e0a\u662f\u6309\u7167image\u7684id\u53bb\u5220\u9664\u7684\uff0c\u5f53\u7136\u5982\u679c\u4f60\u7684image\u5c5e\u4e8e\u88ab\u5176\u4ed6\u5bb9\u5668\u5f15\u7528\u7684\u60c5\u51b5\u4e0b\u7684\u8bdd\u662f\u65e0\u6cd5\u5220\u9664\u7684\u3002\u4f1a\u6536\u5230\u5982\u4e0b\u7684\u62a5\u9519\u4fe1\u606f\uff1a [ root@maxiaoyu ~ ] # docker rmi 328edcd84f1b Error response from daemon: conflict: unable to delete 328edcd84f1b ( must be forced ) - image is being used by stopped container 1284da16efeb Docker\u5bb9\u5668 \u00b6 \u521b\u5efa\u4e00\u4e2a\u5bb9\u5668 \u00b6 [ root@maxiaoyu ~ ] # docker run --name myfirstdocker -i -t centos /bin/bash [ root@2ce82d7a275e / ] # uname -a Linux 2ce82d7a275e 3 .10.0-514.26.2.el7.x86_64 #1 SMP Tue Jul 4 15:04:05 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux [ root@2ce82d7a275e / ] # ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0 .0 0 .1 11764 1888 ? Ss 09 :40 0 :00 /bin/bash root 14 0 .0 0 .0 47436 1676 ? R+ 09 :44 0 :00 ps aux \u8fd9\u6837\u5c31\u65b0\u5efa\u4e86\u4e00\u4e2a\u5bb9\u5668\uff0c\u6211\u4eec\u4e5f\u968f\u4e4b\u4f1a\u8fdb\u5165\u5230\u5bb9\u5668\u7684\u754c\u9762\u3002docker\u5bb9\u5668\u7684\u542f\u52a8\uff0c\u5373\u4f7f\u6ca1\u6709\u628a\u955c\u50cfpull\u4e0b\u6765\uff0c\u5728\u6267\u884c\u5982\u4e0a\u7684\u547d\u4ee4\u7684\u65f6\u5019\u4f9d\u7136\u53ef\u4ee5\u6267\u884c\uff0c\u56e0\u4e3adocker\u53d1\u73b0\u4f60\u6ca1\u6709\u8fd9\u4e2a\u955c\u50cf\u7684\u65f6\u5019\u4f1a\u5e2e\u4f60\u628a\u955c\u50cfpull\u4e0b\u6765\u3002\u5bb9\u5668\u7684\u4e3b\u673a\u540d\u5c31\u662f\u5bb9\u5668\u7684container id\u3002\u63a5\u4e0b\u6765\u770b\u770b\u5982\u4e0a\u7684\u51e0\u4e2a\u53c2\u6570\u90fd\u4ee3\u8868\u4ec0\u4e48\u610f\u601d\uff1a --name:\u6307\u5b9a\u8fd9\u4e2a\u751f\u6210\u7684\u5bb9\u5668\u7684\u540d\u5b57\uff0c\u5f53\u7136\u5982\u679c\u4e0d\u6307\u5b9a\u7684\u8bddname\u4e5f\u4f1a\u81ea\u52a8\u751f\u6210\uff0c\u6211\u4eec\u6307\u5b9a\u540d\u5b57\u53ea\u4e0d\u8fc7\u662f\u4e3a\u4e86\u66f4\u65b9\u4fbf\u7684\u53bb\u7ba1\u7406\u6211\u4eec\u7684\u5bb9\u5668\u3002 -i\uff1a\u5141\u8bb8\u6807\u51c6\u8f93\u5165 \uff0c\u5373\u786e\u4fdd\u5bb9\u5668\u7684STDIN\u662f\u5f00\u542f\u7684\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u8fd0\u884c\u547d\u4ee4\u4ee5\u540e\u6211\u4eec\u8fdb\u5165\u5230\u4e86\u5bb9\u5668\u4e2d\uff0c\u8fdb\u7a0b\u4e3aPID\u7684\u662f/bin/bash\uff0c\u4e5f\u5c31\u662f\u521a\u624d\u6211\u4eec\u6307\u5b9a\u8981\u8fd0\u884c\u7684\u547d\u4ee4\u3002\u56e0\u6b64docker\u5176\u5b9e\u662f\u4e3a\u8fdb\u7a0b\u6267\u884c\u9694\u79bb\u4f5c\u7528\u7684\uff0c\u865a\u62df\u673a\u662f\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u505a\u9694\u79bb\u7684\u3002 -t\uff1a\u5f00\u542f\u4e00\u4e2atty\u4f2a\u7ec8\u7aef\u3002 -d\uff1a\u5982\u679c\u9700\u8981\u5bb9\u5668\u5728\u540e\u53f0\u8fd0\u884c\u7684\u8bdd\uff0c\u53ef\u4ee5\u52a0\u4e0a-d\u53c2\u6570\u3002\u8303\u56f4\u503c\u4e3a\u5bb9\u5668\u7684id \u4ee5\u4e0a\u64cd\u4f5c\u5176\u5b9e\u662f\u7ecf\u5386\u4e86\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b\uff1a \u6267\u884c\u4e0a\u9762\u64cd\u4f5c\u9996\u5148\u4f1a\u5728\u7cfb\u7edf\u672c\u5730\u53bb\u627e\u6709\u6ca1\u6709\u5bf9\u5e94\u7684\u8fd9\u6837\u4e00\u4e2aimage\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\u90a3\u4e48\u5c31\u4f1a\u53bbDocker Hub Registry\u53bb\u627e\uff0c\u4e00\u65e6\u627e\u5230\u4ee5\u540e\u5c31\u56de\u53bb\u4e0b\u8f7d\u7136\u540e\u4fdd\u5b58\u5230\u672c\u5730\u5bbf\u4e3b\u673a\u5668\u3002 Docker\u5229\u7528\u8fd9\u4e2aimage\u521b\u5efa\u4e86\u4e00\u4e2a\u5bb9\u5668\uff0c\u8fd9\u4e2a\u5bb9\u5668\u62e5\u6709\u81ea\u5df1\u7684\u7f51\u7edc\uff0cip\uff0c\u4ee5\u53ca\u6865\u63a5\u5916\u90e8\u7f51\u7edc\u7684\u63a5\u53e3\u3002 \u6211\u4eec\u544a\u8bc9\u8fd9\u4e2a\u5bb9\u5668\u8981\u53bb\u6267\u884c\u4ec0\u4e48\u547d\u4ee4\uff08/bin/bash\uff09\uff0c\u5f53\u7136\u8fd9\u4e2a\u547d\u4ee4\u662f\u53ef\u4ee5\u5728\u5bb9\u5668\u4e2d\u6307\u5b9a\u7684\uff0c\u6307\u5b9a\u5bb9\u5668\u8d77\u6765\u7684\u65f6\u5019\u81ea\u52a8\u6267\u884c\u67d0\u4e2a\u547d\u4ee4\uff0c\u90a3\u8fd9\u91cc\u5c31\u53ef\u4ee5\u4e0d\u5199\u4e86\u3002 \u5f53\u524d\u6211\u4eec\u662f\u5728\u5bb9\u5668\u7684\u5185\u90e8\uff0c\u901a\u8fc7 ps aux \u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\uff0cpid\u7684\u5927\u6811\u6839\u5e76\u4e0d\u662finit\uff08centos7\u7684\u6811\u6839\u5e76\u4e0d\u662finit\uff09\uff0c\u800c\u662f\u6211\u4eec\u8fd0\u884c\u7684/bin/bash\uff0c\u5982\u679c\u6b64\u65f6\u6211\u4eec\u4f7f\u7528exit\u9000\u51fa\u5bb9\u5668\u7684\u8bdd\uff0c\u90a3\u4e48\u6b64\u65f6\u7684\u5bb9\u5668\u5c31\u4f1a\u88ab\u5173\u6389\uff0c\u5b83\u5c31\u5b8c\u6210\u4e86\u5b83\u7684\u4f7f\u547d\u3002 [ root@2ce82d7a275e / ] # exit exit [ root@maxiaoyu ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 2ce82d7a275e centos \"/bin/bash\" 10 minutes ago Exited ( 0 ) 5 seconds ago myfirstdocker Docker\u5176\u5b9e\u662f\u5355\u8fdb\u7a0b\u7684\uff0c\u4ed6\u9700\u8981\u4e00\u4e2a\u8fdb\u7a0b\u5728\u524d\u53f0\u8dd1\u7740\uff0c\u56e0\u6b64\u5982\u679c\u8fd9\u4e2a\u7a0b\u5e8f\u6267\u884c\u5b8c\u4e86\uff0c\u90a3\u4e48\u6574\u4e2a\u5bb9\u5668\u4e5f\u5c31\u9000\u51fa\u4e86\uff0c\u5c31\u50cf\u6211\u4eec\u521a\u624d\u6267\u884c/bin/bash\u540e\u8fdb\u5165\u5230\u5bb9\u5668\uff0c\u5f53exit\u9000\u51fa\u7684\u65f6\u5019\u8fd9\u4e2a\u8fdb\u7a0b\u7ed3\u675f\u4ee5\u540e\u6574\u4e2a\u5bb9\u5668\u4e5f\u5c31\u8ddf\u7740\u4e00\u8d77\u9000\u51fa\u4e86\u3002\u6240\u4ee5\u8bf4\u4e0d\u662f\u6240\u6709\u7684\u5e94\u7528\u90fd\u9002\u5408docker\u3002 \u542f\u52a8\u5e76\u8fdb\u5165\u4e00\u4e2a\u5bb9\u5668 \u00b6 \u90a3\u4e48\u5982\u4f55\u542f\u52a8\u5df2\u7ecf\u5173\u95ed\u7684\u5bb9\u5668\u5462\uff1f \u65b9\u6cd5\u4e00 docker start docker_name \u6bd4\u5982\uff08\u8fd9\u6837\u5c31\u4e00\u76f4\u8dd1\u8d77\u6765\u4e86\uff09\uff1a [root@maxiaoyu ~]# docker start myfirstdocker myfirstdocker \u65b9\u6cd5\u4e8c [root@maxiaoyu ~]# docker attach myfirstdocker [root@2ce82d7a275e /]# # \u8fd9\u6837\u5c31\u662f\u76f4\u63a5\u8fdb\u5230\u5bb9\u5668\u91cc\u9762\u53bb\u4e86\uff0c\u4e0d\u8fc7exit\u4ee5\u540e\u5bb9\u5668\u8fd8\u662f\u4f1a\u505c\u6b62\uff0c\u56e0\u6b64\u4e00\u822c\u4e0d\u4f1a\u53bb\u8fd9\u4e48\u64cd\u4f5c\u7684 # \u800c\u4e14\u591a\u4eba\u540c\u65f6\u8fdb\u5165\u5230\u8fd9\u4e2a\u5bb9\u5668\u8fd9\u4e2a\u547d\u4ee4\u663e\u793a\u662f\u540c\u6b65\u7684\u3002 \u65b9\u6cd5\u4e09 # \u751f\u4ea7\u4e2d\u5efa\u8bae\u4f7f\u7528\u7684\u65b9\u6cd5 [ root@maxiaoyu ~ ] # yum -y install util-linux [ root@maxiaoyu ~ ] # docker start mydocker mydocker # \u83b7\u53d6\u5f53\u524d\u7684docker\u7684pid\uff0c\u5982\u679c\u83b7\u53d6\u5230\u7684pid=0\uff0c\u8bf4\u660e\u4f60\u8fd9\u4e2a\u5bb9\u5668\u6ca1\u8d77\u6765\uff0c\u540e\u9762\u53ef\u4ee5\u63a5\u5bb9\u5668id\u4e5f\u53ef\u4ee5\u63a5\u5bb9\u5668\u540d\u79f0\u3002 [ root@maxiaoyu ~ ] # docker inspect -f \"{{ .State.Pid }}\" mydocker 13500 [ root@maxiaoyu ~ ] # nsenter -t 13500 -m -u -i -n -p # \u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u8fdb\u5165\u5bb9\u5668\uff0c\u5373\u4f7f\u9000\u51fa\u7684\u8bdd\u4ecd\u7136\u53ef\u4ee5\u4fdd\u8bc1\u5bb9\u5668\u662f\u5f00\u542f\u7684\uff0c\u8fdb\u7a0b\u5e76\u4e0d\u4f1a\u7ed3\u675f\uff0cdocker ps\u80fd\u770b\u5230 [ root@1284da16efeb / ] # exit logout # \u90a3\u4e48\u4e3a\u4ec0\u4e48\u5373\u4f7fexit\u51fa\u53bb\u4e5f\u4e0d\u4f1a\u9000\u51fa\u5bb9\u5668\u5462\uff1f [ root@1284da16efeb / ] # ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0 .0 0 .0 11764 1676 ? Ss+ 10 :01 0 :00 /bin/bash root 26 0 .0 0 .1 15192 1996 ? S 10 :05 0 :00 -bash root 39 0 .0 0 .0 50868 1816 ? R+ 10 :05 0 :00 ps aux # \u4e3b\u8981\u539f\u56e0\u662f\u56e0\u4e3a\u591a\u4e86\u4e00\u4e2a-bash\u7684\u8fdb\u7a0b\uff0c\u56e0\u6b64\u9000\u51fa\u5f53\u524d\u7684\u8fdb\u7a0b\u8fd9\u4e2adocker\u4e0d\u4f1a\u9000\u51fa\uff0c\u56e0\u4e3a\u4ecd\u7136\u8fd8\u6709\u4e00\u4e2a/bin/bash\u7684\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\uff0c\u56e0\u6b64\u6574\u4e2a\u5bb9\u5668\u662f\u5e76\u4e0d\u4f1a\u9000\u51fa\u7684\u3002 \u67e5\u770b\u4e00\u4e0bnsenter\u7684\u5e2e\u52a9\u4fe1\u606f\uff1a [root@maxiaoyu ~]# nsenter --help Usage: nsenter [options] <program> [<argument>...] Run a program with namespaces of other processes. Options: -t, --target <pid> target process to get namespaces from -m, --mount[=<file>] enter mount namespace -u, --uts[=<file>] enter UTS namespace (hostname etc) -i, --ipc[=<file>] enter System V IPC namespace -n, --net[=<file>] enter network namespace -p, --pid[=<file>] enter pid namespace -U, --user[=<file>] enter user namespace -S, --setuid <uid> set uid in entered namespace -G, --setgid <gid> set gid in entered namespace --preserve-credentials do not touch uids or gids -r, --root[=<dir>] set the root directory -w, --wd[=<dir>] set the working directory -F, --no-fork do not fork before exec'ing <program> -Z, --follow-context set SELinux context according to --target PID -h, --help display this help and exit -V, --version output version information and exit For more details see nsenter(1). \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u7b2c\u4e09\u79cd\u751f\u4ea7\u4e2d\u4f7f\u7528\u7684\u65b9\u6cd5\u53bb\u5199\u4e00\u4e2a\u5c0f\u811a\u672c\u7136\u540e\u901a\u8fc7\u6279\u91cf\u90e8\u7f72\u5206\u53d1\u540e\u4f7f\u7528\uff1a # $1\u53ef\u4ee5\u662f\u5bb9\u5668\u7684\u540d\u79f0\uff0c\u6216\u8005\u5bb9\u5668\u7684id [ root@maxiaoyu ~ ] # cat docker_in.sh #!/bin/bash # Use nsenter to access docker docker_in (){ NAME_ID = $1 PID = $( docker inspect -f \"{{ .State.Pid }}\" $NAME_ID ) nsenter -t $PID -m -u -i -n -p } docker_in $1 [ root@maxiaoyu ~ ] # chmod +x docker_in.sh \u65b9\u6cd5\u56db [ root@localhost ~ ] # docker exec mydocker uptime 06 :38:47 up 3 :51, 0 users, load average: 0 .00, 0 .03, 0 .05 \u6211\u4e0d\u60f3\u771f\u7684\u8fdb\u5165\u5bb9\u5668\uff0c\u4f46\u662f\u6211\u8fd8\u60f3\u8ba9\u8fd9\u4e2a\u5bb9\u5668\u7ed9\u6211\u6267\u884c\u4e2a\u547d\u4ee4\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528exec\uff0c\u8fd9\u4e2a\u662fexec\u547d\u4ee4\u7684\u7528\u9014\u672c\u610f\u3002\u4e0d\u8fc7\u901a\u8fc7exec\u4e5f\u80fd\u8fdb\u5165\u5bb9\u5668\uff0c\u6bd4\u5982\uff1a [ root@linux-node1 ~ ] # docker exec -it mydocker /bin/bash [ root@e95a62d6770f / ] # ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0 .0 0 .0 11768 1676 ? Ss+ 02 :28 0 :00 /bin/bash root 50 0 .5 0 .0 11768 1884 ? Ss 02 :41 0 :00 /bin/bash root 62 0 .0 0 .0 47440 1676 ? R+ 02 :41 0 :00 ps aux ###\u6709\u4e24\u4e2a/bin/bash\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5bb9\u5668\u6280\u672f\u9000\u51fa\u4e86\u4ecd\u7136\u8fd8\u5728\u8fd0\u884c\uff0c\u4ed6\u9000\u51fa\u7684\u662fpid=50\u7684/bin/bash [ root@e95a62d6770f / ] # exit exit [ root@linux-node1 ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES e95a62d6770f centos \"/bin/bash\" 33 minutes ago Up 12 minutes mydocker 78fc36ba1e5a centos \"/bin/echo xx\" 39 minutes ago Exited ( 0 ) 39 minutes ago compassionate_rosalind \u5220\u9664\u5bb9\u5668 \u00b6 docker rm \u5bb9\u5668id \u5982\u679c\u5bb9\u5668\u5728\u4f7f\u7528\u7684\u8bdd\u90a3\u662f\u4e0d\u5141\u8bb8\u4f60\u5220\u9664\u7684\uff0c\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u4f7f\u7528-f\u5f3a\u5236\u5e72\u6389\u3002\u5f53\u7136\u4e00\u822c\u4e0d\u5efa\u8bae\u8fd9\u4e48\u505a\u3002\u4e00\u822c\u6765\u8bb2\u90fd\u662f\u5148\u628a\u5bb9\u5668\u505c\u6389\u4ee5\u540e\u518d\u628a\u5bb9\u5668\u5e72\u6389\u3002 \u8fd0\u884c\u73a9\u610f\u540e\u76f4\u63a5\u5220\u9664\u5bb9\u5668 ## --rm\u53c2\u6570\u53ef\u4ee5\u4f7f\u5f97\u4e00\u4e2a\u5bb9\u5668\u8fd0\u884c\u5b8c\u6210\u4ee5\u540e\u5c31\u76f4\u63a5\u5220\u9664\u4e86\u3002\u4e0b\u9762\u7684\u5185\u5bb9\u6267\u884c\u5b8c\u6210\u4ee5\u540e\u518ddocker ps\u5c31\u770b\u4e0d\u5230\u4e86 [ root@linux-node1 ~ ] # docker run --rm centos /bin/echo \"hello lamber\" hello lamber \u505c\u6b62\u5bb9\u5668 \u00b6 docker stop \u5bb9\u5668ID","title":"01-Docker\u4ecb\u7ecd"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker","text":"Docker\u662fDocker.Inc\u516c\u53f8\u5f00\u6e90\u7684\u4e00\u4e2a\u57fa\u4e8eLXC\u6280\u672f\u4e4b\u4e0a\u6784\u5efa\u7684Container\u5bb9\u5668\u5f15\u64ce\uff0c\u6e90\u4ee3\u7801\u6258\u7ba1\u5728github\u4e0a\uff0c\u57fa\u4e8eGo\u8bed\u8a00\u5e76\u9075\u5faaApache2.0\u534f\u8bae\u5f00\u6e90\u3002 Docker\u662f\u901a\u8fc7\u5185\u6838\u865a\u62df\u5316\u6280\u672f\uff08namespaces\u4ee5\u53cacgroups\u7b49\uff09\u6765\u63d0\u4f9b\u5bb9\u5668\u7684\u8d44\u6e90\u9694\u79bb\u4e0e\u5b89\u5168\u4fdd\u8bc1\u7b49\u3002\u7531\u4e8eDocker\u901a\u8fc7\u7cfb\u7edf\u5c42\u7684\u865a\u62df\u5316\u5b9e\u73b0\u9694\u79bb\uff0c\u6240\u4ee5Docker\u5bb9\u5668\u5728\u8fd0\u884c\u7684\u65f6\u5019\u4e0d\u9700\u8981\u7c7b\u4f3c\u865a\u62df\u673a\u989d\u5916\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f00\u9500\uff08\u7ecf\u9a8c\u6765\u770b\u4e00\u822c\u4e00\u4e2a\u5b8c\u6574\u7684\u7cfb\u7edf\u5927\u6982\u4f1a\u6d88\u8017\u4e00\u4e2a\u7269\u7406\u4e3b\u673a6%\u5de6\u53f3\u7684\u6027\u80fd\uff09\uff0c\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u3002 docker\u7684\u6838\u5fc3\u7406\u5ff5 \u6784\u5efa\uff08Build\uff09 \u8fd0\u8f93\uff08Ship\uff09 \u8fd0\u884c\uff08Run\uff09","title":"Docker"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_1","text":"","title":"Docker\u4ecb\u7ecd"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#vs","text":"\u865a\u62df\u673a\u662f\u5b8c\u6574\u7684\u8d44\u6e90\u9694\u79bb\u3002\u5bb9\u5668\u662f\u9694\u79bb\u4e0d\u662f\u865a\u62df\uff0c\u5b83\u4e0d\u9700\u8981\u865a\u62df\u51fa\u6765\u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u3002","title":"\u5bb9\u5668VS\u865a\u62df\u5316"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_2","text":"\u7b80\u5316\u914d\u7f6e \u4ee3\u7801\u6d41\u6c34\u7ebf\u7684\u7ba1\u7406\uff0c\u8ba9\u5f00\u53d1\uff0c\u6d4b\u8bd5\u751f\u4ea7\u90fd\u8dd1\u5728\u540c\u6837\u4e00\u4e2a\u73af\u5883\uff0c\u4fdd\u8bc1\u5f00\u53d1\u73af\u5883\u7684\u4e00\u81f4\u6027\u3002 \u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u5e94\u7528\u7684\u9694\u79bb\uff08\u865a\u62df\u673a\u4e5f\u53ef\u4ee5\u505a\u5230\uff09 \u6574\u5408\u670d\u52a1\u5668\uff0c\u901a\u8fc7docker\u7684\u9694\u79bb\u80fd\u529b\u6574\u5408\u591a\u4e2a\u670d\u52a1\u5668\u964d\u4f4e\u6210\u672c\u3002 \u8c03\u8bd5\u80fd\u529b \u591a\u79df\u6237\u73af\u5883 \u5feb\u901f\u90e8\u7f72","title":"Docker\u53ef\u4ee5\u505a\u4ec0\u4e48"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_3","text":"\u9762\u5411\u4ea7\u54c1\uff1a\u4ea7\u54c1\u4ea4\u4ed8 \u9762\u5411\u5f00\u53d1\uff1a\u7b80\u5316\u73af\u5883\u914d\u7f6e \u9762\u5411\u6d4b\u8bd5\uff1a\u591a\u7248\u672c\u6d4b\u8bd5 \u9762\u5411\u8fd0\u7ef4\uff1a\u73af\u5883\u4e00\u81f4\u6027\uff0c\u53ef\u4ee5\u73af\u5883\u548c\u4ee3\u7801\u4e00\u8d77\u53d1\u5e03\uff0c\u56de\u6eda\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u505a\u5230\u4e00\u8d77\u56de\u6eda\u3002 \u9762\u5411\u67b6\u6784\uff1a\u81ea\u52a8\u5316\u6269\u5bb9\uff08\u5fae\u670d\u52a1\uff09","title":"Docker\u6539\u53d8\u4e86\u4ec0\u4e48\uff1f"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_4","text":"\u6700\u65b0\u7684\u5b89\u88c5\u4fe1\u606f\u8bf7\u4ee5\u5b98\u65b9\u6587\u6863\u7684\u5b89\u88c5\u4fe1\u606f\u4e3a\u51c6\uff0c \u5b98\u65b9Doc\u6587\u6863\u5730\u5740 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b89\u88c5\u6b65\u9aa4\uff1a yum install -y yum-utils device-mapper-persistent-data lvm2 yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo yum install docker-ce systemctl start docker \u67e5\u770bdocker\u542f\u52a8\u72b6\u6001\uff1a [ root@localhost ~ ] # ps -ef | grep docker root 31551 1 2 00 :43 ? 00 :00:00 /usr/bin/dockerd root 31555 31551 0 00 :43 ? 00 :00:00 docker-containerd --config /var/run/docker/containerd/containerd.toml root 31667 31082 0 00 :43 pts/0 00 :00:00 grep --color = auto docker \u62c9\u53d6docker\u955c\u50cf\uff0c\u8fd9\u91cc\u5982\u679c\u76f4\u63a5\u62c9\u7684\u8bdd\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7f51\u901f\u6162\u5bfc\u81f4\u62c9\u4e0d\u4e0b\u6765\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e0b\u56fd\u5185\u7684docker\u955c\u50cf\u6e90","title":"Docker\u7684\u5b89\u88c5"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_5","text":"\u56fd\u5185\u7684Docker\u955c\u50cf\u6e90\u6709\u5f88\u591a\u53ef\u4ee5\u9009\u62e9\uff0c \u53c2\u8003\u539f\u6587 DaoCloud - Docker\u52a0\u901f\u5668 \u963f\u91cc\u4e91 - \u5f00\u53d1\u8005\u5e73\u53f0 \u5fae\u955c\u50cf - \u5e0c\u4e91cSphere \u955c\u50cf\u5e7f\u573a - \u65f6\u901f\u4e91 \u7075\u96c0\u4e91 \u7f51\u6613\u8702\u5de2 \u8fd9\u91cc\u4ee5\u963f\u91cc\u4e91\u7684Docker\u52a0\u901f\u5668\u4e3a\u4f8b\uff0c\u6ce8\u518c\u5e76\u767b\u9646 \u963f\u91cc\u4e91 - \u5f00\u53d1\u8005\u5e73\u53f0 \u4e4b\u540e\uff0c\u5728\u9996\u9875\u70b9\u51fb\u201c\u521b\u5efa\u6211\u7684\u5bb9\u5668\u955c\u50cf\u201d\uff0c\u7136\u540e\u5c31\u4f1a\u6765\u5230\u963f\u91cc\u4e91\u7684\u670d\u52a1\u9762\u677f\u3002\u70b9\u51fb\u52a0\u901f\u5668\u6807\u7b7e\u3002\u6839\u636e\u63d0\u793a\u8f93\u5165Docker\u767b\u5f55\u65f6\u9700\u8981\u4f7f\u7528\u7684\u5bc6\u7801\uff08\u540e\u671f\u53ef\u66f4\u6539\uff09\uff0c\u7528\u6237\u540d\u5c31\u662f\u767b\u5f55\u963f\u91cc\u4e91\u7684\u7528\u6237\u540d\u3002\u5728\u51fa\u73b0\u7684\u9875\u9762\u4e2d\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e13\u5c5e\u7684\u955c\u50cf\u52a0\u901f\u5730\u5740\uff0c\u7c7b\u4f3c\u4e8e\u201c https://1234abcd.mirror.aliyuncs.com \u201d\u3002\u6839\u636e\u9875\u9762\u4e2d\u7684\u201c\u64cd\u4f5c\u6587\u6863\u201d\u4fe1\u606f\uff0c\u914d\u7f6e\u81ea\u5df1\u7684Docker\u52a0\u901f\u5668\u3002 \u6216\u8005\uff0c\u767b\u5f55 \u963f\u91cc\u4e91 - \u5bb9\u5668Hub\u670d\u52a1\u63a7\u5236\u53f0 \u4e4b\u540e\uff0c\u70b9\u51fb\u52a0\u901f\u5668\u6807\u7b7e\uff0c\u4e5f\u4f1a\u51fa\u73b0\u76f8\u5e94\u4fe1\u606f\u3002 \u5176\u4ed6\u56fd\u5185Docker\u955c\u50cf\u7684\u914d\u7f6e\u65b9\u6cd5 \u56fd\u5185\u5176\u4ed6Docker\u52a0\u901f\u5668\u914d\u7f6e\u65b9\u6cd5\u548c\u963f\u91cc\u4e91\u7684\u5dee\u4e0d\u591a\uff1a \u6ce8\u518c\u8d26\u53f7\uff0c\u83b7\u53d6\u4e13\u5c5e\u7684\u955c\u50cf\u52a0\u901f\u5730\u5740 \u6839\u636e\u63d0\u793a\u548c\u7cfb\u7edf\u7c7b\u578b\uff0c\u5347\u7ea7\uff0c\u5e76\u914d\u7f6eDocker\uff0c\u7136\u540e\u91cd\u542f\u3002 \u9a8c\u8bc1\u64cd\u4f5c\u7ed3\u679c \u624b\u52a8\u914d\u7f6eDocker\u52a0\u901f\u5668 \u914d\u7f6eDocker\u52a0\u901f\u5668\u7684\u672c\u8d28\u5c31\u662f\u628aDocker\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u955c\u50cf\u4e0b\u8f7d\u5730\u5740\u7531\u9ed8\u8ba4\u7684Docker Hub\u5730\u5740\u53d8\u4e3a\u56fd\u5185\u955c\u50cf\u7684\u52a0\u901f\u5730\u5740\u3002 /lib/systemd/system/docker.service /etc/systemd/system/docker.service # \u6bd4\u5982centos7\u4e2d \u5c06 OPTIONS = --registry-mirror = http://abcd1234.m.daocloud.io\u52a0\u5165\u5230docker\u7684\u914d\u7f6e\u6587\u4ef6/etc/sysconfig/docker\u4e2d\uff0c\u7136\u540e\u91cd\u542fDocker","title":"\u914d\u7f6e\u56fd\u5185docker\u955c\u50cf\u6e90"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_6","text":"","title":"Docker\u955c\u50cf"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_1","text":"# docker\u6709\u4e00\u4e2adocker hub\u4ed3\u5e93\uff0c\u8fd9\u4e2a\u5176\u5b9e\u548cgithub\u5f88\u76f8\u4f3c\u3002\u4ed3\u5e93\u4e2d\u5b58\u4e86\u5f88\u591a\u5df2\u7ecf\u6784\u5efa\u597d\u7684\u955c\u50cf\u3002 # \u5927\u591a\u6570\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u4e00\u4e2a\u73b0\u6210\u7684\u955c\u50cf\u800c\u4e0d\u9700\u8981\u6211\u4eec\u81ea\u5df1\u6784\u5efa COMAND: $ sudo docker search TERM OPTIONS: --automated = false \u662f\u5426\u4ec5\u663e\u793a\u81ea\u52a8\u521b\u5efa\u7684\u955c\u50cf --no-trunc = false \u662f\u5426\u622a\u65ad\u8f93\u51fa -s, --stars = 0 \u4ec5\u663e\u793a\u81f3\u5c11\u6709x\u9897\u661f\u7684\u955c\u50cf \u793a\u4f8b: [ root@maxiaoyu ~ ] # docker search nginx INDEX NAME DESCRIPTION STARS OFFICIAL AUTOMATED docker.io docker.io/nginx Official build of Nginx. 7127 [ OK ] \u6211\u8fd9\u91cc\u622a\u53d6\u4e86\u641c\u7d22\u51fa\u7ed3\u679c\u7684\u7b2c\u4e00\u884c\uff0c\u5f53\u7136\u5982\u679c\u4f60\u5b9e\u9645\u641c\u7d22\u7684\u8bdd\u4f1a\u6709\u5f88\u591a\u884c\u7684\u5185\u5bb9\u7684\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5b98\u65b9\u7684\u4ee5\u53ca\u5404\u79cd\u81ea\u5236\u7684\u3002 NAME\uff1a\u955c\u50cf\u540d\u79f0 DESCRIPTION\uff1a\u4e5f\u5c31\u662f\u955c\u50cf\u7684\u63cf\u8ff0\uff0c STARS\u7c7b\u4f3c\u4e8egithub\u91cc\u9762\u7684stars\uff0c\u8868\u793a\u70b9\u8d5e\u548c\u70ed\u5ea6\u3002 OFFICIAL\uff1a\u6307docker\u6807\u51c6\u5e93, \u7531docker \u5b98\u65b9\u5efa\u7acb. \u7528\u6237\u5efa\u7acb\u7684image\u5219\u4f1a\u6709userid\u7684prefix. automated builds \uff1a\u5219\u662f\u901a\u8fc7\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u7f51\u7ad9\u7ed3\u5408docker hub\u63d0\u4f9b\u7684\u63a5\u53e3\u751f\u6210\u7684, \u4f8b\u5982github, bitbucket, \u4f60\u9700\u8981\u6ce8\u518cdocker hub, \u7136\u540e\u4f7f\u7528github\u6216bitbucket\u7684\u5728\u8d26\u6237\u94fe\u63a5\u5230docker hub, \u7136\u540e\u5c31\u53ef\u4ee5\u9009\u62e9\u5728github\u6216bitbucket\u91cc\u9762\u7684\u9879\u76ee\u81ea\u52a8build docker image, \u8fd9\u6837\u7684\u8bdd\u53ea\u8981\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u7f51\u7ad9\u7684\u9879\u76ee\u6709\u66f4\u65b0, \u5c31\u4f1a\u89e6\u53d1\u81ea\u52a8\u521b\u5efaimage.\u5bf9\u4e8e\u7684image\u5c5e\u4e8e\u4ec0\u4e48\u7248\u672c\uff0c\u4e0b\u9762\u7684\u201c[OK]\u201d\u5c31\u4f1a\u6253\u5728\u4ec0\u4e48\u5730\u65b9","title":"\u955c\u50cf\u641c\u7d22"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_2","text":"\u83b7\u53d6\u955c\u50cf\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u76f4\u63a5\u53bbpull\u6211\u4eec\u521a\u624d\u7528docker search\u641c\u7d22\u5230\u7684\u955c\u50cf\uff1a [ root@maxiaoyu ~ ] # docker pull docker.io/nginx Using default tag: latest Trying to pull repository docker.io/library/nginx ... latest: Pulling from docker.io/library/nginx bc95e04b23c0: Pull complete 110767c6efff: Pull complete f081e0c4df75: Pull complete Digest: sha256:004ac1d5e791e705f12a17c80d7bb1e8f7f01aa7dca7deee6e65a03465392072 [ root@maxiaoyu ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/nginx latest 1e5ab59102ce 2 weeks ago 108 .3 MB docker.io/centos latest 328edcd84f1b 12 weeks ago 192 .5 MB \u5bfc\u5165\u672c\u5730\u7684docker\u5305\uff1a docker load --input centos.tar \u6216\u8005 docker load < nginx.tar \u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7docker\u7684\u5bfc\u51fa\u529f\u80fd\u5c06\u6211\u4eecpull\u4e0b\u6765\u7684image\u5bfc\u51fa\u6210\u4e00\u4e2atar\u5305\uff0c\u751f\u6210\u7684tar\u5305\u4f1a\u4fdd\u5b58\u5728\u5f53\u524d\u7684\u76ee\u5f55\uff1a docker save -o centos.tar centos \u4f7f\u7528docker inspect\u53bb\u67e5\u770bimage\u7684\u5185\u5bb9\uff1a docker inspect docker.io/nginx:latest \u5217\u51fa\u5f53\u524d\u4e0b\u8f7d\u7684\u6240\u6709\u7684\u955c\u50cf\uff1a [ root@localhost ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE nginx latest ae513a47849c 10 days ago 109MB centos latest e934aafc2206 4 weeks ago 199MB \u5982\u679c\u6211\u4eec\u5728docker pull\u7684\u65f6\u5019\u4e0d\u52a0\u989d\u5916\u7684\u53c2\u6570\uff0c\u90a3\u4e48\u4e0b\u8f7d\u7684\u5c31\u662f\u6700\u65b0\u7684\uff0c\u53ef\u4ee5\u5728tag\u4e2d\u770b\u5230\u662flatest\u7684\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u7248\u672c\uff0c\u6bd4\u5982\uff1a # \u53c2\u8003\u793a\u4f8b docker pull centos:v1.0","title":"\u83b7\u53d6\u955c\u50cf"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_3","text":"docker rmi \u955c\u50cfID\uff0c\u6bd4\u5982\uff1a [ root@maxiaoyu ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/nginx latest 1e5ab59102ce 2 weeks ago 108 .3 MB docker.io/centos latest 328edcd84f1b 12 weeks ago 192 .5 MB [ root@maxiaoyu ~ ] # docker rmi 1e5ab59102ce Untagged: docker.io/nginx:latest Untagged: docker.io/nginx@sha256:004ac1d5e791e705f12a17c80d7bb1e8f7f01aa7dca7deee6e65a03465392072 Deleted: sha256:1e5ab59102ce46c277eda5ed77affaa4e3b06a59fe209fe0b05200606db3aa7a Deleted: sha256:182a54bd28aa918a440f7edd3066ea838825c3d6a08cc73858ba070dc4f27211 Deleted: sha256:a527b2a06e67cab4b15e0fd831882f9e6a6485c24f3c56f870ac550b81938771 Deleted: sha256:cec7521cdf36a6d4ad8f2e92e41e3ac1b6fa6e05be07fa53cc84a63503bc5700 \u5b9e\u9645\u4e0a\u662f\u6309\u7167image\u7684id\u53bb\u5220\u9664\u7684\uff0c\u5f53\u7136\u5982\u679c\u4f60\u7684image\u5c5e\u4e8e\u88ab\u5176\u4ed6\u5bb9\u5668\u5f15\u7528\u7684\u60c5\u51b5\u4e0b\u7684\u8bdd\u662f\u65e0\u6cd5\u5220\u9664\u7684\u3002\u4f1a\u6536\u5230\u5982\u4e0b\u7684\u62a5\u9519\u4fe1\u606f\uff1a [ root@maxiaoyu ~ ] # docker rmi 328edcd84f1b Error response from daemon: conflict: unable to delete 328edcd84f1b ( must be forced ) - image is being used by stopped container 1284da16efeb","title":"\u5220\u9664\u955c\u50cf"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_7","text":"","title":"Docker\u5bb9\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_4","text":"[ root@maxiaoyu ~ ] # docker run --name myfirstdocker -i -t centos /bin/bash [ root@2ce82d7a275e / ] # uname -a Linux 2ce82d7a275e 3 .10.0-514.26.2.el7.x86_64 #1 SMP Tue Jul 4 15:04:05 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux [ root@2ce82d7a275e / ] # ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0 .0 0 .1 11764 1888 ? Ss 09 :40 0 :00 /bin/bash root 14 0 .0 0 .0 47436 1676 ? R+ 09 :44 0 :00 ps aux \u8fd9\u6837\u5c31\u65b0\u5efa\u4e86\u4e00\u4e2a\u5bb9\u5668\uff0c\u6211\u4eec\u4e5f\u968f\u4e4b\u4f1a\u8fdb\u5165\u5230\u5bb9\u5668\u7684\u754c\u9762\u3002docker\u5bb9\u5668\u7684\u542f\u52a8\uff0c\u5373\u4f7f\u6ca1\u6709\u628a\u955c\u50cfpull\u4e0b\u6765\uff0c\u5728\u6267\u884c\u5982\u4e0a\u7684\u547d\u4ee4\u7684\u65f6\u5019\u4f9d\u7136\u53ef\u4ee5\u6267\u884c\uff0c\u56e0\u4e3adocker\u53d1\u73b0\u4f60\u6ca1\u6709\u8fd9\u4e2a\u955c\u50cf\u7684\u65f6\u5019\u4f1a\u5e2e\u4f60\u628a\u955c\u50cfpull\u4e0b\u6765\u3002\u5bb9\u5668\u7684\u4e3b\u673a\u540d\u5c31\u662f\u5bb9\u5668\u7684container id\u3002\u63a5\u4e0b\u6765\u770b\u770b\u5982\u4e0a\u7684\u51e0\u4e2a\u53c2\u6570\u90fd\u4ee3\u8868\u4ec0\u4e48\u610f\u601d\uff1a --name:\u6307\u5b9a\u8fd9\u4e2a\u751f\u6210\u7684\u5bb9\u5668\u7684\u540d\u5b57\uff0c\u5f53\u7136\u5982\u679c\u4e0d\u6307\u5b9a\u7684\u8bddname\u4e5f\u4f1a\u81ea\u52a8\u751f\u6210\uff0c\u6211\u4eec\u6307\u5b9a\u540d\u5b57\u53ea\u4e0d\u8fc7\u662f\u4e3a\u4e86\u66f4\u65b9\u4fbf\u7684\u53bb\u7ba1\u7406\u6211\u4eec\u7684\u5bb9\u5668\u3002 -i\uff1a\u5141\u8bb8\u6807\u51c6\u8f93\u5165 \uff0c\u5373\u786e\u4fdd\u5bb9\u5668\u7684STDIN\u662f\u5f00\u542f\u7684\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u8fd0\u884c\u547d\u4ee4\u4ee5\u540e\u6211\u4eec\u8fdb\u5165\u5230\u4e86\u5bb9\u5668\u4e2d\uff0c\u8fdb\u7a0b\u4e3aPID\u7684\u662f/bin/bash\uff0c\u4e5f\u5c31\u662f\u521a\u624d\u6211\u4eec\u6307\u5b9a\u8981\u8fd0\u884c\u7684\u547d\u4ee4\u3002\u56e0\u6b64docker\u5176\u5b9e\u662f\u4e3a\u8fdb\u7a0b\u6267\u884c\u9694\u79bb\u4f5c\u7528\u7684\uff0c\u865a\u62df\u673a\u662f\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u505a\u9694\u79bb\u7684\u3002 -t\uff1a\u5f00\u542f\u4e00\u4e2atty\u4f2a\u7ec8\u7aef\u3002 -d\uff1a\u5982\u679c\u9700\u8981\u5bb9\u5668\u5728\u540e\u53f0\u8fd0\u884c\u7684\u8bdd\uff0c\u53ef\u4ee5\u52a0\u4e0a-d\u53c2\u6570\u3002\u8303\u56f4\u503c\u4e3a\u5bb9\u5668\u7684id \u4ee5\u4e0a\u64cd\u4f5c\u5176\u5b9e\u662f\u7ecf\u5386\u4e86\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b\uff1a \u6267\u884c\u4e0a\u9762\u64cd\u4f5c\u9996\u5148\u4f1a\u5728\u7cfb\u7edf\u672c\u5730\u53bb\u627e\u6709\u6ca1\u6709\u5bf9\u5e94\u7684\u8fd9\u6837\u4e00\u4e2aimage\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\u90a3\u4e48\u5c31\u4f1a\u53bbDocker Hub Registry\u53bb\u627e\uff0c\u4e00\u65e6\u627e\u5230\u4ee5\u540e\u5c31\u56de\u53bb\u4e0b\u8f7d\u7136\u540e\u4fdd\u5b58\u5230\u672c\u5730\u5bbf\u4e3b\u673a\u5668\u3002 Docker\u5229\u7528\u8fd9\u4e2aimage\u521b\u5efa\u4e86\u4e00\u4e2a\u5bb9\u5668\uff0c\u8fd9\u4e2a\u5bb9\u5668\u62e5\u6709\u81ea\u5df1\u7684\u7f51\u7edc\uff0cip\uff0c\u4ee5\u53ca\u6865\u63a5\u5916\u90e8\u7f51\u7edc\u7684\u63a5\u53e3\u3002 \u6211\u4eec\u544a\u8bc9\u8fd9\u4e2a\u5bb9\u5668\u8981\u53bb\u6267\u884c\u4ec0\u4e48\u547d\u4ee4\uff08/bin/bash\uff09\uff0c\u5f53\u7136\u8fd9\u4e2a\u547d\u4ee4\u662f\u53ef\u4ee5\u5728\u5bb9\u5668\u4e2d\u6307\u5b9a\u7684\uff0c\u6307\u5b9a\u5bb9\u5668\u8d77\u6765\u7684\u65f6\u5019\u81ea\u52a8\u6267\u884c\u67d0\u4e2a\u547d\u4ee4\uff0c\u90a3\u8fd9\u91cc\u5c31\u53ef\u4ee5\u4e0d\u5199\u4e86\u3002 \u5f53\u524d\u6211\u4eec\u662f\u5728\u5bb9\u5668\u7684\u5185\u90e8\uff0c\u901a\u8fc7 ps aux \u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\uff0cpid\u7684\u5927\u6811\u6839\u5e76\u4e0d\u662finit\uff08centos7\u7684\u6811\u6839\u5e76\u4e0d\u662finit\uff09\uff0c\u800c\u662f\u6211\u4eec\u8fd0\u884c\u7684/bin/bash\uff0c\u5982\u679c\u6b64\u65f6\u6211\u4eec\u4f7f\u7528exit\u9000\u51fa\u5bb9\u5668\u7684\u8bdd\uff0c\u90a3\u4e48\u6b64\u65f6\u7684\u5bb9\u5668\u5c31\u4f1a\u88ab\u5173\u6389\uff0c\u5b83\u5c31\u5b8c\u6210\u4e86\u5b83\u7684\u4f7f\u547d\u3002 [ root@2ce82d7a275e / ] # exit exit [ root@maxiaoyu ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 2ce82d7a275e centos \"/bin/bash\" 10 minutes ago Exited ( 0 ) 5 seconds ago myfirstdocker Docker\u5176\u5b9e\u662f\u5355\u8fdb\u7a0b\u7684\uff0c\u4ed6\u9700\u8981\u4e00\u4e2a\u8fdb\u7a0b\u5728\u524d\u53f0\u8dd1\u7740\uff0c\u56e0\u6b64\u5982\u679c\u8fd9\u4e2a\u7a0b\u5e8f\u6267\u884c\u5b8c\u4e86\uff0c\u90a3\u4e48\u6574\u4e2a\u5bb9\u5668\u4e5f\u5c31\u9000\u51fa\u4e86\uff0c\u5c31\u50cf\u6211\u4eec\u521a\u624d\u6267\u884c/bin/bash\u540e\u8fdb\u5165\u5230\u5bb9\u5668\uff0c\u5f53exit\u9000\u51fa\u7684\u65f6\u5019\u8fd9\u4e2a\u8fdb\u7a0b\u7ed3\u675f\u4ee5\u540e\u6574\u4e2a\u5bb9\u5668\u4e5f\u5c31\u8ddf\u7740\u4e00\u8d77\u9000\u51fa\u4e86\u3002\u6240\u4ee5\u8bf4\u4e0d\u662f\u6240\u6709\u7684\u5e94\u7528\u90fd\u9002\u5408docker\u3002","title":"\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_5","text":"\u90a3\u4e48\u5982\u4f55\u542f\u52a8\u5df2\u7ecf\u5173\u95ed\u7684\u5bb9\u5668\u5462\uff1f \u65b9\u6cd5\u4e00 docker start docker_name \u6bd4\u5982\uff08\u8fd9\u6837\u5c31\u4e00\u76f4\u8dd1\u8d77\u6765\u4e86\uff09\uff1a [root@maxiaoyu ~]# docker start myfirstdocker myfirstdocker \u65b9\u6cd5\u4e8c [root@maxiaoyu ~]# docker attach myfirstdocker [root@2ce82d7a275e /]# # \u8fd9\u6837\u5c31\u662f\u76f4\u63a5\u8fdb\u5230\u5bb9\u5668\u91cc\u9762\u53bb\u4e86\uff0c\u4e0d\u8fc7exit\u4ee5\u540e\u5bb9\u5668\u8fd8\u662f\u4f1a\u505c\u6b62\uff0c\u56e0\u6b64\u4e00\u822c\u4e0d\u4f1a\u53bb\u8fd9\u4e48\u64cd\u4f5c\u7684 # \u800c\u4e14\u591a\u4eba\u540c\u65f6\u8fdb\u5165\u5230\u8fd9\u4e2a\u5bb9\u5668\u8fd9\u4e2a\u547d\u4ee4\u663e\u793a\u662f\u540c\u6b65\u7684\u3002 \u65b9\u6cd5\u4e09 # \u751f\u4ea7\u4e2d\u5efa\u8bae\u4f7f\u7528\u7684\u65b9\u6cd5 [ root@maxiaoyu ~ ] # yum -y install util-linux [ root@maxiaoyu ~ ] # docker start mydocker mydocker # \u83b7\u53d6\u5f53\u524d\u7684docker\u7684pid\uff0c\u5982\u679c\u83b7\u53d6\u5230\u7684pid=0\uff0c\u8bf4\u660e\u4f60\u8fd9\u4e2a\u5bb9\u5668\u6ca1\u8d77\u6765\uff0c\u540e\u9762\u53ef\u4ee5\u63a5\u5bb9\u5668id\u4e5f\u53ef\u4ee5\u63a5\u5bb9\u5668\u540d\u79f0\u3002 [ root@maxiaoyu ~ ] # docker inspect -f \"{{ .State.Pid }}\" mydocker 13500 [ root@maxiaoyu ~ ] # nsenter -t 13500 -m -u -i -n -p # \u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u8fdb\u5165\u5bb9\u5668\uff0c\u5373\u4f7f\u9000\u51fa\u7684\u8bdd\u4ecd\u7136\u53ef\u4ee5\u4fdd\u8bc1\u5bb9\u5668\u662f\u5f00\u542f\u7684\uff0c\u8fdb\u7a0b\u5e76\u4e0d\u4f1a\u7ed3\u675f\uff0cdocker ps\u80fd\u770b\u5230 [ root@1284da16efeb / ] # exit logout # \u90a3\u4e48\u4e3a\u4ec0\u4e48\u5373\u4f7fexit\u51fa\u53bb\u4e5f\u4e0d\u4f1a\u9000\u51fa\u5bb9\u5668\u5462\uff1f [ root@1284da16efeb / ] # ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0 .0 0 .0 11764 1676 ? Ss+ 10 :01 0 :00 /bin/bash root 26 0 .0 0 .1 15192 1996 ? S 10 :05 0 :00 -bash root 39 0 .0 0 .0 50868 1816 ? R+ 10 :05 0 :00 ps aux # \u4e3b\u8981\u539f\u56e0\u662f\u56e0\u4e3a\u591a\u4e86\u4e00\u4e2a-bash\u7684\u8fdb\u7a0b\uff0c\u56e0\u6b64\u9000\u51fa\u5f53\u524d\u7684\u8fdb\u7a0b\u8fd9\u4e2adocker\u4e0d\u4f1a\u9000\u51fa\uff0c\u56e0\u4e3a\u4ecd\u7136\u8fd8\u6709\u4e00\u4e2a/bin/bash\u7684\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\uff0c\u56e0\u6b64\u6574\u4e2a\u5bb9\u5668\u662f\u5e76\u4e0d\u4f1a\u9000\u51fa\u7684\u3002 \u67e5\u770b\u4e00\u4e0bnsenter\u7684\u5e2e\u52a9\u4fe1\u606f\uff1a [root@maxiaoyu ~]# nsenter --help Usage: nsenter [options] <program> [<argument>...] Run a program with namespaces of other processes. Options: -t, --target <pid> target process to get namespaces from -m, --mount[=<file>] enter mount namespace -u, --uts[=<file>] enter UTS namespace (hostname etc) -i, --ipc[=<file>] enter System V IPC namespace -n, --net[=<file>] enter network namespace -p, --pid[=<file>] enter pid namespace -U, --user[=<file>] enter user namespace -S, --setuid <uid> set uid in entered namespace -G, --setgid <gid> set gid in entered namespace --preserve-credentials do not touch uids or gids -r, --root[=<dir>] set the root directory -w, --wd[=<dir>] set the working directory -F, --no-fork do not fork before exec'ing <program> -Z, --follow-context set SELinux context according to --target PID -h, --help display this help and exit -V, --version output version information and exit For more details see nsenter(1). \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u7b2c\u4e09\u79cd\u751f\u4ea7\u4e2d\u4f7f\u7528\u7684\u65b9\u6cd5\u53bb\u5199\u4e00\u4e2a\u5c0f\u811a\u672c\u7136\u540e\u901a\u8fc7\u6279\u91cf\u90e8\u7f72\u5206\u53d1\u540e\u4f7f\u7528\uff1a # $1\u53ef\u4ee5\u662f\u5bb9\u5668\u7684\u540d\u79f0\uff0c\u6216\u8005\u5bb9\u5668\u7684id [ root@maxiaoyu ~ ] # cat docker_in.sh #!/bin/bash # Use nsenter to access docker docker_in (){ NAME_ID = $1 PID = $( docker inspect -f \"{{ .State.Pid }}\" $NAME_ID ) nsenter -t $PID -m -u -i -n -p } docker_in $1 [ root@maxiaoyu ~ ] # chmod +x docker_in.sh \u65b9\u6cd5\u56db [ root@localhost ~ ] # docker exec mydocker uptime 06 :38:47 up 3 :51, 0 users, load average: 0 .00, 0 .03, 0 .05 \u6211\u4e0d\u60f3\u771f\u7684\u8fdb\u5165\u5bb9\u5668\uff0c\u4f46\u662f\u6211\u8fd8\u60f3\u8ba9\u8fd9\u4e2a\u5bb9\u5668\u7ed9\u6211\u6267\u884c\u4e2a\u547d\u4ee4\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528exec\uff0c\u8fd9\u4e2a\u662fexec\u547d\u4ee4\u7684\u7528\u9014\u672c\u610f\u3002\u4e0d\u8fc7\u901a\u8fc7exec\u4e5f\u80fd\u8fdb\u5165\u5bb9\u5668\uff0c\u6bd4\u5982\uff1a [ root@linux-node1 ~ ] # docker exec -it mydocker /bin/bash [ root@e95a62d6770f / ] # ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0 .0 0 .0 11768 1676 ? Ss+ 02 :28 0 :00 /bin/bash root 50 0 .5 0 .0 11768 1884 ? Ss 02 :41 0 :00 /bin/bash root 62 0 .0 0 .0 47440 1676 ? R+ 02 :41 0 :00 ps aux ###\u6709\u4e24\u4e2a/bin/bash\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5bb9\u5668\u6280\u672f\u9000\u51fa\u4e86\u4ecd\u7136\u8fd8\u5728\u8fd0\u884c\uff0c\u4ed6\u9000\u51fa\u7684\u662fpid=50\u7684/bin/bash [ root@e95a62d6770f / ] # exit exit [ root@linux-node1 ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES e95a62d6770f centos \"/bin/bash\" 33 minutes ago Up 12 minutes mydocker 78fc36ba1e5a centos \"/bin/echo xx\" 39 minutes ago Exited ( 0 ) 39 minutes ago compassionate_rosalind","title":"\u542f\u52a8\u5e76\u8fdb\u5165\u4e00\u4e2a\u5bb9\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_6","text":"docker rm \u5bb9\u5668id \u5982\u679c\u5bb9\u5668\u5728\u4f7f\u7528\u7684\u8bdd\u90a3\u662f\u4e0d\u5141\u8bb8\u4f60\u5220\u9664\u7684\uff0c\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u4f7f\u7528-f\u5f3a\u5236\u5e72\u6389\u3002\u5f53\u7136\u4e00\u822c\u4e0d\u5efa\u8bae\u8fd9\u4e48\u505a\u3002\u4e00\u822c\u6765\u8bb2\u90fd\u662f\u5148\u628a\u5bb9\u5668\u505c\u6389\u4ee5\u540e\u518d\u628a\u5bb9\u5668\u5e72\u6389\u3002 \u8fd0\u884c\u73a9\u610f\u540e\u76f4\u63a5\u5220\u9664\u5bb9\u5668 ## --rm\u53c2\u6570\u53ef\u4ee5\u4f7f\u5f97\u4e00\u4e2a\u5bb9\u5668\u8fd0\u884c\u5b8c\u6210\u4ee5\u540e\u5c31\u76f4\u63a5\u5220\u9664\u4e86\u3002\u4e0b\u9762\u7684\u5185\u5bb9\u6267\u884c\u5b8c\u6210\u4ee5\u540e\u518ddocker ps\u5c31\u770b\u4e0d\u5230\u4e86 [ root@linux-node1 ~ ] # docker run --rm centos /bin/echo \"hello lamber\" hello lamber","title":"\u5220\u9664\u5bb9\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_7","text":"docker stop \u5bb9\u5668ID","title":"\u505c\u6b62\u5bb9\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/","text":"Docker\u6570\u636e\u5b58\u50a8&\u7f51\u7edc\u8bbf\u95ee \u00b6 Docker\u7684\u7f51\u7edc\u5e94\u7528 \u00b6 \u901a\u8fc7\u7aef\u53e3\u6620\u5c04\u7684\u65b9\u5f0f\u8bbf\u95eeDocker \u00b6 \u6211\u4eec\u5b89\u88c5\u4e86docker\u540e\u4f1a\u591a\u4e86\u4e00\u4e2a\u6865\u63a5\u7f51\u5361docker0\uff1a [ root@localhost ~ ] # ifconfig docker0 docker0: flags = 4163 <UP,BROADCAST,RUNNING,MULTICAST> mtu 1500 inet 172 .17.0.1 netmask 255 .255.0.0 broadcast 172 .17.255.255 inet6 fe80::42:baff:fea1:dfa8 prefixlen 64 scopeid 0x20<link> ether 02 :42:ba:a1:df:a8 txqueuelen 0 ( Ethernet ) RX packets 0 bytes 0 ( 0 .0 B ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 10 bytes 1876 ( 1 .8 KiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 [ root@localhost ~ ] # yum install bridge-utils [ root@localhost ~ ] # brctl show bridge name bridge id STP enabled interfaces docker0 8000 .0242baa1dfa8 no veth92ad03f \u90a3\u4e48\u73b0\u5728\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\u5e76\u6620\u5c04\u7aef\u53e3\uff0c\u7aef\u53e3\u7684\u6620\u5c04\u5206\u4e3a\u968f\u673a\u6620\u5c04\u548c\u6307\u5b9a\u6620\u5c04\uff1a \u968f\u673a\u6620\u5c04 docker run -P \u6307\u5b9a\u6620\u5c04 -p hostPort:containerPort # \u6620\u5c04\u6240\u6709ip\u7684\u6307\u5b9a\u7aef\u53e3\u5230\u5bb9\u5668ip\u7684\u6307\u5b9a\u7aef\u53e3 -p ip:hostPort:containerPort # \u5982\u679c\u7269\u7406\u673a\u6709\u591a\u4e2aip\u5730\u5740\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2aip -p ip::containerPort # \u6620\u5c04\u5230\u6307\u5b9a\u5730\u5740\u7684\u4efb\u610f\u7aef\u53e3 -p hostPort:containerPort:udp # \u9ed8\u8ba4\u662ftcp\u7684\uff0c\u53ef\u4ee5\u6307\u5b9a\u534f\u8bae\u4e3audp -p 80:81 -p 443:443 ##\u540c\u65f6\u6620\u5c04\u591a\u4e2a\u7aef\u53e3 \u968f\u673a\u7aef\u53e3\u6620\u5c04 \u00b6 \u7531\u4e8e\u4e4b\u524d\u4e0b\u8f7d\u4e86\u4e00\u4e2anginx\u7684\u955c\u50cf\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u5148\u6765\u542f\u7528\u4e00\u4e2anginx\u5bb9\u5668\uff1a [ root@localhost ~ ] # docker run -d -P --name nginx-test1 nginx WARNING: IPv4 forwarding is disabled. Networking will not work. 0b3299999a96eb216b05f2a5c68f32a2775751a49d240034a2f89305bb7bd236 # \u53ef\u4ee5\u770b\u5230\u5bb9\u5668\u542f\u52a8\uff0c\u8fd4\u56de\u4e86\u5bb9\u5668\u7684id\u7684\uff0c\u4f46\u662f\u62a5\u4e86\u4e00\u4e2a\u8b66\u62a5\u8bf4\u5982\u679c\u4e0d\u6253\u5f00ipv4\u8f6c\u53d1\u7684\u8bdd\u90a3\u4e48\u7f51\u7edc\u5c06\u4e0d\u4f1a\u6709\u6548\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u5148\u628a\u7cfb\u7edf\u7684\u7f51\u7edc\u8f6c\u53d1\u6253\u5f00 echo 1 > /proc/sys/net/ipv4/ip_forward # \u67e5\u770b\u5bb9\u5668\u7684\u72b6\u6001 [ root@localhost ~ ] # docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 0b3299999a96 nginx \"nginx -g 'daemon of\u2026\" 3 minutes ago Up 3 minutes 0 .0.0.0:32768->80/tcp nginx-test1 \u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\u5c06nginx\u5bb9\u5668\u768480\u7aef\u53e3\u6620\u5c04\u5230\u4e86\u5bbf\u4e3b\u673a\u768432768\u7aef\u53e3\u3002\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u5bbf\u4e3b\u673a\u768432768\u7aef\u53e3\u6765\u8bbf\u95eedocker\u4e86\uff0c\u5177\u4f53\u6211\u8fd8\u53ef\u4ee5\u901a\u8fc7iptables\u6765\u67e5\u770b\uff0c iptables -t nat nvL \u3002\u53ef\u4ee5\u901a\u8fc7docker logs\u67e5\u770b\u65e5\u5fd7\uff1a [ root@localhost ~ ] # docker logs nginx-test1 192 .168.56.1 - - [ 11 /May/2018:07:32:23 +0000 ] \"GET / HTTP/1.1\" 200 612 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36\" \"-\" 2018 /05/11 07 :32:24 [ error ] 5 #5: *1 open() \"/usr/share/nginx/html/favicon.ico\" failed (2: No such file or directory), client: 192.168.56.1, server: localhost, request: \"GET /favicon.ico HTTP/1.1\", host: \"192.168.56.101:32768\", referrer: \"http://192.168.56.101:32768/\" 192 .168.56.1 - - [ 11 /May/2018:07:32:24 +0000 ] \"GET /favicon.ico HTTP/1.1\" 404 572 \"http://192.168.56.101:32768/\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36\" \"-\" \u968f\u673a\u6620\u5c04\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u4f46\u662f\u7ba1\u7406\u8d77\u6765\u4e5f\u4e0d\u662f\u5f88\u65b9\u4fbf\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u5bb9\u5668\u7684\u7aef\u53e3\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u597d\u5904\u5c31\u662f\u7aef\u53e3\u4e0d\u4f1a\u91cd\u590d\uff0c\u542f\u7528\u5f88\u65b9\u4fbf\u3002 \u6307\u5b9a\u6620\u5c04 \u00b6 [ root@localhost ~ ] # docker run -d -p 192.168.56.101:88:80 --name nginx-test2 nginx f2eccbad48a94111e7844562ce8750584bced374894cd4dad0af7b201eef8ffc [ root@localhost ~ ] # curl 192.168.56.101:88 -I HTTP/1.1 200 OK Server: nginx/1.13.12 Date: Fri, 11 May 2018 07 :45:34 GMT Content-Type: text/html Content-Length: 612 Last-Modified: Mon, 09 Apr 2018 16 :01:09 GMT Connection: keep-alive ETag: \"5acb8e45-264\" Accept-Ranges: bytes \u67e5\u770b\u5bb9\u5668\u6620\u5c04\uff1a # -l\u53c2\u6570\u6307\u7684\u662f\u67e5\u770b\u6700\u540e\u4e00\u4e2a\u6700\u65b0\u521b\u5efa\u7684\u5bb9\u5668 [ root@localhost ~ ] # docker ps -l CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES f2eccbad48a9 nginx \"nginx -g 'daemon of\u2026\" 2 minutes ago Up 2 minutes 192 .168.56.101:88->80/tcp nginx-test2 \u67e5\u770b\u4e00\u4e0biptables\u7684nat\u89c4\u5219\uff1a Chain DOCKER ( 2 references ) pkts bytes target prot opt in out source destination 0 0 RETURN all -- docker0 * 0 .0.0.0/0 0 .0.0.0/0 2 128 DNAT tcp -- !docker0 * 0 .0.0.0/0 0 .0.0.0/0 tcp dpt:32768 to:172.17.0.3:80 1 60 DNAT tcp -- !docker0 * 0 .0.0.0/0 192 .168.56.101 tcp dpt:88 to:172.17.0.4:80 \u7ecf\u8fc7NAT\u8f6c\u6362\u6240\u4ee5\u5bf9\u4e8e\u541e\u5410\u91cf\u6bd4\u8f83\u5927\u7684\u4e1a\u52a1\u8fd8\u662f\u591a\u5c11\u6709\u4e00\u4e9b\u5f71\u54cd\u7684\u3002 Docker\u6570\u636e\u5b58\u50a8 \u00b6 \u751f\u4ea7\u4e2d\u4e0d\u5efa\u8bae\u76f4\u63a5\u5728docker\u5bb9\u5668\u4e2d\u53bb\u5199\u6570\u636e\uff0c\u5efa\u8bae\u4f7f\u7528\u6570\u636e\u5377\u6216\u8005\u6570\u636e\u5377\u5bb9\u5668\u5199\u5165 \u6570\u636e\u5377 \u00b6 Docker\u955c\u50cf\u7531\u591a\u4e2a\u53ea\u8bfb\u5c42\u53e0\u52a0\u800c\u6210\uff0c\u5f53\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\uff0cDocker\u4f1a\u52a0\u8f7d\u53ea\u8bfb\u955c\u50cf\u5c42\uff0c\u5e76\u5728\u955c\u50cf\u6808\u9876\u90e8\u6dfb\u52a0\u4e00\u4e2a\u8bfb\u5199\u5c42 \u5982\u679c\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u4fee\u6539\u4e86\u73b0\u6709\u7684\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u8be5\u6587\u4ef6\u5c06\u4f1a\u4ece\u8bfb\u5199\u5c42\u4e0b\u9762\u7684\u53ea\u8bfb\u5c42\u590d\u5236\u5230\u8bfb\u5199\u5c42\uff0c\u8be5\u6587\u4ef6\u7684\u53ea\u8bfb\u7248\u672c\u4ecd\u7136\u5b58\u5728\uff0c\u53ea\u662f\u5df2\u7ecf\u88ab\u8bfb\u5199\u5c42\u4e2d\u8be5\u6587\u4ef6\u7684\u526f\u672c\u6240\u9690\u85cf\uff0c\u6b64\u5373\u201d\u5199\u65f6\u590d\u5236\uff08COW\uff09\u201c\u673a\u5236\uff0c\u9274\u4e8e\u8fd9\u79cd\u95ee\u9898\uff0c\u5c42\u6570\u90a3\u4e48\u591a\uff0c\u5728\u5199\u7684\u65b9\u9762\u6548\u7387\u76f8\u5bf9\u8f83\u4f4e\u3002 \u6570\u636e\u5377\u4f7f\u5f97\u5373\u4f7f\u5bb9\u5668\u8131\u79bb\u5b83\u7684\u751f\u547d\u5468\u671f\uff0c\u6570\u636e\u4ecd\u7136\u5b58\u5728\u3002 \u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u5e76\u628a\u7269\u7406\u673a\u7684\u4e00\u4e2a\u533a\u57df\u7ed9\u5b83mount\u5230\u5bb9\u5668\u4e2d\u7684data\u76ee\u5f55\u4e0b\uff0c\u4f7f\u7528-v\u53c2\u6570\uff1a [ root@localhost ~ ] # docker run -d --name nginx-volume-test1 -v /data nginx 7cb33525f1027208402a86c95d0deedc4bf592264d113ddb47901d46797daa94 \u4e3a\u4e86\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u6211\u4eec\u76f4\u63a5\u53bb\u5bb9\u5668\u5185\u7684data\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e86\u4e00\u4e2ahehe\u6587\u4ef6\u3002\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u88ab\u6620\u5c04\u5230\u7269\u7406\u673a\u7684\u4ec0\u4e48\u5730\u65b9\u5462\uff1f [ root@localhost ~ ] # docker inspect -f {{.Mounts}} nginx-volume-test1 [{ volume c2316666b28d0875aa66ec90ef511e61c0e044e531d56a54e835789ac9792229 /var/lib/docker/volumes/c2316666b28d0875aa66ec90ef511e61c0e044e531d56a54e835789ac9792229/_data /data local true }] [ root@localhost ~ ] # cd /var/lib/docker/volumes/c2316666b28d0875aa66ec90ef511e61c0e044e531d56a54e835789ac9792229/_data [ root@localhost _data ] # ll \u603b\u7528\u91cf 0 -rw-r--r--. 1 root root 0 5\u6708 11 04 :14 hehe \u53e6\u5916\u4e00\u79cd\u6302\u8f7d\u65b9\u5f0f\uff0c\u6307\u5b9a\u6211\u4eec\u7684\u6620\u5c04\u76ee\u5f55\uff0c\u4e00\u4e2a\u6e90\u4e00\u4e2a\u76ee\u7684\uff1a # \u6e90\u662f\u7269\u7406\u673a\u7684\uff0c\u76ee\u7684\u662fdocker\u5bb9\u5668\u7684\u3002\u6ce8\u610f\u5bf9\u5e94\u5173\u7cfb mkdir /data/docker-volume-nginx -p docker run -d --name nginx-volume-test2 -v /data/docker-volume-nginx/:/data nginx 6b739fc4d20f1064abf5c2fb619a394772f445f15636b303b0527bb148bd2818 touch /data/docker-volume-nginx/hehehe docker_in.sh nginx-volume-test2 # \u8fdb\u5165\u5bb9\u5668 root@6b739fc4d20f:/# ls -l /data/ total 0 -rw-r--r-- 1 root root 0 Mar 31 08 :20 hehehe \u4f46\u662f\u4e0a\u9762\u7684\u8fd9\u79cd\u65b9\u6cd5\u5728dockerfile\u4e2d\u5c31\u662f\u4e0d\u652f\u6301\u7684\uff0c\u8bd5\u60f3\u5982\u679c\u8fd9\u6837\u64cd\u4f5c\u4e86\uff0c\u90a3\u4e48\u53ef\u79fb\u690d\u6027\u5c31\u4e0b\u964d\u4e86\uff0c\u4f60\u8981\u786e\u4fdd\u79fb\u690d\u7684\u4f4d\u7f6e\u4e5f\u6709\u4f60\u8fd9\u4e2a\u7269\u7406\u673a\u7684\u76ee\u5f55\u548c\u6570\u636e\u3002 \u5176\u4ed6\u7684\u51e0\u4e2a\u9009\u9879\uff1a docker run -d --name nginx-volume-test2 -v /data/docker-volume-nginx/:/data:ro \u53ea\u8bfb \u6302\u8f7d\u6587\u4ef6\uff1a [ root@linux-node1 ~ ] # docker run --rm -it -v /root/docker_in.sh:/root/ nginx /bin/bash root@239820f3e6bd:/# ls /root/ -l --color total 4 -rwxr-xr-x 1 root root 179 Mar 31 07 :48 docker_in.sh ###\u8bb0\u5f97\u524d\u540e\u6587\u4ef6\u540d\u8981\u5bf9\u5e94 \u6570\u636e\u5377\u5bb9\u5668 \u00b6 \u5b9e\u73b0\u6570\u636e\u5728\u591a\u4e2a\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab [ root@linux-node1 ~ ] # docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6b739fc4d20f nginx \"nginx -g 'daemon off\" 11 minutes ago Up 11 minutes 80 /tcp, 443 /tcp nginx-volume-test2 925564d95872 nginx \"nginx -g 'daemon off\" 20 minutes ago Up 20 minutes 80 /tcp, 443 /tcp nginx-volumn-test1 dce2e78b22be nginx \"nginx -g 'daemon off\" 36 minutes ago Up 36 minutes 443 /tcp, 192 .168.56.11:81->80/tcp nginx2 [ root@linux-node1 ~ ] # docker run -it --name volume-test3 --volumes-from nginx-volume-test2 centos /bin/bash [ root@034018de2dc4 / ] # ls /data/ hehehe \u5373\u4f7f\u628anginx-volume-test2\u7ed9\u505c\u6389\u4e86\u4ecd\u7136\u4e0d\u5f71\u54cdvolume-test3\u7684\u8bbf\u95ee\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6570\u636e\u5377\u662fmount\u4e0a\u53bb\u7684\u3002\u800c\u4e14\u6211\u4eec\u8fd9\u4e2a\u65f6\u5019\u5360\u7528\u7684\u8fd9\u4e2a\u5171\u4eab\u5377\u7684\u65f6\u5019\uff0c\u8fd9\u4e2anginx-volume-test2\u4f60\u662f\u5220\u9664\u4e0d\u6389\u7684\u3002 \u5b9e\u9645\u5e94\u7528 \u6bd4\u5982\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\u6302\u8f7d\u6570\u636e\u5377\uff0c\u7136\u540e\u5176\u4ed6\u5bb9\u5668\u90fd\u5171\u4eab\u5b83\u7684\u3002\u6bd4\u5982\u53ef\u4ee5\u7528\u5230\u65e5\u5fd7\u7edf\u4e00\u7ba1\u7406\uff0c\u591a\u4e2a\u5bb9\u5668\u6302\u8f7d\u4e00\u4e2a\u65e5\u5fd7\u6570\u636e\u5377\uff0c\u7136\u540e\u7528logstash\u7edf\u4e00\u6536\u96c6\u7ba1\u7406\u3002 [ root@linux-node1 ~ ] # docker run -d --name nfs-test -v /data/nfs-data/:/data nginx [ root@linux-node1 ~ ] # docker run --rm -it --volumes-from nfs-test centos /bin/bash [ root@ac637a64910f / ] # cd /data/ [ root@ac637a64910f data ] # ls -l total 0 -rw-r--r-- 1 root root 0 Mar 31 08 :41 iamatest \u6b64\u65f6\u6211\u4eec\u5728\u7269\u7406\u673a\u4e0a\u521b\u5efa\u7684\u6d4b\u8bd5\u6587\u4ef6\u5c31\u663e\u793a\u51fa\u6765\u4e86\u3002","title":"02-Docker\u7f51\u7edc\u548c\u5b58\u50a8"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#docker","text":"","title":"Docker\u6570\u636e\u5b58\u50a8&amp;\u7f51\u7edc\u8bbf\u95ee"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#docker_1","text":"","title":"Docker\u7684\u7f51\u7edc\u5e94\u7528"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#docker_2","text":"\u6211\u4eec\u5b89\u88c5\u4e86docker\u540e\u4f1a\u591a\u4e86\u4e00\u4e2a\u6865\u63a5\u7f51\u5361docker0\uff1a [ root@localhost ~ ] # ifconfig docker0 docker0: flags = 4163 <UP,BROADCAST,RUNNING,MULTICAST> mtu 1500 inet 172 .17.0.1 netmask 255 .255.0.0 broadcast 172 .17.255.255 inet6 fe80::42:baff:fea1:dfa8 prefixlen 64 scopeid 0x20<link> ether 02 :42:ba:a1:df:a8 txqueuelen 0 ( Ethernet ) RX packets 0 bytes 0 ( 0 .0 B ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 10 bytes 1876 ( 1 .8 KiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 [ root@localhost ~ ] # yum install bridge-utils [ root@localhost ~ ] # brctl show bridge name bridge id STP enabled interfaces docker0 8000 .0242baa1dfa8 no veth92ad03f \u90a3\u4e48\u73b0\u5728\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\u5e76\u6620\u5c04\u7aef\u53e3\uff0c\u7aef\u53e3\u7684\u6620\u5c04\u5206\u4e3a\u968f\u673a\u6620\u5c04\u548c\u6307\u5b9a\u6620\u5c04\uff1a \u968f\u673a\u6620\u5c04 docker run -P \u6307\u5b9a\u6620\u5c04 -p hostPort:containerPort # \u6620\u5c04\u6240\u6709ip\u7684\u6307\u5b9a\u7aef\u53e3\u5230\u5bb9\u5668ip\u7684\u6307\u5b9a\u7aef\u53e3 -p ip:hostPort:containerPort # \u5982\u679c\u7269\u7406\u673a\u6709\u591a\u4e2aip\u5730\u5740\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2aip -p ip::containerPort # \u6620\u5c04\u5230\u6307\u5b9a\u5730\u5740\u7684\u4efb\u610f\u7aef\u53e3 -p hostPort:containerPort:udp # \u9ed8\u8ba4\u662ftcp\u7684\uff0c\u53ef\u4ee5\u6307\u5b9a\u534f\u8bae\u4e3audp -p 80:81 -p 443:443 ##\u540c\u65f6\u6620\u5c04\u591a\u4e2a\u7aef\u53e3","title":"\u901a\u8fc7\u7aef\u53e3\u6620\u5c04\u7684\u65b9\u5f0f\u8bbf\u95eeDocker"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#_1","text":"\u7531\u4e8e\u4e4b\u524d\u4e0b\u8f7d\u4e86\u4e00\u4e2anginx\u7684\u955c\u50cf\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u5148\u6765\u542f\u7528\u4e00\u4e2anginx\u5bb9\u5668\uff1a [ root@localhost ~ ] # docker run -d -P --name nginx-test1 nginx WARNING: IPv4 forwarding is disabled. Networking will not work. 0b3299999a96eb216b05f2a5c68f32a2775751a49d240034a2f89305bb7bd236 # \u53ef\u4ee5\u770b\u5230\u5bb9\u5668\u542f\u52a8\uff0c\u8fd4\u56de\u4e86\u5bb9\u5668\u7684id\u7684\uff0c\u4f46\u662f\u62a5\u4e86\u4e00\u4e2a\u8b66\u62a5\u8bf4\u5982\u679c\u4e0d\u6253\u5f00ipv4\u8f6c\u53d1\u7684\u8bdd\u90a3\u4e48\u7f51\u7edc\u5c06\u4e0d\u4f1a\u6709\u6548\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u5148\u628a\u7cfb\u7edf\u7684\u7f51\u7edc\u8f6c\u53d1\u6253\u5f00 echo 1 > /proc/sys/net/ipv4/ip_forward # \u67e5\u770b\u5bb9\u5668\u7684\u72b6\u6001 [ root@localhost ~ ] # docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 0b3299999a96 nginx \"nginx -g 'daemon of\u2026\" 3 minutes ago Up 3 minutes 0 .0.0.0:32768->80/tcp nginx-test1 \u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\u5c06nginx\u5bb9\u5668\u768480\u7aef\u53e3\u6620\u5c04\u5230\u4e86\u5bbf\u4e3b\u673a\u768432768\u7aef\u53e3\u3002\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u5bbf\u4e3b\u673a\u768432768\u7aef\u53e3\u6765\u8bbf\u95eedocker\u4e86\uff0c\u5177\u4f53\u6211\u8fd8\u53ef\u4ee5\u901a\u8fc7iptables\u6765\u67e5\u770b\uff0c iptables -t nat nvL \u3002\u53ef\u4ee5\u901a\u8fc7docker logs\u67e5\u770b\u65e5\u5fd7\uff1a [ root@localhost ~ ] # docker logs nginx-test1 192 .168.56.1 - - [ 11 /May/2018:07:32:23 +0000 ] \"GET / HTTP/1.1\" 200 612 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36\" \"-\" 2018 /05/11 07 :32:24 [ error ] 5 #5: *1 open() \"/usr/share/nginx/html/favicon.ico\" failed (2: No such file or directory), client: 192.168.56.1, server: localhost, request: \"GET /favicon.ico HTTP/1.1\", host: \"192.168.56.101:32768\", referrer: \"http://192.168.56.101:32768/\" 192 .168.56.1 - - [ 11 /May/2018:07:32:24 +0000 ] \"GET /favicon.ico HTTP/1.1\" 404 572 \"http://192.168.56.101:32768/\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36\" \"-\" \u968f\u673a\u6620\u5c04\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u4f46\u662f\u7ba1\u7406\u8d77\u6765\u4e5f\u4e0d\u662f\u5f88\u65b9\u4fbf\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u5bb9\u5668\u7684\u7aef\u53e3\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u597d\u5904\u5c31\u662f\u7aef\u53e3\u4e0d\u4f1a\u91cd\u590d\uff0c\u542f\u7528\u5f88\u65b9\u4fbf\u3002","title":"\u968f\u673a\u7aef\u53e3\u6620\u5c04"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#_2","text":"[ root@localhost ~ ] # docker run -d -p 192.168.56.101:88:80 --name nginx-test2 nginx f2eccbad48a94111e7844562ce8750584bced374894cd4dad0af7b201eef8ffc [ root@localhost ~ ] # curl 192.168.56.101:88 -I HTTP/1.1 200 OK Server: nginx/1.13.12 Date: Fri, 11 May 2018 07 :45:34 GMT Content-Type: text/html Content-Length: 612 Last-Modified: Mon, 09 Apr 2018 16 :01:09 GMT Connection: keep-alive ETag: \"5acb8e45-264\" Accept-Ranges: bytes \u67e5\u770b\u5bb9\u5668\u6620\u5c04\uff1a # -l\u53c2\u6570\u6307\u7684\u662f\u67e5\u770b\u6700\u540e\u4e00\u4e2a\u6700\u65b0\u521b\u5efa\u7684\u5bb9\u5668 [ root@localhost ~ ] # docker ps -l CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES f2eccbad48a9 nginx \"nginx -g 'daemon of\u2026\" 2 minutes ago Up 2 minutes 192 .168.56.101:88->80/tcp nginx-test2 \u67e5\u770b\u4e00\u4e0biptables\u7684nat\u89c4\u5219\uff1a Chain DOCKER ( 2 references ) pkts bytes target prot opt in out source destination 0 0 RETURN all -- docker0 * 0 .0.0.0/0 0 .0.0.0/0 2 128 DNAT tcp -- !docker0 * 0 .0.0.0/0 0 .0.0.0/0 tcp dpt:32768 to:172.17.0.3:80 1 60 DNAT tcp -- !docker0 * 0 .0.0.0/0 192 .168.56.101 tcp dpt:88 to:172.17.0.4:80 \u7ecf\u8fc7NAT\u8f6c\u6362\u6240\u4ee5\u5bf9\u4e8e\u541e\u5410\u91cf\u6bd4\u8f83\u5927\u7684\u4e1a\u52a1\u8fd8\u662f\u591a\u5c11\u6709\u4e00\u4e9b\u5f71\u54cd\u7684\u3002","title":"\u6307\u5b9a\u6620\u5c04"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#docker_3","text":"\u751f\u4ea7\u4e2d\u4e0d\u5efa\u8bae\u76f4\u63a5\u5728docker\u5bb9\u5668\u4e2d\u53bb\u5199\u6570\u636e\uff0c\u5efa\u8bae\u4f7f\u7528\u6570\u636e\u5377\u6216\u8005\u6570\u636e\u5377\u5bb9\u5668\u5199\u5165","title":"Docker\u6570\u636e\u5b58\u50a8"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#_3","text":"Docker\u955c\u50cf\u7531\u591a\u4e2a\u53ea\u8bfb\u5c42\u53e0\u52a0\u800c\u6210\uff0c\u5f53\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\uff0cDocker\u4f1a\u52a0\u8f7d\u53ea\u8bfb\u955c\u50cf\u5c42\uff0c\u5e76\u5728\u955c\u50cf\u6808\u9876\u90e8\u6dfb\u52a0\u4e00\u4e2a\u8bfb\u5199\u5c42 \u5982\u679c\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u4fee\u6539\u4e86\u73b0\u6709\u7684\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u8be5\u6587\u4ef6\u5c06\u4f1a\u4ece\u8bfb\u5199\u5c42\u4e0b\u9762\u7684\u53ea\u8bfb\u5c42\u590d\u5236\u5230\u8bfb\u5199\u5c42\uff0c\u8be5\u6587\u4ef6\u7684\u53ea\u8bfb\u7248\u672c\u4ecd\u7136\u5b58\u5728\uff0c\u53ea\u662f\u5df2\u7ecf\u88ab\u8bfb\u5199\u5c42\u4e2d\u8be5\u6587\u4ef6\u7684\u526f\u672c\u6240\u9690\u85cf\uff0c\u6b64\u5373\u201d\u5199\u65f6\u590d\u5236\uff08COW\uff09\u201c\u673a\u5236\uff0c\u9274\u4e8e\u8fd9\u79cd\u95ee\u9898\uff0c\u5c42\u6570\u90a3\u4e48\u591a\uff0c\u5728\u5199\u7684\u65b9\u9762\u6548\u7387\u76f8\u5bf9\u8f83\u4f4e\u3002 \u6570\u636e\u5377\u4f7f\u5f97\u5373\u4f7f\u5bb9\u5668\u8131\u79bb\u5b83\u7684\u751f\u547d\u5468\u671f\uff0c\u6570\u636e\u4ecd\u7136\u5b58\u5728\u3002 \u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u5e76\u628a\u7269\u7406\u673a\u7684\u4e00\u4e2a\u533a\u57df\u7ed9\u5b83mount\u5230\u5bb9\u5668\u4e2d\u7684data\u76ee\u5f55\u4e0b\uff0c\u4f7f\u7528-v\u53c2\u6570\uff1a [ root@localhost ~ ] # docker run -d --name nginx-volume-test1 -v /data nginx 7cb33525f1027208402a86c95d0deedc4bf592264d113ddb47901d46797daa94 \u4e3a\u4e86\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u6211\u4eec\u76f4\u63a5\u53bb\u5bb9\u5668\u5185\u7684data\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e86\u4e00\u4e2ahehe\u6587\u4ef6\u3002\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u88ab\u6620\u5c04\u5230\u7269\u7406\u673a\u7684\u4ec0\u4e48\u5730\u65b9\u5462\uff1f [ root@localhost ~ ] # docker inspect -f {{.Mounts}} nginx-volume-test1 [{ volume c2316666b28d0875aa66ec90ef511e61c0e044e531d56a54e835789ac9792229 /var/lib/docker/volumes/c2316666b28d0875aa66ec90ef511e61c0e044e531d56a54e835789ac9792229/_data /data local true }] [ root@localhost ~ ] # cd /var/lib/docker/volumes/c2316666b28d0875aa66ec90ef511e61c0e044e531d56a54e835789ac9792229/_data [ root@localhost _data ] # ll \u603b\u7528\u91cf 0 -rw-r--r--. 1 root root 0 5\u6708 11 04 :14 hehe \u53e6\u5916\u4e00\u79cd\u6302\u8f7d\u65b9\u5f0f\uff0c\u6307\u5b9a\u6211\u4eec\u7684\u6620\u5c04\u76ee\u5f55\uff0c\u4e00\u4e2a\u6e90\u4e00\u4e2a\u76ee\u7684\uff1a # \u6e90\u662f\u7269\u7406\u673a\u7684\uff0c\u76ee\u7684\u662fdocker\u5bb9\u5668\u7684\u3002\u6ce8\u610f\u5bf9\u5e94\u5173\u7cfb mkdir /data/docker-volume-nginx -p docker run -d --name nginx-volume-test2 -v /data/docker-volume-nginx/:/data nginx 6b739fc4d20f1064abf5c2fb619a394772f445f15636b303b0527bb148bd2818 touch /data/docker-volume-nginx/hehehe docker_in.sh nginx-volume-test2 # \u8fdb\u5165\u5bb9\u5668 root@6b739fc4d20f:/# ls -l /data/ total 0 -rw-r--r-- 1 root root 0 Mar 31 08 :20 hehehe \u4f46\u662f\u4e0a\u9762\u7684\u8fd9\u79cd\u65b9\u6cd5\u5728dockerfile\u4e2d\u5c31\u662f\u4e0d\u652f\u6301\u7684\uff0c\u8bd5\u60f3\u5982\u679c\u8fd9\u6837\u64cd\u4f5c\u4e86\uff0c\u90a3\u4e48\u53ef\u79fb\u690d\u6027\u5c31\u4e0b\u964d\u4e86\uff0c\u4f60\u8981\u786e\u4fdd\u79fb\u690d\u7684\u4f4d\u7f6e\u4e5f\u6709\u4f60\u8fd9\u4e2a\u7269\u7406\u673a\u7684\u76ee\u5f55\u548c\u6570\u636e\u3002 \u5176\u4ed6\u7684\u51e0\u4e2a\u9009\u9879\uff1a docker run -d --name nginx-volume-test2 -v /data/docker-volume-nginx/:/data:ro \u53ea\u8bfb \u6302\u8f7d\u6587\u4ef6\uff1a [ root@linux-node1 ~ ] # docker run --rm -it -v /root/docker_in.sh:/root/ nginx /bin/bash root@239820f3e6bd:/# ls /root/ -l --color total 4 -rwxr-xr-x 1 root root 179 Mar 31 07 :48 docker_in.sh ###\u8bb0\u5f97\u524d\u540e\u6587\u4ef6\u540d\u8981\u5bf9\u5e94","title":"\u6570\u636e\u5377"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#_4","text":"\u5b9e\u73b0\u6570\u636e\u5728\u591a\u4e2a\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab [ root@linux-node1 ~ ] # docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6b739fc4d20f nginx \"nginx -g 'daemon off\" 11 minutes ago Up 11 minutes 80 /tcp, 443 /tcp nginx-volume-test2 925564d95872 nginx \"nginx -g 'daemon off\" 20 minutes ago Up 20 minutes 80 /tcp, 443 /tcp nginx-volumn-test1 dce2e78b22be nginx \"nginx -g 'daemon off\" 36 minutes ago Up 36 minutes 443 /tcp, 192 .168.56.11:81->80/tcp nginx2 [ root@linux-node1 ~ ] # docker run -it --name volume-test3 --volumes-from nginx-volume-test2 centos /bin/bash [ root@034018de2dc4 / ] # ls /data/ hehehe \u5373\u4f7f\u628anginx-volume-test2\u7ed9\u505c\u6389\u4e86\u4ecd\u7136\u4e0d\u5f71\u54cdvolume-test3\u7684\u8bbf\u95ee\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6570\u636e\u5377\u662fmount\u4e0a\u53bb\u7684\u3002\u800c\u4e14\u6211\u4eec\u8fd9\u4e2a\u65f6\u5019\u5360\u7528\u7684\u8fd9\u4e2a\u5171\u4eab\u5377\u7684\u65f6\u5019\uff0c\u8fd9\u4e2anginx-volume-test2\u4f60\u662f\u5220\u9664\u4e0d\u6389\u7684\u3002 \u5b9e\u9645\u5e94\u7528 \u6bd4\u5982\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\u6302\u8f7d\u6570\u636e\u5377\uff0c\u7136\u540e\u5176\u4ed6\u5bb9\u5668\u90fd\u5171\u4eab\u5b83\u7684\u3002\u6bd4\u5982\u53ef\u4ee5\u7528\u5230\u65e5\u5fd7\u7edf\u4e00\u7ba1\u7406\uff0c\u591a\u4e2a\u5bb9\u5668\u6302\u8f7d\u4e00\u4e2a\u65e5\u5fd7\u6570\u636e\u5377\uff0c\u7136\u540e\u7528logstash\u7edf\u4e00\u6536\u96c6\u7ba1\u7406\u3002 [ root@linux-node1 ~ ] # docker run -d --name nfs-test -v /data/nfs-data/:/data nginx [ root@linux-node1 ~ ] # docker run --rm -it --volumes-from nfs-test centos /bin/bash [ root@ac637a64910f / ] # cd /data/ [ root@ac637a64910f data ] # ls -l total 0 -rw-r--r-- 1 root root 0 Mar 31 08 :41 iamatest \u6b64\u65f6\u6211\u4eec\u5728\u7269\u7406\u673a\u4e0a\u521b\u5efa\u7684\u6d4b\u8bd5\u6587\u4ef6\u5c31\u663e\u793a\u51fa\u6765\u4e86\u3002","title":"\u6570\u636e\u5377\u5bb9\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/03-\u624b\u52a8\u6784\u5efa\u955c\u50cf/","text":"Docker\u624b\u52a8\u6784\u5efa \u00b6 \u6740\u6b7b\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u5e76\u5220\u9664\u5b83 [ root@linux-node1 ~ ] # docker ps -a -q 319cc917e421 00c801224fed 9af1e1593e1c 034018de2dc4 6b739fc4d20f 925564d95872 dce2e78b22be 35e9b3386c8a dfff10104bae e95a62d6770f 78fc36ba1e5a [ root@linux-node1 ~ ] # docker kill $(docker ps -a -q) [ root@linux-node1 ~ ] # docker rm $(docker ps -a -q) \u7136\u540e\u6211\u4eec\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u65b0\u7684centos\u7684\u5bb9\u5668\uff0c\u5b89\u88c5nginx\uff1a [ root@linux-node1 ~ ] # docker run --name mynginx -it centos # \u8fdb\u5165\u5bb9\u5668\uff0c\u5b89\u88c5\u6269\u5c55\u6e90 [ root@c7426bc61497 / ] # rpm -ivh https://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm # \u5b89\u88c5nginx\uff0c\u8fd9\u91cc\u6d4b\u8bd5\u7528\u5c31\u76f4\u63a5yum\u4e86\uff0c\u751f\u4ea7\u4e2d\u4e00\u822c\u90fd\u662f\u7f16\u8bd1\u5b89\u88c5\uff1a [ root@c7426bc61497 / ] # yum install -y nginx # \u524d\u9762\u8bf4\u5230\u5bb9\u5668\u7684\u8fd0\u884c\u9700\u8981\u524d\u53f0\u8fdb\u7a0b\u7684\u652f\u6491\uff0c\u56e0\u6b64\u5982\u679cnginx\u5728\u540e\u53f0\u8dd1\u7684\u8bdd\u8fd9\u4e2adocker\u5bb9\u5668\u662f\u8d77\u4e0d\u6765\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5bf9nginx\u505a\u4e00\u4e9b\u4fee\u6539\uff0c\u8ba9\u5b83\u5728\u524d\u53f0\u8fd0\u884c. [ root@c7426bc61497 / ] # grep -v '^#' /etc/nginx/nginx.conf | head -1 daemon off ; \u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e00\u884cdeamon off\uff0c\u7136\u540e\u9000\u51fa\u5bb9\u5668 [ root@linux-node1 ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES c7426bc61497 centos \"/bin/bash\" 12 minutes ago Exited ( 0 ) 4 seconds ago mynginx \u5bf9\u5bb9\u5668\u4fee\u6539\u5b8c\u4ee5\u540e\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u63d0\u4ea4\uff0c\u5176\u5b9e\u8fd9\u4e2a\u64cd\u4f5c\u5f88\u7c7b\u4f3c\u4e8eGit\uff0c\u5176\u4e2d-m\u6307\u7684\u662fcomment\uff0c\u5c31\u662f\u4e00\u4e2a\u63cf\u8ff0\uff0c\u540e\u9762\u8ddfcontainer id\uff0c\u7136\u540enginx\u662f\u5e93\u540d\u79f0\u3002 [ root@linux-node1 ~ ] # docker commit -m \"My nginx\" c7426bc61497 nginx/mynginx:v1 sha256:81f1607bb8a07d4874a68e1cffa369707f243e935f381373d8482cde6ee6a6ed [ root@linux-node1 ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE nginx/mynginx v1 81f1607bb8a0 About a minute ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182 .5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192 .5 MB \u8fd0\u884c\u6d4b\u8bd5\uff1a [ root@linux-node1 ~ ] # docker run --name mynginxv1 -d -p 81:80 nginx/mynginx:v1 nginx \u8fd9\u4e2a\u540d\u79f0\u8981\u5199\u5168\u4e86\uff0c\u5982\u679c\u4e0d\u5199\u5168\u7684\u8bdd\uff0c\u5b83\u4f1a\u4f7f\u7528\u522b\u7684\u7248\u672c\u7684\u6700\u540e\u8fd9\u4e00\u4e2anginx\u662f\u6267\u884c\u7684\u547d\u4ee4\u3002","title":"03-\u955c\u50cf\u7684\u6784\u5efa"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/03-\u624b\u52a8\u6784\u5efa\u955c\u50cf/#docker","text":"\u6740\u6b7b\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u5e76\u5220\u9664\u5b83 [ root@linux-node1 ~ ] # docker ps -a -q 319cc917e421 00c801224fed 9af1e1593e1c 034018de2dc4 6b739fc4d20f 925564d95872 dce2e78b22be 35e9b3386c8a dfff10104bae e95a62d6770f 78fc36ba1e5a [ root@linux-node1 ~ ] # docker kill $(docker ps -a -q) [ root@linux-node1 ~ ] # docker rm $(docker ps -a -q) \u7136\u540e\u6211\u4eec\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u65b0\u7684centos\u7684\u5bb9\u5668\uff0c\u5b89\u88c5nginx\uff1a [ root@linux-node1 ~ ] # docker run --name mynginx -it centos # \u8fdb\u5165\u5bb9\u5668\uff0c\u5b89\u88c5\u6269\u5c55\u6e90 [ root@c7426bc61497 / ] # rpm -ivh https://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm # \u5b89\u88c5nginx\uff0c\u8fd9\u91cc\u6d4b\u8bd5\u7528\u5c31\u76f4\u63a5yum\u4e86\uff0c\u751f\u4ea7\u4e2d\u4e00\u822c\u90fd\u662f\u7f16\u8bd1\u5b89\u88c5\uff1a [ root@c7426bc61497 / ] # yum install -y nginx # \u524d\u9762\u8bf4\u5230\u5bb9\u5668\u7684\u8fd0\u884c\u9700\u8981\u524d\u53f0\u8fdb\u7a0b\u7684\u652f\u6491\uff0c\u56e0\u6b64\u5982\u679cnginx\u5728\u540e\u53f0\u8dd1\u7684\u8bdd\u8fd9\u4e2adocker\u5bb9\u5668\u662f\u8d77\u4e0d\u6765\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5bf9nginx\u505a\u4e00\u4e9b\u4fee\u6539\uff0c\u8ba9\u5b83\u5728\u524d\u53f0\u8fd0\u884c. [ root@c7426bc61497 / ] # grep -v '^#' /etc/nginx/nginx.conf | head -1 daemon off ; \u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e00\u884cdeamon off\uff0c\u7136\u540e\u9000\u51fa\u5bb9\u5668 [ root@linux-node1 ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES c7426bc61497 centos \"/bin/bash\" 12 minutes ago Exited ( 0 ) 4 seconds ago mynginx \u5bf9\u5bb9\u5668\u4fee\u6539\u5b8c\u4ee5\u540e\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u63d0\u4ea4\uff0c\u5176\u5b9e\u8fd9\u4e2a\u64cd\u4f5c\u5f88\u7c7b\u4f3c\u4e8eGit\uff0c\u5176\u4e2d-m\u6307\u7684\u662fcomment\uff0c\u5c31\u662f\u4e00\u4e2a\u63cf\u8ff0\uff0c\u540e\u9762\u8ddfcontainer id\uff0c\u7136\u540enginx\u662f\u5e93\u540d\u79f0\u3002 [ root@linux-node1 ~ ] # docker commit -m \"My nginx\" c7426bc61497 nginx/mynginx:v1 sha256:81f1607bb8a07d4874a68e1cffa369707f243e935f381373d8482cde6ee6a6ed [ root@linux-node1 ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE nginx/mynginx v1 81f1607bb8a0 About a minute ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182 .5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192 .5 MB \u8fd0\u884c\u6d4b\u8bd5\uff1a [ root@linux-node1 ~ ] # docker run --name mynginxv1 -d -p 81:80 nginx/mynginx:v1 nginx \u8fd9\u4e2a\u540d\u79f0\u8981\u5199\u5168\u4e86\uff0c\u5982\u679c\u4e0d\u5199\u5168\u7684\u8bdd\uff0c\u5b83\u4f1a\u4f7f\u7528\u522b\u7684\u7248\u672c\u7684\u6700\u540e\u8fd9\u4e00\u4e2anginx\u662f\u6267\u884c\u7684\u547d\u4ee4\u3002","title":"Docker\u624b\u52a8\u6784\u5efa"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/","text":"DockerFile \u00b6 Dockerfile\u662f\u4e3a\u5feb\u901f\u6784\u5efadocker image\u800c\u8bbe\u8ba1\u7684\uff0c\u5f53\u4f60\u4f7f\u7528docker build \u547d\u4ee4\u7684\u65f6\u5019\uff0cdocker \u4f1a\u8bfb\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u547d\u540d\u4e3aDockerfile(\u9996\u5b57\u6bcd\u5927\u5199)\u7684\u7eaf\u6587\u672c\u6587\u4ef6\u5e76\u6267\u884c\u91cc\u9762\u7684\u6307\u4ee4\u6784\u5efa\u51fa\u4e00\u4e2adocker image\u3002\u8fd9\u6bd4SaltStack\u7684\u914d\u7f6e\u7ba1\u7406\u8981\u7b80\u5355\u7684\u591a\uff0c\u4e0d\u8fc7\u8fd8\u662f\u8981\u638c\u63e1\u4e00\u4e9b\u7b80\u5355\u7684\u6307\u4ee4\u3002 Dockerfile \u7531\u4e00\u884c\u884c\u547d\u4ee4\u8bed\u53e5\u7ec4\u6210\uff0c\u5e76\u4e14\u652f\u6301\u4ee5#\u5f00\u5934\u7684\u6ce8\u91ca\u884c\u3002\u6307\u4ee4\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u4f46\u662f\u901a\u5e38\u6211\u4eec\u90fd\u5927\u5199\uff0c\u7528\u4e8e\u548c\u540e\u9762\u7684\u5185\u5bb9\u53c2\u6570\u8fdb\u884c\u533a\u5206\u3002 \u7b80\u5355\u793a\u4f8b \u00b6 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u6784\u5efa\u4e00\u4e2aNginx\u7684\u955c\u50cf\u6765\u5b66\u4e60Dockerfile. \u9996\u5148\u5b9e\u73b0\u521b\u5efa\u597d\u76ee\u5f55\uff0c\u6211\u8fd9\u5728opt\u4e0b\u521b\u5efa\u76ee\u5f55dockerfile\uff0c\u7136\u540e\u5728dockerfile\u76ee\u5f55\u4e0b\u521b\u5efanginx\u76ee\u5f55\uff0c\u5728nginx\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2aDockerfile\u6587\u4ef6\u3002Dcockerfile\u8fd9\u4e2a\u6587\u4ef6\u7684\u9996\u5b57\u6bcd\u8981\u5927\u5199\uff0c\u4e0d\u7136\u6709\u53ef\u80fd\u4e0d\u4f1a\u88ab\u8bc6\u522b\u3002 [ root@linux-node1 ~ ] # cd /opt/ [ root@linux-node1 opt ] # cd dockerfile/ [ root@linux-node1 dockerfile ] # cd nginx/ [ root@linux-node1 nginx ] # echo \"nginx in Docker ,hahahah\" >index.html [ root@linux-node1 nginx ] # cat Dockerfile # This Dockerfile is used to practice # Version: 1.0 # Author: lamber # Base Image FROM centos # Who will take care of this image MAINTAINER lamber 1020561033 @qq.com # Prepare Epel RUN rpm -ivh https://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm # Install Nginx and deal with the config file RUN yum -y install nginx && yum clean all RUN echo \"daemon off;\" >> /etc/nginx/nginx.conf ADD index.html /usr/share/nginx/html/index.html # Run EXPOSE 80 CMD [ \"nginx\" ] \u8bf4\u660e\uff1a FROM\uff1a\u8fd9\u4e2a\u955c\u50cf\u7684\u5988\u662f\u8c01\uff0c\u6307\u5b9a\u57fa\u7840\u955c\u50cf\uff0c\u9664\u4e86\u6ce8\u91ca\u5916\u7684\u7b2c\u4e00\u884c\u5fc5\u987b\u662f\u4ed6\u3002\u5982\u679c\u672c\u5730\u6ca1\u6709\u8fd9\u4e2a\u955c\u50cf\uff0c\u5b83\u4f1a\u7ed9\u4f60pull\u4e0b\u6765\u3002 MAINTAINER\uff1a\u544a\u8bc9\u522b\u4eba\u8c01\u8d1f\u8d23\u517b\u4ed6\uff0c\u6307\u5b9a\u7ef4\u62a4\u8005\u7684\u4fe1\u606f RUN\uff1a\u4f60\u60f3\u8ba9\u4ed6\u5e72\u5565\uff0c\u5728\u547d\u4ee4\u524d\u9762\u52a0\u4e0aRUN\u5c31\u53ef\u4ee5\u4e86\u3002 ADD\uff1a\u7ed9\u5b83\u70b9\u521b\u4e1a\u8d44\u91d1\uff0ccopy\u6587\u4ef6\u8fdb\u53bb\uff0c\u4f1a\u81ea\u52a8\u89e3\u538b WORKDIR\uff1a\u6211\u662fcd\uff0c\u4eca\u5929\u521a\u5316\u4e86\u5986\uff08\u8bbe\u7f6e\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\uff09 VOLUME\uff1a\u7ed9\u5b83\u4e00\u4e2a\u5b58\u653e\u884c\u674e\u7684\u5730\u65b9\uff0c\u8bbe\u7f6e\u5377\uff0c\u6302\u8f7d\u4e3b\u673a\u76ee\u5f55 EXPOSE\uff1a\u5b83\u8981\u6253\u5f00\u7684\u95e8\u662f\u5565\uff0c\u6307\u5b9a\u5bf9\u5916\u7684\u7aef\u53e3 CMD\uff1a\u5954\u8dd1\u5427\uff0c\u5144\u5f1f\uff0c\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u540e\u8981\u5e72\u7684\u4e8b\u60c5\uff0c\u8fd9\u91cc\u53cc\u5f15\u4e00\u4e0b\uff0c\u5355\u5f15\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\u3002\u3002\u3002\u3002 \u6784\u5efadocker\u955c\u50cf\uff08\u540e\u9762\u90a3\u4e2a\u70b9\u5c31\u662f\u5728\u5f53\u524d\u76ee\u5f55\uff0c\u610f\u601d\u662f\u544a\u8bc9docker\u53bb\u54ea\u91cc\u627e\u8fd9\u4e2adockerfile\uff0c\u4e00\u4e2a\u70b9\u5c31\u662f\u5728\u5f53\u524d\u76ee\u5f55\u627edockerfile\uff0c\u8fd9\u4e2a\u4f60\u4e5f\u53ef\u4ee5\u5199\u7edd\u5bf9\u8def\u5f84\u4e5f\u662fok\u7684\uff09\uff0c\u7136\u540e\u521b\u5efa\u5bb9\u5668\uff1a [ root@linux-node1 nginx ] # docker build -t mynginx:v2 . [ root@linux-node1 nginx ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE mynginx v2 5104f2ed9887 5 seconds ago 280 .7 MB nginx/mynginx v1 81f1607bb8a0 32 minutes ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182 .5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192 .5 MB [ root@linux-node1 nginx ] # docker run --name mynginxv2 -d -p 82:80 mynginx:v2 nginx a1efc632ba6d2412c3bc9fded592ca289c0f6c14dd1832118fc52539a2c1123f \u8d77\u6765\u4ee5\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7f51\u9875\u7aef\u8fdb\u884c\u6d4b\u8bd5\u4e86\uff01 Docker Build \u00b6 Docker build from Local \u00b6 \u4e0a\u9762\u7684\u547d\u4ee4\u4f7f\u7528docker build\u7684\u540c\u65f6\u4e3a\u6211\u4eec\u7684\u65b0\u955c\u50cf\u6253\u4e86tag\uff0c\u4f46\u662f\u540e\u9762\u8ddf\u4e86\u4e00\u4e2a . \u3002\u8fd9\u4e2a\u70b9\u5176\u5b9e\u5c31\u662f\u5f53\u524d\u76ee\u5f55\u7684\u610f\u601d\uff0c\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u8ba9docker build\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627eDockerfile\uff0c\u4f46\u662f\u8fd9\u4e2a\u8def\u5f84\u5e76\u4e0d\u662f\u6307\u5b9aDockerfile\u7684\u8def\u5f84\uff0c\u800c\u662f\u6307\u5b9a\u4e0a\u4e0b\u6587\u7684\u8def\u5f84\u3002 \u9996\u5148\u6211\u4eec\u8981\u7406\u89e3 docker build \u7684\u5de5\u4f5c\u539f\u7406\u3002Docker \u5728\u8fd0\u884c\u65f6\u5206\u4e3aDocker\u5f15\u64ce \uff08\u4e5f\u5c31\u662f\u670d\u52a1\u7aef\u5b88\u62a4\u8fdb\u7a0b\uff09\u548c\u5ba2\u6237\u7aef\u5de5\u5177\u3002Docker \u7684\u5f15\u64ce\u63d0\u4f9b\u4e86\u4e00\u7ec4 REST API\uff0c \u88ab\u79f0\u4e3a Docker Remote API\uff0c\u800c\u5982 docker \u547d\u4ee4\u8fd9\u6837\u7684\u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u5219\u662f\u901a\u8fc7\u8fd9\u7ec4 API \u4e0e Docker \u5f15\u64ce\u4ea4\u4e92\uff0c\u4ece\u800c\u5b8c\u6210\u5404\u79cd\u529f\u80fd\u3002\u56e0\u6b64\uff0c\u867d\u7136\u8868\u9762\u4e0a\u6211\u4eec\u597d\u50cf\u662f\u5728 \u672c\u673a\u6267\u884c\u5404\u79cd docker \u529f\u80fd\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u4e00\u5207\u90fd\u662f\u4f7f\u7528\u7684\u8fdc\u7a0b\u8c03\u7528\u5f62\u5f0f\u5728\u670d\u52a1\u7aef \uff08Docker \u5f15\u64ce\uff09\u5b8c\u6210\u3002\u4e5f\u56e0\u4e3a\u8fd9\u79cd C/S \u8bbe\u8ba1\uff0c\u8ba9\u6211\u4eec\u64cd\u4f5c\u8fdc\u7a0b\u670d\u52a1\u5668\u7684 Docker \u5f15 \u64ce\u53d8\u5f97\u8f7b\u800c\u6613\u4e3e\u3002 \u5f53\u6211\u4eec\u8fdb\u884c\u955c\u50cf\u6784\u5efa\u7684\u65f6\u5019\uff0c\u5e76\u975e\u6240\u6709\u5b9a\u5236\u90fd\u4f1a\u901a\u8fc7 RUN \u6307\u4ee4\u5b8c\u6210\uff0c\u7ecf\u5e38\u4f1a\u9700\u8981 \u5c06\u4e00\u4e9b\u672c\u5730\u6587\u4ef6\u590d\u5236\u8fdb\u955c\u50cf\uff0c\u6bd4\u5982\u901a\u8fc7 COPY \u6307\u4ee4\u3001 ADD \u6307\u4ee4\u7b49\u3002\u800c docker build \u547d\u4ee4\u6784\u5efa\u955c\u50cf\uff0c\u5176\u5b9e\u5e76\u975e\u5728\u672c\u5730\u6784\u5efa\uff0c\u800c\u662f\u5728\u670d\u52a1\u7aef\uff0c\u4e5f\u5c31\u662f Docker \u5f15\u64ce\u4e2d\u6784\u5efa\u7684\u3002\u90a3\u4e48\u5728\u8fd9\u79cd\u5ba2\u6237\u7aef/\u670d\u52a1\u7aef\u7684\u67b6\u6784\u4e2d\uff0c\u5982\u4f55\u624d\u80fd\u8ba9\u670d\u52a1\u7aef\u83b7\u5f97\u672c\u5730\u6587\u4ef6\u5462\uff1f \u8fd9\u5c31\u5f15\u5165\u4e86\u4e0a\u4e0b\u6587\u7684\u6982\u5ff5\u3002\u5f53\u6784\u5efa\u7684\u65f6\u5019\uff0c\u7528\u6237\u4f1a\u6307\u5b9a\u6784\u5efa\u955c\u50cf\u4e0a\u4e0b\u6587\u7684\u8def\u5f84\uff0c docker build \u547d\u4ee4\u5f97\u77e5\u8fd9\u4e2a\u8def\u5f84\u540e\uff0c\u4f1a\u5c06\u8def\u5f84\u4e0b\u7684\u6240\u6709\u5185\u5bb9\u6253\u5305\uff0c\u7136\u540e\u4e0a\u4f20\u7ed9Docker\u5f15\u64ce\u3002\u8fd9\u6837 Docker\u5f15\u64ce\u6536\u5230\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u5305\u540e\uff0c\u5c55\u5f00\u5c31\u4f1a\u83b7\u5f97\u6784\u5efa\u955c\u50cf\u6240\u9700\u7684\u4e00\u5207\u6587\u4ef6\uff0c\u6bd4\u5982\uff1a COPY ./package.json /app/ \u8fd9\u5e76\u4e0d\u662f\u8981\u590d\u5236\u6267\u884cdocker build\u547d\u4ee4\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u7684 package.json\uff0c\u4e5f\u4e0d\u662f\u590d\u5236 Dockerfile \u6240\u5728\u76ee\u5f55\u4e0b\u7684 package.json ,\u800c\u662f\u590d\u5236\u4e0a\u4e0b\u6587\uff08context\uff09 \u76ee\u5f55\u4e0b\u7684package.json\u3002 \u56e0\u6b64\uff0c COPY \u8fd9\u7c7b\u6307\u4ee4\u4e2d\u7684\u6e90\u6587\u4ef6\u7684\u8def\u5f84\u90fd\u662f\u76f8\u5bf9\u8def\u5f84\u3002\u8fd9\u4e5f\u662f\u521d\u5b66\u8005\u7ecf\u5e38\u4f1a\u95ee \u7684\u4e3a\u4ec0\u4e48 COPY ../package.json /app \u6216\u8005 COPY /opt/xxxx /app \u65e0\u6cd5\u5de5\u4f5c\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u8def\u5f84\u5df2\u7ecf\u8d85\u51fa\u4e86\u4e0a\u4e0b\u6587\u7684\u8303\u56f4\uff0cDocker \u5f15\u64ce\u65e0\u6cd5\u83b7\u5f97\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u6587\u4ef6\u3002\u5982\u679c\u771f\u7684\u9700\u8981\u90a3\u4e9b\u6587\u4ef6\uff0c\u5e94\u8be5\u5c06\u5b83\u4eec\u590d\u5236\u5230\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d\u53bb\u3002 \u73b0\u5728\u5c31\u53ef\u4ee5\u7406\u89e3\u5982\u4e0a\u6784\u5efa\u547d\u4ee4 \u4e2d\u7684\u8fd9\u4e2a . \uff0c\u5b9e\u9645 \u4e0a\u662f\u5728\u6307\u5b9a\u4e0a\u4e0b\u6587\u7684\u76ee\u5f55\uff0c docker build \u547d\u4ee4\u4f1a\u5c06\u8be5\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\u6253\u5305\u4ea4\u7ed9 Docker \u5f15\u64ce\u4ee5\u5e2e\u52a9\u6784\u5efa\u955c\u50cf\u3002\uff08\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u6211\u4eec\u662f\u53ef\u4ee5\u770b\u5230\u53d1\u5f80Docker daemon\u7684\u65e5\u5fd7\u7684\uff09 \u4e00\u822c\u7684\u4f7f\u7528\u65b9\u6cd5\u662f\uff0c\u5bf9\u5e94\u7684\u9879\u76ee\u6709\u5bf9\u5e94\u7684\u76ee\u5f55\u5b58\u653e\uff0cDockerfile\u653e\u5230\u5bf9\u5e94\u7684\u9879\u76ee\u91cc\u9762\u53bb\uff0c\u5982\u679c\u6709\u6587\u4ef6\u9700\u8981\u4f20\u5230\u955c\u50cf\u91cc\u9762\u53bb\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u628a\u5bf9\u5e94\u7684\u6587\u4ef6\u4e5f\u590d\u5236\u4e00\u4efd\u653e\u5230\u8fd9\u91cc\u3002\u5982\u679c\u76ee\u5f55\u4e0b\u6709\u4e9b\u4e1c\u897f\u786e\u5b9e\u4e0d\u5e0c\u671b\u6784\u5efa\u7684\u65f6\u5019\u4f20\u7ed9Docker\u5f15\u64ce\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528.gitignore\u4e00\u6837\u7684\u8bed\u6cd5\u6765\u5199\u4e00\u4e2a.dockerignore\uff0c\u8be5\u6587\u4ef6\u662f\u7528\u6765\u5254\u9664\u4e0d\u9700\u8981\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u4f20\u9012\u7ed9Docker Engine\u7684\u6587\u4ef6\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e0d\u6307\u5b9aDockerfile\u7684\u8bdd\uff0c\u4f1a\u5c06\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e0b\u7684\u540d\u4e3aDockerfile\u7684\u6587\u4ef6\u4f5c\u4e3aDockerfile\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6587\u4ef6\u540d\u4e0d\u4e00\u5b9a\u5fc5\u987b\u5f97\u662fDockerfile\uff0c\u4e5f\u4e0d\u662f\u8981\u6c42Dockerfile\u5fc5\u987b\u4f4d\u4e8e\u4e0a\u4e0b\u6587\u76ee\u5f55\uff0c\u53ef\u4ee5\u901a\u8fc7-f\u53c2\u6570\u53bb\u6307\u5b9a\u67d0\u4e00\u4e2a\u6587\u4ef6\u6765\u4f5c\u4e3aDockerfile\uff0c\u4f46\u662f\u4e60\u60ef\u6027\u7684\u90fd\u662f\u9ed8\u8ba4\u4f7f\u7528Dockerfile\u4e3a\u540d\u79f0\uff0c\u800c\u4e14\u653e\u5230\u4e0a\u4e0b\u5348\u76ee\u5f55\u73af\u5883\u91cc\u3002 Docker build from Remote \u00b6 \u8fd9\u4e2a\u547d\u4ee4\u6307\u5b9a\u4e86\u6784\u5efa\u6240\u9700\u8981\u7684Git Repo\uff0c\u5e76\u4e14\u9ed8\u8ba4\u6267\u884cmaster\u5206\u652f\uff0c\u6784\u5efa\u76ee\u5f55\u4e3a8.14\uff0c\u7136\u540eDocker\u4f1a\u81ea\u5df1\u53bbclone\u8fd9\u4e2a\u9879\u76ee\uff0c\u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\uff0c\u5e76\u8fdb\u5165\u5230\u6307\u5b9a\u76ee\u5f55\u540e\u5f00\u59cb\u521b\u5efa\u3002 $ docker build https://github.com/twang2218/gitlab-ce-zh.git #:8.14 docker build https://github.com/twang2218/gitlab-ce-zh.git \\# :8.14 Sending build context to Docker daemon 2 .048 kB Step 1 : FROM gitlab/gitlab-ce:8.14.0-ce.0 8 .14.0-ce.0: Pulling from gitlab/gitlab-ce aed15891ba52: Already exists 773ae8583d14: Already exists \u2026\u2026 Docker build from tar \u00b6 \u5982\u679c\u6240\u7ed9\u51fa\u7684URL\u4e0d\u662fGit repo\uff0c\u800c\u662f\u4e2atar\u538b\u7f29\u5305\uff0c\u90a3\u4e48Docker\u5f15\u64ce\u4f1a\u4e0b\u8f7d\u8fd9\u4e2a\u5305\uff0c\u5e76\u81ea\u52a8\u89e3\u538b\u7f29\uff0c\u4ee5\u5176\u4f5c\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5f00\u59cb\u6784\u5efa\u3002 docker build http://server/context.tar.gz Docker build from stdin \u00b6 docker build - < Dockerfile \u6216\u8005 cat Dockerfile | docker build - \u5982\u679c\u6807\u51c6\u8f93\u5165\u4f20\u5165\u7684\u662f\u6587\u672c\u6587\u4ef6\uff0c\u5219\u5c06\u5176\u89c6\u4e3a Dockerfile \uff0c\u5e76\u5f00\u59cb\u6784\u5efa\u3002\u8fd9\u79cd \u5f62\u5f0f\u7531\u4e8e\u76f4\u63a5\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6 Dockerfile \u7684\u5185\u5bb9\uff0c\u5b83\u6ca1\u6709\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u50cf \u5176\u4ed6\u65b9\u6cd5\u90a3\u6837\u53ef\u4ee5\u5c06\u672c\u5730\u6587\u4ef6 COPY \u8fdb\u955c\u50cf\u4e4b\u7c7b\u7684\u4e8b\u60c5\u3002 docker build - < context.tar.gz \u5982\u679c\u53d1\u73b0\u6807\u51c6\u8f93\u5165\u7684\u6587\u4ef6\u683c\u5f0f\u662f gzip \u3001 bzip2 \u4ee5\u53ca xz \u7684\u8bdd\uff0c\u5c06\u4f1a\u4f7f\u5176\u4e3a\u4e0a \u4e0b\u6587\u538b\u7f29\u5305\uff0c\u76f4\u63a5\u5c06\u5176\u5c55\u5f00\uff0c\u5c06\u91cc\u9762\u89c6\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5e76\u5f00\u59cb\u6784\u5efa\u3002 Dockerfile\u6307\u4ee4\u8be6\u89e3 \u00b6 FROM \u00b6 \u5728 Docker Store \u4e0a\u6709\u975e\u5e38\u591a\u7684\u9ad8\u8d28\u91cf\u7684\u5b98\u65b9\u955c\u50cf\uff0c\u6709\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u4f7f\u7528\u7684\u670d\u52a1\u7c7b\u7684 \u955c\u50cf\uff0c\u5982 nginx \u3001 redis \u3001 mongo \u3001 mysql \u3001 httpd \u3001 php \u3001 tomcat\u7b49\uff1b\u4e5f\u6709\u4e00\u4e9b\u65b9\u4fbf\u5f00\u53d1\u3001\u6784\u5efa\u3001\u8fd0\u884c\u5404\u79cd\u8bed\u8a00\u5e94\u7528\u7684\u955c\u50cf\uff0c\u5982 node \u3001 openjdk \u3001 python \u3001 ruby \u3001 golang \u7b49\u3002\u53ef\u4ee5\u5728\u5176\u4e2d\u5bfb\u627e\u4e00\u4e2a\u6700\u7b26\u5408\u6211\u4eec\u6700\u7ec8\u76ee\u6807\u7684\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\u8fdb\u884c\u5b9a\u5236\u3002 \u5982\u679c\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u670d\u52a1\u7684\u955c\u50cf\uff0c\u5b98\u65b9\u955c\u50cf\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u66f4\u4e3a\u57fa\u7840\u7684\u64cd\u4f5c\u7cfb\u7edf\u955c \u50cf\uff0c\u5982 ubuntu \u3001 debian \u3001 centos \u3001 fedora \u3001 alpine \u7b49\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u7684\u8f6f\u4ef6\u5e93\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u66f4\u5e7f\u9614\u7684\u6269\u5c55\u7a7a\u95f4\u3002 \u9664\u4e86\u9009\u62e9\u73b0\u6709\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\u5916\uff0cDocker \u8fd8\u5b58\u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u955c\u50cf\uff0c\u540d\u4e3a scratch \u3002\u8fd9\u4e2a\u955c\u50cf\u662f\u865a\u62df\u7684\u6982\u5ff5\uff0c\u5e76\u4e0d\u5b9e\u9645\u5b58\u5728\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u7a7a\u767d\u7684\u955c\u50cf\u3002 FROM scratch ... \u5982\u679c\u4f60\u4ee5 scratch \u4e3a\u57fa\u7840\u955c\u50cf\u7684\u8bdd\uff0c\u610f\u5473\u7740\u4f60\u4e0d\u4ee5\u4efb\u4f55\u955c\u50cf\u4e3a\u57fa\u7840\uff0c\u63a5\u4e0b\u6765\u6240\u5199 \u7684\u6307\u4ee4\u5c06\u4f5c\u4e3a\u955c\u50cf\u7b2c\u4e00\u5c42\u5f00\u59cb\u5b58\u5728\u3002\u4e0d\u4ee5\u4efb\u4f55\u7cfb\u7edf\u4e3a\u57fa\u7840\uff0c\u76f4\u63a5\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u8fdb\u955c\u50cf\u7684\u505a\u6cd5\u5e76\u4e0d\u7f55\u89c1\uff0c\u6bd4\u5982 swarm \u3001 coreos/etcd \u3002\u5bf9\u4e8e Linux \u4e0b\u9759\u6001\u7f16\u8bd1\u7684\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5e76\u4e0d\u9700\u8981\u6709\u64cd\u4f5c \u7cfb\u7edf\u63d0\u4f9b\u8fd0\u884c\u65f6\u652f\u6301\uff0c\u6240\u9700\u7684\u4e00\u5207\u5e93\u90fd\u5df2\u7ecf\u5728\u53ef\u6267\u884c\u6587\u4ef6\u91cc\u4e86\uff0c\u56e0\u6b64\u76f4\u63a5 FROM scratch \u4f1a\u8ba9\u955c\u50cf\u4f53\u79ef\u66f4\u52a0\u5c0f\u5de7\u3002\u4f7f\u7528 Go \u8bed\u8a00 \u5f00\u53d1\u7684\u5e94\u7528\u5f88\u591a\u4f1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f \u6765\u5236\u4f5c\u955c\u50cf\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6709\u4eba\u8ba4\u4e3a Go \u662f\u7279\u522b\u9002\u5408\u5bb9\u5668\u5fae\u670d\u52a1\u67b6\u6784\u7684\u8bed\u8a00\u7684\u539f\u56e0\u4e4b\u4e00\u3002 \u683c\u5f0f\uff1aFROM <image> \u6216FROM <image>:<tag> \u3002 \u89e3\u91ca\uff1aFROM\u662fDockerfile\u91cc\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\uff08\u5fc5\u987b\u662f\uff09\uff0c\u540e\u9762\u8ddf\u6709\u6548\u7684\u955c\u50cf\u540d\uff08\u5982\u679c\u8be5\u955c\u50cf\u4f60\u7684\u672c\u5730\u4ed3\u5e93\u6ca1\u6709\u5219\u4f1a\u4ece\u8fdc\u7a0b\u4ed3\u5e93Pull\u53d6\uff09\u3002\u7136\u540e\u540e\u9762\u7684\u5176\u5b83\u6307\u4ee4FROM\u7684\u955c\u50cf\u4e2d\u6267\u884c\u3002\u4e00\u822c\u5728FROM\u7684\u65f6\u5019\u5efa\u8bae\u5e26\u4e0aimage\u7684tag\uff0c\u9ed8\u8ba4\u5982\u679c\u4e0d\u5e26tag\u7684\u8bdd\uff0ctag\u5c31\u662flatest\u3002 MAINTAINER \u00b6 \u683c\u5f0f\uff1aMAINTAINER <name> \u89e3\u91ca\uff1a\u6307\u5b9a\u7ef4\u62a4\u8005\u4fe1\u606f\u3002 RUN \u00b6 RUN\u547d\u4ee4\u4f1a\u5728\u524d\u4e00\u6761\u547d\u4ee4\u521b\u5efa\u51fa\u7684\u955c\u50cf\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u5e76\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u547d\u4ee4\uff0c\u5728\u547d\u4ee4\u8fd0\u884c\u7ed3\u675f\u540ecommit\u5bb9\u5668\u4e3a\u65b0\u7684\u955c\u50cf\u3002\u65b0\u7684\u955c\u50cf\u4f1a\u88abDockerfile\u4e2d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u6240\u4f7f\u7528\u3002\u56e0\u6b64\u8981\u5408\u7406\u4f7f\u7528RUN\uff0c\u907f\u514d\u5efa\u7acb\u4e0d\u5fc5\u8981\u7684\u5c42\uff0cUnion FS \u662f\u6709\u6700\u5927\u5c42\u6570\u9650\u5236\u7684\uff0c\u6bd4\u5982 AUFS\uff0c\u66fe\u7ecf\u662f\u6700\u5927\u4e0d\u5f97\u8d85\u8fc7 42 \u5c42\uff0c\u73b0\u5728\u662f \u4e0d\u5f97\u8d85\u8fc7 127 \u5c42\u3002\u8fd9\u91cc\u8981\u76f8\u5bf9\u5408\u7406\u4f7f\u7528\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u5c42\u6570\u4e0d\u610f\u5473\u7740\u5c06\u6240\u6709\u7684\u547d\u4ee4\u90fd\u5199\u5728\u4e00\u4e2aRUN\u6307\u4ee4\u4e2d\uff0c\u63d0\u4ea4\u955c\u50cf\u672c\u8eab\u662f\u5ec9\u4ef7\u7684\uff0c\u5408\u7406\u7684\u5206\u5c42\u662f\u7b26\u5408Docker\u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u8fd9\u5f88\u50cf\u6e90\u7801\u7248\u672c\u63a7\u5236\u3002 \u8fd9\u91cc\u5408\u7406\u7684\u5206\u5c42\u6307\u7684\u662f\u4e00\u5c42\u5c31\u5e72\u4e00\u4ef6\u4e8b\u60c5\uff0c\u6bd4\u5982\u7f16\u8bd1/\u5b89\u88c5redis\uff0c\u5408\u6210\u4e00\u5c42\u5c31\u53ef\u4ee5\u4e86\u3002\u7f16\u8bd1\u5b89\u88c5\u8fc7\u7a0b\u6d89\u53ca\u5230\u7684\u547d\u4ee4\u4f7f\u7528\\\u548c\\&\\&\u5408\u5e76\u8d77\u6765\u3002 \u6700\u540e\u8fdb\u884c\u65e0\u7528\u6570\u636e\u5f97\u6e05\u7406\u662f\u4e00\u4e2a\u597d\u7684\u4e60\u60ef\uff0c\u6bd4\u5982\u4f60\u62ff\u4e86\u4e00\u4e2atar.gz\u7684\u6e90\u7801\u5305\u8fdb\u53bb\uff0c\u90a3\u4e48\u5b89\u88c5\u4e00\u5207\u5c31\u7eea\u4ee5\u540e\u5728\u6700\u540e\u5e94\u8be5\u505a\u6e05\u7406\u7684\u5de5\u4f5c\uff0c\u5220\u6389\u65e0\u7528\u7684\u5185\u5bb9\uff0c\u6bd4\u5982\u4e3a\u4e86\u7f16\u8bd1\u6784\u5efa\u6240\u9700\u8981\u7684\u8f6f\u4ef6\uff0c\u4e0b\u8f7d\u7684\u538b\u7f29\u5305\uff0cyum\u6216\u8005\u662fapt-get\u7684\u7f13\u5b58\u6587\u4ef6\uff0c\u907f\u514d\u9010\u5c42\u6784\u5efa\u8d77\u6765\u7684\u955c\u50cf\u6587\u4ef6\u662f\u4e00\u4e2a\u81c3\u80bf\u7684\u955c\u50cf\u3002 RUN\u652f\u6301\u4e24\u79cd\u6a21\u5f0f\uff0cRUN command\u7684\u6a21\u5f0f\u79f0\u4e3ashell\u6a21\u5f0f\uff0c\u8c03\u7528\u7684\u662f/bin/sh -c\u6765\u8fd0\u884c\uff1b\u7b2c\u4e8c\u79cd\u6a21\u5f0f\u4e3aexec\u6a21\u5f0f\uff0c\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u547d\u4ee4\u662f\u76f4\u63a5\u8fd0\u884c\u7684\uff0c\u800c\u4e0d\u8c03\u7528shell\u7a0b\u5e8f\uff0cexec\u683c\u5f0f\u4e2d\u7684\u53c2\u6570\u4f1a\u88ab\u5f53\u6210JSON\u6570\u7ec4\u88abDocker\u89e3\u6790\uff0c\u56e0\u6b64\u8fd9\u91cc\u9762\u7684\u53c2\u6570\u90fd\u8981\u88ab\u53cc\u5f15\u53f7\uff08\u53cc\u5f15\u53f7\u5fc5\u987b\uff09\u5f15\u8d77\u6765\uff0c\u5355\u5f15\u53f7\u4e0d\u662f\u6807\u51c6\u7684JSON\u683c\u5f0f\u3002 exec\u6a21\u5f0f\u4e0b\u73af\u5883\u53d8\u91cf\u7684\u53c2\u6570\u4e0d\u4f1a\u88ab\u66ff\u6362\uff0c\u56e0\u4e3aexec\u6a21\u5f0f\u5e76\u4e0d\u8c03\u7528shell\uff0c\u56e0\u6b64\u6bd4\u5982\u4f60 CMD [\"echo\",\"$HOME\"] \u7684\u65f6\u5019$HOME\u5e76\u4e0d\u4f1a\u88ab\u53d8\u91cf\u66ff\u6362\u6389\u3002\u5982\u679c\u5e0c\u671b\u88ab\u53d8\u91cf\u66ff\u6362\u6389\u53ef\u4ee5\u8c03\u7528shell\uff0c\u6bd4\u5982 CMD [\"sh\",\"-c\",\"echo\",\"$HOME\"] \u683c\u5f0f\uff1a RUN <command> RUN [\"executable\", \"param1\", \"param2\"]\u3002 \u89e3\u91ca\uff1a\u8fd0\u884c\u547d\u4ee4\uff0c\u547d\u4ee4\u8f83\u957f\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u907f\u514dRUN\u591a\u6b21\uff0c\u5efa\u7acb\u591a\u4e2a\u4e0d\u5fc5\u8981\u7684\u5c42\uff08 \u5f88\u591a\u8fd0\u884c\u65f6\u4e0d\u9700\u8981\u7684\u4e1c\u897f\uff0c\u90fd\u88ab\u88c5\u8fdb\u4e86\u955c\u50cf\u91cc\uff0c\u6bd4\u5982\u7f16\u8bd1\u73af\u5883\u3001\u66f4\u65b0\u7684\u8f6f\u4ef6\u5305\u7b49\u7b49\u3002\u7ed3\u679c\u5c31\u662f\u4ea7\u751f \u975e\u5e38\u81c3\u80bf\u3001\u975e\u5e38\u591a\u5c42\u7684\u955c\u50cf\uff0c\u4e0d\u4ec5\u4ec5\u589e\u52a0\u4e86\u6784\u5efa\u90e8\u7f72\u7684\u65f6\u95f4\uff0c\u4e5f\u5f88\u5bb9\u6613\u51fa\u9519 \uff09\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\\\u6765\u6362\u884c\uff0c\u7efc\u5408\u6210\u4e00\u884c\u6765\u5904\u7406\uff0c\u53c2\u8003\u5982\u4e0b\uff1a(\u63a8\u8350\u4f7f\u7528exec\u683c\u5f0f) FROM debian:jessie RUN buildDeps = 'gcc libc6-dev make' \\ && apt-get update \\ && apt-get install -y $buildDeps \\ && wget -O redis.tar.gz \"http://download.redis.io/releases/redis-3.2.5.tar.gz\" \\ && mkdir -p /usr/src/redis \\ && tar -xzf redis.tar.gz -C /usr/src/redis --strip-components = 1 \\ && make -C /usr/src/redis \\ && make -C /usr/src/redis install \\ && rm -rf /var/lib/apt/lists/* \\ && rm redis.tar.gz \\ && rm -r /usr/src/redis \\ && apt-get purge -y --auto-remove $buildDeps CMD \u00b6 \u683c\u5f0f\uff1a CMD [\"executable\",\"param1\",\"param2\"] \u4f7f\u7528 exec \u6267\u884c\uff0c\u63a8\u8350\u65b9\u5f0f\uff1b CMD command param1 param2 \u5728 /bin/sh \u4e2d\u6267\u884c\uff0c\u63d0\u4f9b\u7ed9\u9700\u8981\u4ea4\u4e92\u7684\u5e94\u7528\uff1b CMD [\"param1\",\"param2\"] \u63d0\u4f9b\u7ed9ENTRYPOINT\u7684\u9ed8\u8ba4\u53c2\u6570\uff1b \u89e3\u91ca\uff1a CMD\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u662f\u6267\u884c\u7684\u547d\u4ee4\uff0c\u6bcf\u4e2aDockerfile\u53ea\u80fd\u6709\u4e00\u6761CMD\u547d\u4ee4\uff0c\u5982\u679c\u6307\u5b9a\u4e86\u591a\u6761\uff0c\u53ea\u6709\u6700\u540e\u4e00\u6761\u4f1a\u88ab\u6267\u884c\u3002\u5982\u679c\u4f60\u5728\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\u4e5f\u6307\u5b9a\u7684\u547d\u4ee4\uff0c\u90a3\u4e48\u4f1a\u8986\u76d6Dockerfile\u6784\u5efa\u7684\u955c\u50cf\u91cc\u9762\u7684CMD\u547d\u4ee4\u3002 ENTRYPOINT \u00b6 \u683c\u5f0f\uff1a ENTRYPOINT [\"executable\", \"param1\",\"param2\"] ENTRYPOINT command param1 param2\uff08shell\u4e2d\u6267\u884c\uff09\u3002 \u89e3\u91ca\uff1a\u548cCMD\u7c7b\u4f3c\u90fd\u662f\u914d\u7f6e\u5bb9\u5668\u542f\u52a8\u540e\u6267\u884c\u7684\u547d\u4ee4\uff0c\u5e76\u4e14\u4e0d\u53ef\u88ab docker run \u63d0\u4f9b\u7684\u53c2\u6570\u8986\u76d6\u3002 \u6bcf\u4e2a Dockerfile \u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aENTRYPOINT\uff0c\u5f53\u6307\u5b9a\u591a\u4e2a\u65f6\uff0c\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u8d77\u6548\u3002ENTRYPOINT\u6ca1\u6709CMD\u7684\u53ef\u66ff\u6362\u7279\u6027\uff0c\u4e5f\u5c31\u662f\u4f60\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\u589e\u52a0\u8fd0\u884c\u7684\u547d\u4ee4\u4e0d\u4f1a\u8986\u76d6ENTRYPOINT\u6307\u5b9a\u7684\u547d\u4ee4\u3002 \u6240\u4ee5\u751f\u4ea7\u5b9e\u8df5\u4e2d\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528ENTRYPOINT\u548cCMD\uff0c\u4f8b\u5982\uff1a ENTRYPOINT [\"/usr/bin/rethinkdb\"] CMD [\"--help\"] USER \u00b6 \u683c\u5f0f\uff1aUSER daemon \u89e3\u91ca\uff1a\u6307\u5b9a\u8fd0\u884c\u5bb9\u5668\u65f6\u7684\u7528\u6237\u540d\u548cUID\uff0c\u540e\u7eed\u7684RUN\u6307\u4ee4\u4e5f\u4f1a\u4f7f\u7528\u8fd9\u91cc\u6307\u5b9a\u7684\u7528\u6237\u3002 EXPOSE \u00b6 \u683c\u5f0f\uff1aEXPOSE <port> [<port>\u2026] \u89e3\u91ca\uff1a\u8bbe\u7f6eDocker\u5bb9\u5668\u5185\u90e8\u66b4\u9732\u7684\u7aef\u53e3\u53f7\uff0c\u5982\u679c\u9700\u8981\u5916\u90e8\u8bbf\u95ee\uff0c\u8fd8\u9700\u8981\u542f\u52a8\u5bb9\u5668\u65f6\u589e\u52a0-p\u6216\u8005-P\u53c2\u6570\u8fdb\u884c\u5206\u914d\u3002 ENV \u00b6 \u683c\u5f0f\uff1a ENV <key> <value> ENV <key>=<value> ... \u89e3\u91ca\uff1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4ee5\u5728RUN\u4e4b\u524d\u4f7f\u7528\uff0c\u7136\u540eRUN\u547d\u4ee4\u65f6\u8c03\u7528\uff0c\u5bb9\u5668\u542f\u52a8\u65f6\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\u90fd\u4f1a\u88ab\u6307\u5b9a ADD \u00b6 \u683c\u5f0f\uff1a ADD <src>... <dest> ADD [\"<src>\",... \"<dest>\"] \u89e3\u91ca\uff1a\u5c06\u6307\u5b9a\u7684\\<src>\u590d\u5236\u5230\u5bb9\u5668\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\\<dest> \u6240\u6709\u62f7\u8d1d\u5230container\u4e2d\u7684\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u6743\u9650\u4e3a0755,uid\u548cgid\u4e3a0 \u5982\u679c\u6587\u4ef6\u662f\u53ef\u8bc6\u522b\u7684\u538b\u7f29\u683c\u5f0f\uff0c\u5219docker\u4f1a\u5e2e\u5fd9\u89e3\u538b\u7f29 VOLUME \u00b6 \u683c\u5f0f\uff1aVOLUME [\"/data\"] \u89e3\u91ca\uff1a\u53ef\u4ee5\u5c06\u672c\u5730\u6587\u4ef6\u5939\u6216\u8005\u5176\u4ed6container\u7684\u6587\u4ef6\u5939\u6302\u8f7d\u5230container\u4e2d\u3002 WORKDIR \u00b6 \u683c\u5f0f\uff1aWORKDIR/path/to/workdir \u89e3\u91ca\uff1a\u5207\u6362\u76ee\u5f55\uff0c\u4e3a\u540e\u7eed\u7684RUN\u3001CMD\u3001ENTRYPOINT \u6307\u4ee4\u914d\u7f6e\u5de5\u4f5c\u76ee\u5f55\u3002 \u53ef\u4ee5\u591a\u6b21\u5207\u6362(\u76f8\u5f53\u4e8ecd\u547d\u4ee4)\uff0c \u4e5f\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2aWORKDIR \u6307\u4ee4\uff0c\u540e\u7eed\u547d\u4ee4\u5982\u679c\u53c2\u6570\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u5219\u4f1a\u57fa\u4e8e\u4e4b\u524d\u547d\u4ee4\u6307\u5b9a\u7684\u8def\u5f84\u3002 \u4f8b\u5982 WORKDIR /a WORKDIR b WORKDIR c RUN pwd \u5219\u6700\u7ec8\u8def\u5f84\u4e3a /a/b/c\u3002 ONBUILD \u00b6 ONBUILD \u6307\u5b9a\u7684\u547d\u4ee4\u5728\u6784\u5efa\u955c\u50cf\u65f6\u5e76\u4e0d\u6267\u884c\uff0c\u800c\u662f\u5728\u5b83\u7684\u5b50\u955c\u50cf\u4e2d\u6267\u884c ARG \u00b6 \u683c\u5f0f\uff1aARG <name>[=<default value>] \u89e3\u91ca\uff1aARG\u6307\u5b9a\u4e86\u4e00\u4e2a\u53d8\u91cf\u5728docker build\u7684\u65f6\u5019\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528--build-arg <varname>=<value> \u6765\u6307\u5b9a\u53c2\u6570\u7684\u503c\uff0c\u4e0d\u8fc7\u5982\u679c\u6784\u5efa\u7684\u65f6\u5019\u4e0d\u6307\u5b9a\u5c31\u4f1a\u62a5\u9519\u3002 \u53c2\u8003\u81ea\u8fd0\u7ef4\u793e\u533a\uff1a https://mp.weixin.qq.com/s/A8KSp3zmpL_u9a2aYv8WYw","title":"04-Dockerfle"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#dockerfile","text":"Dockerfile\u662f\u4e3a\u5feb\u901f\u6784\u5efadocker image\u800c\u8bbe\u8ba1\u7684\uff0c\u5f53\u4f60\u4f7f\u7528docker build \u547d\u4ee4\u7684\u65f6\u5019\uff0cdocker \u4f1a\u8bfb\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u547d\u540d\u4e3aDockerfile(\u9996\u5b57\u6bcd\u5927\u5199)\u7684\u7eaf\u6587\u672c\u6587\u4ef6\u5e76\u6267\u884c\u91cc\u9762\u7684\u6307\u4ee4\u6784\u5efa\u51fa\u4e00\u4e2adocker image\u3002\u8fd9\u6bd4SaltStack\u7684\u914d\u7f6e\u7ba1\u7406\u8981\u7b80\u5355\u7684\u591a\uff0c\u4e0d\u8fc7\u8fd8\u662f\u8981\u638c\u63e1\u4e00\u4e9b\u7b80\u5355\u7684\u6307\u4ee4\u3002 Dockerfile \u7531\u4e00\u884c\u884c\u547d\u4ee4\u8bed\u53e5\u7ec4\u6210\uff0c\u5e76\u4e14\u652f\u6301\u4ee5#\u5f00\u5934\u7684\u6ce8\u91ca\u884c\u3002\u6307\u4ee4\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u4f46\u662f\u901a\u5e38\u6211\u4eec\u90fd\u5927\u5199\uff0c\u7528\u4e8e\u548c\u540e\u9762\u7684\u5185\u5bb9\u53c2\u6570\u8fdb\u884c\u533a\u5206\u3002","title":"DockerFile"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#_1","text":"\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u6784\u5efa\u4e00\u4e2aNginx\u7684\u955c\u50cf\u6765\u5b66\u4e60Dockerfile. \u9996\u5148\u5b9e\u73b0\u521b\u5efa\u597d\u76ee\u5f55\uff0c\u6211\u8fd9\u5728opt\u4e0b\u521b\u5efa\u76ee\u5f55dockerfile\uff0c\u7136\u540e\u5728dockerfile\u76ee\u5f55\u4e0b\u521b\u5efanginx\u76ee\u5f55\uff0c\u5728nginx\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2aDockerfile\u6587\u4ef6\u3002Dcockerfile\u8fd9\u4e2a\u6587\u4ef6\u7684\u9996\u5b57\u6bcd\u8981\u5927\u5199\uff0c\u4e0d\u7136\u6709\u53ef\u80fd\u4e0d\u4f1a\u88ab\u8bc6\u522b\u3002 [ root@linux-node1 ~ ] # cd /opt/ [ root@linux-node1 opt ] # cd dockerfile/ [ root@linux-node1 dockerfile ] # cd nginx/ [ root@linux-node1 nginx ] # echo \"nginx in Docker ,hahahah\" >index.html [ root@linux-node1 nginx ] # cat Dockerfile # This Dockerfile is used to practice # Version: 1.0 # Author: lamber # Base Image FROM centos # Who will take care of this image MAINTAINER lamber 1020561033 @qq.com # Prepare Epel RUN rpm -ivh https://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm # Install Nginx and deal with the config file RUN yum -y install nginx && yum clean all RUN echo \"daemon off;\" >> /etc/nginx/nginx.conf ADD index.html /usr/share/nginx/html/index.html # Run EXPOSE 80 CMD [ \"nginx\" ] \u8bf4\u660e\uff1a FROM\uff1a\u8fd9\u4e2a\u955c\u50cf\u7684\u5988\u662f\u8c01\uff0c\u6307\u5b9a\u57fa\u7840\u955c\u50cf\uff0c\u9664\u4e86\u6ce8\u91ca\u5916\u7684\u7b2c\u4e00\u884c\u5fc5\u987b\u662f\u4ed6\u3002\u5982\u679c\u672c\u5730\u6ca1\u6709\u8fd9\u4e2a\u955c\u50cf\uff0c\u5b83\u4f1a\u7ed9\u4f60pull\u4e0b\u6765\u3002 MAINTAINER\uff1a\u544a\u8bc9\u522b\u4eba\u8c01\u8d1f\u8d23\u517b\u4ed6\uff0c\u6307\u5b9a\u7ef4\u62a4\u8005\u7684\u4fe1\u606f RUN\uff1a\u4f60\u60f3\u8ba9\u4ed6\u5e72\u5565\uff0c\u5728\u547d\u4ee4\u524d\u9762\u52a0\u4e0aRUN\u5c31\u53ef\u4ee5\u4e86\u3002 ADD\uff1a\u7ed9\u5b83\u70b9\u521b\u4e1a\u8d44\u91d1\uff0ccopy\u6587\u4ef6\u8fdb\u53bb\uff0c\u4f1a\u81ea\u52a8\u89e3\u538b WORKDIR\uff1a\u6211\u662fcd\uff0c\u4eca\u5929\u521a\u5316\u4e86\u5986\uff08\u8bbe\u7f6e\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\uff09 VOLUME\uff1a\u7ed9\u5b83\u4e00\u4e2a\u5b58\u653e\u884c\u674e\u7684\u5730\u65b9\uff0c\u8bbe\u7f6e\u5377\uff0c\u6302\u8f7d\u4e3b\u673a\u76ee\u5f55 EXPOSE\uff1a\u5b83\u8981\u6253\u5f00\u7684\u95e8\u662f\u5565\uff0c\u6307\u5b9a\u5bf9\u5916\u7684\u7aef\u53e3 CMD\uff1a\u5954\u8dd1\u5427\uff0c\u5144\u5f1f\uff0c\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u540e\u8981\u5e72\u7684\u4e8b\u60c5\uff0c\u8fd9\u91cc\u53cc\u5f15\u4e00\u4e0b\uff0c\u5355\u5f15\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\u3002\u3002\u3002\u3002 \u6784\u5efadocker\u955c\u50cf\uff08\u540e\u9762\u90a3\u4e2a\u70b9\u5c31\u662f\u5728\u5f53\u524d\u76ee\u5f55\uff0c\u610f\u601d\u662f\u544a\u8bc9docker\u53bb\u54ea\u91cc\u627e\u8fd9\u4e2adockerfile\uff0c\u4e00\u4e2a\u70b9\u5c31\u662f\u5728\u5f53\u524d\u76ee\u5f55\u627edockerfile\uff0c\u8fd9\u4e2a\u4f60\u4e5f\u53ef\u4ee5\u5199\u7edd\u5bf9\u8def\u5f84\u4e5f\u662fok\u7684\uff09\uff0c\u7136\u540e\u521b\u5efa\u5bb9\u5668\uff1a [ root@linux-node1 nginx ] # docker build -t mynginx:v2 . [ root@linux-node1 nginx ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE mynginx v2 5104f2ed9887 5 seconds ago 280 .7 MB nginx/mynginx v1 81f1607bb8a0 32 minutes ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182 .5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192 .5 MB [ root@linux-node1 nginx ] # docker run --name mynginxv2 -d -p 82:80 mynginx:v2 nginx a1efc632ba6d2412c3bc9fded592ca289c0f6c14dd1832118fc52539a2c1123f \u8d77\u6765\u4ee5\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7f51\u9875\u7aef\u8fdb\u884c\u6d4b\u8bd5\u4e86\uff01","title":"\u7b80\u5355\u793a\u4f8b"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#docker-build","text":"","title":"Docker Build"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#docker-build-from-local","text":"\u4e0a\u9762\u7684\u547d\u4ee4\u4f7f\u7528docker build\u7684\u540c\u65f6\u4e3a\u6211\u4eec\u7684\u65b0\u955c\u50cf\u6253\u4e86tag\uff0c\u4f46\u662f\u540e\u9762\u8ddf\u4e86\u4e00\u4e2a . \u3002\u8fd9\u4e2a\u70b9\u5176\u5b9e\u5c31\u662f\u5f53\u524d\u76ee\u5f55\u7684\u610f\u601d\uff0c\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u8ba9docker build\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627eDockerfile\uff0c\u4f46\u662f\u8fd9\u4e2a\u8def\u5f84\u5e76\u4e0d\u662f\u6307\u5b9aDockerfile\u7684\u8def\u5f84\uff0c\u800c\u662f\u6307\u5b9a\u4e0a\u4e0b\u6587\u7684\u8def\u5f84\u3002 \u9996\u5148\u6211\u4eec\u8981\u7406\u89e3 docker build \u7684\u5de5\u4f5c\u539f\u7406\u3002Docker \u5728\u8fd0\u884c\u65f6\u5206\u4e3aDocker\u5f15\u64ce \uff08\u4e5f\u5c31\u662f\u670d\u52a1\u7aef\u5b88\u62a4\u8fdb\u7a0b\uff09\u548c\u5ba2\u6237\u7aef\u5de5\u5177\u3002Docker \u7684\u5f15\u64ce\u63d0\u4f9b\u4e86\u4e00\u7ec4 REST API\uff0c \u88ab\u79f0\u4e3a Docker Remote API\uff0c\u800c\u5982 docker \u547d\u4ee4\u8fd9\u6837\u7684\u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u5219\u662f\u901a\u8fc7\u8fd9\u7ec4 API \u4e0e Docker \u5f15\u64ce\u4ea4\u4e92\uff0c\u4ece\u800c\u5b8c\u6210\u5404\u79cd\u529f\u80fd\u3002\u56e0\u6b64\uff0c\u867d\u7136\u8868\u9762\u4e0a\u6211\u4eec\u597d\u50cf\u662f\u5728 \u672c\u673a\u6267\u884c\u5404\u79cd docker \u529f\u80fd\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u4e00\u5207\u90fd\u662f\u4f7f\u7528\u7684\u8fdc\u7a0b\u8c03\u7528\u5f62\u5f0f\u5728\u670d\u52a1\u7aef \uff08Docker \u5f15\u64ce\uff09\u5b8c\u6210\u3002\u4e5f\u56e0\u4e3a\u8fd9\u79cd C/S \u8bbe\u8ba1\uff0c\u8ba9\u6211\u4eec\u64cd\u4f5c\u8fdc\u7a0b\u670d\u52a1\u5668\u7684 Docker \u5f15 \u64ce\u53d8\u5f97\u8f7b\u800c\u6613\u4e3e\u3002 \u5f53\u6211\u4eec\u8fdb\u884c\u955c\u50cf\u6784\u5efa\u7684\u65f6\u5019\uff0c\u5e76\u975e\u6240\u6709\u5b9a\u5236\u90fd\u4f1a\u901a\u8fc7 RUN \u6307\u4ee4\u5b8c\u6210\uff0c\u7ecf\u5e38\u4f1a\u9700\u8981 \u5c06\u4e00\u4e9b\u672c\u5730\u6587\u4ef6\u590d\u5236\u8fdb\u955c\u50cf\uff0c\u6bd4\u5982\u901a\u8fc7 COPY \u6307\u4ee4\u3001 ADD \u6307\u4ee4\u7b49\u3002\u800c docker build \u547d\u4ee4\u6784\u5efa\u955c\u50cf\uff0c\u5176\u5b9e\u5e76\u975e\u5728\u672c\u5730\u6784\u5efa\uff0c\u800c\u662f\u5728\u670d\u52a1\u7aef\uff0c\u4e5f\u5c31\u662f Docker \u5f15\u64ce\u4e2d\u6784\u5efa\u7684\u3002\u90a3\u4e48\u5728\u8fd9\u79cd\u5ba2\u6237\u7aef/\u670d\u52a1\u7aef\u7684\u67b6\u6784\u4e2d\uff0c\u5982\u4f55\u624d\u80fd\u8ba9\u670d\u52a1\u7aef\u83b7\u5f97\u672c\u5730\u6587\u4ef6\u5462\uff1f \u8fd9\u5c31\u5f15\u5165\u4e86\u4e0a\u4e0b\u6587\u7684\u6982\u5ff5\u3002\u5f53\u6784\u5efa\u7684\u65f6\u5019\uff0c\u7528\u6237\u4f1a\u6307\u5b9a\u6784\u5efa\u955c\u50cf\u4e0a\u4e0b\u6587\u7684\u8def\u5f84\uff0c docker build \u547d\u4ee4\u5f97\u77e5\u8fd9\u4e2a\u8def\u5f84\u540e\uff0c\u4f1a\u5c06\u8def\u5f84\u4e0b\u7684\u6240\u6709\u5185\u5bb9\u6253\u5305\uff0c\u7136\u540e\u4e0a\u4f20\u7ed9Docker\u5f15\u64ce\u3002\u8fd9\u6837 Docker\u5f15\u64ce\u6536\u5230\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u5305\u540e\uff0c\u5c55\u5f00\u5c31\u4f1a\u83b7\u5f97\u6784\u5efa\u955c\u50cf\u6240\u9700\u7684\u4e00\u5207\u6587\u4ef6\uff0c\u6bd4\u5982\uff1a COPY ./package.json /app/ \u8fd9\u5e76\u4e0d\u662f\u8981\u590d\u5236\u6267\u884cdocker build\u547d\u4ee4\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u7684 package.json\uff0c\u4e5f\u4e0d\u662f\u590d\u5236 Dockerfile \u6240\u5728\u76ee\u5f55\u4e0b\u7684 package.json ,\u800c\u662f\u590d\u5236\u4e0a\u4e0b\u6587\uff08context\uff09 \u76ee\u5f55\u4e0b\u7684package.json\u3002 \u56e0\u6b64\uff0c COPY \u8fd9\u7c7b\u6307\u4ee4\u4e2d\u7684\u6e90\u6587\u4ef6\u7684\u8def\u5f84\u90fd\u662f\u76f8\u5bf9\u8def\u5f84\u3002\u8fd9\u4e5f\u662f\u521d\u5b66\u8005\u7ecf\u5e38\u4f1a\u95ee \u7684\u4e3a\u4ec0\u4e48 COPY ../package.json /app \u6216\u8005 COPY /opt/xxxx /app \u65e0\u6cd5\u5de5\u4f5c\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u8def\u5f84\u5df2\u7ecf\u8d85\u51fa\u4e86\u4e0a\u4e0b\u6587\u7684\u8303\u56f4\uff0cDocker \u5f15\u64ce\u65e0\u6cd5\u83b7\u5f97\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u6587\u4ef6\u3002\u5982\u679c\u771f\u7684\u9700\u8981\u90a3\u4e9b\u6587\u4ef6\uff0c\u5e94\u8be5\u5c06\u5b83\u4eec\u590d\u5236\u5230\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d\u53bb\u3002 \u73b0\u5728\u5c31\u53ef\u4ee5\u7406\u89e3\u5982\u4e0a\u6784\u5efa\u547d\u4ee4 \u4e2d\u7684\u8fd9\u4e2a . \uff0c\u5b9e\u9645 \u4e0a\u662f\u5728\u6307\u5b9a\u4e0a\u4e0b\u6587\u7684\u76ee\u5f55\uff0c docker build \u547d\u4ee4\u4f1a\u5c06\u8be5\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\u6253\u5305\u4ea4\u7ed9 Docker \u5f15\u64ce\u4ee5\u5e2e\u52a9\u6784\u5efa\u955c\u50cf\u3002\uff08\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u6211\u4eec\u662f\u53ef\u4ee5\u770b\u5230\u53d1\u5f80Docker daemon\u7684\u65e5\u5fd7\u7684\uff09 \u4e00\u822c\u7684\u4f7f\u7528\u65b9\u6cd5\u662f\uff0c\u5bf9\u5e94\u7684\u9879\u76ee\u6709\u5bf9\u5e94\u7684\u76ee\u5f55\u5b58\u653e\uff0cDockerfile\u653e\u5230\u5bf9\u5e94\u7684\u9879\u76ee\u91cc\u9762\u53bb\uff0c\u5982\u679c\u6709\u6587\u4ef6\u9700\u8981\u4f20\u5230\u955c\u50cf\u91cc\u9762\u53bb\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u628a\u5bf9\u5e94\u7684\u6587\u4ef6\u4e5f\u590d\u5236\u4e00\u4efd\u653e\u5230\u8fd9\u91cc\u3002\u5982\u679c\u76ee\u5f55\u4e0b\u6709\u4e9b\u4e1c\u897f\u786e\u5b9e\u4e0d\u5e0c\u671b\u6784\u5efa\u7684\u65f6\u5019\u4f20\u7ed9Docker\u5f15\u64ce\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528.gitignore\u4e00\u6837\u7684\u8bed\u6cd5\u6765\u5199\u4e00\u4e2a.dockerignore\uff0c\u8be5\u6587\u4ef6\u662f\u7528\u6765\u5254\u9664\u4e0d\u9700\u8981\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u4f20\u9012\u7ed9Docker Engine\u7684\u6587\u4ef6\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e0d\u6307\u5b9aDockerfile\u7684\u8bdd\uff0c\u4f1a\u5c06\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e0b\u7684\u540d\u4e3aDockerfile\u7684\u6587\u4ef6\u4f5c\u4e3aDockerfile\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6587\u4ef6\u540d\u4e0d\u4e00\u5b9a\u5fc5\u987b\u5f97\u662fDockerfile\uff0c\u4e5f\u4e0d\u662f\u8981\u6c42Dockerfile\u5fc5\u987b\u4f4d\u4e8e\u4e0a\u4e0b\u6587\u76ee\u5f55\uff0c\u53ef\u4ee5\u901a\u8fc7-f\u53c2\u6570\u53bb\u6307\u5b9a\u67d0\u4e00\u4e2a\u6587\u4ef6\u6765\u4f5c\u4e3aDockerfile\uff0c\u4f46\u662f\u4e60\u60ef\u6027\u7684\u90fd\u662f\u9ed8\u8ba4\u4f7f\u7528Dockerfile\u4e3a\u540d\u79f0\uff0c\u800c\u4e14\u653e\u5230\u4e0a\u4e0b\u5348\u76ee\u5f55\u73af\u5883\u91cc\u3002","title":"Docker build from Local"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#docker-build-from-remote","text":"\u8fd9\u4e2a\u547d\u4ee4\u6307\u5b9a\u4e86\u6784\u5efa\u6240\u9700\u8981\u7684Git Repo\uff0c\u5e76\u4e14\u9ed8\u8ba4\u6267\u884cmaster\u5206\u652f\uff0c\u6784\u5efa\u76ee\u5f55\u4e3a8.14\uff0c\u7136\u540eDocker\u4f1a\u81ea\u5df1\u53bbclone\u8fd9\u4e2a\u9879\u76ee\uff0c\u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\uff0c\u5e76\u8fdb\u5165\u5230\u6307\u5b9a\u76ee\u5f55\u540e\u5f00\u59cb\u521b\u5efa\u3002 $ docker build https://github.com/twang2218/gitlab-ce-zh.git #:8.14 docker build https://github.com/twang2218/gitlab-ce-zh.git \\# :8.14 Sending build context to Docker daemon 2 .048 kB Step 1 : FROM gitlab/gitlab-ce:8.14.0-ce.0 8 .14.0-ce.0: Pulling from gitlab/gitlab-ce aed15891ba52: Already exists 773ae8583d14: Already exists \u2026\u2026","title":"Docker build from Remote"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#docker-build-from-tar","text":"\u5982\u679c\u6240\u7ed9\u51fa\u7684URL\u4e0d\u662fGit repo\uff0c\u800c\u662f\u4e2atar\u538b\u7f29\u5305\uff0c\u90a3\u4e48Docker\u5f15\u64ce\u4f1a\u4e0b\u8f7d\u8fd9\u4e2a\u5305\uff0c\u5e76\u81ea\u52a8\u89e3\u538b\u7f29\uff0c\u4ee5\u5176\u4f5c\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5f00\u59cb\u6784\u5efa\u3002 docker build http://server/context.tar.gz","title":"Docker build from tar"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#docker-build-from-stdin","text":"docker build - < Dockerfile \u6216\u8005 cat Dockerfile | docker build - \u5982\u679c\u6807\u51c6\u8f93\u5165\u4f20\u5165\u7684\u662f\u6587\u672c\u6587\u4ef6\uff0c\u5219\u5c06\u5176\u89c6\u4e3a Dockerfile \uff0c\u5e76\u5f00\u59cb\u6784\u5efa\u3002\u8fd9\u79cd \u5f62\u5f0f\u7531\u4e8e\u76f4\u63a5\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6 Dockerfile \u7684\u5185\u5bb9\uff0c\u5b83\u6ca1\u6709\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u50cf \u5176\u4ed6\u65b9\u6cd5\u90a3\u6837\u53ef\u4ee5\u5c06\u672c\u5730\u6587\u4ef6 COPY \u8fdb\u955c\u50cf\u4e4b\u7c7b\u7684\u4e8b\u60c5\u3002 docker build - < context.tar.gz \u5982\u679c\u53d1\u73b0\u6807\u51c6\u8f93\u5165\u7684\u6587\u4ef6\u683c\u5f0f\u662f gzip \u3001 bzip2 \u4ee5\u53ca xz \u7684\u8bdd\uff0c\u5c06\u4f1a\u4f7f\u5176\u4e3a\u4e0a \u4e0b\u6587\u538b\u7f29\u5305\uff0c\u76f4\u63a5\u5c06\u5176\u5c55\u5f00\uff0c\u5c06\u91cc\u9762\u89c6\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5e76\u5f00\u59cb\u6784\u5efa\u3002","title":"Docker build from stdin"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#dockerfile_1","text":"","title":"Dockerfile\u6307\u4ee4\u8be6\u89e3"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#from","text":"\u5728 Docker Store \u4e0a\u6709\u975e\u5e38\u591a\u7684\u9ad8\u8d28\u91cf\u7684\u5b98\u65b9\u955c\u50cf\uff0c\u6709\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u4f7f\u7528\u7684\u670d\u52a1\u7c7b\u7684 \u955c\u50cf\uff0c\u5982 nginx \u3001 redis \u3001 mongo \u3001 mysql \u3001 httpd \u3001 php \u3001 tomcat\u7b49\uff1b\u4e5f\u6709\u4e00\u4e9b\u65b9\u4fbf\u5f00\u53d1\u3001\u6784\u5efa\u3001\u8fd0\u884c\u5404\u79cd\u8bed\u8a00\u5e94\u7528\u7684\u955c\u50cf\uff0c\u5982 node \u3001 openjdk \u3001 python \u3001 ruby \u3001 golang \u7b49\u3002\u53ef\u4ee5\u5728\u5176\u4e2d\u5bfb\u627e\u4e00\u4e2a\u6700\u7b26\u5408\u6211\u4eec\u6700\u7ec8\u76ee\u6807\u7684\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\u8fdb\u884c\u5b9a\u5236\u3002 \u5982\u679c\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u670d\u52a1\u7684\u955c\u50cf\uff0c\u5b98\u65b9\u955c\u50cf\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u66f4\u4e3a\u57fa\u7840\u7684\u64cd\u4f5c\u7cfb\u7edf\u955c \u50cf\uff0c\u5982 ubuntu \u3001 debian \u3001 centos \u3001 fedora \u3001 alpine \u7b49\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u7684\u8f6f\u4ef6\u5e93\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u66f4\u5e7f\u9614\u7684\u6269\u5c55\u7a7a\u95f4\u3002 \u9664\u4e86\u9009\u62e9\u73b0\u6709\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\u5916\uff0cDocker \u8fd8\u5b58\u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u955c\u50cf\uff0c\u540d\u4e3a scratch \u3002\u8fd9\u4e2a\u955c\u50cf\u662f\u865a\u62df\u7684\u6982\u5ff5\uff0c\u5e76\u4e0d\u5b9e\u9645\u5b58\u5728\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u7a7a\u767d\u7684\u955c\u50cf\u3002 FROM scratch ... \u5982\u679c\u4f60\u4ee5 scratch \u4e3a\u57fa\u7840\u955c\u50cf\u7684\u8bdd\uff0c\u610f\u5473\u7740\u4f60\u4e0d\u4ee5\u4efb\u4f55\u955c\u50cf\u4e3a\u57fa\u7840\uff0c\u63a5\u4e0b\u6765\u6240\u5199 \u7684\u6307\u4ee4\u5c06\u4f5c\u4e3a\u955c\u50cf\u7b2c\u4e00\u5c42\u5f00\u59cb\u5b58\u5728\u3002\u4e0d\u4ee5\u4efb\u4f55\u7cfb\u7edf\u4e3a\u57fa\u7840\uff0c\u76f4\u63a5\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u8fdb\u955c\u50cf\u7684\u505a\u6cd5\u5e76\u4e0d\u7f55\u89c1\uff0c\u6bd4\u5982 swarm \u3001 coreos/etcd \u3002\u5bf9\u4e8e Linux \u4e0b\u9759\u6001\u7f16\u8bd1\u7684\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5e76\u4e0d\u9700\u8981\u6709\u64cd\u4f5c \u7cfb\u7edf\u63d0\u4f9b\u8fd0\u884c\u65f6\u652f\u6301\uff0c\u6240\u9700\u7684\u4e00\u5207\u5e93\u90fd\u5df2\u7ecf\u5728\u53ef\u6267\u884c\u6587\u4ef6\u91cc\u4e86\uff0c\u56e0\u6b64\u76f4\u63a5 FROM scratch \u4f1a\u8ba9\u955c\u50cf\u4f53\u79ef\u66f4\u52a0\u5c0f\u5de7\u3002\u4f7f\u7528 Go \u8bed\u8a00 \u5f00\u53d1\u7684\u5e94\u7528\u5f88\u591a\u4f1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f \u6765\u5236\u4f5c\u955c\u50cf\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6709\u4eba\u8ba4\u4e3a Go \u662f\u7279\u522b\u9002\u5408\u5bb9\u5668\u5fae\u670d\u52a1\u67b6\u6784\u7684\u8bed\u8a00\u7684\u539f\u56e0\u4e4b\u4e00\u3002 \u683c\u5f0f\uff1aFROM <image> \u6216FROM <image>:<tag> \u3002 \u89e3\u91ca\uff1aFROM\u662fDockerfile\u91cc\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\uff08\u5fc5\u987b\u662f\uff09\uff0c\u540e\u9762\u8ddf\u6709\u6548\u7684\u955c\u50cf\u540d\uff08\u5982\u679c\u8be5\u955c\u50cf\u4f60\u7684\u672c\u5730\u4ed3\u5e93\u6ca1\u6709\u5219\u4f1a\u4ece\u8fdc\u7a0b\u4ed3\u5e93Pull\u53d6\uff09\u3002\u7136\u540e\u540e\u9762\u7684\u5176\u5b83\u6307\u4ee4FROM\u7684\u955c\u50cf\u4e2d\u6267\u884c\u3002\u4e00\u822c\u5728FROM\u7684\u65f6\u5019\u5efa\u8bae\u5e26\u4e0aimage\u7684tag\uff0c\u9ed8\u8ba4\u5982\u679c\u4e0d\u5e26tag\u7684\u8bdd\uff0ctag\u5c31\u662flatest\u3002","title":"FROM"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#maintainer","text":"\u683c\u5f0f\uff1aMAINTAINER <name> \u89e3\u91ca\uff1a\u6307\u5b9a\u7ef4\u62a4\u8005\u4fe1\u606f\u3002","title":"MAINTAINER"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#run","text":"RUN\u547d\u4ee4\u4f1a\u5728\u524d\u4e00\u6761\u547d\u4ee4\u521b\u5efa\u51fa\u7684\u955c\u50cf\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u5e76\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u547d\u4ee4\uff0c\u5728\u547d\u4ee4\u8fd0\u884c\u7ed3\u675f\u540ecommit\u5bb9\u5668\u4e3a\u65b0\u7684\u955c\u50cf\u3002\u65b0\u7684\u955c\u50cf\u4f1a\u88abDockerfile\u4e2d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u6240\u4f7f\u7528\u3002\u56e0\u6b64\u8981\u5408\u7406\u4f7f\u7528RUN\uff0c\u907f\u514d\u5efa\u7acb\u4e0d\u5fc5\u8981\u7684\u5c42\uff0cUnion FS \u662f\u6709\u6700\u5927\u5c42\u6570\u9650\u5236\u7684\uff0c\u6bd4\u5982 AUFS\uff0c\u66fe\u7ecf\u662f\u6700\u5927\u4e0d\u5f97\u8d85\u8fc7 42 \u5c42\uff0c\u73b0\u5728\u662f \u4e0d\u5f97\u8d85\u8fc7 127 \u5c42\u3002\u8fd9\u91cc\u8981\u76f8\u5bf9\u5408\u7406\u4f7f\u7528\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u5c42\u6570\u4e0d\u610f\u5473\u7740\u5c06\u6240\u6709\u7684\u547d\u4ee4\u90fd\u5199\u5728\u4e00\u4e2aRUN\u6307\u4ee4\u4e2d\uff0c\u63d0\u4ea4\u955c\u50cf\u672c\u8eab\u662f\u5ec9\u4ef7\u7684\uff0c\u5408\u7406\u7684\u5206\u5c42\u662f\u7b26\u5408Docker\u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u8fd9\u5f88\u50cf\u6e90\u7801\u7248\u672c\u63a7\u5236\u3002 \u8fd9\u91cc\u5408\u7406\u7684\u5206\u5c42\u6307\u7684\u662f\u4e00\u5c42\u5c31\u5e72\u4e00\u4ef6\u4e8b\u60c5\uff0c\u6bd4\u5982\u7f16\u8bd1/\u5b89\u88c5redis\uff0c\u5408\u6210\u4e00\u5c42\u5c31\u53ef\u4ee5\u4e86\u3002\u7f16\u8bd1\u5b89\u88c5\u8fc7\u7a0b\u6d89\u53ca\u5230\u7684\u547d\u4ee4\u4f7f\u7528\\\u548c\\&\\&\u5408\u5e76\u8d77\u6765\u3002 \u6700\u540e\u8fdb\u884c\u65e0\u7528\u6570\u636e\u5f97\u6e05\u7406\u662f\u4e00\u4e2a\u597d\u7684\u4e60\u60ef\uff0c\u6bd4\u5982\u4f60\u62ff\u4e86\u4e00\u4e2atar.gz\u7684\u6e90\u7801\u5305\u8fdb\u53bb\uff0c\u90a3\u4e48\u5b89\u88c5\u4e00\u5207\u5c31\u7eea\u4ee5\u540e\u5728\u6700\u540e\u5e94\u8be5\u505a\u6e05\u7406\u7684\u5de5\u4f5c\uff0c\u5220\u6389\u65e0\u7528\u7684\u5185\u5bb9\uff0c\u6bd4\u5982\u4e3a\u4e86\u7f16\u8bd1\u6784\u5efa\u6240\u9700\u8981\u7684\u8f6f\u4ef6\uff0c\u4e0b\u8f7d\u7684\u538b\u7f29\u5305\uff0cyum\u6216\u8005\u662fapt-get\u7684\u7f13\u5b58\u6587\u4ef6\uff0c\u907f\u514d\u9010\u5c42\u6784\u5efa\u8d77\u6765\u7684\u955c\u50cf\u6587\u4ef6\u662f\u4e00\u4e2a\u81c3\u80bf\u7684\u955c\u50cf\u3002 RUN\u652f\u6301\u4e24\u79cd\u6a21\u5f0f\uff0cRUN command\u7684\u6a21\u5f0f\u79f0\u4e3ashell\u6a21\u5f0f\uff0c\u8c03\u7528\u7684\u662f/bin/sh -c\u6765\u8fd0\u884c\uff1b\u7b2c\u4e8c\u79cd\u6a21\u5f0f\u4e3aexec\u6a21\u5f0f\uff0c\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u547d\u4ee4\u662f\u76f4\u63a5\u8fd0\u884c\u7684\uff0c\u800c\u4e0d\u8c03\u7528shell\u7a0b\u5e8f\uff0cexec\u683c\u5f0f\u4e2d\u7684\u53c2\u6570\u4f1a\u88ab\u5f53\u6210JSON\u6570\u7ec4\u88abDocker\u89e3\u6790\uff0c\u56e0\u6b64\u8fd9\u91cc\u9762\u7684\u53c2\u6570\u90fd\u8981\u88ab\u53cc\u5f15\u53f7\uff08\u53cc\u5f15\u53f7\u5fc5\u987b\uff09\u5f15\u8d77\u6765\uff0c\u5355\u5f15\u53f7\u4e0d\u662f\u6807\u51c6\u7684JSON\u683c\u5f0f\u3002 exec\u6a21\u5f0f\u4e0b\u73af\u5883\u53d8\u91cf\u7684\u53c2\u6570\u4e0d\u4f1a\u88ab\u66ff\u6362\uff0c\u56e0\u4e3aexec\u6a21\u5f0f\u5e76\u4e0d\u8c03\u7528shell\uff0c\u56e0\u6b64\u6bd4\u5982\u4f60 CMD [\"echo\",\"$HOME\"] \u7684\u65f6\u5019$HOME\u5e76\u4e0d\u4f1a\u88ab\u53d8\u91cf\u66ff\u6362\u6389\u3002\u5982\u679c\u5e0c\u671b\u88ab\u53d8\u91cf\u66ff\u6362\u6389\u53ef\u4ee5\u8c03\u7528shell\uff0c\u6bd4\u5982 CMD [\"sh\",\"-c\",\"echo\",\"$HOME\"] \u683c\u5f0f\uff1a RUN <command> RUN [\"executable\", \"param1\", \"param2\"]\u3002 \u89e3\u91ca\uff1a\u8fd0\u884c\u547d\u4ee4\uff0c\u547d\u4ee4\u8f83\u957f\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u907f\u514dRUN\u591a\u6b21\uff0c\u5efa\u7acb\u591a\u4e2a\u4e0d\u5fc5\u8981\u7684\u5c42\uff08 \u5f88\u591a\u8fd0\u884c\u65f6\u4e0d\u9700\u8981\u7684\u4e1c\u897f\uff0c\u90fd\u88ab\u88c5\u8fdb\u4e86\u955c\u50cf\u91cc\uff0c\u6bd4\u5982\u7f16\u8bd1\u73af\u5883\u3001\u66f4\u65b0\u7684\u8f6f\u4ef6\u5305\u7b49\u7b49\u3002\u7ed3\u679c\u5c31\u662f\u4ea7\u751f \u975e\u5e38\u81c3\u80bf\u3001\u975e\u5e38\u591a\u5c42\u7684\u955c\u50cf\uff0c\u4e0d\u4ec5\u4ec5\u589e\u52a0\u4e86\u6784\u5efa\u90e8\u7f72\u7684\u65f6\u95f4\uff0c\u4e5f\u5f88\u5bb9\u6613\u51fa\u9519 \uff09\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\\\u6765\u6362\u884c\uff0c\u7efc\u5408\u6210\u4e00\u884c\u6765\u5904\u7406\uff0c\u53c2\u8003\u5982\u4e0b\uff1a(\u63a8\u8350\u4f7f\u7528exec\u683c\u5f0f) FROM debian:jessie RUN buildDeps = 'gcc libc6-dev make' \\ && apt-get update \\ && apt-get install -y $buildDeps \\ && wget -O redis.tar.gz \"http://download.redis.io/releases/redis-3.2.5.tar.gz\" \\ && mkdir -p /usr/src/redis \\ && tar -xzf redis.tar.gz -C /usr/src/redis --strip-components = 1 \\ && make -C /usr/src/redis \\ && make -C /usr/src/redis install \\ && rm -rf /var/lib/apt/lists/* \\ && rm redis.tar.gz \\ && rm -r /usr/src/redis \\ && apt-get purge -y --auto-remove $buildDeps","title":"RUN"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#cmd","text":"\u683c\u5f0f\uff1a CMD [\"executable\",\"param1\",\"param2\"] \u4f7f\u7528 exec \u6267\u884c\uff0c\u63a8\u8350\u65b9\u5f0f\uff1b CMD command param1 param2 \u5728 /bin/sh \u4e2d\u6267\u884c\uff0c\u63d0\u4f9b\u7ed9\u9700\u8981\u4ea4\u4e92\u7684\u5e94\u7528\uff1b CMD [\"param1\",\"param2\"] \u63d0\u4f9b\u7ed9ENTRYPOINT\u7684\u9ed8\u8ba4\u53c2\u6570\uff1b \u89e3\u91ca\uff1a CMD\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u662f\u6267\u884c\u7684\u547d\u4ee4\uff0c\u6bcf\u4e2aDockerfile\u53ea\u80fd\u6709\u4e00\u6761CMD\u547d\u4ee4\uff0c\u5982\u679c\u6307\u5b9a\u4e86\u591a\u6761\uff0c\u53ea\u6709\u6700\u540e\u4e00\u6761\u4f1a\u88ab\u6267\u884c\u3002\u5982\u679c\u4f60\u5728\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\u4e5f\u6307\u5b9a\u7684\u547d\u4ee4\uff0c\u90a3\u4e48\u4f1a\u8986\u76d6Dockerfile\u6784\u5efa\u7684\u955c\u50cf\u91cc\u9762\u7684CMD\u547d\u4ee4\u3002","title":"CMD"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#entrypoint","text":"\u683c\u5f0f\uff1a ENTRYPOINT [\"executable\", \"param1\",\"param2\"] ENTRYPOINT command param1 param2\uff08shell\u4e2d\u6267\u884c\uff09\u3002 \u89e3\u91ca\uff1a\u548cCMD\u7c7b\u4f3c\u90fd\u662f\u914d\u7f6e\u5bb9\u5668\u542f\u52a8\u540e\u6267\u884c\u7684\u547d\u4ee4\uff0c\u5e76\u4e14\u4e0d\u53ef\u88ab docker run \u63d0\u4f9b\u7684\u53c2\u6570\u8986\u76d6\u3002 \u6bcf\u4e2a Dockerfile \u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aENTRYPOINT\uff0c\u5f53\u6307\u5b9a\u591a\u4e2a\u65f6\uff0c\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u8d77\u6548\u3002ENTRYPOINT\u6ca1\u6709CMD\u7684\u53ef\u66ff\u6362\u7279\u6027\uff0c\u4e5f\u5c31\u662f\u4f60\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\u589e\u52a0\u8fd0\u884c\u7684\u547d\u4ee4\u4e0d\u4f1a\u8986\u76d6ENTRYPOINT\u6307\u5b9a\u7684\u547d\u4ee4\u3002 \u6240\u4ee5\u751f\u4ea7\u5b9e\u8df5\u4e2d\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528ENTRYPOINT\u548cCMD\uff0c\u4f8b\u5982\uff1a ENTRYPOINT [\"/usr/bin/rethinkdb\"] CMD [\"--help\"]","title":"ENTRYPOINT"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#user","text":"\u683c\u5f0f\uff1aUSER daemon \u89e3\u91ca\uff1a\u6307\u5b9a\u8fd0\u884c\u5bb9\u5668\u65f6\u7684\u7528\u6237\u540d\u548cUID\uff0c\u540e\u7eed\u7684RUN\u6307\u4ee4\u4e5f\u4f1a\u4f7f\u7528\u8fd9\u91cc\u6307\u5b9a\u7684\u7528\u6237\u3002","title":"USER"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#expose","text":"\u683c\u5f0f\uff1aEXPOSE <port> [<port>\u2026] \u89e3\u91ca\uff1a\u8bbe\u7f6eDocker\u5bb9\u5668\u5185\u90e8\u66b4\u9732\u7684\u7aef\u53e3\u53f7\uff0c\u5982\u679c\u9700\u8981\u5916\u90e8\u8bbf\u95ee\uff0c\u8fd8\u9700\u8981\u542f\u52a8\u5bb9\u5668\u65f6\u589e\u52a0-p\u6216\u8005-P\u53c2\u6570\u8fdb\u884c\u5206\u914d\u3002","title":"EXPOSE"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#env","text":"\u683c\u5f0f\uff1a ENV <key> <value> ENV <key>=<value> ... \u89e3\u91ca\uff1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4ee5\u5728RUN\u4e4b\u524d\u4f7f\u7528\uff0c\u7136\u540eRUN\u547d\u4ee4\u65f6\u8c03\u7528\uff0c\u5bb9\u5668\u542f\u52a8\u65f6\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\u90fd\u4f1a\u88ab\u6307\u5b9a","title":"ENV"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#add","text":"\u683c\u5f0f\uff1a ADD <src>... <dest> ADD [\"<src>\",... \"<dest>\"] \u89e3\u91ca\uff1a\u5c06\u6307\u5b9a\u7684\\<src>\u590d\u5236\u5230\u5bb9\u5668\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\\<dest> \u6240\u6709\u62f7\u8d1d\u5230container\u4e2d\u7684\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u6743\u9650\u4e3a0755,uid\u548cgid\u4e3a0 \u5982\u679c\u6587\u4ef6\u662f\u53ef\u8bc6\u522b\u7684\u538b\u7f29\u683c\u5f0f\uff0c\u5219docker\u4f1a\u5e2e\u5fd9\u89e3\u538b\u7f29","title":"ADD"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#volume","text":"\u683c\u5f0f\uff1aVOLUME [\"/data\"] \u89e3\u91ca\uff1a\u53ef\u4ee5\u5c06\u672c\u5730\u6587\u4ef6\u5939\u6216\u8005\u5176\u4ed6container\u7684\u6587\u4ef6\u5939\u6302\u8f7d\u5230container\u4e2d\u3002","title":"VOLUME"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#workdir","text":"\u683c\u5f0f\uff1aWORKDIR/path/to/workdir \u89e3\u91ca\uff1a\u5207\u6362\u76ee\u5f55\uff0c\u4e3a\u540e\u7eed\u7684RUN\u3001CMD\u3001ENTRYPOINT \u6307\u4ee4\u914d\u7f6e\u5de5\u4f5c\u76ee\u5f55\u3002 \u53ef\u4ee5\u591a\u6b21\u5207\u6362(\u76f8\u5f53\u4e8ecd\u547d\u4ee4)\uff0c \u4e5f\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2aWORKDIR \u6307\u4ee4\uff0c\u540e\u7eed\u547d\u4ee4\u5982\u679c\u53c2\u6570\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u5219\u4f1a\u57fa\u4e8e\u4e4b\u524d\u547d\u4ee4\u6307\u5b9a\u7684\u8def\u5f84\u3002 \u4f8b\u5982 WORKDIR /a WORKDIR b WORKDIR c RUN pwd \u5219\u6700\u7ec8\u8def\u5f84\u4e3a /a/b/c\u3002","title":"WORKDIR"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#onbuild","text":"ONBUILD \u6307\u5b9a\u7684\u547d\u4ee4\u5728\u6784\u5efa\u955c\u50cf\u65f6\u5e76\u4e0d\u6267\u884c\uff0c\u800c\u662f\u5728\u5b83\u7684\u5b50\u955c\u50cf\u4e2d\u6267\u884c","title":"ONBUILD"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#arg","text":"\u683c\u5f0f\uff1aARG <name>[=<default value>] \u89e3\u91ca\uff1aARG\u6307\u5b9a\u4e86\u4e00\u4e2a\u53d8\u91cf\u5728docker build\u7684\u65f6\u5019\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528--build-arg <varname>=<value> \u6765\u6307\u5b9a\u53c2\u6570\u7684\u503c\uff0c\u4e0d\u8fc7\u5982\u679c\u6784\u5efa\u7684\u65f6\u5019\u4e0d\u6307\u5b9a\u5c31\u4f1a\u62a5\u9519\u3002 \u53c2\u8003\u81ea\u8fd0\u7ef4\u793e\u533a\uff1a https://mp.weixin.qq.com/s/A8KSp3zmpL_u9a2aYv8WYw","title":"ARG"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/","text":"Docker\u955c\u50cf\u751f\u4ea7\u89c4\u5212\u4e0e\u5b9e\u6218 \u00b6 \u516c\u5f00\u7684dockerfile\uff1a https://github.com/dockerfile \u5206\u5c42\u7684\u8bbe\u8ba1 \u00b6 A(\u7cfb\u7edf\u5c42)-->B(\u8fd0\u884c\u73af\u5883\u5c42)-->C(\u5e94\u7528\u670d\u52a1\u5c42) [root@linux-node1 ~]# mkdir docker [root@linux-node1 ~]# cd docker/ [root@linux-node1 docker]# mkdir system [root@linux-node1 docker]# mkdir runtime [root@linux-node1 docker]# mkdir app [root@linux-node1 docker]# cd system/ [root@linux-node1 system]# mkdir centos [root@linux-node1 system]# mkdir ubuntu [root@linux-node1 system]# mkdir centos-ssh [root@linux-node1 system]# cd ../runtime/ [root@linux-node1 runtime]# mkdir php [root@linux-node1 runtime]# mkdir java [root@linux-node1 runtime]# mkdir python [root@linux-node1 runtime]# cd ../app/ [root@linux-node1 app]# mkdir xxx.api [root@linux-node1 app]# mkdir xxx.admin [root@linux-node1 docker]# tree . . \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 xxx.admin \u2502 \u2514\u2500\u2500 xxx.api \u251c\u2500\u2500 runtime \u2502 \u251c\u2500\u2500 java \u2502 \u251c\u2500\u2500 php \u2502 \u2514\u2500\u2500 python \u2514\u2500\u2500 system \u251c\u2500\u2500 centos \u251c\u2500\u2500 centos-ssh \u2514\u2500\u2500 ubuntu \u6a21\u62df\u6848\u4f8b \u00b6 \u89c4\u5212\uff1a \u00b6 requirement.txt pip install -r requirement.txt \u521b\u5efadockerfile\u7136\u540ebuild\u955c\u50cf \u6784\u5efa\u4e00\u4e2a\u57fa\u7840\u7684centos\u955c\u50cf \u00b6 [root@linux-node1 docker]# cd system/centos [root@linux-node1 centos]# pwd /root/docker/system/centos [root@linux-node1 centos]# wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo --2017-03-31 18:13:42-- http://mirrors.aliyun.com/repo/epel-7.repo \u6b63\u5728\u89e3\u6790\u4e3b\u673a mirrors.aliyun.com (mirrors.aliyun.com)... 115.28.122.210, 112.124.140.210 \u6b63\u5728\u8fde\u63a5 mirrors.aliyun.com (mirrors.aliyun.com)|115.28.122.210|:80... \u5df2\u8fde\u63a5\u3002 \u5df2\u53d1\u51fa HTTP \u8bf7\u6c42\uff0c\u6b63\u5728\u7b49\u5f85\u56de\u5e94... 200 OK \u957f\u5ea6\uff1a1084 (1.1K) [application/octet-stream] \u6b63\u5728\u4fdd\u5b58\u81f3: \u201c/etc/yum.repos.d/epel.repo\u201d 100%[====================================================================================>] 1,084 --.-K/s \u7528\u65f6 0s 2017-03-31 18:13:42 (16.7 MB/s) - \u5df2\u4fdd\u5b58 \u201c/etc/yum.repos.d/epel.repo\u201d [1084/1084]) [root@linux-node1 centos]# cp /etc/yum.repos.d/epel.repo . [root@linux-node1 centos]# vim Dockerfile # Docker for CentOS FROM centos MAINTAINER lamber 1020561033@qq.com # EPEL ADD epel.repo /etc/yum.repos.d/ # Base pkg RUN yum install -y wget mysql-devel supervisor git redis tree net-tools sudo psmisc && yum clean all [root@linux-node1 centos]# docker build -t lamber/centos:base . [root@linux-node1 centos]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/centos base 6a427d784875 6 seconds ago 283.1 MB mynginx v2 5104f2ed9887 42 minutes ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 About an hour ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u518d\u521b\u5efa\u8fd0\u884c\u73af\u5883\u7684\u65f6\u5019\u5c31\u5e94\u8be5from\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u7684\u955c\u50cf\u4e86\uff1a [root@linux-node1 python]# cat Dockerfile FROM lamber/centos:base MAINTAINER lamber 1020561033@qq.com # Python env RUN yum install -y python-devel python-pip supervisor # Upgrade pip RUN pip install --upgrade pip \u8fd9\u91cc\u5f15\u7528\u7684\u5c31\u662f\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u597d\u7684\u955c\u50cf\u3002 \u6784\u5efadocker\u955c\u50cf [root@linux-node1 python]# docker build -t lamber/python . [root@linux-node1 app]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/python latest 94747e30d7b4 2 minutes ago 413.3 MB lamber/centos base 6a427d784875 About an hour ago 283.1 MB mynginx v2 5104f2ed9887 2 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 2 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u6784\u5efa\u4e00\u4e2a\u5e26ssh\u7684centos docker\u955c\u50cf \u00b6 [root@linux-node1 centos-ssh]# pwd /root/docker/system/centos-ssh [root@linux-node1 centos-ssh]# cat Dockerfile # Docker for CentOS FROM centos MAINTAINER lamber 1020561033@qq.com # EPEL ADD epel.repo /etc/yum.repos.d/ # Base pkg RUN yum install -y openssh-clients openssl-devel openssh-server wget mysql-devel supervisor git redis tree net-tools sudo psmisc && yum clean all # For SSHD RUN ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key RUN ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key RUN echo \"root:redhat\" | chpasswd [root@linux-node1 centos-ssh]# docker build -t lamber/centos-ssh . [root@linux-node1 centos-ssh]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/centos-ssh latest 41db0593e915 2 minutes ago 284.1 MB lamber/python latest 94747e30d7b4 16 minutes ago 413.3 MB lamber/centos base 6a427d784875 About an hour ago 283.1 MB mynginx v2 5104f2ed9887 2 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 3 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u90e8\u7f72\u73af\u5883\u5c42\uff1a [root@linux-node1 runtime]# cp -r python/ python-ssh [root@linux-node1 runtime]# ll \u603b\u7528\u91cf 0 drwxr-xr-x 2 root root 6 3\u6708 31 18:08 java drwxr-xr-x 2 root root 6 3\u6708 31 18:08 php drwxr-xr-x 2 root root 24 3\u6708 31 19:52 python drwxr-xr-x 2 root root 24 3\u6708 31 22:39 python-ssh [root@linux-node1 runtime]# cd python [root@linux-node1 python]# cat Dockerfile FROM lamber/centos-ssh MAINTAINER lamber 1020561033@qq.com # Python env RUN yum install -y python-devel python-pip supervisor # Upgrade pip RUN pip install --upgrade pip [root@linux-node1 python]# docker build -t lamber/python-ssh . [root@linux-node1 python]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/python-ssh latest 657b57f25bdd 24 seconds ago 414.3 MB lamber/centos-ssh latest 41db0593e915 2 hours ago 284.1 MB lamber/python latest 94747e30d7b4 2 hours ago 413.3 MB lamber/centos base 6a427d784875 4 hours ago 283.1 MB mynginx v2 5104f2ed9887 5 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 5 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u90e8\u7f72\u5e94\u7528\u5c42\uff1a \u6d4b\u8bd5\u811a\u672c\uff1a [root@linux-node1 shop-api]# pwd /root/docker/app/shop-api [root@linux-node1 shop-api]# cat app.py from flask import Flask app = Flask(__name__) @app.route('/') def hello(): return 'Hello World!' if __name__ == \"__main__\": app.run(host=\"0.0.0.0\", debug=True) \u6d4b\u8bd5\u811a\u672c\u5728\u672c\u673a\u8fdb\u884c\u6d4b\u8bd5\uff08\u8981\u9996\u5148\u786e\u4fdd\u672c\u5730\u8dd1\u6ca1\u95ee\u9898\uff0c\u7136\u540e\u518d\u5c01\u88c5\u8fdbdocker\u955c\u50cf\u91cc\u9762\u53bb\uff09\uff1a [root@linux-node1 shop-api]# yum -y install python-pip [root@linux-node1 python-ssh]# pip install flask [root@linux-node1 shop-api]# python app.py * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit) * Restarting with stat * Debugger is active! * Debugger PIN: 248-731-527 \u8d77\u5230\u4e865000\u7aef\u53e3\uff0c\u8bbf\u95ee\u6d4b\u8bd5 [root@linux-node1 shop-api]# curl 127.0.0.1:5000 Hello World! \u521b\u5efaDockerfile\uff1a [root@linux-node1 shop-api]# cat Dockerfile #Base image FROM lamber/python-ssh #Maintainer MAINTAINER lamber 1020561033@qq.com # Add www user RUN useradd -s /sbin/nologin -M www # ADD file ADD app.py /opt/app.py ADD requirements.txt /opt/ ADD supervisord.conf /etc/supervisord.conf ADD app-supervisor.ini /etc/supervisord.d/ # pip RUN /usr/bin/pip2.7 install -r /opt/requirements.txt # Port EXPOSE 22 5000 #CMD CMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisord.conf\"] ##\u6709\u53c2\u6570\u662f\u4e0a\u9762\u8fd9\u79cd\u5199\u6cd5 \u521b\u5efasupervisor\u7684\u914d\u7f6e\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# cat app-supervisor.ini [program:shop-api] command=/usr/bin/python2.7 /opt/app.py process_name=%(program_name)s autostart=true user=www stdout_logfile=/tmp/app.log stderr_logfile=/tmp/app.error [program:sshd] command=/usr/sbin/sshd -D process_name=%(program_name)s autostart=true \u521b\u5efa\u4f9d\u8d56\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# cat requirements.txt flask \u4fee\u6539supervisor.conf\u7684\u914d\u7f6e\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# cat supervisord.conf | grep nodaemon nodaemon=true ; (start in foreground if true;default false) \u5c06nodaemon\u6539\u4e3atrue\uff0c\u8fd9\u6837supervisor\u5c31\u5728\u524d\u53f0\u8fd0\u884c\u4e86\uff0c\u5982\u6b64\u521b\u5efa\u5bb9\u5668\u4ee5\u540e\u5c31\u80fd\u8d77\u6765\u4e86\u3002 \u8865\u5168\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# ll \u603b\u7528\u91cf 24 -rw-r--r-- 1 root root 172 9\u6708 10 2016 app.py -rw-r--r-- 1 root root 257 9\u6708 10 2016 app-supervisor.ini -rw-r--r-- 1 root root 433 9\u6708 10 2016 Dockerfile -rw-r--r-- 1 root root 6 9\u6708 10 2016 requirements.txt -rw-r--r-- 1 root root 7952 9\u6708 10 2016 supervisord.conf \u751f\u6210docker\u955c\u50cf\uff1a [root@linux-node1 shop-api]# docker build -t lamber/shop-api . [root@linux-node1 shop-api]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/shop-api latest 9a9470aa92eb 32 seconds ago 420.3 MB lamber/python-ssh latest f1c4bcf54bad 19 minutes ago 414.3 MB lamber/python latest 570e81c8e8bf 23 minutes ago 413.3 MB lamber/centos-ssh latest 41db0593e915 3 hours ago 284.1 MB lamber/centos base 6a427d784875 4 hours ago 283.1 MB mynginx v2 5104f2ed9887 5 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 6 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u542f\u52a8\u955c\u50cf\u5bb9\u5668\uff1a [root@linux-node1 shop-api]# docker run --name shop-api -d -p 88:5000 -p 8022:22 lamber/shop-api f38807176f44970632f0156bd02a614c102343749a627a1eb945a6e745c2e95b [root@linux-node1 shop-api]# docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES f38807176f44 lamber/shop-api \"/usr/bin/supervisord\" 7 seconds ago Up 6 seconds 0.0.0.0:8022->22/tcp, 0.0.0.0:88->5000/tcp shop-api a1efc632ba6d mynginx:v2 \"nginx\" 5 hours ago Up 5 hours 0.0.0.0:82->80/tcp mynginxv2 604ac1c6443a nginx/mynginx:v1 \"nginx\" 6 hours ago Up 6 hours 0.0.0.0:81->80/tcp mynginxv1 \u6d4b\u8bd5\u7ed3\u679c\uff1a [root@linux-node1 shop-api]# curl 127.0.0.1:88 Hello World! [root@linux-node1 shop-api]# /root/docker_in.sh shop-api [root@f38807176f44 /]# ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0.0 0.5 117256 14796 ? Ss 15:21 0:00 /usr/bin/python /usr/bin/supervisord -c /etc/supervisord.con root 7 0.0 0.1 82524 3592 ? S 15:21 0:00 /usr/sbin/sshd -D www 8 0.0 0.6 119760 17328 ? S 15:21 0:00 /usr/bin/python2.7 /opt/app.py www 13 0.6 0.6 196036 18052 ? Sl 15:21 0:02 /usr/bin/python2.7 /opt/app.py root 19 0.0 0.0 15172 1896 ? S 15:27 0:00 -bash root 32 0.0 0.0 50844 1700 ? R+ 15:27 0:00 ps aux \u8bbf\u95ee\u5bb9\u5668\u768422\u7aef\u53e3\uff1a \u5bc6\u7801\u5c31\u662f\u6211\u4eec\u5728\u521b\u5efacentos-ssh\u65f6\u5019\u6307\u5b9a\u7684root\uff1aredhat \u603b\u7ed3 \u00b6 \u8fd9\u5c31\u662f\u5206\u5c42\u7684\u4fbf\u5229\u6027\uff0c\u751f\u4ea7\u60c5\u51b5\u4e0b\u90fd\u662f\u4f7f\u7528supervisor\u6765\u542f\u52a8\uff0c\u5373\u4f7f\u662f\u4e00\u4e2a\u4e5f\u8981\u7528supervisor\u6765\u542f\u52a8\uff0cpython\u7684\u4f9d\u8d56\u6587\u4ef6\u8981\u5199\u597d\u3002\u5b9e\u9645\u751f\u4ea7\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5728\u771f\u673a\u4e0a\u6d4b\u8bd5\u597d\u4e86\u7136\u540e\u518d\u8fdb\u884c\u955c\u50cf\u7684\u5c01\u88c5\u3002 [root@linux-node1 docker]# tree . \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 shop-api \u2502 \u2502 \u251c\u2500\u2500 app.py \u2502 \u2502 \u251c\u2500\u2500 app-supervisor.ini \u2502 \u2502 \u251c\u2500\u2500 Dockerfile \u2502 \u2502 \u251c\u2500\u2500 requirements.txt \u2502 \u2502 \u2514\u2500\u2500 supervisord.conf \u2502 \u251c\u2500\u2500 xxx.admin \u2502 \u2514\u2500\u2500 xxx.api \u251c\u2500\u2500 runtime \u2502 \u251c\u2500\u2500 java \u2502 \u251c\u2500\u2500 php \u2502 \u251c\u2500\u2500 python \u2502 \u2502 \u2514\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 python-ssh \u2502 \u2514\u2500\u2500 Dockerfile \u2514\u2500\u2500 system \u251c\u2500\u2500 centos \u2502 \u251c\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 epel.repo \u251c\u2500\u2500 centos-ssh \u2502 \u251c\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 epel.repo \u2514\u2500\u2500 ubuntu \u4f7f\u7528supervisor\u7ba1\u7406\u8fdb\u7a0b \u00b6 \u53c2\u8003\u6587\u6863 \u00b6 http://supervisord.org/ http://liyangliang.me/posts/2015/06/using-supervisor/ \u5b89\u88c5supervisor [root@linux-node1 ~]# yum install supervisor -y [root@linux-node1 ~]# rpm -ql supervisor | head -2 /etc/logrotate.d/supervisor /etc/supervisord.conf [root@linux-node1 ~]# tail -2 /etc/supervisord.conf [include] files = supervisord.d/*.ini [program:sshd] command=/usr/sbin/sshd -D process_name=%(program_name)s autostart=true # docker\u5bb9\u5668\u7edf\u4e00\u4f7f\u7528supervisor\u8fdb\u884c\u7ba1\u7406\uff0c\u662f\u7ba1\u7406\u64cd\u4f5c\u6807\u51c6\u5316\u8d77\u6765\u3002 [root@6dd90ccf92d0 ~]# ps -ef UID PID PPID C STIME TTY TIME CMD root 1 0 0 18:01 ? 00:00:00 /usr/bin/python /usr/bin/supervisord -c / root 7 1 0 18:01 ? 00:00:00 /usr/sbin/sshd -D root 8 7 0 18:02 ? 00:00:00 sshd: root@pts/0 root 10 8 0 18:02 pts/0 00:00:00 -bash root 23 10 0 18:03 pts/0 00:00:00 ps -ef [root@6dd90ccf92d0 ~]# supervisorctl status sshd RUNNING pid 7, uptime 0:01:28","title":"Docker\u955c\u50cf\u751f\u4ea7\u89c4\u5212\u4e0e\u5b9e\u6218"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#docker","text":"\u516c\u5f00\u7684dockerfile\uff1a https://github.com/dockerfile","title":"Docker\u955c\u50cf\u751f\u4ea7\u89c4\u5212\u4e0e\u5b9e\u6218"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#_1","text":"A(\u7cfb\u7edf\u5c42)-->B(\u8fd0\u884c\u73af\u5883\u5c42)-->C(\u5e94\u7528\u670d\u52a1\u5c42) [root@linux-node1 ~]# mkdir docker [root@linux-node1 ~]# cd docker/ [root@linux-node1 docker]# mkdir system [root@linux-node1 docker]# mkdir runtime [root@linux-node1 docker]# mkdir app [root@linux-node1 docker]# cd system/ [root@linux-node1 system]# mkdir centos [root@linux-node1 system]# mkdir ubuntu [root@linux-node1 system]# mkdir centos-ssh [root@linux-node1 system]# cd ../runtime/ [root@linux-node1 runtime]# mkdir php [root@linux-node1 runtime]# mkdir java [root@linux-node1 runtime]# mkdir python [root@linux-node1 runtime]# cd ../app/ [root@linux-node1 app]# mkdir xxx.api [root@linux-node1 app]# mkdir xxx.admin [root@linux-node1 docker]# tree . . \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 xxx.admin \u2502 \u2514\u2500\u2500 xxx.api \u251c\u2500\u2500 runtime \u2502 \u251c\u2500\u2500 java \u2502 \u251c\u2500\u2500 php \u2502 \u2514\u2500\u2500 python \u2514\u2500\u2500 system \u251c\u2500\u2500 centos \u251c\u2500\u2500 centos-ssh \u2514\u2500\u2500 ubuntu","title":"\u5206\u5c42\u7684\u8bbe\u8ba1"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#_2","text":"","title":"\u6a21\u62df\u6848\u4f8b"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#_3","text":"requirement.txt pip install -r requirement.txt \u521b\u5efadockerfile\u7136\u540ebuild\u955c\u50cf","title":"\u89c4\u5212\uff1a"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#centos","text":"[root@linux-node1 docker]# cd system/centos [root@linux-node1 centos]# pwd /root/docker/system/centos [root@linux-node1 centos]# wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo --2017-03-31 18:13:42-- http://mirrors.aliyun.com/repo/epel-7.repo \u6b63\u5728\u89e3\u6790\u4e3b\u673a mirrors.aliyun.com (mirrors.aliyun.com)... 115.28.122.210, 112.124.140.210 \u6b63\u5728\u8fde\u63a5 mirrors.aliyun.com (mirrors.aliyun.com)|115.28.122.210|:80... \u5df2\u8fde\u63a5\u3002 \u5df2\u53d1\u51fa HTTP \u8bf7\u6c42\uff0c\u6b63\u5728\u7b49\u5f85\u56de\u5e94... 200 OK \u957f\u5ea6\uff1a1084 (1.1K) [application/octet-stream] \u6b63\u5728\u4fdd\u5b58\u81f3: \u201c/etc/yum.repos.d/epel.repo\u201d 100%[====================================================================================>] 1,084 --.-K/s \u7528\u65f6 0s 2017-03-31 18:13:42 (16.7 MB/s) - \u5df2\u4fdd\u5b58 \u201c/etc/yum.repos.d/epel.repo\u201d [1084/1084]) [root@linux-node1 centos]# cp /etc/yum.repos.d/epel.repo . [root@linux-node1 centos]# vim Dockerfile # Docker for CentOS FROM centos MAINTAINER lamber 1020561033@qq.com # EPEL ADD epel.repo /etc/yum.repos.d/ # Base pkg RUN yum install -y wget mysql-devel supervisor git redis tree net-tools sudo psmisc && yum clean all [root@linux-node1 centos]# docker build -t lamber/centos:base . [root@linux-node1 centos]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/centos base 6a427d784875 6 seconds ago 283.1 MB mynginx v2 5104f2ed9887 42 minutes ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 About an hour ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u518d\u521b\u5efa\u8fd0\u884c\u73af\u5883\u7684\u65f6\u5019\u5c31\u5e94\u8be5from\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u7684\u955c\u50cf\u4e86\uff1a [root@linux-node1 python]# cat Dockerfile FROM lamber/centos:base MAINTAINER lamber 1020561033@qq.com # Python env RUN yum install -y python-devel python-pip supervisor # Upgrade pip RUN pip install --upgrade pip \u8fd9\u91cc\u5f15\u7528\u7684\u5c31\u662f\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u597d\u7684\u955c\u50cf\u3002 \u6784\u5efadocker\u955c\u50cf [root@linux-node1 python]# docker build -t lamber/python . [root@linux-node1 app]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/python latest 94747e30d7b4 2 minutes ago 413.3 MB lamber/centos base 6a427d784875 About an hour ago 283.1 MB mynginx v2 5104f2ed9887 2 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 2 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB","title":"\u6784\u5efa\u4e00\u4e2a\u57fa\u7840\u7684centos\u955c\u50cf"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#sshcentos-docker","text":"[root@linux-node1 centos-ssh]# pwd /root/docker/system/centos-ssh [root@linux-node1 centos-ssh]# cat Dockerfile # Docker for CentOS FROM centos MAINTAINER lamber 1020561033@qq.com # EPEL ADD epel.repo /etc/yum.repos.d/ # Base pkg RUN yum install -y openssh-clients openssl-devel openssh-server wget mysql-devel supervisor git redis tree net-tools sudo psmisc && yum clean all # For SSHD RUN ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key RUN ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key RUN echo \"root:redhat\" | chpasswd [root@linux-node1 centos-ssh]# docker build -t lamber/centos-ssh . [root@linux-node1 centos-ssh]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/centos-ssh latest 41db0593e915 2 minutes ago 284.1 MB lamber/python latest 94747e30d7b4 16 minutes ago 413.3 MB lamber/centos base 6a427d784875 About an hour ago 283.1 MB mynginx v2 5104f2ed9887 2 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 3 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u90e8\u7f72\u73af\u5883\u5c42\uff1a [root@linux-node1 runtime]# cp -r python/ python-ssh [root@linux-node1 runtime]# ll \u603b\u7528\u91cf 0 drwxr-xr-x 2 root root 6 3\u6708 31 18:08 java drwxr-xr-x 2 root root 6 3\u6708 31 18:08 php drwxr-xr-x 2 root root 24 3\u6708 31 19:52 python drwxr-xr-x 2 root root 24 3\u6708 31 22:39 python-ssh [root@linux-node1 runtime]# cd python [root@linux-node1 python]# cat Dockerfile FROM lamber/centos-ssh MAINTAINER lamber 1020561033@qq.com # Python env RUN yum install -y python-devel python-pip supervisor # Upgrade pip RUN pip install --upgrade pip [root@linux-node1 python]# docker build -t lamber/python-ssh . [root@linux-node1 python]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/python-ssh latest 657b57f25bdd 24 seconds ago 414.3 MB lamber/centos-ssh latest 41db0593e915 2 hours ago 284.1 MB lamber/python latest 94747e30d7b4 2 hours ago 413.3 MB lamber/centos base 6a427d784875 4 hours ago 283.1 MB mynginx v2 5104f2ed9887 5 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 5 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u90e8\u7f72\u5e94\u7528\u5c42\uff1a \u6d4b\u8bd5\u811a\u672c\uff1a [root@linux-node1 shop-api]# pwd /root/docker/app/shop-api [root@linux-node1 shop-api]# cat app.py from flask import Flask app = Flask(__name__) @app.route('/') def hello(): return 'Hello World!' if __name__ == \"__main__\": app.run(host=\"0.0.0.0\", debug=True) \u6d4b\u8bd5\u811a\u672c\u5728\u672c\u673a\u8fdb\u884c\u6d4b\u8bd5\uff08\u8981\u9996\u5148\u786e\u4fdd\u672c\u5730\u8dd1\u6ca1\u95ee\u9898\uff0c\u7136\u540e\u518d\u5c01\u88c5\u8fdbdocker\u955c\u50cf\u91cc\u9762\u53bb\uff09\uff1a [root@linux-node1 shop-api]# yum -y install python-pip [root@linux-node1 python-ssh]# pip install flask [root@linux-node1 shop-api]# python app.py * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit) * Restarting with stat * Debugger is active! * Debugger PIN: 248-731-527 \u8d77\u5230\u4e865000\u7aef\u53e3\uff0c\u8bbf\u95ee\u6d4b\u8bd5 [root@linux-node1 shop-api]# curl 127.0.0.1:5000 Hello World! \u521b\u5efaDockerfile\uff1a [root@linux-node1 shop-api]# cat Dockerfile #Base image FROM lamber/python-ssh #Maintainer MAINTAINER lamber 1020561033@qq.com # Add www user RUN useradd -s /sbin/nologin -M www # ADD file ADD app.py /opt/app.py ADD requirements.txt /opt/ ADD supervisord.conf /etc/supervisord.conf ADD app-supervisor.ini /etc/supervisord.d/ # pip RUN /usr/bin/pip2.7 install -r /opt/requirements.txt # Port EXPOSE 22 5000 #CMD CMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisord.conf\"] ##\u6709\u53c2\u6570\u662f\u4e0a\u9762\u8fd9\u79cd\u5199\u6cd5 \u521b\u5efasupervisor\u7684\u914d\u7f6e\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# cat app-supervisor.ini [program:shop-api] command=/usr/bin/python2.7 /opt/app.py process_name=%(program_name)s autostart=true user=www stdout_logfile=/tmp/app.log stderr_logfile=/tmp/app.error [program:sshd] command=/usr/sbin/sshd -D process_name=%(program_name)s autostart=true \u521b\u5efa\u4f9d\u8d56\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# cat requirements.txt flask \u4fee\u6539supervisor.conf\u7684\u914d\u7f6e\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# cat supervisord.conf | grep nodaemon nodaemon=true ; (start in foreground if true;default false) \u5c06nodaemon\u6539\u4e3atrue\uff0c\u8fd9\u6837supervisor\u5c31\u5728\u524d\u53f0\u8fd0\u884c\u4e86\uff0c\u5982\u6b64\u521b\u5efa\u5bb9\u5668\u4ee5\u540e\u5c31\u80fd\u8d77\u6765\u4e86\u3002 \u8865\u5168\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# ll \u603b\u7528\u91cf 24 -rw-r--r-- 1 root root 172 9\u6708 10 2016 app.py -rw-r--r-- 1 root root 257 9\u6708 10 2016 app-supervisor.ini -rw-r--r-- 1 root root 433 9\u6708 10 2016 Dockerfile -rw-r--r-- 1 root root 6 9\u6708 10 2016 requirements.txt -rw-r--r-- 1 root root 7952 9\u6708 10 2016 supervisord.conf \u751f\u6210docker\u955c\u50cf\uff1a [root@linux-node1 shop-api]# docker build -t lamber/shop-api . [root@linux-node1 shop-api]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/shop-api latest 9a9470aa92eb 32 seconds ago 420.3 MB lamber/python-ssh latest f1c4bcf54bad 19 minutes ago 414.3 MB lamber/python latest 570e81c8e8bf 23 minutes ago 413.3 MB lamber/centos-ssh latest 41db0593e915 3 hours ago 284.1 MB lamber/centos base 6a427d784875 4 hours ago 283.1 MB mynginx v2 5104f2ed9887 5 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 6 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u542f\u52a8\u955c\u50cf\u5bb9\u5668\uff1a [root@linux-node1 shop-api]# docker run --name shop-api -d -p 88:5000 -p 8022:22 lamber/shop-api f38807176f44970632f0156bd02a614c102343749a627a1eb945a6e745c2e95b [root@linux-node1 shop-api]# docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES f38807176f44 lamber/shop-api \"/usr/bin/supervisord\" 7 seconds ago Up 6 seconds 0.0.0.0:8022->22/tcp, 0.0.0.0:88->5000/tcp shop-api a1efc632ba6d mynginx:v2 \"nginx\" 5 hours ago Up 5 hours 0.0.0.0:82->80/tcp mynginxv2 604ac1c6443a nginx/mynginx:v1 \"nginx\" 6 hours ago Up 6 hours 0.0.0.0:81->80/tcp mynginxv1 \u6d4b\u8bd5\u7ed3\u679c\uff1a [root@linux-node1 shop-api]# curl 127.0.0.1:88 Hello World! [root@linux-node1 shop-api]# /root/docker_in.sh shop-api [root@f38807176f44 /]# ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0.0 0.5 117256 14796 ? Ss 15:21 0:00 /usr/bin/python /usr/bin/supervisord -c /etc/supervisord.con root 7 0.0 0.1 82524 3592 ? S 15:21 0:00 /usr/sbin/sshd -D www 8 0.0 0.6 119760 17328 ? S 15:21 0:00 /usr/bin/python2.7 /opt/app.py www 13 0.6 0.6 196036 18052 ? Sl 15:21 0:02 /usr/bin/python2.7 /opt/app.py root 19 0.0 0.0 15172 1896 ? S 15:27 0:00 -bash root 32 0.0 0.0 50844 1700 ? R+ 15:27 0:00 ps aux \u8bbf\u95ee\u5bb9\u5668\u768422\u7aef\u53e3\uff1a \u5bc6\u7801\u5c31\u662f\u6211\u4eec\u5728\u521b\u5efacentos-ssh\u65f6\u5019\u6307\u5b9a\u7684root\uff1aredhat","title":"\u6784\u5efa\u4e00\u4e2a\u5e26ssh\u7684centos docker\u955c\u50cf"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#_4","text":"\u8fd9\u5c31\u662f\u5206\u5c42\u7684\u4fbf\u5229\u6027\uff0c\u751f\u4ea7\u60c5\u51b5\u4e0b\u90fd\u662f\u4f7f\u7528supervisor\u6765\u542f\u52a8\uff0c\u5373\u4f7f\u662f\u4e00\u4e2a\u4e5f\u8981\u7528supervisor\u6765\u542f\u52a8\uff0cpython\u7684\u4f9d\u8d56\u6587\u4ef6\u8981\u5199\u597d\u3002\u5b9e\u9645\u751f\u4ea7\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5728\u771f\u673a\u4e0a\u6d4b\u8bd5\u597d\u4e86\u7136\u540e\u518d\u8fdb\u884c\u955c\u50cf\u7684\u5c01\u88c5\u3002 [root@linux-node1 docker]# tree . \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 shop-api \u2502 \u2502 \u251c\u2500\u2500 app.py \u2502 \u2502 \u251c\u2500\u2500 app-supervisor.ini \u2502 \u2502 \u251c\u2500\u2500 Dockerfile \u2502 \u2502 \u251c\u2500\u2500 requirements.txt \u2502 \u2502 \u2514\u2500\u2500 supervisord.conf \u2502 \u251c\u2500\u2500 xxx.admin \u2502 \u2514\u2500\u2500 xxx.api \u251c\u2500\u2500 runtime \u2502 \u251c\u2500\u2500 java \u2502 \u251c\u2500\u2500 php \u2502 \u251c\u2500\u2500 python \u2502 \u2502 \u2514\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 python-ssh \u2502 \u2514\u2500\u2500 Dockerfile \u2514\u2500\u2500 system \u251c\u2500\u2500 centos \u2502 \u251c\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 epel.repo \u251c\u2500\u2500 centos-ssh \u2502 \u251c\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 epel.repo \u2514\u2500\u2500 ubuntu","title":"\u603b\u7ed3"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#supervisor","text":"","title":"\u4f7f\u7528supervisor\u7ba1\u7406\u8fdb\u7a0b"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#_5","text":"http://supervisord.org/ http://liyangliang.me/posts/2015/06/using-supervisor/ \u5b89\u88c5supervisor [root@linux-node1 ~]# yum install supervisor -y [root@linux-node1 ~]# rpm -ql supervisor | head -2 /etc/logrotate.d/supervisor /etc/supervisord.conf [root@linux-node1 ~]# tail -2 /etc/supervisord.conf [include] files = supervisord.d/*.ini [program:sshd] command=/usr/sbin/sshd -D process_name=%(program_name)s autostart=true # docker\u5bb9\u5668\u7edf\u4e00\u4f7f\u7528supervisor\u8fdb\u884c\u7ba1\u7406\uff0c\u662f\u7ba1\u7406\u64cd\u4f5c\u6807\u51c6\u5316\u8d77\u6765\u3002 [root@6dd90ccf92d0 ~]# ps -ef UID PID PPID C STIME TTY TIME CMD root 1 0 0 18:01 ? 00:00:00 /usr/bin/python /usr/bin/supervisord -c / root 7 1 0 18:01 ? 00:00:00 /usr/sbin/sshd -D root 8 7 0 18:02 ? 00:00:00 sshd: root@pts/0 root 10 8 0 18:02 pts/0 00:00:00 -bash root 23 10 0 18:03 pts/0 00:00:00 ps -ef [root@6dd90ccf92d0 ~]# supervisorctl status sshd RUNNING pid 7, uptime 0:01:28","title":"\u53c2\u8003\u6587\u6863"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/","text":"Docker-Registry \u00b6 DockerFile\u5efa\u8bae\u901a\u8fc7git\u6765\u4fdd\u5b58\uff0c \u5b9e\u9a8c\u73af\u5883\u53ef\u4ee5\u64cd\u4f5c\u7684\uff0c\u751f\u4ea7\u4e0d\u5efa\u8bae\u8fd9\u6837\u53bb\u64cd\u4f5c\u7684\u5185\u5bb9\uff1a \u5bb9\u5668\u505c\u6b62\u540e\u5c31\u81ea\u52a8\u5220\u9664\uff1adocker run \u2014rm centos /bin/echo \"hello world\" \u6740\u6b7b\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u670d\u52a1\u5668\uff1adocker kill $(docker ps -a -q) \u5220\u9664\u6240\u6709\u5df2\u7ecf\u505c\u6b62\u7684\u5bb9\u5668\uff1adocker rm $(docker ps -a -q) \u5220\u9664\u6240\u6709\u672a\u6253\u6807\u7b7e\u7684\u955c\u50cf\uff1adocker rmi $(docker images -q -f dangling=true) Docker registry\u529f\u80fd\u6bd4\u8f83\u5355\u4e00\uff0c\u6ca1\u6709web\u754c\u9762\u3002 Nginx + Docker registry \u9a8c\u8bc1https\uff08\u81ea\u7b7e\u540d\u8bc1\u4e66\uff09\uff1a \u624b\u52a8\u521b\u5efa\u8bc1\u4e66 [ root@localhost registry ] # openssl req -x509 -days 3650 -nodes -newkey rsa:2048 -keyout ./docker-registry.key -out ./docker-registry.crt Generating a 2048 bit RSA private key ...............................................................+++ ...+++ writing new private key to './docker-registry.key' ----- You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter '.' , the field will be left blank. ----- Country Name ( 2 letter code ) [ XX ] : State or Province Name ( full name ) [] : Locality Name ( eg, city ) [ Default City ] : Organization Name ( eg, company ) [ Default Company Ltd ] : Organizational Unit Name ( eg, section ) [] : Common Name ( eg, your name or your server ' s hostname ) [] :reg.unixhot.com Email Address [] : [ root@localhost registry ] # ll \u603b\u7528\u91cf 8 -rw-r--r--. 1 root root 1289 5\u6708 11 20 :39 docker-registry.crt -rw-r--r--. 1 root root 1708 5\u6708 11 20 :39 docker-registry.key \u5b89\u88c5httpd-tools htpasswd\u5b9e\u73b0\u9a8c\u8bc1\u529f\u80fd # htpasswd\u662fhttpd-tools\u5de5\u5177\u96c6\u4e2d\u7684\u5de5\u5177\uff0c\u56e0\u6b64\u9996\u5148\u8981\u5b89\u88c5httpd-tools yum install -y httpd-tools # \u521b\u5efa\u4f7f\u7528-c\u53c2\u6570\uff0c\u52a0\u5bc6\u7801\u4e0d\u8981\u4f7f\u7528-c\uff0c\u6307\u5b9a\u7528\u6237\u4e3ademo [ root@localhost registry ] # htpasswd -c /opt/registry/docker-registry.htpasswd demo New password: Re-type new password: Adding password for user demo nginx proxy https \uff08\u6709\u4e00\u4e2a\u73b0\u6210\u7684\u955c\u50cf\uff09\uff0c\u542f\u52a8\u4e00\u4e2adocker-registry\u7684\u5bb9\u5668\uff0cproxy\u5230\u8fd9\u91cc\u3002 # --link\u53ef\u4ee5\u8ba9\u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u4e92\u8bbf docker run -d -p 443 :443 \\ --name docker-registry-proxy \\ -e REGISTRY_HOST = \"docker-registry\" \\ -e REGISTRY_PORT = \"5000\" \\ -e SERVER_NAME = \"reg.unixhot.com\" \\ --link docker-registry:docker-registry \\ -v /opt/registry/docker-registry.htpasswd:/etc/nginx/.htpasswd:ro \\ -v /opt/registry:/etc/nginx/ssl:ro \\ containersol/docker-registry-proxy docker \u914d\u7f6e\u4f7f\u7528\u8bc1\u4e66 # \u5728/etc/hosts\u4e2d\u9488\u5bf9reg.unixhot.com\u505a\u57df\u540d\u7684\u6620\u5c04 192 .168.56.101 reg.unixhot.com # \u914d\u7f6edocker\u4f7f\u7528\u8bc1\u4e66\uff0c\u5982\u679c\u8bf4\u4e0d\u4e70\u8bc1\u4e66\u7684\u8bdd\u90a3\u4e48\u6240\u6709\u7684\u9700\u8981\u8fde\u63a5\u7684\u670d\u52a1\u5668\u90fd\u8981\u914d\u7f6e\u8fd9\u4e00\u90e8\u5206 # \u5c06\u81ea\u7b7e\u540d\u8bc1\u4e66\u653e\u5230/etc/docker\u4e0b\u9762 cd /etc/docker mkdir -p certs.d/reg.unixhot.com cd certs.d/reg.unixhot.com cp /opt/registry/docker-registry.crt ca.crt # \u68c0\u6d4bdocker\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u767b\u5f55 [ root@localhost ~ ] # docker login reg.unixhot.com Username: demo Password: Login Succeeded \u767b\u5f55\uff0cpush\u955c\u50cf # Push\u955c\u50cf\u7b2c\u4e00\u4ef6\u9700\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u6253\u6807\u7b7e\uff0c\u8fd9\u4e2a\u6807\u7b7e\u662f\u7ed9docker\u5165\u5e93\u6211\u4eec\u521b\u5efa\u8fd9\u4e2aregistry\u7684\u65f6\u5019\u6253\u7684\u6807\u7b7e [ root@localhost ~ ] # docker tag unixhot/centos reg.unixhot.com/unixhot/centos # push\u955c\u50cf\u5230\u4ed3\u5e93 [ root@localhost ~ ] # docker push reg.unixhot.com/unixhot/centos The push refers to repository [ reg.unixhot.com/unixhot/centos ] 1e11f9cfa6aa: Pushed 43e653f84b79: Pushed latest: digest: sha256:e0bf9b8009fdea481f4546d7139aa3beeabbe799d489843f1c6a61339ef11271 size: 3768 \u67e5\u770b\uff0c\u4f20\u4e0a\u53bb\u4e86\u4ee5\u540e\u53ea\u80fd\u901a\u8fc7\u63d0\u4f9b\u7684api\u8fdb\u884c\u67e5\u770b\u3002 # \u4f7f\u7528docker images\u4e5f\u80fd\u67e5\u770b\u5230 [ root@localhost ~ ] # curl -X GET https://demo:demo@reg.unixhot.com/v2/_catalog -k { \"repositories\" : [ \"unixhot/centos\" ]} \u5982\u679c\u662f\u8d2d\u4e70\u7684\u8bc1\u4e66\u7684\u8bdd\u53ea\u9700\u8981\u4e0a\u8ff0\u7684\u7b2c\u4e8c\u6b65\u548c\u7b2c\u4e09\u6b65\u4ee5\u53ca\u7b2c\u4e94\u6b65\u5373\u53ef\u3002\u624b\u52a8\u521b\u5efa\u548c\u914d\u7f6edocker\u4f7f\u7528\u8bc1\u4e66\u5c31\u8fc7\u4e86\u3002 [ root@localhost opt ] # mkdir registry [ root@localhost opt ] # cd registry/ [ root@localhost registry ] # docker run -d --name docker-registry -v /opt/registry/:/tmp/registry-dev registry:2.2.1 Unable to find image 'registry:2.2.1' locally 2 .2.1: Pulling from library/registry 8387d9ff0016: Pull complete 3b52deaaf0ed: Pull complete 4bd501fad6de: Pull complete a3ed95caeb02: Pull complete b1f99b5938be: Pull complete 82c34c0ec017: Pull complete 5426c0c1c293: Pull complete Digest: sha256:30adb707d1b4d2ad694c38da3ea1e7d303fdbdce2538ab0372afe6f1523ae3c8 Status: Downloaded newer image for registry:2.2.1 4b19999b188ce8ed1a0ea7eab52c36a9a3e17ce78147f24a99d04d39624d9d87 \u4f7f\u7528Habor\u6784\u5efa\u4f01\u4e1a\u7ea7Docker Registry \u00b6 Harbor\u662f\u4e00\u4e2a\u4f01\u4e1a\u7ea7Registry\u670d\u52a1\u3002\u5b83\u5bf9\u5f00\u6e90\u7684Docker Registry\u670d\u52a1\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u6dfb\u52a0\u4e86\u66f4\u591a\u4f01\u4e1a\u7528\u6237\u9700\u8981\u7684\u529f\u80fd\u3002Harbor\u88ab\u8bbe\u8ba1\u7528\u4e8e\u90e8\u7f72\u4e00\u5957\u7ec4\u7ec7\u5185\u90e8\u4f7f\u7528\u7684\u79c1\u6709\u73af\u5883\uff0c\u8fd9\u4e2a\u79c1\u6709Registry\u670d\u52a1\u5bf9\u4e8e\u975e\u5e38\u5173\u5fc3\u5b89\u5168 \u7684\u7ec4\u7ec7\u6765\u8bf4\u662f\u5341\u5206\u91cd\u8981\u7684\u3002\u53e6\u5916\uff0c\u79c1\u6709Registry\u670d\u52a1\u53ef\u4ee5\u901a\u8fc7\u907f\u514d\u4ece\u516c\u57df\u7f51\u4e0b\u8f7d\u955c\u50cf\u800c\u63d0\u9ad8\u4f01\u4e1a\u751f\u4ea7\u529b\u3002\u8fd9\u5bf9\u4e8e\u6ca1\u6709\u826f\u597d\u7684Internet\u8fde\u63a5\u72b6\u6001\uff0c\u4f7f\u7528Docker Container\u7684\u7528\u6237\u662f\u4e00\u4e2a\u798f\u97f3\u3002 Harbor\u662fVMware\u516c\u53f8\u6700\u8fd1\u5f00\u6e90\u7684\u4f01\u4e1a\u7ea7Docker Registry\u9879\u76ee( https://github.com/vmware/harbor ) \u3002\u5176\u76ee\u6807\u662f\u5e2e\u52a9\u7528\u6237\u8fc5\u901f\u642d\u5efa\u4e00\u4e2a\u4f01\u4e1a\u7ea7\u7684Docker registry\u670d\u52a1\u3002\u5b83\u63d0\u4f9b\u4e86\u7ba1\u7406UI, \u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236(Role Based Access Control)\uff0cAD/LDAP\u96c6\u6210\u3001\u4ee5\u53ca\u5ba1\u8ba1\u65e5\u5fd7(Audit logging) \u7b49\u4f01\u4e1a\u7528\u6237\u9700\u6c42\u7684\u529f\u80fd\uff0c\u540c\u65f6\u8fd8\u539f\u751f\u652f\u6301\u4e2d\u6587\u3002Harbor\u7684\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u662f\u4ee5Docker\u5bb9\u5668\u7684\u5f62\u5f0f\u6784\u5efa\u7684\uff0c\u4f7f\u7528Docker Compose\u6765\u5bf9\u5b83\u8fdb\u884c\u90e8\u7f72\u3002 Harbor\u9879\u76ee\u4f7f\u7528\u4e86go\u8bed\u8a00\u5f00\u53d1\uff0cWEB\u6846\u67b6\u91c7\u7528beego\u3002\u5bb9\u5668\u5e94\u7528\u7684\u5f00\u53d1\u548c\u8fd0\u884c\u79bb\u4e0d\u5f00\u53ef\u9760\u7684\u955c\u50cf\u7ba1\u7406\u3002\u4ece\u5b89\u5168\u548c\u6548\u7387\u7b49\u65b9\u9762\u8003\u8651\uff0c\u5728\u4f01\u4e1a\u79c1\u6709\u73af\u5883\u5185\u90e8\u7f72\u7684Registry\u670d\u52a1\u662f\u975e\u5e38\u5fc5\u8981\u7684\u3002 Harbor( https://github.com/vmware/harbor)\u7531VMware\u4e2d\u56fd\u7814\u53d1\u56e2\u961f\u4e3a\u4f01\u4e1a\u7528\u6237\u8bbe\u8ba1\u7684Registry Server\u5f00\u6e90\u9879\u76ee\uff0c\u5305\u62ec\u4e86\u6743\u9650\u7ba1\u7406(RBAC)\u3001\u56fe\u5f62\u7ba1\u7406\u754c\u9762\u3001LDAP/AD\u96c6\u6210\u3001\u5ba1\u8ba1\u3001\u81ea\u6211\u6ce8\u518c\u3001HA\u7b49\u4f01\u4e1a\u5fc5\u9700\u7684\u529f\u80fd\uff0c\u540c\u65f6\u9488\u5bf9\u4e2d\u56fd\u7528\u6237\u7684\u7279\u70b9\uff0c\u539f\u751f\u652f\u6301\u4e2d\u6587\uff0c\u5e76\u8ba1\u5212\u5b9e\u73b0\u955c\u50cf\u590d\u5236(roadmap)\u7b49\u529f\u80fd\u3002 \u53ef\u53c2\u8003\u5185\u5bb9\uff1a http://www.jiagoumi.com/work/1221.html \u5b89\u88c5Docker-compose \u00b6 # \u5b89\u88c5\u8fc7\u7a0b\u4e2d\u8981\u7528\u5230docker-compose\uff0c\u8fd9\u4e2a\u73a9\u610f\u662f\u7528python\u5199\u7684\uff0c\u6240\u4ee5\u7528pip\u6765\u5b89\u88c5 yum -y install python-pip pip install docker-compose \u7531\u4e8e\u56fd\u5185\u7f51\u901f\u7684\u95ee\u9898\u8fd9\u91cc\u6211\u4e0b\u8f7d\u4e86harbor\u7684\u79bb\u7ebf\u5305\uff0c\u79bb\u7ebf\u5305\u5305\u542b\u4e86\u6240\u9700\u7684\u6240\u6709\u9700\u8981\u5728\u7ebf\u4e0b\u8f7d\u7684\u955c\u50cf\u5305\uff0c\u7701\u53bb\u4e86\u5f88\u591a\u9ebb\u70e6\u7684\u4e8b\u60c5\u3002 \u5b98\u65b9\u4e0b\u8f7d\u70b9 & \u767e\u5ea6\u4e91\u4e0b\u8f7d\u70b9 \u3010\u63d0\u53d6\u7801\uff1a5n52\u3011 \u5b89\u88c5\u8fc7\u7a0b\u5c31\u5f02\u5e38\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u7167\u7740 \u5b98\u65b9\u6587\u6863 \u76f4\u63a5\u53bb\u64cd\u4f5c\uff0c\u5b98\u65b9\u6587\u6863\u8be6\u7ec6\u7684\u4ecb\u7ecd\u4e86\uff0c\u6211\u4eec\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9700\u8981\u8c03\u6574\u7684\u5185\u5bb9\u3002\u8fd9\u91cc\u5176\u5b9e\u5c31\u662f\u7b80\u5355\u7684\u8bbe\u7f6e\u4e00\u4e0b \u4fee\u6539harbor.cfg \u00b6 \u8fd9\u91cc\u6211\u53ea\u7b80\u5355\u7684\u4fee\u6539\u4e863\u4e2a\u914d\u7f6e\uff0c\u5177\u4f53\u7684\u914d\u7f6e\u5728\u5b98\u65b9\u6587\u6863\u4e2d\uff0c\u6709\u975e\u5e38\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u8be6\u7ec6\u5230\u4ecb\u7ecd\u6bcf\u4e00\u4e2a\u914d\u7f6e\u9879\uff0c\u5927\u5bb6\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u53bb\u4ed4\u7ec6\u67e5\u770b # \u4fee\u6539harbor\u7ba1\u7406\u53f0UI\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u4e0d\u8981\u7528localhost\u6216\u8005127.0.0.1\u8fd9\u79cd\u672c\u5730\u7684\u5730\u5740\uff0c\u56e0\u4e3a\u8981\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1 hostname = reg.unixhot.com # \u914d\u7f6e\u8bbf\u95ee\u7684\u65b9\u5f0f\u4e3ahttps\uff0c\u5982\u679c\u662f\u81ea\u5df1\u5728\u6d4b\u8bd5\u673a\u4e0a\u641e\u7684\u8bdd\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528http\uff0c\u4f46\u662f\u751f\u4ea7\u5efa\u8bae\u52a1\u5fc5\u4f7f\u7528https ui_url_protocol = https # \u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\u4fee\u6539\u4e00\u4e0bharbor\u7684admin\u767b\u5f55\u5bc6\u7801 harbor_admin_password = Harbor12345 \u521d\u59cb\u5316\u76f8\u5173\u914d\u7f6e\u6587\u4ef6\uff1a ./prepare \u8fd0\u884cinstall\u811a\u672c\u8fdb\u884c\u5b89\u88c5\u90e8\u7f72harbor\uff1a # \u5728\u7ebf\u5b89\u88c5\u7684\u8fc7\u7a0b\u592a\u75db\u82e6\u4e86\uff0c\u76f4\u63a5clone\u4e0b\u6765\u7684\u5305docker-compose.yml\u4e2d\u4e0d\u77e5\u9053\u4e3a\u5565\uff0c\u6240\u6709registry\u91cc\u9762\u7684\u955c\u50cf\u7684tag\u90fd\u662f__version__\u5bfc\u81f4\u4e0b\u8f7d\u7684\u65f6\u5019\u76f4\u63a5\u627e\u4e0d\u5230\u5bf9\u5e94\u7684version\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u53ea\u80fd\u624b\u52a8\u6539\u624d\u884c\u3002 ./install.sh \u81f3\u6b64\u4e3a\u6b62\u5b89\u88c5\u8fc7\u7a0b\u5c31\u7ed3\u675f\u4e86\uff0c\u79bb\u7ebf\u7248\u672c\u5305\u7684\u5b89\u88c5\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u4e00\u6b65\u4e00\u6b65\u7684\u64cd\u4f5c\u5373\u53ef\uff0c\u7ba1\u7406\u7684\u8bdd\u9700\u8981\u4f7f\u7528docker-compose\u6765\u8fdb\u884c\u7ba1\u7406\u3002 \u914d\u7f6eSSL \u00b6 \u8fd9\u91cc\u6a21\u62df\u4f7f\u7528https\u6765\u8fdb\u884c\u8bbf\u95ee\uff0c\u76ee\u524d\u5e76\u6ca1\u6709\u8d2d\u4e70\u8bc1\u4e66\uff0c\u56e0\u6b64\u6211\u4eec\u81ea\u5df1\u53ea\u80fd\u521b\u5efa\u81ea\u7b7e\u540d\u8bc1\u4e66\u6765\u6a21\u62df\u8fd9\u4e2a\u73af\u5883\u3002\u5173\u4e8e\u81ea\u7b7e\u540d\u8bc1\u4e66\u7684\u914d\u7f6e\u5b98\u65b9\u4e5f\u662f\u6709\u6559\u7a0b\u7684\uff0c\u76f4\u63a5\u6309\u7167\u6559\u7a0b\u53bb\u505a\u5c31\u53ef\u4ee5\u4e86\u3002 \u8df3\u8f6c\u94fe\u63a5 \u5177\u4f53\u7684\u8bf4\u660e\u5c31\u4e0d\u5728\u8fd9\u91cc\u8d58\u8ff0\u4e86\uff0c\u8981\u770b\u8bf4\u660e\u53ef\u4ee5\u770b\u5b98\u65b9\u6587\u6863\uff0c\u8fd9\u91cc\u53ea\u662f\u4f53\u73b0\u547d\u4ee4 openssl req -newkey rsa:4096 -nodes -sha256 -keyout ca.key -x509 -days 365 -out ca.crt openssl req -newkey rsa:4096 -nodes -sha256 -keyout yourdomain.com.key -out reg.unixhot.com.csr openssl x509 -req -days 365 -in reg.unixhot.com.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out reg.unixhot.com.crt \u67e5\u770bharbor.cfg\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684ssl\u8bc1\u4e66\u7684\u4f4d\u7f6e\uff1a #The path of cert and key files for nginx, they are applied only the protocol is set to https ssl_cert = /data/cert/server.crt ssl_cert_key = /data/cert/server.key \u7531\u4e8e\u662f\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6211\u4e5f\u5c31\u6ca1\u6539\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u628a\u6211\u4eec\u751f\u6210\u7684key\u653e\u5230/data/cert/\u4e0b\u5e76\u4e14\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u91cd\u547d\u540d\u4e3aserver\uff0c\u6ce8\u610f\u8fd9\u91cc\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u6211\u56fe\u7701\u4e8b\u6ca1\u6709\u53bb\u52a8\u914d\u7f6e\u6587\u4ef6\u3002 [ root@localhost ~ ] # ll /data/cert/ total 8 -rw-r--r--. 1 root root 1866 May 12 13 :22 server.crt -rw-r--r--. 1 root root 3272 May 12 13 :22 server.key \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a ./prepare docker-compose down # \u542f\u52a8harbor docker-compose up -d \u6d4b\u8bd5\u4e00\u4e0b\uff1a # \u8fd9\u91cc\u6d4b\u8bd5\u6210\u529f\u4ee5\u540e\u6211\u4eec\u4e5f\u5c31\u53ef\u4ee5\u5728\u7f51\u9875\u7aef\u8bbf\u95ee\u6d4b\u8bd5\u4e86\u3002 [ root@localhost harbor ] # docker login reg.unixhot.com Username ( admin ) : admin Password: Login Succeeded Push\u955c\u50cf\u6d4b\u8bd5 \u00b6 \u5c06server.crt\u590d\u5236\u5230/etc/docker/cert.d/reg.unixhot.com\u76ee\u5f55\u4e0b\uff0c\u76ee\u5f55\u6ca1\u6709\u81ea\u5df1\u65b0\u5efa\u4e00\u4e2a\uff1a [ root@localhost reg.unixhot.com ] # pwd /etc/docker/certs.d/reg.unixhot.com [ root@localhost reg.unixhot.com ] # ll total 4 -rw-r--r--. 1 root root 1866 May 12 14 :25 server.crt \u5728web\u7aefHarbor\u4e2d\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\u660e\u4e3aexercise push\u955c\u50cf\uff1a [ root@localhost reg.unixhot.com ] # docker login reg.unixhot.com -uadmin -pHarbor12345 WARNING! Using --password via the CLI is insecure. Use --password-stdin. Login Succeeded # \u9996\u5148\u8bb0\u5f97\u6253\u6807\u7b7e\uff0cdocker tag src dst # dockerhub\u57df\u540d/\u9879\u76ee\u540d/\u955c\u50cf\u540d:TAG [ root@localhost reg.unixhot.com ] # docker tag unixhot/centos reg.unixhot.com/exercise/centos [ root@localhost reg.unixhot.com ] # docker push reg.unixhot.com/exercise/centos The push refers to repository [ reg.unixhot.com/exercise/centos ] 1e11f9cfa6aa: Pushed 43e653f84b79: Pushed latest: digest: sha256:792ead7dcec256fc00102cd0dd505c11b54a906ff2df2c090be972a92976ebc7 size: 741 \u5728\u7f51\u9875\u7aef\u67e5\u770b\uff0c\u5c31\u80fd\u770b\u5230\u6211\u4eec\u7684\u955c\u50cf\u4e86\u3002 \u4eceHarbor\u628a\u955c\u50cf\u7ed9Pull\u4e0b\u6765\u6d4b\u8bd5\uff1a [ root@localhost ~ ] # docker pull reg.unixhot.com/exercise/centos:latest latest: Pulling from exercise/centos 469cfcc7a4b3: Already exists 6863d4929975: Pull complete Digest: sha256:792ead7dcec256fc00102cd0dd505c11b54a906ff2df2c090be972a92976ebc7 Status: Downloaded newer image for reg.unixhot.com/exercise/centos:latest \u6d4b\u8bd5\u6210\u529f\u3002","title":"Docker-Registry"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/#docker-registry","text":"DockerFile\u5efa\u8bae\u901a\u8fc7git\u6765\u4fdd\u5b58\uff0c \u5b9e\u9a8c\u73af\u5883\u53ef\u4ee5\u64cd\u4f5c\u7684\uff0c\u751f\u4ea7\u4e0d\u5efa\u8bae\u8fd9\u6837\u53bb\u64cd\u4f5c\u7684\u5185\u5bb9\uff1a \u5bb9\u5668\u505c\u6b62\u540e\u5c31\u81ea\u52a8\u5220\u9664\uff1adocker run \u2014rm centos /bin/echo \"hello world\" \u6740\u6b7b\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u670d\u52a1\u5668\uff1adocker kill $(docker ps -a -q) \u5220\u9664\u6240\u6709\u5df2\u7ecf\u505c\u6b62\u7684\u5bb9\u5668\uff1adocker rm $(docker ps -a -q) \u5220\u9664\u6240\u6709\u672a\u6253\u6807\u7b7e\u7684\u955c\u50cf\uff1adocker rmi $(docker images -q -f dangling=true) Docker registry\u529f\u80fd\u6bd4\u8f83\u5355\u4e00\uff0c\u6ca1\u6709web\u754c\u9762\u3002 Nginx + Docker registry \u9a8c\u8bc1https\uff08\u81ea\u7b7e\u540d\u8bc1\u4e66\uff09\uff1a \u624b\u52a8\u521b\u5efa\u8bc1\u4e66 [ root@localhost registry ] # openssl req -x509 -days 3650 -nodes -newkey rsa:2048 -keyout ./docker-registry.key -out ./docker-registry.crt Generating a 2048 bit RSA private key ...............................................................+++ ...+++ writing new private key to './docker-registry.key' ----- You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter '.' , the field will be left blank. ----- Country Name ( 2 letter code ) [ XX ] : State or Province Name ( full name ) [] : Locality Name ( eg, city ) [ Default City ] : Organization Name ( eg, company ) [ Default Company Ltd ] : Organizational Unit Name ( eg, section ) [] : Common Name ( eg, your name or your server ' s hostname ) [] :reg.unixhot.com Email Address [] : [ root@localhost registry ] # ll \u603b\u7528\u91cf 8 -rw-r--r--. 1 root root 1289 5\u6708 11 20 :39 docker-registry.crt -rw-r--r--. 1 root root 1708 5\u6708 11 20 :39 docker-registry.key \u5b89\u88c5httpd-tools htpasswd\u5b9e\u73b0\u9a8c\u8bc1\u529f\u80fd # htpasswd\u662fhttpd-tools\u5de5\u5177\u96c6\u4e2d\u7684\u5de5\u5177\uff0c\u56e0\u6b64\u9996\u5148\u8981\u5b89\u88c5httpd-tools yum install -y httpd-tools # \u521b\u5efa\u4f7f\u7528-c\u53c2\u6570\uff0c\u52a0\u5bc6\u7801\u4e0d\u8981\u4f7f\u7528-c\uff0c\u6307\u5b9a\u7528\u6237\u4e3ademo [ root@localhost registry ] # htpasswd -c /opt/registry/docker-registry.htpasswd demo New password: Re-type new password: Adding password for user demo nginx proxy https \uff08\u6709\u4e00\u4e2a\u73b0\u6210\u7684\u955c\u50cf\uff09\uff0c\u542f\u52a8\u4e00\u4e2adocker-registry\u7684\u5bb9\u5668\uff0cproxy\u5230\u8fd9\u91cc\u3002 # --link\u53ef\u4ee5\u8ba9\u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u4e92\u8bbf docker run -d -p 443 :443 \\ --name docker-registry-proxy \\ -e REGISTRY_HOST = \"docker-registry\" \\ -e REGISTRY_PORT = \"5000\" \\ -e SERVER_NAME = \"reg.unixhot.com\" \\ --link docker-registry:docker-registry \\ -v /opt/registry/docker-registry.htpasswd:/etc/nginx/.htpasswd:ro \\ -v /opt/registry:/etc/nginx/ssl:ro \\ containersol/docker-registry-proxy docker \u914d\u7f6e\u4f7f\u7528\u8bc1\u4e66 # \u5728/etc/hosts\u4e2d\u9488\u5bf9reg.unixhot.com\u505a\u57df\u540d\u7684\u6620\u5c04 192 .168.56.101 reg.unixhot.com # \u914d\u7f6edocker\u4f7f\u7528\u8bc1\u4e66\uff0c\u5982\u679c\u8bf4\u4e0d\u4e70\u8bc1\u4e66\u7684\u8bdd\u90a3\u4e48\u6240\u6709\u7684\u9700\u8981\u8fde\u63a5\u7684\u670d\u52a1\u5668\u90fd\u8981\u914d\u7f6e\u8fd9\u4e00\u90e8\u5206 # \u5c06\u81ea\u7b7e\u540d\u8bc1\u4e66\u653e\u5230/etc/docker\u4e0b\u9762 cd /etc/docker mkdir -p certs.d/reg.unixhot.com cd certs.d/reg.unixhot.com cp /opt/registry/docker-registry.crt ca.crt # \u68c0\u6d4bdocker\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u767b\u5f55 [ root@localhost ~ ] # docker login reg.unixhot.com Username: demo Password: Login Succeeded \u767b\u5f55\uff0cpush\u955c\u50cf # Push\u955c\u50cf\u7b2c\u4e00\u4ef6\u9700\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u6253\u6807\u7b7e\uff0c\u8fd9\u4e2a\u6807\u7b7e\u662f\u7ed9docker\u5165\u5e93\u6211\u4eec\u521b\u5efa\u8fd9\u4e2aregistry\u7684\u65f6\u5019\u6253\u7684\u6807\u7b7e [ root@localhost ~ ] # docker tag unixhot/centos reg.unixhot.com/unixhot/centos # push\u955c\u50cf\u5230\u4ed3\u5e93 [ root@localhost ~ ] # docker push reg.unixhot.com/unixhot/centos The push refers to repository [ reg.unixhot.com/unixhot/centos ] 1e11f9cfa6aa: Pushed 43e653f84b79: Pushed latest: digest: sha256:e0bf9b8009fdea481f4546d7139aa3beeabbe799d489843f1c6a61339ef11271 size: 3768 \u67e5\u770b\uff0c\u4f20\u4e0a\u53bb\u4e86\u4ee5\u540e\u53ea\u80fd\u901a\u8fc7\u63d0\u4f9b\u7684api\u8fdb\u884c\u67e5\u770b\u3002 # \u4f7f\u7528docker images\u4e5f\u80fd\u67e5\u770b\u5230 [ root@localhost ~ ] # curl -X GET https://demo:demo@reg.unixhot.com/v2/_catalog -k { \"repositories\" : [ \"unixhot/centos\" ]} \u5982\u679c\u662f\u8d2d\u4e70\u7684\u8bc1\u4e66\u7684\u8bdd\u53ea\u9700\u8981\u4e0a\u8ff0\u7684\u7b2c\u4e8c\u6b65\u548c\u7b2c\u4e09\u6b65\u4ee5\u53ca\u7b2c\u4e94\u6b65\u5373\u53ef\u3002\u624b\u52a8\u521b\u5efa\u548c\u914d\u7f6edocker\u4f7f\u7528\u8bc1\u4e66\u5c31\u8fc7\u4e86\u3002 [ root@localhost opt ] # mkdir registry [ root@localhost opt ] # cd registry/ [ root@localhost registry ] # docker run -d --name docker-registry -v /opt/registry/:/tmp/registry-dev registry:2.2.1 Unable to find image 'registry:2.2.1' locally 2 .2.1: Pulling from library/registry 8387d9ff0016: Pull complete 3b52deaaf0ed: Pull complete 4bd501fad6de: Pull complete a3ed95caeb02: Pull complete b1f99b5938be: Pull complete 82c34c0ec017: Pull complete 5426c0c1c293: Pull complete Digest: sha256:30adb707d1b4d2ad694c38da3ea1e7d303fdbdce2538ab0372afe6f1523ae3c8 Status: Downloaded newer image for registry:2.2.1 4b19999b188ce8ed1a0ea7eab52c36a9a3e17ce78147f24a99d04d39624d9d87","title":"Docker-Registry"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/#habordocker-registry","text":"Harbor\u662f\u4e00\u4e2a\u4f01\u4e1a\u7ea7Registry\u670d\u52a1\u3002\u5b83\u5bf9\u5f00\u6e90\u7684Docker Registry\u670d\u52a1\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u6dfb\u52a0\u4e86\u66f4\u591a\u4f01\u4e1a\u7528\u6237\u9700\u8981\u7684\u529f\u80fd\u3002Harbor\u88ab\u8bbe\u8ba1\u7528\u4e8e\u90e8\u7f72\u4e00\u5957\u7ec4\u7ec7\u5185\u90e8\u4f7f\u7528\u7684\u79c1\u6709\u73af\u5883\uff0c\u8fd9\u4e2a\u79c1\u6709Registry\u670d\u52a1\u5bf9\u4e8e\u975e\u5e38\u5173\u5fc3\u5b89\u5168 \u7684\u7ec4\u7ec7\u6765\u8bf4\u662f\u5341\u5206\u91cd\u8981\u7684\u3002\u53e6\u5916\uff0c\u79c1\u6709Registry\u670d\u52a1\u53ef\u4ee5\u901a\u8fc7\u907f\u514d\u4ece\u516c\u57df\u7f51\u4e0b\u8f7d\u955c\u50cf\u800c\u63d0\u9ad8\u4f01\u4e1a\u751f\u4ea7\u529b\u3002\u8fd9\u5bf9\u4e8e\u6ca1\u6709\u826f\u597d\u7684Internet\u8fde\u63a5\u72b6\u6001\uff0c\u4f7f\u7528Docker Container\u7684\u7528\u6237\u662f\u4e00\u4e2a\u798f\u97f3\u3002 Harbor\u662fVMware\u516c\u53f8\u6700\u8fd1\u5f00\u6e90\u7684\u4f01\u4e1a\u7ea7Docker Registry\u9879\u76ee( https://github.com/vmware/harbor ) \u3002\u5176\u76ee\u6807\u662f\u5e2e\u52a9\u7528\u6237\u8fc5\u901f\u642d\u5efa\u4e00\u4e2a\u4f01\u4e1a\u7ea7\u7684Docker registry\u670d\u52a1\u3002\u5b83\u63d0\u4f9b\u4e86\u7ba1\u7406UI, \u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236(Role Based Access Control)\uff0cAD/LDAP\u96c6\u6210\u3001\u4ee5\u53ca\u5ba1\u8ba1\u65e5\u5fd7(Audit logging) \u7b49\u4f01\u4e1a\u7528\u6237\u9700\u6c42\u7684\u529f\u80fd\uff0c\u540c\u65f6\u8fd8\u539f\u751f\u652f\u6301\u4e2d\u6587\u3002Harbor\u7684\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u662f\u4ee5Docker\u5bb9\u5668\u7684\u5f62\u5f0f\u6784\u5efa\u7684\uff0c\u4f7f\u7528Docker Compose\u6765\u5bf9\u5b83\u8fdb\u884c\u90e8\u7f72\u3002 Harbor\u9879\u76ee\u4f7f\u7528\u4e86go\u8bed\u8a00\u5f00\u53d1\uff0cWEB\u6846\u67b6\u91c7\u7528beego\u3002\u5bb9\u5668\u5e94\u7528\u7684\u5f00\u53d1\u548c\u8fd0\u884c\u79bb\u4e0d\u5f00\u53ef\u9760\u7684\u955c\u50cf\u7ba1\u7406\u3002\u4ece\u5b89\u5168\u548c\u6548\u7387\u7b49\u65b9\u9762\u8003\u8651\uff0c\u5728\u4f01\u4e1a\u79c1\u6709\u73af\u5883\u5185\u90e8\u7f72\u7684Registry\u670d\u52a1\u662f\u975e\u5e38\u5fc5\u8981\u7684\u3002 Harbor( https://github.com/vmware/harbor)\u7531VMware\u4e2d\u56fd\u7814\u53d1\u56e2\u961f\u4e3a\u4f01\u4e1a\u7528\u6237\u8bbe\u8ba1\u7684Registry Server\u5f00\u6e90\u9879\u76ee\uff0c\u5305\u62ec\u4e86\u6743\u9650\u7ba1\u7406(RBAC)\u3001\u56fe\u5f62\u7ba1\u7406\u754c\u9762\u3001LDAP/AD\u96c6\u6210\u3001\u5ba1\u8ba1\u3001\u81ea\u6211\u6ce8\u518c\u3001HA\u7b49\u4f01\u4e1a\u5fc5\u9700\u7684\u529f\u80fd\uff0c\u540c\u65f6\u9488\u5bf9\u4e2d\u56fd\u7528\u6237\u7684\u7279\u70b9\uff0c\u539f\u751f\u652f\u6301\u4e2d\u6587\uff0c\u5e76\u8ba1\u5212\u5b9e\u73b0\u955c\u50cf\u590d\u5236(roadmap)\u7b49\u529f\u80fd\u3002 \u53ef\u53c2\u8003\u5185\u5bb9\uff1a http://www.jiagoumi.com/work/1221.html","title":"\u4f7f\u7528Habor\u6784\u5efa\u4f01\u4e1a\u7ea7Docker Registry"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/#docker-compose","text":"# \u5b89\u88c5\u8fc7\u7a0b\u4e2d\u8981\u7528\u5230docker-compose\uff0c\u8fd9\u4e2a\u73a9\u610f\u662f\u7528python\u5199\u7684\uff0c\u6240\u4ee5\u7528pip\u6765\u5b89\u88c5 yum -y install python-pip pip install docker-compose \u7531\u4e8e\u56fd\u5185\u7f51\u901f\u7684\u95ee\u9898\u8fd9\u91cc\u6211\u4e0b\u8f7d\u4e86harbor\u7684\u79bb\u7ebf\u5305\uff0c\u79bb\u7ebf\u5305\u5305\u542b\u4e86\u6240\u9700\u7684\u6240\u6709\u9700\u8981\u5728\u7ebf\u4e0b\u8f7d\u7684\u955c\u50cf\u5305\uff0c\u7701\u53bb\u4e86\u5f88\u591a\u9ebb\u70e6\u7684\u4e8b\u60c5\u3002 \u5b98\u65b9\u4e0b\u8f7d\u70b9 & \u767e\u5ea6\u4e91\u4e0b\u8f7d\u70b9 \u3010\u63d0\u53d6\u7801\uff1a5n52\u3011 \u5b89\u88c5\u8fc7\u7a0b\u5c31\u5f02\u5e38\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u7167\u7740 \u5b98\u65b9\u6587\u6863 \u76f4\u63a5\u53bb\u64cd\u4f5c\uff0c\u5b98\u65b9\u6587\u6863\u8be6\u7ec6\u7684\u4ecb\u7ecd\u4e86\uff0c\u6211\u4eec\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9700\u8981\u8c03\u6574\u7684\u5185\u5bb9\u3002\u8fd9\u91cc\u5176\u5b9e\u5c31\u662f\u7b80\u5355\u7684\u8bbe\u7f6e\u4e00\u4e0b","title":"\u5b89\u88c5Docker-compose"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/#harborcfg","text":"\u8fd9\u91cc\u6211\u53ea\u7b80\u5355\u7684\u4fee\u6539\u4e863\u4e2a\u914d\u7f6e\uff0c\u5177\u4f53\u7684\u914d\u7f6e\u5728\u5b98\u65b9\u6587\u6863\u4e2d\uff0c\u6709\u975e\u5e38\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u8be6\u7ec6\u5230\u4ecb\u7ecd\u6bcf\u4e00\u4e2a\u914d\u7f6e\u9879\uff0c\u5927\u5bb6\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u53bb\u4ed4\u7ec6\u67e5\u770b # \u4fee\u6539harbor\u7ba1\u7406\u53f0UI\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u4e0d\u8981\u7528localhost\u6216\u8005127.0.0.1\u8fd9\u79cd\u672c\u5730\u7684\u5730\u5740\uff0c\u56e0\u4e3a\u8981\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1 hostname = reg.unixhot.com # \u914d\u7f6e\u8bbf\u95ee\u7684\u65b9\u5f0f\u4e3ahttps\uff0c\u5982\u679c\u662f\u81ea\u5df1\u5728\u6d4b\u8bd5\u673a\u4e0a\u641e\u7684\u8bdd\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528http\uff0c\u4f46\u662f\u751f\u4ea7\u5efa\u8bae\u52a1\u5fc5\u4f7f\u7528https ui_url_protocol = https # \u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\u4fee\u6539\u4e00\u4e0bharbor\u7684admin\u767b\u5f55\u5bc6\u7801 harbor_admin_password = Harbor12345 \u521d\u59cb\u5316\u76f8\u5173\u914d\u7f6e\u6587\u4ef6\uff1a ./prepare \u8fd0\u884cinstall\u811a\u672c\u8fdb\u884c\u5b89\u88c5\u90e8\u7f72harbor\uff1a # \u5728\u7ebf\u5b89\u88c5\u7684\u8fc7\u7a0b\u592a\u75db\u82e6\u4e86\uff0c\u76f4\u63a5clone\u4e0b\u6765\u7684\u5305docker-compose.yml\u4e2d\u4e0d\u77e5\u9053\u4e3a\u5565\uff0c\u6240\u6709registry\u91cc\u9762\u7684\u955c\u50cf\u7684tag\u90fd\u662f__version__\u5bfc\u81f4\u4e0b\u8f7d\u7684\u65f6\u5019\u76f4\u63a5\u627e\u4e0d\u5230\u5bf9\u5e94\u7684version\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u53ea\u80fd\u624b\u52a8\u6539\u624d\u884c\u3002 ./install.sh \u81f3\u6b64\u4e3a\u6b62\u5b89\u88c5\u8fc7\u7a0b\u5c31\u7ed3\u675f\u4e86\uff0c\u79bb\u7ebf\u7248\u672c\u5305\u7684\u5b89\u88c5\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u4e00\u6b65\u4e00\u6b65\u7684\u64cd\u4f5c\u5373\u53ef\uff0c\u7ba1\u7406\u7684\u8bdd\u9700\u8981\u4f7f\u7528docker-compose\u6765\u8fdb\u884c\u7ba1\u7406\u3002","title":"\u4fee\u6539harbor.cfg"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/#ssl","text":"\u8fd9\u91cc\u6a21\u62df\u4f7f\u7528https\u6765\u8fdb\u884c\u8bbf\u95ee\uff0c\u76ee\u524d\u5e76\u6ca1\u6709\u8d2d\u4e70\u8bc1\u4e66\uff0c\u56e0\u6b64\u6211\u4eec\u81ea\u5df1\u53ea\u80fd\u521b\u5efa\u81ea\u7b7e\u540d\u8bc1\u4e66\u6765\u6a21\u62df\u8fd9\u4e2a\u73af\u5883\u3002\u5173\u4e8e\u81ea\u7b7e\u540d\u8bc1\u4e66\u7684\u914d\u7f6e\u5b98\u65b9\u4e5f\u662f\u6709\u6559\u7a0b\u7684\uff0c\u76f4\u63a5\u6309\u7167\u6559\u7a0b\u53bb\u505a\u5c31\u53ef\u4ee5\u4e86\u3002 \u8df3\u8f6c\u94fe\u63a5 \u5177\u4f53\u7684\u8bf4\u660e\u5c31\u4e0d\u5728\u8fd9\u91cc\u8d58\u8ff0\u4e86\uff0c\u8981\u770b\u8bf4\u660e\u53ef\u4ee5\u770b\u5b98\u65b9\u6587\u6863\uff0c\u8fd9\u91cc\u53ea\u662f\u4f53\u73b0\u547d\u4ee4 openssl req -newkey rsa:4096 -nodes -sha256 -keyout ca.key -x509 -days 365 -out ca.crt openssl req -newkey rsa:4096 -nodes -sha256 -keyout yourdomain.com.key -out reg.unixhot.com.csr openssl x509 -req -days 365 -in reg.unixhot.com.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out reg.unixhot.com.crt \u67e5\u770bharbor.cfg\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684ssl\u8bc1\u4e66\u7684\u4f4d\u7f6e\uff1a #The path of cert and key files for nginx, they are applied only the protocol is set to https ssl_cert = /data/cert/server.crt ssl_cert_key = /data/cert/server.key \u7531\u4e8e\u662f\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6211\u4e5f\u5c31\u6ca1\u6539\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u628a\u6211\u4eec\u751f\u6210\u7684key\u653e\u5230/data/cert/\u4e0b\u5e76\u4e14\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u91cd\u547d\u540d\u4e3aserver\uff0c\u6ce8\u610f\u8fd9\u91cc\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u6211\u56fe\u7701\u4e8b\u6ca1\u6709\u53bb\u52a8\u914d\u7f6e\u6587\u4ef6\u3002 [ root@localhost ~ ] # ll /data/cert/ total 8 -rw-r--r--. 1 root root 1866 May 12 13 :22 server.crt -rw-r--r--. 1 root root 3272 May 12 13 :22 server.key \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a ./prepare docker-compose down # \u542f\u52a8harbor docker-compose up -d \u6d4b\u8bd5\u4e00\u4e0b\uff1a # \u8fd9\u91cc\u6d4b\u8bd5\u6210\u529f\u4ee5\u540e\u6211\u4eec\u4e5f\u5c31\u53ef\u4ee5\u5728\u7f51\u9875\u7aef\u8bbf\u95ee\u6d4b\u8bd5\u4e86\u3002 [ root@localhost harbor ] # docker login reg.unixhot.com Username ( admin ) : admin Password: Login Succeeded","title":"\u914d\u7f6eSSL"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/#push","text":"\u5c06server.crt\u590d\u5236\u5230/etc/docker/cert.d/reg.unixhot.com\u76ee\u5f55\u4e0b\uff0c\u76ee\u5f55\u6ca1\u6709\u81ea\u5df1\u65b0\u5efa\u4e00\u4e2a\uff1a [ root@localhost reg.unixhot.com ] # pwd /etc/docker/certs.d/reg.unixhot.com [ root@localhost reg.unixhot.com ] # ll total 4 -rw-r--r--. 1 root root 1866 May 12 14 :25 server.crt \u5728web\u7aefHarbor\u4e2d\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\u660e\u4e3aexercise push\u955c\u50cf\uff1a [ root@localhost reg.unixhot.com ] # docker login reg.unixhot.com -uadmin -pHarbor12345 WARNING! Using --password via the CLI is insecure. Use --password-stdin. Login Succeeded # \u9996\u5148\u8bb0\u5f97\u6253\u6807\u7b7e\uff0cdocker tag src dst # dockerhub\u57df\u540d/\u9879\u76ee\u540d/\u955c\u50cf\u540d:TAG [ root@localhost reg.unixhot.com ] # docker tag unixhot/centos reg.unixhot.com/exercise/centos [ root@localhost reg.unixhot.com ] # docker push reg.unixhot.com/exercise/centos The push refers to repository [ reg.unixhot.com/exercise/centos ] 1e11f9cfa6aa: Pushed 43e653f84b79: Pushed latest: digest: sha256:792ead7dcec256fc00102cd0dd505c11b54a906ff2df2c090be972a92976ebc7 size: 741 \u5728\u7f51\u9875\u7aef\u67e5\u770b\uff0c\u5c31\u80fd\u770b\u5230\u6211\u4eec\u7684\u955c\u50cf\u4e86\u3002 \u4eceHarbor\u628a\u955c\u50cf\u7ed9Pull\u4e0b\u6765\u6d4b\u8bd5\uff1a [ root@localhost ~ ] # docker pull reg.unixhot.com/exercise/centos:latest latest: Pulling from exercise/centos 469cfcc7a4b3: Already exists 6863d4929975: Pull complete Digest: sha256:792ead7dcec256fc00102cd0dd505c11b54a906ff2df2c090be972a92976ebc7 Status: Downloaded newer image for reg.unixhot.com/exercise/centos:latest \u6d4b\u8bd5\u6210\u529f\u3002","title":"Push\u955c\u50cf\u6d4b\u8bd5"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/","text":"Kubernetes\u4e8c\u8fdb\u5236\u90e8\u7f72 \u00b6 \u6587\u6863\u65e5\u671f\uff1a2018\u5e7412\u670825\u65e5 \u8bb0\u5f55\u4eba\u5458\uff1alamber \u73af\u5883\u8bf4\u660e\uff1amaster\u8282\u70b9*3\uff0cnode\u8282\u70b9*2\uff0c\u4e09\u53f0master\u8282\u70b9\u505a\u8d1f\u8f7d\u5747\u8861\uff0c\u901a\u8fc7\u963f\u91cc\u4e91\u7684\u5185\u7f51SLB\u505a\u8d1f\u8f7d\uff0c\u6839\u636e\u9700\u8981\uff0cnode\u8282\u70b9\u53ef\u4ee5\u52a8\u6001\u7684\u8fdb\u884c\u6dfb\u52a0\u3002\u5f53\u524d\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\u56fe\uff1a IP\u5730\u5740\u5206\u914d \u00b6 Name IP Description Kubernetes Master HA 172.16.16.124\uff08VIP\uff09 master HA\u5730\u5740 Pro-k8s-master1 172.16.16.119 master-1 Pro-k8s-master2 172.16.16.120 master-2 Pro-k8s-master3 172.16.16.121 master-3 Pro-k8s-node1 172.16.16.122 node-1 Pro-k8s-node2 172.16.16.123 node-2 ETCD_NODE1 172.16.16.119 etcd cluster ETCD_NODE2 172.16.16.120 etcd cluster ETCD_NODE3 172.16.16.121 etcd cluster \u7cfb\u7edf\u521d\u59cb\u5316 \u00b6 \u5b89\u88c5\u90e8\u7f72Docker \u6307\u5b9a\u7248\u672c\u4e3a18.06.0-ce \uff0c\u5e76\u4fee\u6539Docker\u7684\u6570\u636e\u5b58\u653e\u4f4d\u7f6e\u4e3a /alidata/docker/ \u3002\uff08\u7565\uff09 \u51c6\u5907Kubernetes\u76841.12.3\u7684\u76f8\u5173\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5177\u4f53\u53ef\u53c2\u8003 CHANGELOG-1.12 \u3002\uff08\u7565\uff09 \u7cfb\u7edf\u4e3b\u673a\u540d\u521d\u59cb\u5316\uff0c\u4e3b\u673aSSH\u6388\u4fe1\u514d\u5bc6\u767b\u5f55\u3002\uff08\u7565\uff09 \u5173\u95edselinux\uff0c\u5173\u95ediptables\uff08firewalld\uff09\u3002 \u51c6\u5907\u90e8\u7f72\u76ee\u5f55\uff0c\u5e76\u628a/alidata/kubernetes/bin\u52a0\u5165\u5230\u73af\u5883\u53d8\u91cfPATH\u4e2d\u3002 mkdir -p /alidata/kubernetes/ { cfg,bin,ssl,log } \u624b\u52a8\u5236\u4f5cCA\u8bc1\u4e66 \u00b6 \u672c\u6b21\u751f\u6210\u8bc1\u4e66\u7684\u5de5\u5177\u91c7\u7528CFSSL\uff0cCFSSL\u662fCloudFlare\u5f00\u6e90\u7684\u4e00\u6b3ePKI/TLS\u5de5\u5177\u3002 CFSSL \u5305\u542b\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\u548c\u4e00\u4e2a\u7528\u4e8e\u7b7e\u540d\u7684\u5de5\u5177\uff0c\u9a8c\u8bc1\u5e76\u4e14\u6346\u7ed1TLS\u8bc1\u4e66\u7684 HTTP API \u670d\u52a1\u3002 \u4f7f\u7528Go\u8bed\u8a00\u7f16\u5199\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528json\u53bb\u5b9a\u4e49\u8bc1\u4e66\u76f8\u5173\u5185\u5bb9\uff0c\u770b\u8d77\u6765\u66f4\u52a0\u76f4\u89c2\u3002 CFSSL\u5305\u62ec\uff1a \u4e00\u7ec4\u7528\u4e8e\u751f\u6210\u81ea\u5b9a\u4e49 TLS PKI \u7684\u5de5\u5177 cfssl \u7a0b\u5e8f\uff0c\u662fCFSSL\u7684\u547d\u4ee4\u884c\u5de5\u5177 multirootca \u7a0b\u5e8f\u662f\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u7b7e\u540d\u5bc6\u94a5\u7684\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u670d\u52a1\u5668 mkbundle \u7a0b\u5e8f\u7528\u4e8e\u6784\u5efa\u8bc1\u4e66\u6c60 cfssljson \u7a0b\u5e8f\uff0c\u4ece cfssl \u548c multirootca \u7a0b\u5e8f\u83b7\u53d6JSON\u8f93\u51fa\uff0c\u5e76\u5c06\u8bc1\u4e66\uff0c\u5bc6\u94a5\uff0cCSR\u548cbundle\u5199\u5165\u78c1\u76d8 \u51c6\u5907cfssl\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 \u00b6 # \u4e0b\u8f7dcfssl\u4e8c\u8fdb\u5236\u6587\u4ef6 wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 chmod +x cfssl* mv cfssl-certinfo_linux-amd64 /alidata/kubernetes/bin/cfssl-certinfo mv cfssljson_linux-amd64 /alidata/kubernetes/bin/cfssljson mv cfssl_linux-amd64 /alidata/kubernetes/bin/cfssl # \u5206\u53d1\u5230\u6240\u6709\u7684k8s\u8282\u70b9\uff0c\u56e0\u4e3a\u8bbe\u7f6e\u4e86\u514d\u5bc6\u56e0\u6b64\u65e0\u9700\u8f93\u5165\u5bc6\u7801\uff0c\u5176\u4f59\u51e0\u4e2a\u8282\u70b9\u7684\u5206\u53d1\u7701\u7565\uff0c\u53ea\u5199\u4e00\u4e2a\u3002 scp /alidata/kubernetes/bin/cfssl* root@172.16.16.120:/alidata/kubernetes/bin/ \u521d\u59cb\u5316cfssl \u00b6 mkdir /alidata/src && cd /alidata/src cfssl print-defaults config > config.json cfssl print-defaults csr > csr.json \u521b\u5efa\u7528\u6765\u751f\u6210CA\u6587\u4ef6\u7684JSON\u914d\u7f6e\u6587\u4ef6 \u00b6 # \u8bc1\u4e66\u6709\u6548\u671f\u7ea6\u4e3a 10 \u5e74 [ root@Pro-k 8 s-master 1 /alidata/src/ssl ] # cat ca-config.json { \"signing\" : { \"default\" : { \"expiry\" : \"87600h\" }, \"profiles\" : { \"kubernetes\" : { \"usages\" : [ \"signing\" , \"key encipherment\" , \"server auth\" , \"client auth\" ], \"expiry\" : \"87600h\" } } } } \u521b\u5efa\u7528\u6765\u751f\u6210CA\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42\uff08CSR\uff09\u7684JSON\u914d\u7f6e\u6587\u4ef6 \u00b6 [ root@Pro-k 8 s-master 1 /alidata/src/ssl ] # cat ca-csr.json { \"CN\" : \"kubernetes\" , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 }, \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210CA\u8bc1\u4e66\uff08ca.pem\uff09\u548c\u5bc6\u94a5\uff08ca-key.pem\uff09 \u00b6 cfssl gencert -initca ca-csr.json | cfssljson -bare ca \u5206\u53d1\u8bc1\u4e66 \u00b6 cp ca.csr ca.pem ca-key.pem ca-config.json /alidata/kubernetes/ssl # \u5206\u53d1\u5230\u5176\u4ed6\u7684\u8282\u70b9 scp -P 5203 ca.csr ca.pem ca-key.pem ca-config.json 172 .16.16.120:/alidata/kubernetes/ssl ETCD\u96c6\u7fa4\u90e8\u7f72 \u00b6 \u672c\u6b21etcd\u96c6\u7fa4\u4e3b\u8981\u90e8\u7f72\u5728\u4e09\u4e2amaster\u8282\u70b9\uff0c\u540c\u65f6\u4e3a\u4e86\u65b9\u4fbf\u6269\u5c55\u56e0\u6b64\u5728\u5236\u4f5c\u8bc1\u4e66\u7684\u65f6\u5019\u5c31\u628a\u96c6\u7fa4\u6240\u6709\u7684ip\u90fd\u505a\u8fdb\u53bb\uff0c\u7136\u540e\u5206\u53d1\u5b9e\u73b0\u8bc1\u4e66\u53ef\u4ee5\u901a\u7528\u3002 \u51c6\u5907ETCD\u7684\u4e8c\u8fdb\u5236\u8f6f\u4ef6 \u00b6 # etcd\u7248\u672c\u4e3a3.2.18\uff0c wget https://github.com/coreos/etcd/releases/download/v3.2.18/etcd-v3.2.18-linux-amd64.tar.gz tar zxf etcd-v3.2.18-linux-amd64.tar.gz cd etcd-v3.2.18-linux-amd64 # \u5206\u53d1\u8f6f\u4ef6 chmod +x etcd* cp etcd etcdctl /alidata/kubernetes/bin/ scp -P 5203 etcd etcdctl 172 .16.16.120:/alidata/kubernetes/bin/ scp -P 5203 etcd etcdctl 172 .16.16.121:/alidata/kubernetes/bin/ \u521b\u5efaETCD\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42 \u00b6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat etcd-csr.json { \"CN\" : \"etcd\" , \"hosts\" : [ \"127.0.0.1\" , \"172.16.16.119\" , \"172.16.16.120\" , \"172.16.16.121\" , \"172.16.16.122\" , \"172.16.16.123\" , \"172.16.16.124\" ] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210\u8bc1\u4e66\u548c\u79c1\u94a5 \u00b6 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes etcd-csr.json | cfssljson -bare etcd \u5206\u53d1\u8bc1\u4e66\u548c\u79c1\u94a5 \u00b6 cp etcd*.pem /alidata/kubernetes/ssl scp -P 5203 etcd*.pem 172 .16.16.120:/alidata/kubernetes/ssl scp -P 5203 etcd*.pem 172 .16.16.121:/alidata/kubernetes/ssl \u8bbe\u7f6eETCD\u914d\u7f6e\u6587\u4ef6 \u00b6 etcd\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u8981\u6709\uff0c\u8bb0\u5f97\u8981\u6539etcd\u7684name\uff0c\u4ee5\u53ca\u76d1\u542c\u7684\u5730\u5740\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/cfg/etcd.conf #[member] ETCD_NAME = \"etcd-node1\" ETCD_DATA_DIR = \"/var/lib/etcd/default.etcd\" #ETCD_SNAPSHOT_COUNTER=\"10000\" #ETCD_HEARTBEAT_INTERVAL=\"100\" #ETCD_ELECTION_TIMEOUT=\"1000\" ETCD_LISTEN_PEER_URLS = \"https://172.16.16.119:2380\" ETCD_LISTEN_CLIENT_URLS = \"https://172.16.16.119:2379,https://127.0.0.1:2379\" #ETCD_MAX_SNAPSHOTS=\"5\" #ETCD_MAX_WALS=\"5\" #ETCD_CORS=\"\" #[cluster] ETCD_INITIAL_ADVERTISE_PEER_URLS = \"https://172.16.16.119:2380\" # if you use different ETCD_NAME (e.g. test), # set ETCD_INITIAL_CLUSTER value for this name, i.e. \"test=http://...\" ETCD_INITIAL_CLUSTER = \"etcd-node1=https://172.16.16.119:2380,etcd-node2=https://172.16.16.120:2380,etcd-node3=https://172.16.16.121:2380\" ETCD_INITIAL_CLUSTER_STATE = \"new\" ETCD_INITIAL_CLUSTER_TOKEN = \"k8s-etcd-cluster\" ETCD_ADVERTISE_CLIENT_URLS = \"https://172.16.16.119:2379\" #[security] CLIENT_CERT_AUTH = \"true\" ETCD_CA_FILE = \"/alidata/kubernetes/ssl/ca.pem\" ETCD_CERT_FILE = \"/alidata/kubernetes/ssl/etcd.pem\" ETCD_KEY_FILE = \"/alidata/kubernetes/ssl/etcd-key.pem\" PEER_CLIENT_CERT_AUTH = \"true\" ETCD_PEER_CA_FILE = \"/alidata/kubernetes/ssl/ca.pem\" ETCD_PEER_CERT_FILE = \"/alidata/kubernetes/ssl/etcd.pem\" ETCD_PEER_KEY_FILE = \"/alidata/kubernetes/ssl/etcd-key.pem\" \u521b\u5efaETCD\u7684\u7cfb\u7edf\u670d\u52a1 \u00b6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /etc/systemd/system/etcd.service [ Unit ] Description = Etcd Server After = network.target [ Service ] Type = simple WorkingDirectory = /var/lib/etcd EnvironmentFile = -/alidata/kubernetes/cfg/etcd.conf # set GOMAXPROCS to number of processors ExecStart = /bin/bash -c \"GOMAXPROCS= $( nproc ) /alidata/kubernetes/bin/etcd\" Type = notify [ Install ] WantedBy = multi-user.target \u91cd\u8f7d\u7cfb\u7edf\u670d\u52a1 \u00b6 systemctl daemon-reload systemctl enable etcd # \u5206\u53d1\u914d\u7f6e\u6587\u4ef6\uff0c\u5206\u53d1\u540e\u5728\u53e6\u5916\u4e24\u53f0\u673a\u5668\u91cd\u8f7d\u914d\u7f6e\u6587\u4ef6 scp -P 5203 /etc/systemd/system/etcd.service 172 .16.16.120:/etc/systemd/system/ scp -P 5203 /etc/systemd/system/etcd.service 172 .16.16.121:/etc/systemd/system/ # \u540c\u6b65\u542f\u52a8\u6240\u6709\u7684etcd\u8282\u70b9 mkdir /var/lib/etcd systemctl start etcd systemctl status etcd \u9a8c\u8bc1\u96c6\u7fa4 \u00b6 [ root@Pro-k8s-master1 ~ ] # etcdctl --endpoints=https://172.16.16.119:2379 \\ --ca-file = /alidata/kubernetes/ssl/ca.pem \\ --cert-file = /alidata/kubernetes/ssl/etcd.pem \\ --key-file = /alidata/kubernetes/ssl/etcd-key.pem cluster-health member 140dd484abeb416a is healthy: got healthy result from https://172.16.16.119:2379 member 97de764ba7fa74f2 is healthy: got healthy result from https://172.16.16.121:2379 member f2ab1be129de49b0 is healthy: got healthy result from https://172.16.16.120:2379 cluster is healthy K8S Master \u8282\u70b9\u90e8\u7f72 \u00b6 \u51c6\u5907\u8f6f\u4ef6\u5305 \u00b6 \u51c6\u5907\u4e0b\u8f7d\u597d\u76841.12.3\u7248\u672c\u7684\u8f6f\u4ef6\u5305\uff0c\u89e3\u538b\u540e\u5c06kube-apiserver\uff0ckube-controller-manager\uff0ckube-scheduler\u62f7\u8d1d\u5230\u6240\u6709\u7684master\u8282\u70b9\u7684 /alidata/kubernetes/bin \u76ee\u5f55\u4e0b\u3002 \u521b\u5efa\u751f\u6210CSR\u7684JSON\u914d\u7f6e\u6587\u4ef6 \u00b6 \u8fd9\u91cc\u6211\u9664\u4e86\u628ak8s\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u52a0\u8fdb\u53bb\u4e86\uff0c\u4ee5\u53cakubernetes\u7684ip 10.1.0.1\u548c\u963f\u91cc\u4e91\u7684\u79c1\u7f51\u8d1f\u8f7d\u5747\u8861\u7684\u5730\u5740\u6211\u4e5f\u52a0\u8fdb\u53bb\u4e86\uff0c\u907f\u514d\u540e\u7eedcontroller\u548cscheduler\u8bbf\u95ee\u5f02\u5e38\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat kubernetes-csr.json { \"CN\" : \"kubernetes\" , \"hosts\" : [ \"127.0.0.1\" , \"172.16.16.119\" , \"172.16.16.120\" , \"172.16.16.121\" , \"172.16.16.122\" , \"172.16.16.123\" , \"172.16.16.124\" , \"10.1.0.1\" , \"kubernetes\" , \"kubernetes.default\" , \"kubernetes.default.svc\" , \"kubernetes.default.svc.cluster\" , \"kubernetes.default.svc.cluster.local\" ] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210Kubernetes\u7684\u8bc1\u4e66\u548c\u79c1\u94a5 \u00b6 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes kubernetes-csr.json | cfssljson -bare kubernetes # \u5206\u53d1\u8bc1\u4e66 cp kubernetes*.pem /alidata/kubernetes/ssl/ # \u6ce8\u610f\u5206\u53d1\u5230\u6240\u6709\u8282\u70b9\uff0c\u5176\u4ed6\u8282\u70b9\u7565 scp -P 5203 kubernetes*.pem 172 .16.16.120:/alidata/kubernetes/ssl/ \u521b\u5efakube-apiserver\u4f7f\u7528\u7684\u5ba2\u6237\u7aeftoken\u6587\u4ef6 \u00b6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # head -c 16 /dev/urandom | od -An -t x | tr -d ' ' ad6d5bb607a186796d8861557df0d17f # master\u8282\u70b9\u5206\u53d1 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/ssl/bootstrap-token.csv ad6d5bb607a186796d8861557df0d17f,kubelet-bootstrap,10001, \"system:kubelet-bootstrap\" scp -P 5203 /alidata/kubernetes/ssl/bootstrap-token.csv 172 .16.16.120:/alidata/kubernetes/ssl/ scp -P 5203 /alidata/kubernetes/ssl/bootstrap-token.csv 172 .16.16.121:/alidata/kubernetes/ssl/ \u521b\u5efa\u57fa\u7840\u7528\u6237\u540d/\u5bc6\u7801\u8ba4\u8bc1\u914d\u7f6e \u00b6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/ssl/basic-auth.csv admin,admin,1 readonly,readonly,2 # master\u8282\u70b9\u5206\u53d1 scp -P 5203 /alidata/kubernetes/ssl/basic-auth.csv 172 .16.16.120:/alidata/kubernetes/ssl/ scp -P 5203 /alidata/kubernetes/ssl/basic-auth.csv 172 .16.16.121:/alidata/kubernetes/ssl/ \u914d\u7f6ekube-apiserver\u7684\u7cfb\u7edf\u914d\u7f6e \u00b6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/kube-apiserver.service [ Unit ] Description = Kubernetes API Server Documentation = https://github.com/GoogleCloudPlatform/kubernetes After = network.target [ Service ] ExecStart = /alidata/kubernetes/bin/kube-apiserver \\ --admission-control = NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,NodeRestriction \\ --bind-address = 0 .0.0.0 \\ --insecure-bind-address = 0 .0.0.0 \\ --authorization-mode = Node,RBAC \\ --runtime-config = rbac.authorization.k8s.io/v1 \\ --kubelet-https = true \\ --anonymous-auth = false \\ --basic-auth-file = /alidata/kubernetes/ssl/basic-auth.csv \\ --enable-bootstrap-token-auth \\ --token-auth-file = /alidata/kubernetes/ssl/bootstrap-token.csv \\ --service-cluster-ip-range = 10 .1.0.0/16 \\ --service-node-port-range = 20000 -40000 \\ --tls-cert-file = /alidata/kubernetes/ssl/kubernetes.pem \\ --tls-private-key-file = /alidata/kubernetes/ssl/kubernetes-key.pem \\ --client-ca-file = /alidata/kubernetes/ssl/ca.pem \\ --service-account-key-file = /alidata/kubernetes/ssl/ca-key.pem \\ --etcd-cafile = /alidata/kubernetes/ssl/ca.pem \\ --etcd-certfile = /alidata/kubernetes/ssl/kubernetes.pem \\ --etcd-keyfile = /alidata/kubernetes/ssl/kubernetes-key.pem \\ --etcd-servers = https://172.16.16.119:2379,https://172.16.16.120:2379,https://172.16.16.121:2379 \\ --enable-swagger-ui = true \\ --allow-privileged = true \\ --audit-log-maxage = 30 \\ --audit-log-maxbackup = 3 \\ --audit-log-maxsize = 100 \\ --audit-log-path = /alidata/kubernetes/log/api-audit.log \\ --event-ttl = 1h \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 Type = notify LimitNOFILE = 65536 [ Install ] WantedBy = multi-user.target \u542f\u52a8api server \u00b6 systemctl daemon-reload systemctl enable kube-apiserver systemctl start kube-apiserver systemctl status kube-apiserver \u4e3aAPI Server\u505a\u8d1f\u8f7d \u00b6 \u56e0\u4e3a\u4f7f\u7528\u7684\u662f\u963f\u91cc\u4e91\u7684ECS\uff0c\u56e0\u6b64\u76f4\u63a5\u8d2d\u4e70\u4e86\u4e00\u4e2a\u963f\u91cc\u4e91\u7684\u5185\u7f51SLB\u5b9e\u73b0\u8d1f\u8f7d\u5206\u53d1\u7684\u529f\u80fd\u4e3aapiserver\u505aha\uff0c\u6ce8\u610f\u8d2d\u4e70\u65f6\u9009\u62e9\u7684\u7f51\u7edc\u7c7b\u578b\u8981\u548c\u73b0\u6709\u7684\u673a\u5668\u662f\u4e00\u81f4\u7684\uff0c\u5426\u5219\u65e0\u6cd5\u6dfb\u52a0\u540e\u7aef\u8282\u70b9\u3002 \u5728\u9009\u62e9\u8f6c\u53d1\u7684\u65f6\u5019\u7528\u4e8e\u63d0\u4f9bhttps\u76846443\u7aef\u53e3\u8f6c\u53d1\u5230\u540e\u7aef\u76848080\uff0chttp\u76848080\u8f6c\u53d1\u5230\u540e\u7aef\u76848080\uff0c\u6ce8\u610fhttps\u8fd9\u91cc\u8981\u6dfb\u52a0\u8bc1\u4e66\u5185\u5bb9\u3002 \u56fe\u5185\u8bc1\u4e66\u5185\u5bb9\u4e3a\u963f\u91cc\u4e91\u63d0\u4f9b\u7684\u8bc1\u4e66\u6837\u4f8b\u5185\u5bb9\uff0c\u9700\u8981\u5c06\u6211\u4eec\u81ea\u5df1\u751f\u6210\u7684kubernetes.pem\u548ckubernetes-key.pem\u7684\u5185\u5bb9\u624b\u52a8\u586b\u5199\u5230\u8fd9\u91cc\uff0c\u5e76\u4e14\u5c06\u8bc1\u4e66\u5e94\u7528\u624d\u53ef\u4ee5\u3002 \u51c6\u5907controller-manager\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 \u00b6 \u6ce8\u610f\u8fd9\u91cc\u6307\u5b9a\u7684master\u5df2\u7ecf\u662fSLB\u7684IP\u4e86\uff0c\u914d\u7f6e\u5b8c\u6210\u4ee5\u540e\u5c06\u914d\u7f6e\u6587\u4ef6\u5206\u53d1\u5230\u6240\u6709\u7684master # \u5728\u9ad8\u53ef\u7528\u72b6\u6001\u4e0b\u8981\u5f00\u542fleader-elect=true [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/kube-controller-manager.service [ Unit ] Description = Kubernetes Controller Manager Documentation = https://github.com/GoogleCloudPlatform/kubernetes [ Service ] ExecStart = /alidata/kubernetes/bin/kube-controller-manager \\ --address = 0 .0.0.0 \\ --master = http://172.16.16.124:8080 \\ --allocate-node-cidrs = true \\ --service-cluster-ip-range = 10 .1.0.0/16 \\ --cluster-cidr = 10 .2.0.0/16 \\ --cluster-name = kubernetes \\ --cluster-signing-cert-file = /alidata/kubernetes/ssl/ca.pem \\ --cluster-signing-key-file = /alidata/kubernetes/ssl/ca-key.pem \\ --service-account-private-key-file = /alidata/kubernetes/ssl/ca-key.pem \\ --root-ca-file = /alidata/kubernetes/ssl/ca.pem \\ --leader-elect = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 [ Install ] WantedBy = multi-user.target \u542f\u52a8Controller-Manager \u00b6 systemctl daemon-reload systemctl enable kube-controller-manager systemctl start kube-controller-manager systemctl status kube-controller-manager \u51c6\u5907kube-scheduler\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 \u00b6 \u8fd9\u91cc\u6307\u5b9a\u7684master\u540c\u6837\u662fSLB\u7684VIP\u5730\u5740\uff0c\u914d\u7f6e\u5b8c\u6210\u4ee5\u540e\u5206\u53d1\u5230\u6240\u6709\u7684master\u8282\u70b9\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/kube-scheduler.service [ Unit ] Description = Kubernetes Scheduler Documentation = https://github.com/GoogleCloudPlatform/kubernetes [ Service ] ExecStart = /alidata/kubernetes/bin/kube-scheduler \\ --address = 0 .0.0.0 \\ --master = http://172.16.16.124:8080 \\ --leader-elect = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 [ Install ] WantedBy = multi-user.target \u542f\u52a8kube-scheduler \u00b6 systemctl daemon-reload systemctl enable kube-scheduler systemctl start kube-scheduler systemctl status kube-scheduler \u90e8\u7f72kubectl \u00b6 \u9996\u5148\u51c6\u5907\u597dkubectl\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5206\u53d1\u5230\u6240\u6709\u7684master\u8282\u70b9\uff0c\u7136\u540e\u521b\u5efaadmin\u7684\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat admin-csr.json { \"CN\" : \"admin\" , \"hosts\" : [] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"system:masters\" , \"OU\" : \"System\" } ] } \u751f\u6210admin\u8bc1\u4e66\u548c\u79c1\u94a5 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes admin-csr.json | cfssljson -bare admin \u8bbe\u7f6e\u96c6\u7fa4\u53c2\u6570\uff0c\u6ce8\u610fmaster\u7684ip\u4e3avip\uff0c\u8bc1\u4e66\u4ee5\u5d4c\u5165\u7684\u5f62\u5f0f\u751f\u6210config\u6587\u4ef6\u3002 kubectl config set-cluster kubernetes \\ --certificate-authority = /alidata/kubernetes/ssl/ca.pem \\ --embed-certs = true \\ --server = https://172.16.16.124:6443 \u8bbe\u7f6e\u5ba2\u6237\u7aef\u8ba4\u8bc1\u53c2\u6570 kubectl config set-credentials admin \\ --client-certificate = /alidata/kubernetes/ssl/admin.pem \\ --embed-certs = true \\ --client-key = /alidata/kubernetes/ssl/admin-key.pem \u8bbe\u7f6e\u4e0a\u4e0b\u6587\u53c2\u6570 kubectl config set-context kubernetes \\ --cluster = kubernetes \\ --user = admin \u8bbe\u7f6e\u9ed8\u8ba4\u4e0a\u4e0b\u6587 kubectl config use-context kubernetes \u67e5\u770b\u5f53\u524dconfig # \u67e5\u770b\u7684\u8fd9\u4e2a\u6587\u4ef6\u5728/root/.kube\u76ee\u5f55\u4e0b\uff0c\u540d\u79f0\u4e3aconfig\uff0c\u4e0a\u8ff0\u64cd\u4f5c\u9700\u8981\u5728\u6240\u6709master\u8282\u70b9\u64cd\u4f5c [ root@Pro-k8s-master1 /alidata/src/ssl ] # kubectl config view apiVersion: v1 clusters: - cluster: certificate-authority-data: DATA+OMITTED server: https://172.16.16.124:6443 name: kubernetes contexts: - context: cluster: kubernetes user: admin name: kubernetes current-context: kubernetes kind: Config preferences: {} users: - name: admin user: client-certificate-data: REDACTED client-key-data: REDACTED \u4f7f\u7528kubectl\u5de5\u5177 [ root@Pro-k8s-master1 /alidata/src/ssl ] # kubectl get cs NAME STATUS MESSAGE ERROR controller-manager Healthy ok scheduler Healthy ok etcd-1 Healthy { \"health\" : \"true\" } etcd-0 Healthy { \"health\" : \"true\" } etcd-2 Healthy { \"health\" : \"true\" } Node\u8282\u70b9\u90e8\u7f72 \u00b6 \u51c6\u5907node\u8282\u70b9\u4e8c\u8fdb\u5236\u5305\uff0c\u5c06kubelet\uff0ckube-proxy\u5206\u53d1\u5230\u6240\u6709node\u8282\u70b9\u7684/alidata/kubernetes/bin\u4e0b\u3002 \u521b\u5efa\u89d2\u8272\u7ed1\u5b9a kubectl create clusterrolebinding kubelet-bootstrap --clusterrole = system:node-bootstrapper --user = kubelet-bootstrap \u521b\u5efa kubelet bootstrapping kubeconfig \u6587\u4ef6 \u8bbe\u7f6e\u96c6\u7fa4\u53c2\u6570 kubectl config set-cluster kubernetes \\ --certificate-authority = /alidata/kubernetes/ssl/ca.pem \\ --embed-certs = true \\ --server = https://172.16.16.124:6443 \\ --kubeconfig = bootstrap.kubeconfig \u8bbe\u7f6e\u5ba2\u6237\u7aef\u8ba4\u8bc1\u53c2\u6570 # \u6ce8\u610f\u8fd9token\u662fkube-apiserver\u4f7f\u7528\u7684\u5ba2\u6237\u7aeftoken\u6587\u4ef6\u4e2d\u7684token\uff0c\u586b\u5199\u5728\u8fd9\u91cc\u3002 kubectl config set-credentials kubelet-bootstrap \\ --token = ad6d5bb607a186796d8861557df0d17f \\ --kubeconfig = bootstrap.kubeconfig \u8bbe\u7f6e\u4e0a\u4e0b\u6587\u53c2\u6570 kubectl config set-context default \\ --cluster = kubernetes \\ --user = kubelet-bootstrap \\ --kubeconfig = bootstrap.kubeconfig \u9009\u62e9\u9ed8\u8ba4\u4e0a\u4e0b\u6587 kubectl config use-context default --kubeconfig = bootstrap.kubeconfig \u56e0\u4e3a\u6307\u5b9a\u4e86 --kubeconfig \uff0c\u56e0\u6b64\u4f1a\u5728\u5f53\u524d\u8def\u5f84\u4e0b\u751f\u6210\u4e00\u4e2abootstarp.kubeconfig\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e2akubeconfig\u6587\u4ef6\u5206\u53d1\u5230\u5176\u4ed6\u8282\u70b9\uff0c\u56e0\u4e3a\u76ee\u524d\u53ea\u6709master\u4e0a\u6709kubectl\u547d\u4ee4\uff0c\u56e0\u6b64\u5728master\u4e0a\u64cd\u4f5c\u73a9\u4e86\u4ee5\u540e\u628a\u8fd9\u4e2a\u6587\u4ef6\u5206\u53d1\u5c31\u53ef\u4ee5 cp bootstrap.kubeconfig /alidata/kubernetes/cfg # \u53ea\u6709node\u8282\u70b9\u9700\u8981 scp -P 5203 bootstrap.kubeconfig 172 .16.16.122:/alidata/kubernetes/cfg scp -P 5203 bootstrap.kubeconfig 172 .16.16.123:/alidata/kubernetes/cfg \u8bbe\u7f6eCNI\u7684\u652f\u6301 mkdir -p /etc/cni/net.d [ root@Pro-k8s-node1 ~ ] # vim /etc/cni/net.d/10-default.conf { \"name\" : \"flannel\" , \"type\" : \"flannel\" , \"delegate\" : { \"bridge\" : \"docker0\" , \"isDefaultGateway\" : true, \"mtu\" : 1400 } } \u521b\u5efakubelet\u76ee\u5f55 mkdir /var/lib/kubelet \u51c6\u5907kubelet\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 [ root@Pro-k8s-node1 ~ ] # cat /usr/lib/systemd/system/kubelet.service [ Unit ] Description = Kubernetes Kubelet Documentation = https://github.com/GoogleCloudPlatform/kubernetes After = docker.service Requires = docker.service [ Service ] WorkingDirectory = /var/lib/kubelet ExecStart = /alidata/kubernetes/bin/kubelet \\ --address = 172 .16.16.122 \\ --hostname-override = 172 .16.16.122 \\ --pod-infra-container-image = mirrorgooglecontainers/pause-amd64:3.0 \\ --experimental-bootstrap-kubeconfig = /alidata/kubernetes/cfg/bootstrap.kubeconfig \\ --kubeconfig = /alidata/kubernetes/cfg/kubelet.kubeconfig \\ --cert-dir = /alidata/kubernetes/ssl \\ --network-plugin = cni \\ --cni-conf-dir = /etc/cni/net.d \\ --cni-bin-dir = /alidata/kubernetes/bin/cni \\ --cluster-dns = 10 .1.0.2 \\ --cluster-domain = cluster.local. \\ --hairpin-mode hairpin-veth \\ --allow-privileged = true \\ --fail-swap-on = false \\ --logtostderr = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 \u542f\u52a8kubelet systemctl daemon-reload systemctl enable kubelet systemctl start kubelet systemctl status kubelet \u67e5\u770b\u8fd9\u4e2a\u65f6\u5019kubelet\u662f\u5426\u542f\u52a8\u6b63\u5e38\uff0c\u5982\u679cnode\u8282\u70b9\u7684kubelet\u542f\u52a8\u662f\u6b63\u5e38\u7684\u8bdd\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728master\u8282\u70b9\u67e5\u770b\u5230\u8bf7\u6c42\u4e86\uff0c\u56de\u5230master\u4e0a\u67e5\u770b\u3002 # master\u8282\u70b9 kubectl get csr \u9ed8\u8ba4\u770b\u5230\u7684CONDITION\u5185\u5bb9\u5e94\u8be5\u662f Pending \u72b6\u6001\u7684\uff0c\u6b64\u65f6\u9700\u8981\u6279\u51c6kubelet\u7684TLS\u8ba4\u8bc1\u8bf7\u6c42\u3002 kubectl get csr | grep 'Pending' | awk 'NR>0{print $1}' | xargs kubectl certificate approve \u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u67e5\u770b\u8282\u70b9\u72b6\u6001\u5df2\u7ecf\u662fReady\u7684\u72b6\u6001\u4e86 [ root@Pro-k8s-master1 /alidata/src/ssl ] # kubectl get node NAME STATUS ROLES AGE VERSION 172 .16.16.122 Ready <none> 5h1m v1.12.3 172 .16.16.123 Ready <none> 5h1m v1.12.3 \u90e8\u7f72kube-proxy \u00b6 kube-proxy\u540c\u6837\u8fd8\u662f\u53ea\u90e8\u7f72\u5728node\u8282\u70b9\u4e0a \u5728\u4e4b\u524d\u7684\u64cd\u4f5c\u4e2d\uff0c\u5df2\u7ecf\u5c06kube-proxy\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5206\u53d1\u5230node\u8282\u70b9\u4e86\uff0c\u56e0\u6b64\u8fd9\u91cc\u5f00\u59cb\u51c6\u5907\u8bc1\u4e66\u7684json\u6587\u4ef6\u3002 [ root@Pro-k 8 s-master 1 /alidata/src/ssl ] # cat kube-proxy-csr.json { \"CN\" : \"system:kube-proxy\" , \"hosts\" : [], \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 }, \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210\u8bc1\u4e66 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy \u5206\u53d1\u8bc1\u4e66\u5230\u6240\u6709\u7684(Node)\u8282\u70b9 cp kube-proxy*.pem /alidata/kubernetes/ssl/ scp -P 5203 kube-proxy*.pem 172 .16.16.122:/alidata/kubernetes/ssl/ scp -P 5203 kube-proxy*.pem 172 .16.16.123:/alidata/kubernetes/ssl/ \u521b\u5efakube-proxy\u7684kubeconfig\u914d\u7f6e\u6587\u4ef6 kubectl config set-cluster kubernetes \\ --certificate-authority = /alidata/kubernetes/ssl/ca.pem \\ --embed-certs = true \\ --server = https://172.16.16.124:6443 \\ --kubeconfig = kube-proxy.kubeconfig kubectl config set-credentials kube-proxy \\ --client-certificate = /alidata/kubernetes/ssl/kube-proxy.pem \\ --client-key = /alidata/kubernetes/ssl/kube-proxy-key.pem \\ --embed-certs = true \\ --kubeconfig = kube-proxy.kubeconfig kubectl config set-context default \\ --cluster = kubernetes \\ --user = kube-proxy \\ --kubeconfig = kube-proxy.kubeconfig kubectl config use-context default --kubeconfig = kube-proxy.kubeconfig \u548ckubelet\u4e00\u6837\uff0c\u628a\u8fd9\u4e2akube-config\u6587\u4ef6\u5206\u53d1\u5230\u6240\u6709\u7684node\u8282\u70b9 cp kube-proxy.kubeconfig /alidata/kubernetes/cfg/ scp -P 5203 kube-proxy.kubeconfig 172 .16.16.122:/alidata/kubernetes/cfg/ scp -P 5203 kube-proxy.kubeconfig 172 .16.16.123:/alidata/kubernetes/cfg/ \u521b\u5efakubeproxy\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 mkdir /var/lib/kube-proxy [ root@Pro-k8s-node2 ~ ] # cat /usr/lib/systemd/system/kube-proxy.service [ Unit ] Description = Kubernetes Kube-Proxy Server Documentation = https://github.com/GoogleCloudPlatform/kubernetes After = network.target [ Service ] WorkingDirectory = /var/lib/kube-proxy ExecStart = /alidata/kubernetes/bin/kube-proxy \\ --bind-address = 172 .16.16.123 \\ --hostname-override = 172 .16.16.123 \\ --kubeconfig = /alidata/kubernetes/cfg/kube-proxy.kubeconfig \\ --masquerade-all \\ --feature-gates = SupportIPVSProxyMode = true \\ --proxy-mode = ipvs \\ --ipvs-min-sync-period = 5s \\ --ipvs-sync-period = 5s \\ --ipvs-scheduler = rr \\ --logtostderr = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 LimitNOFILE = 65536 [ Install ] WantedBy = multi-user.target \u5b89\u88c5kube-proxy\u4f7f\u7528lvs\u7684\u4f9d\u8d56\u3002 yum install -y ipvsadm ipset conntrack \u542f\u52a8kube-proxy systemctl daemon-reload systemctl enable kube-proxy systemctl start kube-proxy systemctl status kube-proxy \u5728node\u8282\u70b9\u68c0\u67e5kube-proxy\u7684\u670d\u52a1\u72b6\u6001 ipvsadm -L -n Flannel\u90e8\u7f72 \u00b6 \u8003\u8651\u5230\u963f\u91cc\u4e91\u7684\u7f51\u7edc\u6682\u65f6\u5e76\u4e0d\u652f\u6301BGP\uff0c\u56e0\u6b64\u65e0\u6cd5\u4f7f\u7528calico-BGP\uff0c\u800ccalico-ipip\u548cflannel-vxlan\u5728\u6027\u80fd\u4e0a\u76f8\u5dee\u65e0\u51e0\uff0c\u4f46\u662fcalico\u7684\u7ef4\u62a4\u96be\u5ea6\u76f8\u8f83\u4e8eflannel\u8981\u9ad8\u5f88\u591a\uff0c\u56e0\u6b64\u8fd9\u91cc\u91c7\u7528flannel\u4f5c\u4e3a\u7f51\u7edc\u7ec4\u4ef6\u3002 \u521b\u5efaflannel\u7684\u8bc1\u4e66json\u6587\u4ef6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat flanneld-csr.json { \"CN\" : \"flanneld\" , \"hosts\" : [] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210\u8bc1\u4e66\u5e76\u5206\u53d1\u8bc1\u4e66 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes flanneld-csr.json | cfssljson -bare flanneld # \u6ce8\u610f\u8fd9\u4e2a\u662f\u5206\u53d1\u5230\u96c6\u7fa4\u91cc\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9 cp flanneld*.pem /alidata/kubernetes/ssl/ scp -P 5203 flanneld*.pem 172 .16.16.120:/alidata/kubernetes/ssl/ \u51c6\u5907flannel\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 cp flanneld mk-docker-opts.sh remove-docker0.sh /alidata/kubernetes/bin/ # \u5206\u53d1\u5230\u5176\u4ed6\u7684\u8282\u70b9\uff0c\u6b64\u5904\u53ea\u5217\u51fa\u4e00\u4e2a\u3002 scp -P 5203 flanneld mk-docker-opts.sh remove-docker0.sh 172 .16.16.120:/alidata/kubernetes/bin/ \u914d\u7f6eflannel\uff0c\u914d\u7f6e\u5b8c\u6210\u4ee5\u540e\u8fdb\u884c\u5206\u53d1\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u4f9bflannel\u4f7f\u7528\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/cfg/flannel FLANNEL_ETCD = \"-etcd-endpoints=https://172.16.16.119:2379,https://172.16.16.120:2379,https://172.16.16.121:2379\" FLANNEL_ETCD_KEY = \"-etcd-prefix=/kubernetes/network\" FLANNEL_ETCD_CAFILE = \"--etcd-cafile=/alidata/kubernetes/ssl/ca.pem\" FLANNEL_ETCD_CERTFILE = \"--etcd-certfile=/alidata/kubernetes/ssl/flanneld.pem\" FLANNEL_ETCD_KEYFILE = \"--etcd-keyfile=/alidata/kubernetes/ssl/flanneld-key.pem\" \u8bbe\u7f6eflannel\u7684\u7cfb\u7edf\u670d\u52a1\u914d\u7f6e [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/flannel.service [ Unit ] Description = Flanneld overlay address etcd agent After = network.target Before = docker.service [ Service ] EnvironmentFile = -/alidata/kubernetes/cfg/flannel ExecStartPre = /alidata/kubernetes/bin/remove-docker0.sh ExecStart = /alidata/kubernetes/bin/flanneld ${ FLANNEL_ETCD } ${ FLANNEL_ETCD_KEY } ${ FLANNEL_ETCD_CAFILE } ${ FLANNEL_ETCD_CERTFILE } ${ FLANNEL_ETCD_KEYFILE } ExecStartPost = /alidata/kubernetes/bin/mk-docker-opts.sh -d /run/flannel/docker Type = notify [ Install ] WantedBy = multi-user.target RequiredBy = docker.service flannel\u96c6\u6210CNI # https://github.com/containernetworking/plugins/releases wget https://github.com/containernetworking/plugins/releases/download/v0.7.1/cni-plugins-amd64-v0.7.1.tgz # \u540c\u6837\u5c06cni\u7ec4\u4ef6\u5206\u53d1\u5230\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0a\u4e00\u4efd mkdir /alidata/kubernetes/bin/cni tar zxf cni-plugins-amd64-v0.7.1.tgz -C /alidata/kubernetes/bin/cni chmod +x /alidata/kubernetes/bin/* scp -P 5203 -r /alidata/kubernetes/bin/cni/* 172 .16.16.120:/alidata/kubernetes/bin/cni/ \u8bbe\u7f6eetcd\u7684key /alidata/kubernetes/bin/etcdctl --ca-file /alidata/kubernetes/ssl/ca.pem --cert-file /alidata/kubernetes/ssl/flanneld.pem --key-file /alidata/kubernetes/ssl/flanneld-key.pem \\ --no-sync -C https://172.16.16.119:2379,https://172.16.16.120:2379,https://172.16.16.121:2379 \\ mk /kubernetes/network/config '{ \"Network\": \"10.2.0.0/16\", \"Backend\": { \"Type\": \"vxlan\", \"VNI\": 1 }}' >/dev/null 2 > & 1 \u67e5\u770b\u8fd9\u4e2akey\u662f\u5426\u8bbe\u7f6e\u6210\u529f\uff0c\u53ea\u5728\u4e00\u4e2a\u8282\u70b9\u64cd\u4f5c\u5c31\u53ef\u4ee5\uff0c\u56e0\u4e3a\u8fd9\u4e2aetcd\u662f\u4e00\u4e2a\u96c6\u7fa4\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # etcdctl --endpoints=https://172.16.16.119:2379 \\ --ca-file = /alidata/kubernetes/ssl/ca.pem \\ --cert-file = /alidata/kubernetes/ssl/etcd.pem \\ --key-file = /alidata/kubernetes/ssl/etcd-key.pem get /kubernetes/network/config { \"Network\" : \"10.2.0.0/16\" , \"Backend\" : { \"Type\" : \"vxlan\" , \"VNI\" : 1 }} \u914d\u7f6eDocker\u4f7f\u7528flannel [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /etc/systemd/system/docker.service [ Unit ] Description = Docker Application Container Engine Documentation = http://docs.docker.io After = network-online.target firewalld.service flannel.service Wants = network-online.target Requires = flannel.service [ Service ] Environment = \"PATH=/usr/local/docker/bin:/bin:/sbin:/usr/bin:/usr/sbin\" EnvironmentFile = -/run/flannel/docker #ExecStart=/usr/local/docker/bin/dockerd --log-level=error $DOCKER_NETWORK_OPTIONS ExecStart = /usr/local/docker/bin/dockerd $DOCKER_OPTS ExecReload = /bin/kill -s HUP $MAINPID Restart = on-failure RestartSec = 5 LimitNOFILE = infinity LimitNPROC = infinity LimitCORE = infinity Delegate = yes KillMode = process [ Install ] WantedBy = multi-user.target \u4e3b\u8981\u6709\u51e0\u4e2a\u70b9\uff0c\u4e00\u4e2a\u662fAfter\u6dfb\u52a0flannel.server\uff0cRequires\u8981\u6dfb\u52a0flannel.service\uff0c\u5982\u679c\u7f51\u7edc\u8d77\u4e0d\u6765\u7684\u8bdd\uff0c\u90a3\u4e48docker\u5c31\u4e0d\u8d77\u6765\u3002\u540c\u65f6\u5728Service\u6bb5\u6dfb\u52a0EnvironmentFile=-/run/flannel/docker\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662f\u7531flannel\u542f\u52a8\u7684\u65f6\u5019\u901a\u8fc7mk-docker-opts.sh\u751f\u6210\u7684\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u901a\u8fc7\u2014bip\u6765\u5212\u5206\u7f51\u6bb5\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /run/flannel/docker DOCKER_OPT_BIP = \"--bip=10.2.26.1/24\" DOCKER_OPT_IPMASQ = \"--ip-masq=true\" DOCKER_OPT_MTU = \"--mtu=1450\" DOCKER_OPTS = \" --bip=10.2.26.1/24 --ip-masq=true --mtu=1450\" \u91cd\u542fdocker systemctl daemon-reload systemctl restart docker \u89c2\u5bdf\u7f51\u5361\u4fe1\u606f [ root@Pro-k8s-master1 /alidata/src/ssl ] # ifconfig docker0: flags = 4099 <UP,BROADCAST,MULTICAST> mtu 1500 inet 10 .2.26.1 netmask 255 .255.255.0 broadcast 10 .2.26.255 ether 02 :42:97:b9:64:bd txqueuelen 0 ( Ethernet ) RX packets 0 bytes 0 ( 0 .0 B ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 ( 0 .0 B ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 eth0: flags = 4163 <UP,BROADCAST,RUNNING,MULTICAST> mtu 1500 inet 172 .16.16.119 netmask 255 .255.255.0 broadcast 172 .16.16.255 ether 00 :16:3e:08:1b:46 txqueuelen 1000 ( Ethernet ) RX packets 8365198 bytes 1280511623 ( 1 .1 GiB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 8723511 bytes 1741235760 ( 1 .6 GiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 flannel.1: flags = 4163 <UP,BROADCAST,RUNNING,MULTICAST> mtu 1450 inet 10 .2.26.0 netmask 255 .255.255.255 broadcast 0 .0.0.0 ether 92 :d2:90:73:57:5c txqueuelen 0 ( Ethernet ) RX packets 2678 bytes 1052685 ( 1 .0 MiB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 2100 bytes 297679 ( 290 .7 KiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 lo: flags = 73 <UP,LOOPBACK,RUNNING> mtu 65536 inet 127 .0.0.1 netmask 255 .0.0.0 loop txqueuelen 1 ( Local Loopback ) RX packets 3848161 bytes 647614198 ( 617 .6 MiB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 3848161 bytes 647614198 ( 617 .6 MiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 \u53ef\u4ee5\u770b\u5230docker0\u548cflannel1.1\u7684\u5730\u5740\u662f\u4e00\u6bb5\u7684\uff0c\u6bcf\u4e2a\u8282\u70b9\u5206\u5230\u7684\u7f51\u6bb5\u662f\u4e0d\u4e00\u6837\u7684\u3002flannel\u90e8\u7f72\u5b8c\u6210 \u4e00\u4e9b\u5fc5\u5907\u7ec4\u4ef6 \u00b6 CoreDns \u00b6 \u7565 Helm \u00b6 \u7565 DashBoard \u00b6 \u7565","title":"01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kubernetes","text":"\u6587\u6863\u65e5\u671f\uff1a2018\u5e7412\u670825\u65e5 \u8bb0\u5f55\u4eba\u5458\uff1alamber \u73af\u5883\u8bf4\u660e\uff1amaster\u8282\u70b9*3\uff0cnode\u8282\u70b9*2\uff0c\u4e09\u53f0master\u8282\u70b9\u505a\u8d1f\u8f7d\u5747\u8861\uff0c\u901a\u8fc7\u963f\u91cc\u4e91\u7684\u5185\u7f51SLB\u505a\u8d1f\u8f7d\uff0c\u6839\u636e\u9700\u8981\uff0cnode\u8282\u70b9\u53ef\u4ee5\u52a8\u6001\u7684\u8fdb\u884c\u6dfb\u52a0\u3002\u5f53\u524d\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\u56fe\uff1a","title":"Kubernetes\u4e8c\u8fdb\u5236\u90e8\u7f72"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#ip","text":"Name IP Description Kubernetes Master HA 172.16.16.124\uff08VIP\uff09 master HA\u5730\u5740 Pro-k8s-master1 172.16.16.119 master-1 Pro-k8s-master2 172.16.16.120 master-2 Pro-k8s-master3 172.16.16.121 master-3 Pro-k8s-node1 172.16.16.122 node-1 Pro-k8s-node2 172.16.16.123 node-2 ETCD_NODE1 172.16.16.119 etcd cluster ETCD_NODE2 172.16.16.120 etcd cluster ETCD_NODE3 172.16.16.121 etcd cluster","title":"IP\u5730\u5740\u5206\u914d"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_1","text":"\u5b89\u88c5\u90e8\u7f72Docker \u6307\u5b9a\u7248\u672c\u4e3a18.06.0-ce \uff0c\u5e76\u4fee\u6539Docker\u7684\u6570\u636e\u5b58\u653e\u4f4d\u7f6e\u4e3a /alidata/docker/ \u3002\uff08\u7565\uff09 \u51c6\u5907Kubernetes\u76841.12.3\u7684\u76f8\u5173\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5177\u4f53\u53ef\u53c2\u8003 CHANGELOG-1.12 \u3002\uff08\u7565\uff09 \u7cfb\u7edf\u4e3b\u673a\u540d\u521d\u59cb\u5316\uff0c\u4e3b\u673aSSH\u6388\u4fe1\u514d\u5bc6\u767b\u5f55\u3002\uff08\u7565\uff09 \u5173\u95edselinux\uff0c\u5173\u95ediptables\uff08firewalld\uff09\u3002 \u51c6\u5907\u90e8\u7f72\u76ee\u5f55\uff0c\u5e76\u628a/alidata/kubernetes/bin\u52a0\u5165\u5230\u73af\u5883\u53d8\u91cfPATH\u4e2d\u3002 mkdir -p /alidata/kubernetes/ { cfg,bin,ssl,log }","title":"\u7cfb\u7edf\u521d\u59cb\u5316"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#ca","text":"\u672c\u6b21\u751f\u6210\u8bc1\u4e66\u7684\u5de5\u5177\u91c7\u7528CFSSL\uff0cCFSSL\u662fCloudFlare\u5f00\u6e90\u7684\u4e00\u6b3ePKI/TLS\u5de5\u5177\u3002 CFSSL \u5305\u542b\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\u548c\u4e00\u4e2a\u7528\u4e8e\u7b7e\u540d\u7684\u5de5\u5177\uff0c\u9a8c\u8bc1\u5e76\u4e14\u6346\u7ed1TLS\u8bc1\u4e66\u7684 HTTP API \u670d\u52a1\u3002 \u4f7f\u7528Go\u8bed\u8a00\u7f16\u5199\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528json\u53bb\u5b9a\u4e49\u8bc1\u4e66\u76f8\u5173\u5185\u5bb9\uff0c\u770b\u8d77\u6765\u66f4\u52a0\u76f4\u89c2\u3002 CFSSL\u5305\u62ec\uff1a \u4e00\u7ec4\u7528\u4e8e\u751f\u6210\u81ea\u5b9a\u4e49 TLS PKI \u7684\u5de5\u5177 cfssl \u7a0b\u5e8f\uff0c\u662fCFSSL\u7684\u547d\u4ee4\u884c\u5de5\u5177 multirootca \u7a0b\u5e8f\u662f\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u7b7e\u540d\u5bc6\u94a5\u7684\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u670d\u52a1\u5668 mkbundle \u7a0b\u5e8f\u7528\u4e8e\u6784\u5efa\u8bc1\u4e66\u6c60 cfssljson \u7a0b\u5e8f\uff0c\u4ece cfssl \u548c multirootca \u7a0b\u5e8f\u83b7\u53d6JSON\u8f93\u51fa\uff0c\u5e76\u5c06\u8bc1\u4e66\uff0c\u5bc6\u94a5\uff0cCSR\u548cbundle\u5199\u5165\u78c1\u76d8","title":"\u624b\u52a8\u5236\u4f5cCA\u8bc1\u4e66"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#cfssl","text":"# \u4e0b\u8f7dcfssl\u4e8c\u8fdb\u5236\u6587\u4ef6 wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 chmod +x cfssl* mv cfssl-certinfo_linux-amd64 /alidata/kubernetes/bin/cfssl-certinfo mv cfssljson_linux-amd64 /alidata/kubernetes/bin/cfssljson mv cfssl_linux-amd64 /alidata/kubernetes/bin/cfssl # \u5206\u53d1\u5230\u6240\u6709\u7684k8s\u8282\u70b9\uff0c\u56e0\u4e3a\u8bbe\u7f6e\u4e86\u514d\u5bc6\u56e0\u6b64\u65e0\u9700\u8f93\u5165\u5bc6\u7801\uff0c\u5176\u4f59\u51e0\u4e2a\u8282\u70b9\u7684\u5206\u53d1\u7701\u7565\uff0c\u53ea\u5199\u4e00\u4e2a\u3002 scp /alidata/kubernetes/bin/cfssl* root@172.16.16.120:/alidata/kubernetes/bin/","title":"\u51c6\u5907cfssl\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#cfssl_1","text":"mkdir /alidata/src && cd /alidata/src cfssl print-defaults config > config.json cfssl print-defaults csr > csr.json","title":"\u521d\u59cb\u5316cfssl"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#cajson","text":"# \u8bc1\u4e66\u6709\u6548\u671f\u7ea6\u4e3a 10 \u5e74 [ root@Pro-k 8 s-master 1 /alidata/src/ssl ] # cat ca-config.json { \"signing\" : { \"default\" : { \"expiry\" : \"87600h\" }, \"profiles\" : { \"kubernetes\" : { \"usages\" : [ \"signing\" , \"key encipherment\" , \"server auth\" , \"client auth\" ], \"expiry\" : \"87600h\" } } } }","title":"\u521b\u5efa\u7528\u6765\u751f\u6210CA\u6587\u4ef6\u7684JSON\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#cacsrjson","text":"[ root@Pro-k 8 s-master 1 /alidata/src/ssl ] # cat ca-csr.json { \"CN\" : \"kubernetes\" , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 }, \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] }","title":"\u521b\u5efa\u7528\u6765\u751f\u6210CA\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42\uff08CSR\uff09\u7684JSON\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#cacapemca-keypem","text":"cfssl gencert -initca ca-csr.json | cfssljson -bare ca","title":"\u751f\u6210CA\u8bc1\u4e66\uff08ca.pem\uff09\u548c\u5bc6\u94a5\uff08ca-key.pem\uff09"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_2","text":"cp ca.csr ca.pem ca-key.pem ca-config.json /alidata/kubernetes/ssl # \u5206\u53d1\u5230\u5176\u4ed6\u7684\u8282\u70b9 scp -P 5203 ca.csr ca.pem ca-key.pem ca-config.json 172 .16.16.120:/alidata/kubernetes/ssl","title":"\u5206\u53d1\u8bc1\u4e66"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#etcd","text":"\u672c\u6b21etcd\u96c6\u7fa4\u4e3b\u8981\u90e8\u7f72\u5728\u4e09\u4e2amaster\u8282\u70b9\uff0c\u540c\u65f6\u4e3a\u4e86\u65b9\u4fbf\u6269\u5c55\u56e0\u6b64\u5728\u5236\u4f5c\u8bc1\u4e66\u7684\u65f6\u5019\u5c31\u628a\u96c6\u7fa4\u6240\u6709\u7684ip\u90fd\u505a\u8fdb\u53bb\uff0c\u7136\u540e\u5206\u53d1\u5b9e\u73b0\u8bc1\u4e66\u53ef\u4ee5\u901a\u7528\u3002","title":"ETCD\u96c6\u7fa4\u90e8\u7f72"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#etcd_1","text":"# etcd\u7248\u672c\u4e3a3.2.18\uff0c wget https://github.com/coreos/etcd/releases/download/v3.2.18/etcd-v3.2.18-linux-amd64.tar.gz tar zxf etcd-v3.2.18-linux-amd64.tar.gz cd etcd-v3.2.18-linux-amd64 # \u5206\u53d1\u8f6f\u4ef6 chmod +x etcd* cp etcd etcdctl /alidata/kubernetes/bin/ scp -P 5203 etcd etcdctl 172 .16.16.120:/alidata/kubernetes/bin/ scp -P 5203 etcd etcdctl 172 .16.16.121:/alidata/kubernetes/bin/","title":"\u51c6\u5907ETCD\u7684\u4e8c\u8fdb\u5236\u8f6f\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#etcd_2","text":"[ root@Pro-k8s-master1 /alidata/src/ssl ] # cat etcd-csr.json { \"CN\" : \"etcd\" , \"hosts\" : [ \"127.0.0.1\" , \"172.16.16.119\" , \"172.16.16.120\" , \"172.16.16.121\" , \"172.16.16.122\" , \"172.16.16.123\" , \"172.16.16.124\" ] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] }","title":"\u521b\u5efaETCD\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_3","text":"cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes etcd-csr.json | cfssljson -bare etcd","title":"\u751f\u6210\u8bc1\u4e66\u548c\u79c1\u94a5"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_4","text":"cp etcd*.pem /alidata/kubernetes/ssl scp -P 5203 etcd*.pem 172 .16.16.120:/alidata/kubernetes/ssl scp -P 5203 etcd*.pem 172 .16.16.121:/alidata/kubernetes/ssl","title":"\u5206\u53d1\u8bc1\u4e66\u548c\u79c1\u94a5"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#etcd_3","text":"etcd\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u8981\u6709\uff0c\u8bb0\u5f97\u8981\u6539etcd\u7684name\uff0c\u4ee5\u53ca\u76d1\u542c\u7684\u5730\u5740\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/cfg/etcd.conf #[member] ETCD_NAME = \"etcd-node1\" ETCD_DATA_DIR = \"/var/lib/etcd/default.etcd\" #ETCD_SNAPSHOT_COUNTER=\"10000\" #ETCD_HEARTBEAT_INTERVAL=\"100\" #ETCD_ELECTION_TIMEOUT=\"1000\" ETCD_LISTEN_PEER_URLS = \"https://172.16.16.119:2380\" ETCD_LISTEN_CLIENT_URLS = \"https://172.16.16.119:2379,https://127.0.0.1:2379\" #ETCD_MAX_SNAPSHOTS=\"5\" #ETCD_MAX_WALS=\"5\" #ETCD_CORS=\"\" #[cluster] ETCD_INITIAL_ADVERTISE_PEER_URLS = \"https://172.16.16.119:2380\" # if you use different ETCD_NAME (e.g. test), # set ETCD_INITIAL_CLUSTER value for this name, i.e. \"test=http://...\" ETCD_INITIAL_CLUSTER = \"etcd-node1=https://172.16.16.119:2380,etcd-node2=https://172.16.16.120:2380,etcd-node3=https://172.16.16.121:2380\" ETCD_INITIAL_CLUSTER_STATE = \"new\" ETCD_INITIAL_CLUSTER_TOKEN = \"k8s-etcd-cluster\" ETCD_ADVERTISE_CLIENT_URLS = \"https://172.16.16.119:2379\" #[security] CLIENT_CERT_AUTH = \"true\" ETCD_CA_FILE = \"/alidata/kubernetes/ssl/ca.pem\" ETCD_CERT_FILE = \"/alidata/kubernetes/ssl/etcd.pem\" ETCD_KEY_FILE = \"/alidata/kubernetes/ssl/etcd-key.pem\" PEER_CLIENT_CERT_AUTH = \"true\" ETCD_PEER_CA_FILE = \"/alidata/kubernetes/ssl/ca.pem\" ETCD_PEER_CERT_FILE = \"/alidata/kubernetes/ssl/etcd.pem\" ETCD_PEER_KEY_FILE = \"/alidata/kubernetes/ssl/etcd-key.pem\"","title":"\u8bbe\u7f6eETCD\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#etcd_4","text":"[ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /etc/systemd/system/etcd.service [ Unit ] Description = Etcd Server After = network.target [ Service ] Type = simple WorkingDirectory = /var/lib/etcd EnvironmentFile = -/alidata/kubernetes/cfg/etcd.conf # set GOMAXPROCS to number of processors ExecStart = /bin/bash -c \"GOMAXPROCS= $( nproc ) /alidata/kubernetes/bin/etcd\" Type = notify [ Install ] WantedBy = multi-user.target","title":"\u521b\u5efaETCD\u7684\u7cfb\u7edf\u670d\u52a1"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_5","text":"systemctl daemon-reload systemctl enable etcd # \u5206\u53d1\u914d\u7f6e\u6587\u4ef6\uff0c\u5206\u53d1\u540e\u5728\u53e6\u5916\u4e24\u53f0\u673a\u5668\u91cd\u8f7d\u914d\u7f6e\u6587\u4ef6 scp -P 5203 /etc/systemd/system/etcd.service 172 .16.16.120:/etc/systemd/system/ scp -P 5203 /etc/systemd/system/etcd.service 172 .16.16.121:/etc/systemd/system/ # \u540c\u6b65\u542f\u52a8\u6240\u6709\u7684etcd\u8282\u70b9 mkdir /var/lib/etcd systemctl start etcd systemctl status etcd","title":"\u91cd\u8f7d\u7cfb\u7edf\u670d\u52a1"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_6","text":"[ root@Pro-k8s-master1 ~ ] # etcdctl --endpoints=https://172.16.16.119:2379 \\ --ca-file = /alidata/kubernetes/ssl/ca.pem \\ --cert-file = /alidata/kubernetes/ssl/etcd.pem \\ --key-file = /alidata/kubernetes/ssl/etcd-key.pem cluster-health member 140dd484abeb416a is healthy: got healthy result from https://172.16.16.119:2379 member 97de764ba7fa74f2 is healthy: got healthy result from https://172.16.16.121:2379 member f2ab1be129de49b0 is healthy: got healthy result from https://172.16.16.120:2379 cluster is healthy","title":"\u9a8c\u8bc1\u96c6\u7fa4"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#k8s-master","text":"","title":"K8S Master \u8282\u70b9\u90e8\u7f72"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_7","text":"\u51c6\u5907\u4e0b\u8f7d\u597d\u76841.12.3\u7248\u672c\u7684\u8f6f\u4ef6\u5305\uff0c\u89e3\u538b\u540e\u5c06kube-apiserver\uff0ckube-controller-manager\uff0ckube-scheduler\u62f7\u8d1d\u5230\u6240\u6709\u7684master\u8282\u70b9\u7684 /alidata/kubernetes/bin \u76ee\u5f55\u4e0b\u3002","title":"\u51c6\u5907\u8f6f\u4ef6\u5305"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#csrjson","text":"\u8fd9\u91cc\u6211\u9664\u4e86\u628ak8s\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u52a0\u8fdb\u53bb\u4e86\uff0c\u4ee5\u53cakubernetes\u7684ip 10.1.0.1\u548c\u963f\u91cc\u4e91\u7684\u79c1\u7f51\u8d1f\u8f7d\u5747\u8861\u7684\u5730\u5740\u6211\u4e5f\u52a0\u8fdb\u53bb\u4e86\uff0c\u907f\u514d\u540e\u7eedcontroller\u548cscheduler\u8bbf\u95ee\u5f02\u5e38\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat kubernetes-csr.json { \"CN\" : \"kubernetes\" , \"hosts\" : [ \"127.0.0.1\" , \"172.16.16.119\" , \"172.16.16.120\" , \"172.16.16.121\" , \"172.16.16.122\" , \"172.16.16.123\" , \"172.16.16.124\" , \"10.1.0.1\" , \"kubernetes\" , \"kubernetes.default\" , \"kubernetes.default.svc\" , \"kubernetes.default.svc.cluster\" , \"kubernetes.default.svc.cluster.local\" ] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] }","title":"\u521b\u5efa\u751f\u6210CSR\u7684JSON\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kubernetes_1","text":"cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes kubernetes-csr.json | cfssljson -bare kubernetes # \u5206\u53d1\u8bc1\u4e66 cp kubernetes*.pem /alidata/kubernetes/ssl/ # \u6ce8\u610f\u5206\u53d1\u5230\u6240\u6709\u8282\u70b9\uff0c\u5176\u4ed6\u8282\u70b9\u7565 scp -P 5203 kubernetes*.pem 172 .16.16.120:/alidata/kubernetes/ssl/","title":"\u751f\u6210Kubernetes\u7684\u8bc1\u4e66\u548c\u79c1\u94a5"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kube-apiservertoken","text":"[ root@Pro-k8s-master1 /alidata/src/ssl ] # head -c 16 /dev/urandom | od -An -t x | tr -d ' ' ad6d5bb607a186796d8861557df0d17f # master\u8282\u70b9\u5206\u53d1 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/ssl/bootstrap-token.csv ad6d5bb607a186796d8861557df0d17f,kubelet-bootstrap,10001, \"system:kubelet-bootstrap\" scp -P 5203 /alidata/kubernetes/ssl/bootstrap-token.csv 172 .16.16.120:/alidata/kubernetes/ssl/ scp -P 5203 /alidata/kubernetes/ssl/bootstrap-token.csv 172 .16.16.121:/alidata/kubernetes/ssl/","title":"\u521b\u5efakube-apiserver\u4f7f\u7528\u7684\u5ba2\u6237\u7aeftoken\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_8","text":"[ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/ssl/basic-auth.csv admin,admin,1 readonly,readonly,2 # master\u8282\u70b9\u5206\u53d1 scp -P 5203 /alidata/kubernetes/ssl/basic-auth.csv 172 .16.16.120:/alidata/kubernetes/ssl/ scp -P 5203 /alidata/kubernetes/ssl/basic-auth.csv 172 .16.16.121:/alidata/kubernetes/ssl/","title":"\u521b\u5efa\u57fa\u7840\u7528\u6237\u540d/\u5bc6\u7801\u8ba4\u8bc1\u914d\u7f6e"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kube-apiserver","text":"[ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/kube-apiserver.service [ Unit ] Description = Kubernetes API Server Documentation = https://github.com/GoogleCloudPlatform/kubernetes After = network.target [ Service ] ExecStart = /alidata/kubernetes/bin/kube-apiserver \\ --admission-control = NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,NodeRestriction \\ --bind-address = 0 .0.0.0 \\ --insecure-bind-address = 0 .0.0.0 \\ --authorization-mode = Node,RBAC \\ --runtime-config = rbac.authorization.k8s.io/v1 \\ --kubelet-https = true \\ --anonymous-auth = false \\ --basic-auth-file = /alidata/kubernetes/ssl/basic-auth.csv \\ --enable-bootstrap-token-auth \\ --token-auth-file = /alidata/kubernetes/ssl/bootstrap-token.csv \\ --service-cluster-ip-range = 10 .1.0.0/16 \\ --service-node-port-range = 20000 -40000 \\ --tls-cert-file = /alidata/kubernetes/ssl/kubernetes.pem \\ --tls-private-key-file = /alidata/kubernetes/ssl/kubernetes-key.pem \\ --client-ca-file = /alidata/kubernetes/ssl/ca.pem \\ --service-account-key-file = /alidata/kubernetes/ssl/ca-key.pem \\ --etcd-cafile = /alidata/kubernetes/ssl/ca.pem \\ --etcd-certfile = /alidata/kubernetes/ssl/kubernetes.pem \\ --etcd-keyfile = /alidata/kubernetes/ssl/kubernetes-key.pem \\ --etcd-servers = https://172.16.16.119:2379,https://172.16.16.120:2379,https://172.16.16.121:2379 \\ --enable-swagger-ui = true \\ --allow-privileged = true \\ --audit-log-maxage = 30 \\ --audit-log-maxbackup = 3 \\ --audit-log-maxsize = 100 \\ --audit-log-path = /alidata/kubernetes/log/api-audit.log \\ --event-ttl = 1h \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 Type = notify LimitNOFILE = 65536 [ Install ] WantedBy = multi-user.target","title":"\u914d\u7f6ekube-apiserver\u7684\u7cfb\u7edf\u914d\u7f6e"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#api-server","text":"systemctl daemon-reload systemctl enable kube-apiserver systemctl start kube-apiserver systemctl status kube-apiserver","title":"\u542f\u52a8api server"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#api-server_1","text":"\u56e0\u4e3a\u4f7f\u7528\u7684\u662f\u963f\u91cc\u4e91\u7684ECS\uff0c\u56e0\u6b64\u76f4\u63a5\u8d2d\u4e70\u4e86\u4e00\u4e2a\u963f\u91cc\u4e91\u7684\u5185\u7f51SLB\u5b9e\u73b0\u8d1f\u8f7d\u5206\u53d1\u7684\u529f\u80fd\u4e3aapiserver\u505aha\uff0c\u6ce8\u610f\u8d2d\u4e70\u65f6\u9009\u62e9\u7684\u7f51\u7edc\u7c7b\u578b\u8981\u548c\u73b0\u6709\u7684\u673a\u5668\u662f\u4e00\u81f4\u7684\uff0c\u5426\u5219\u65e0\u6cd5\u6dfb\u52a0\u540e\u7aef\u8282\u70b9\u3002 \u5728\u9009\u62e9\u8f6c\u53d1\u7684\u65f6\u5019\u7528\u4e8e\u63d0\u4f9bhttps\u76846443\u7aef\u53e3\u8f6c\u53d1\u5230\u540e\u7aef\u76848080\uff0chttp\u76848080\u8f6c\u53d1\u5230\u540e\u7aef\u76848080\uff0c\u6ce8\u610fhttps\u8fd9\u91cc\u8981\u6dfb\u52a0\u8bc1\u4e66\u5185\u5bb9\u3002 \u56fe\u5185\u8bc1\u4e66\u5185\u5bb9\u4e3a\u963f\u91cc\u4e91\u63d0\u4f9b\u7684\u8bc1\u4e66\u6837\u4f8b\u5185\u5bb9\uff0c\u9700\u8981\u5c06\u6211\u4eec\u81ea\u5df1\u751f\u6210\u7684kubernetes.pem\u548ckubernetes-key.pem\u7684\u5185\u5bb9\u624b\u52a8\u586b\u5199\u5230\u8fd9\u91cc\uff0c\u5e76\u4e14\u5c06\u8bc1\u4e66\u5e94\u7528\u624d\u53ef\u4ee5\u3002","title":"\u4e3aAPI Server\u505a\u8d1f\u8f7d"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#controller-manager","text":"\u6ce8\u610f\u8fd9\u91cc\u6307\u5b9a\u7684master\u5df2\u7ecf\u662fSLB\u7684IP\u4e86\uff0c\u914d\u7f6e\u5b8c\u6210\u4ee5\u540e\u5c06\u914d\u7f6e\u6587\u4ef6\u5206\u53d1\u5230\u6240\u6709\u7684master # \u5728\u9ad8\u53ef\u7528\u72b6\u6001\u4e0b\u8981\u5f00\u542fleader-elect=true [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/kube-controller-manager.service [ Unit ] Description = Kubernetes Controller Manager Documentation = https://github.com/GoogleCloudPlatform/kubernetes [ Service ] ExecStart = /alidata/kubernetes/bin/kube-controller-manager \\ --address = 0 .0.0.0 \\ --master = http://172.16.16.124:8080 \\ --allocate-node-cidrs = true \\ --service-cluster-ip-range = 10 .1.0.0/16 \\ --cluster-cidr = 10 .2.0.0/16 \\ --cluster-name = kubernetes \\ --cluster-signing-cert-file = /alidata/kubernetes/ssl/ca.pem \\ --cluster-signing-key-file = /alidata/kubernetes/ssl/ca-key.pem \\ --service-account-private-key-file = /alidata/kubernetes/ssl/ca-key.pem \\ --root-ca-file = /alidata/kubernetes/ssl/ca.pem \\ --leader-elect = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 [ Install ] WantedBy = multi-user.target","title":"\u51c6\u5907controller-manager\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#controller-manager_1","text":"systemctl daemon-reload systemctl enable kube-controller-manager systemctl start kube-controller-manager systemctl status kube-controller-manager","title":"\u542f\u52a8Controller-Manager"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kube-scheduler","text":"\u8fd9\u91cc\u6307\u5b9a\u7684master\u540c\u6837\u662fSLB\u7684VIP\u5730\u5740\uff0c\u914d\u7f6e\u5b8c\u6210\u4ee5\u540e\u5206\u53d1\u5230\u6240\u6709\u7684master\u8282\u70b9\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/kube-scheduler.service [ Unit ] Description = Kubernetes Scheduler Documentation = https://github.com/GoogleCloudPlatform/kubernetes [ Service ] ExecStart = /alidata/kubernetes/bin/kube-scheduler \\ --address = 0 .0.0.0 \\ --master = http://172.16.16.124:8080 \\ --leader-elect = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 [ Install ] WantedBy = multi-user.target","title":"\u51c6\u5907kube-scheduler\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kube-scheduler_1","text":"systemctl daemon-reload systemctl enable kube-scheduler systemctl start kube-scheduler systemctl status kube-scheduler","title":"\u542f\u52a8kube-scheduler"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kubectl","text":"\u9996\u5148\u51c6\u5907\u597dkubectl\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5206\u53d1\u5230\u6240\u6709\u7684master\u8282\u70b9\uff0c\u7136\u540e\u521b\u5efaadmin\u7684\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat admin-csr.json { \"CN\" : \"admin\" , \"hosts\" : [] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"system:masters\" , \"OU\" : \"System\" } ] } \u751f\u6210admin\u8bc1\u4e66\u548c\u79c1\u94a5 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes admin-csr.json | cfssljson -bare admin \u8bbe\u7f6e\u96c6\u7fa4\u53c2\u6570\uff0c\u6ce8\u610fmaster\u7684ip\u4e3avip\uff0c\u8bc1\u4e66\u4ee5\u5d4c\u5165\u7684\u5f62\u5f0f\u751f\u6210config\u6587\u4ef6\u3002 kubectl config set-cluster kubernetes \\ --certificate-authority = /alidata/kubernetes/ssl/ca.pem \\ --embed-certs = true \\ --server = https://172.16.16.124:6443 \u8bbe\u7f6e\u5ba2\u6237\u7aef\u8ba4\u8bc1\u53c2\u6570 kubectl config set-credentials admin \\ --client-certificate = /alidata/kubernetes/ssl/admin.pem \\ --embed-certs = true \\ --client-key = /alidata/kubernetes/ssl/admin-key.pem \u8bbe\u7f6e\u4e0a\u4e0b\u6587\u53c2\u6570 kubectl config set-context kubernetes \\ --cluster = kubernetes \\ --user = admin \u8bbe\u7f6e\u9ed8\u8ba4\u4e0a\u4e0b\u6587 kubectl config use-context kubernetes \u67e5\u770b\u5f53\u524dconfig # \u67e5\u770b\u7684\u8fd9\u4e2a\u6587\u4ef6\u5728/root/.kube\u76ee\u5f55\u4e0b\uff0c\u540d\u79f0\u4e3aconfig\uff0c\u4e0a\u8ff0\u64cd\u4f5c\u9700\u8981\u5728\u6240\u6709master\u8282\u70b9\u64cd\u4f5c [ root@Pro-k8s-master1 /alidata/src/ssl ] # kubectl config view apiVersion: v1 clusters: - cluster: certificate-authority-data: DATA+OMITTED server: https://172.16.16.124:6443 name: kubernetes contexts: - context: cluster: kubernetes user: admin name: kubernetes current-context: kubernetes kind: Config preferences: {} users: - name: admin user: client-certificate-data: REDACTED client-key-data: REDACTED \u4f7f\u7528kubectl\u5de5\u5177 [ root@Pro-k8s-master1 /alidata/src/ssl ] # kubectl get cs NAME STATUS MESSAGE ERROR controller-manager Healthy ok scheduler Healthy ok etcd-1 Healthy { \"health\" : \"true\" } etcd-0 Healthy { \"health\" : \"true\" } etcd-2 Healthy { \"health\" : \"true\" }","title":"\u90e8\u7f72kubectl"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#node","text":"\u51c6\u5907node\u8282\u70b9\u4e8c\u8fdb\u5236\u5305\uff0c\u5c06kubelet\uff0ckube-proxy\u5206\u53d1\u5230\u6240\u6709node\u8282\u70b9\u7684/alidata/kubernetes/bin\u4e0b\u3002 \u521b\u5efa\u89d2\u8272\u7ed1\u5b9a kubectl create clusterrolebinding kubelet-bootstrap --clusterrole = system:node-bootstrapper --user = kubelet-bootstrap \u521b\u5efa kubelet bootstrapping kubeconfig \u6587\u4ef6 \u8bbe\u7f6e\u96c6\u7fa4\u53c2\u6570 kubectl config set-cluster kubernetes \\ --certificate-authority = /alidata/kubernetes/ssl/ca.pem \\ --embed-certs = true \\ --server = https://172.16.16.124:6443 \\ --kubeconfig = bootstrap.kubeconfig \u8bbe\u7f6e\u5ba2\u6237\u7aef\u8ba4\u8bc1\u53c2\u6570 # \u6ce8\u610f\u8fd9token\u662fkube-apiserver\u4f7f\u7528\u7684\u5ba2\u6237\u7aeftoken\u6587\u4ef6\u4e2d\u7684token\uff0c\u586b\u5199\u5728\u8fd9\u91cc\u3002 kubectl config set-credentials kubelet-bootstrap \\ --token = ad6d5bb607a186796d8861557df0d17f \\ --kubeconfig = bootstrap.kubeconfig \u8bbe\u7f6e\u4e0a\u4e0b\u6587\u53c2\u6570 kubectl config set-context default \\ --cluster = kubernetes \\ --user = kubelet-bootstrap \\ --kubeconfig = bootstrap.kubeconfig \u9009\u62e9\u9ed8\u8ba4\u4e0a\u4e0b\u6587 kubectl config use-context default --kubeconfig = bootstrap.kubeconfig \u56e0\u4e3a\u6307\u5b9a\u4e86 --kubeconfig \uff0c\u56e0\u6b64\u4f1a\u5728\u5f53\u524d\u8def\u5f84\u4e0b\u751f\u6210\u4e00\u4e2abootstarp.kubeconfig\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e2akubeconfig\u6587\u4ef6\u5206\u53d1\u5230\u5176\u4ed6\u8282\u70b9\uff0c\u56e0\u4e3a\u76ee\u524d\u53ea\u6709master\u4e0a\u6709kubectl\u547d\u4ee4\uff0c\u56e0\u6b64\u5728master\u4e0a\u64cd\u4f5c\u73a9\u4e86\u4ee5\u540e\u628a\u8fd9\u4e2a\u6587\u4ef6\u5206\u53d1\u5c31\u53ef\u4ee5 cp bootstrap.kubeconfig /alidata/kubernetes/cfg # \u53ea\u6709node\u8282\u70b9\u9700\u8981 scp -P 5203 bootstrap.kubeconfig 172 .16.16.122:/alidata/kubernetes/cfg scp -P 5203 bootstrap.kubeconfig 172 .16.16.123:/alidata/kubernetes/cfg \u8bbe\u7f6eCNI\u7684\u652f\u6301 mkdir -p /etc/cni/net.d [ root@Pro-k8s-node1 ~ ] # vim /etc/cni/net.d/10-default.conf { \"name\" : \"flannel\" , \"type\" : \"flannel\" , \"delegate\" : { \"bridge\" : \"docker0\" , \"isDefaultGateway\" : true, \"mtu\" : 1400 } } \u521b\u5efakubelet\u76ee\u5f55 mkdir /var/lib/kubelet \u51c6\u5907kubelet\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 [ root@Pro-k8s-node1 ~ ] # cat /usr/lib/systemd/system/kubelet.service [ Unit ] Description = Kubernetes Kubelet Documentation = https://github.com/GoogleCloudPlatform/kubernetes After = docker.service Requires = docker.service [ Service ] WorkingDirectory = /var/lib/kubelet ExecStart = /alidata/kubernetes/bin/kubelet \\ --address = 172 .16.16.122 \\ --hostname-override = 172 .16.16.122 \\ --pod-infra-container-image = mirrorgooglecontainers/pause-amd64:3.0 \\ --experimental-bootstrap-kubeconfig = /alidata/kubernetes/cfg/bootstrap.kubeconfig \\ --kubeconfig = /alidata/kubernetes/cfg/kubelet.kubeconfig \\ --cert-dir = /alidata/kubernetes/ssl \\ --network-plugin = cni \\ --cni-conf-dir = /etc/cni/net.d \\ --cni-bin-dir = /alidata/kubernetes/bin/cni \\ --cluster-dns = 10 .1.0.2 \\ --cluster-domain = cluster.local. \\ --hairpin-mode hairpin-veth \\ --allow-privileged = true \\ --fail-swap-on = false \\ --logtostderr = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 \u542f\u52a8kubelet systemctl daemon-reload systemctl enable kubelet systemctl start kubelet systemctl status kubelet \u67e5\u770b\u8fd9\u4e2a\u65f6\u5019kubelet\u662f\u5426\u542f\u52a8\u6b63\u5e38\uff0c\u5982\u679cnode\u8282\u70b9\u7684kubelet\u542f\u52a8\u662f\u6b63\u5e38\u7684\u8bdd\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728master\u8282\u70b9\u67e5\u770b\u5230\u8bf7\u6c42\u4e86\uff0c\u56de\u5230master\u4e0a\u67e5\u770b\u3002 # master\u8282\u70b9 kubectl get csr \u9ed8\u8ba4\u770b\u5230\u7684CONDITION\u5185\u5bb9\u5e94\u8be5\u662f Pending \u72b6\u6001\u7684\uff0c\u6b64\u65f6\u9700\u8981\u6279\u51c6kubelet\u7684TLS\u8ba4\u8bc1\u8bf7\u6c42\u3002 kubectl get csr | grep 'Pending' | awk 'NR>0{print $1}' | xargs kubectl certificate approve \u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u67e5\u770b\u8282\u70b9\u72b6\u6001\u5df2\u7ecf\u662fReady\u7684\u72b6\u6001\u4e86 [ root@Pro-k8s-master1 /alidata/src/ssl ] # kubectl get node NAME STATUS ROLES AGE VERSION 172 .16.16.122 Ready <none> 5h1m v1.12.3 172 .16.16.123 Ready <none> 5h1m v1.12.3","title":"Node\u8282\u70b9\u90e8\u7f72"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kube-proxy","text":"kube-proxy\u540c\u6837\u8fd8\u662f\u53ea\u90e8\u7f72\u5728node\u8282\u70b9\u4e0a \u5728\u4e4b\u524d\u7684\u64cd\u4f5c\u4e2d\uff0c\u5df2\u7ecf\u5c06kube-proxy\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5206\u53d1\u5230node\u8282\u70b9\u4e86\uff0c\u56e0\u6b64\u8fd9\u91cc\u5f00\u59cb\u51c6\u5907\u8bc1\u4e66\u7684json\u6587\u4ef6\u3002 [ root@Pro-k 8 s-master 1 /alidata/src/ssl ] # cat kube-proxy-csr.json { \"CN\" : \"system:kube-proxy\" , \"hosts\" : [], \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 }, \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210\u8bc1\u4e66 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy \u5206\u53d1\u8bc1\u4e66\u5230\u6240\u6709\u7684(Node)\u8282\u70b9 cp kube-proxy*.pem /alidata/kubernetes/ssl/ scp -P 5203 kube-proxy*.pem 172 .16.16.122:/alidata/kubernetes/ssl/ scp -P 5203 kube-proxy*.pem 172 .16.16.123:/alidata/kubernetes/ssl/ \u521b\u5efakube-proxy\u7684kubeconfig\u914d\u7f6e\u6587\u4ef6 kubectl config set-cluster kubernetes \\ --certificate-authority = /alidata/kubernetes/ssl/ca.pem \\ --embed-certs = true \\ --server = https://172.16.16.124:6443 \\ --kubeconfig = kube-proxy.kubeconfig kubectl config set-credentials kube-proxy \\ --client-certificate = /alidata/kubernetes/ssl/kube-proxy.pem \\ --client-key = /alidata/kubernetes/ssl/kube-proxy-key.pem \\ --embed-certs = true \\ --kubeconfig = kube-proxy.kubeconfig kubectl config set-context default \\ --cluster = kubernetes \\ --user = kube-proxy \\ --kubeconfig = kube-proxy.kubeconfig kubectl config use-context default --kubeconfig = kube-proxy.kubeconfig \u548ckubelet\u4e00\u6837\uff0c\u628a\u8fd9\u4e2akube-config\u6587\u4ef6\u5206\u53d1\u5230\u6240\u6709\u7684node\u8282\u70b9 cp kube-proxy.kubeconfig /alidata/kubernetes/cfg/ scp -P 5203 kube-proxy.kubeconfig 172 .16.16.122:/alidata/kubernetes/cfg/ scp -P 5203 kube-proxy.kubeconfig 172 .16.16.123:/alidata/kubernetes/cfg/ \u521b\u5efakubeproxy\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 mkdir /var/lib/kube-proxy [ root@Pro-k8s-node2 ~ ] # cat /usr/lib/systemd/system/kube-proxy.service [ Unit ] Description = Kubernetes Kube-Proxy Server Documentation = https://github.com/GoogleCloudPlatform/kubernetes After = network.target [ Service ] WorkingDirectory = /var/lib/kube-proxy ExecStart = /alidata/kubernetes/bin/kube-proxy \\ --bind-address = 172 .16.16.123 \\ --hostname-override = 172 .16.16.123 \\ --kubeconfig = /alidata/kubernetes/cfg/kube-proxy.kubeconfig \\ --masquerade-all \\ --feature-gates = SupportIPVSProxyMode = true \\ --proxy-mode = ipvs \\ --ipvs-min-sync-period = 5s \\ --ipvs-sync-period = 5s \\ --ipvs-scheduler = rr \\ --logtostderr = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 LimitNOFILE = 65536 [ Install ] WantedBy = multi-user.target \u5b89\u88c5kube-proxy\u4f7f\u7528lvs\u7684\u4f9d\u8d56\u3002 yum install -y ipvsadm ipset conntrack \u542f\u52a8kube-proxy systemctl daemon-reload systemctl enable kube-proxy systemctl start kube-proxy systemctl status kube-proxy \u5728node\u8282\u70b9\u68c0\u67e5kube-proxy\u7684\u670d\u52a1\u72b6\u6001 ipvsadm -L -n","title":"\u90e8\u7f72kube-proxy"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#flannel","text":"\u8003\u8651\u5230\u963f\u91cc\u4e91\u7684\u7f51\u7edc\u6682\u65f6\u5e76\u4e0d\u652f\u6301BGP\uff0c\u56e0\u6b64\u65e0\u6cd5\u4f7f\u7528calico-BGP\uff0c\u800ccalico-ipip\u548cflannel-vxlan\u5728\u6027\u80fd\u4e0a\u76f8\u5dee\u65e0\u51e0\uff0c\u4f46\u662fcalico\u7684\u7ef4\u62a4\u96be\u5ea6\u76f8\u8f83\u4e8eflannel\u8981\u9ad8\u5f88\u591a\uff0c\u56e0\u6b64\u8fd9\u91cc\u91c7\u7528flannel\u4f5c\u4e3a\u7f51\u7edc\u7ec4\u4ef6\u3002 \u521b\u5efaflannel\u7684\u8bc1\u4e66json\u6587\u4ef6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat flanneld-csr.json { \"CN\" : \"flanneld\" , \"hosts\" : [] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210\u8bc1\u4e66\u5e76\u5206\u53d1\u8bc1\u4e66 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes flanneld-csr.json | cfssljson -bare flanneld # \u6ce8\u610f\u8fd9\u4e2a\u662f\u5206\u53d1\u5230\u96c6\u7fa4\u91cc\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9 cp flanneld*.pem /alidata/kubernetes/ssl/ scp -P 5203 flanneld*.pem 172 .16.16.120:/alidata/kubernetes/ssl/ \u51c6\u5907flannel\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 cp flanneld mk-docker-opts.sh remove-docker0.sh /alidata/kubernetes/bin/ # \u5206\u53d1\u5230\u5176\u4ed6\u7684\u8282\u70b9\uff0c\u6b64\u5904\u53ea\u5217\u51fa\u4e00\u4e2a\u3002 scp -P 5203 flanneld mk-docker-opts.sh remove-docker0.sh 172 .16.16.120:/alidata/kubernetes/bin/ \u914d\u7f6eflannel\uff0c\u914d\u7f6e\u5b8c\u6210\u4ee5\u540e\u8fdb\u884c\u5206\u53d1\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u4f9bflannel\u4f7f\u7528\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/cfg/flannel FLANNEL_ETCD = \"-etcd-endpoints=https://172.16.16.119:2379,https://172.16.16.120:2379,https://172.16.16.121:2379\" FLANNEL_ETCD_KEY = \"-etcd-prefix=/kubernetes/network\" FLANNEL_ETCD_CAFILE = \"--etcd-cafile=/alidata/kubernetes/ssl/ca.pem\" FLANNEL_ETCD_CERTFILE = \"--etcd-certfile=/alidata/kubernetes/ssl/flanneld.pem\" FLANNEL_ETCD_KEYFILE = \"--etcd-keyfile=/alidata/kubernetes/ssl/flanneld-key.pem\" \u8bbe\u7f6eflannel\u7684\u7cfb\u7edf\u670d\u52a1\u914d\u7f6e [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/flannel.service [ Unit ] Description = Flanneld overlay address etcd agent After = network.target Before = docker.service [ Service ] EnvironmentFile = -/alidata/kubernetes/cfg/flannel ExecStartPre = /alidata/kubernetes/bin/remove-docker0.sh ExecStart = /alidata/kubernetes/bin/flanneld ${ FLANNEL_ETCD } ${ FLANNEL_ETCD_KEY } ${ FLANNEL_ETCD_CAFILE } ${ FLANNEL_ETCD_CERTFILE } ${ FLANNEL_ETCD_KEYFILE } ExecStartPost = /alidata/kubernetes/bin/mk-docker-opts.sh -d /run/flannel/docker Type = notify [ Install ] WantedBy = multi-user.target RequiredBy = docker.service flannel\u96c6\u6210CNI # https://github.com/containernetworking/plugins/releases wget https://github.com/containernetworking/plugins/releases/download/v0.7.1/cni-plugins-amd64-v0.7.1.tgz # \u540c\u6837\u5c06cni\u7ec4\u4ef6\u5206\u53d1\u5230\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0a\u4e00\u4efd mkdir /alidata/kubernetes/bin/cni tar zxf cni-plugins-amd64-v0.7.1.tgz -C /alidata/kubernetes/bin/cni chmod +x /alidata/kubernetes/bin/* scp -P 5203 -r /alidata/kubernetes/bin/cni/* 172 .16.16.120:/alidata/kubernetes/bin/cni/ \u8bbe\u7f6eetcd\u7684key /alidata/kubernetes/bin/etcdctl --ca-file /alidata/kubernetes/ssl/ca.pem --cert-file /alidata/kubernetes/ssl/flanneld.pem --key-file /alidata/kubernetes/ssl/flanneld-key.pem \\ --no-sync -C https://172.16.16.119:2379,https://172.16.16.120:2379,https://172.16.16.121:2379 \\ mk /kubernetes/network/config '{ \"Network\": \"10.2.0.0/16\", \"Backend\": { \"Type\": \"vxlan\", \"VNI\": 1 }}' >/dev/null 2 > & 1 \u67e5\u770b\u8fd9\u4e2akey\u662f\u5426\u8bbe\u7f6e\u6210\u529f\uff0c\u53ea\u5728\u4e00\u4e2a\u8282\u70b9\u64cd\u4f5c\u5c31\u53ef\u4ee5\uff0c\u56e0\u4e3a\u8fd9\u4e2aetcd\u662f\u4e00\u4e2a\u96c6\u7fa4\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # etcdctl --endpoints=https://172.16.16.119:2379 \\ --ca-file = /alidata/kubernetes/ssl/ca.pem \\ --cert-file = /alidata/kubernetes/ssl/etcd.pem \\ --key-file = /alidata/kubernetes/ssl/etcd-key.pem get /kubernetes/network/config { \"Network\" : \"10.2.0.0/16\" , \"Backend\" : { \"Type\" : \"vxlan\" , \"VNI\" : 1 }} \u914d\u7f6eDocker\u4f7f\u7528flannel [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /etc/systemd/system/docker.service [ Unit ] Description = Docker Application Container Engine Documentation = http://docs.docker.io After = network-online.target firewalld.service flannel.service Wants = network-online.target Requires = flannel.service [ Service ] Environment = \"PATH=/usr/local/docker/bin:/bin:/sbin:/usr/bin:/usr/sbin\" EnvironmentFile = -/run/flannel/docker #ExecStart=/usr/local/docker/bin/dockerd --log-level=error $DOCKER_NETWORK_OPTIONS ExecStart = /usr/local/docker/bin/dockerd $DOCKER_OPTS ExecReload = /bin/kill -s HUP $MAINPID Restart = on-failure RestartSec = 5 LimitNOFILE = infinity LimitNPROC = infinity LimitCORE = infinity Delegate = yes KillMode = process [ Install ] WantedBy = multi-user.target \u4e3b\u8981\u6709\u51e0\u4e2a\u70b9\uff0c\u4e00\u4e2a\u662fAfter\u6dfb\u52a0flannel.server\uff0cRequires\u8981\u6dfb\u52a0flannel.service\uff0c\u5982\u679c\u7f51\u7edc\u8d77\u4e0d\u6765\u7684\u8bdd\uff0c\u90a3\u4e48docker\u5c31\u4e0d\u8d77\u6765\u3002\u540c\u65f6\u5728Service\u6bb5\u6dfb\u52a0EnvironmentFile=-/run/flannel/docker\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662f\u7531flannel\u542f\u52a8\u7684\u65f6\u5019\u901a\u8fc7mk-docker-opts.sh\u751f\u6210\u7684\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u901a\u8fc7\u2014bip\u6765\u5212\u5206\u7f51\u6bb5\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /run/flannel/docker DOCKER_OPT_BIP = \"--bip=10.2.26.1/24\" DOCKER_OPT_IPMASQ = \"--ip-masq=true\" DOCKER_OPT_MTU = \"--mtu=1450\" DOCKER_OPTS = \" --bip=10.2.26.1/24 --ip-masq=true --mtu=1450\" \u91cd\u542fdocker systemctl daemon-reload systemctl restart docker \u89c2\u5bdf\u7f51\u5361\u4fe1\u606f [ root@Pro-k8s-master1 /alidata/src/ssl ] # ifconfig docker0: flags = 4099 <UP,BROADCAST,MULTICAST> mtu 1500 inet 10 .2.26.1 netmask 255 .255.255.0 broadcast 10 .2.26.255 ether 02 :42:97:b9:64:bd txqueuelen 0 ( Ethernet ) RX packets 0 bytes 0 ( 0 .0 B ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 ( 0 .0 B ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 eth0: flags = 4163 <UP,BROADCAST,RUNNING,MULTICAST> mtu 1500 inet 172 .16.16.119 netmask 255 .255.255.0 broadcast 172 .16.16.255 ether 00 :16:3e:08:1b:46 txqueuelen 1000 ( Ethernet ) RX packets 8365198 bytes 1280511623 ( 1 .1 GiB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 8723511 bytes 1741235760 ( 1 .6 GiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 flannel.1: flags = 4163 <UP,BROADCAST,RUNNING,MULTICAST> mtu 1450 inet 10 .2.26.0 netmask 255 .255.255.255 broadcast 0 .0.0.0 ether 92 :d2:90:73:57:5c txqueuelen 0 ( Ethernet ) RX packets 2678 bytes 1052685 ( 1 .0 MiB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 2100 bytes 297679 ( 290 .7 KiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 lo: flags = 73 <UP,LOOPBACK,RUNNING> mtu 65536 inet 127 .0.0.1 netmask 255 .0.0.0 loop txqueuelen 1 ( Local Loopback ) RX packets 3848161 bytes 647614198 ( 617 .6 MiB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 3848161 bytes 647614198 ( 617 .6 MiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 \u53ef\u4ee5\u770b\u5230docker0\u548cflannel1.1\u7684\u5730\u5740\u662f\u4e00\u6bb5\u7684\uff0c\u6bcf\u4e2a\u8282\u70b9\u5206\u5230\u7684\u7f51\u6bb5\u662f\u4e0d\u4e00\u6837\u7684\u3002flannel\u90e8\u7f72\u5b8c\u6210","title":"Flannel\u90e8\u7f72"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_9","text":"","title":"\u4e00\u4e9b\u5fc5\u5907\u7ec4\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#coredns","text":"\u7565","title":"CoreDns"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#helm","text":"\u7565","title":"Helm"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#dashboard","text":"\u7565","title":"DashBoard"}]}