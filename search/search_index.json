{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u9996\u9875 \u00b6 \u77e5\u8bc6\u4e0e\u6280\u80fd\u56fe\u666f \u00b6 \u672c\u7ad9\u5185\u5bb9\u65e8\u5728\u5b9e\u7528\uff0c\u591a\u4e3a\u64cd\u4f5c\u65b9\u6cd5\u3002 \u6ca1\u6709\u6982\u5ff5\u4ecb\u7ecd\u548c\u6559\u7a0b\u3002 \u76f8\u5173\u8d44\u6599\u5747\u4e3a\u7f51\u4e0a\u641c\u96c6\u800c\u6765\u3002 For more information visit jokerleu.site . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. a b c","title":"\u9996\u9875"},{"location":"#_1","text":"","title":"\u9996\u9875"},{"location":"#_2","text":"\u672c\u7ad9\u5185\u5bb9\u65e8\u5728\u5b9e\u7528\uff0c\u591a\u4e3a\u64cd\u4f5c\u65b9\u6cd5\u3002 \u6ca1\u6709\u6982\u5ff5\u4ecb\u7ecd\u548c\u6559\u7a0b\u3002 \u76f8\u5173\u8d44\u6599\u5747\u4e3a\u7f51\u4e0a\u641c\u96c6\u800c\u6765\u3002 For more information visit jokerleu.site .","title":"\u77e5\u8bc6\u4e0e\u6280\u80fd\u56fe\u666f"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. a b c","title":"Project layout"},{"location":"django/DRF/01-Restful/","text":"DRF \u00b6 \u6b66Sir\u535a\u5ba2 RestFul \u00b6 Restful\u8bf4\u660e \u00b6 REST\u4e0e\u6280\u672f\u65e0\u5173\uff0c\u4ee3\u8868\u7684\u662f\u4e00\u79cd\u8f6f\u4ef6\u67b6\u6784\u98ce\u683c\uff0cREST\u662fRepresentational State Transfer\u7684\u7b80\u79f0\uff0c\u4e2d\u6587\u7ffb\u8bd1\u4e3a\u201c\u8868\u5f81\u72b6\u6001\u8f6c\u79fb\u201d REST\u4ece\u8d44\u6e90\u7684\u89d2\u5ea6\u7c7b\u5ba1\u89c6\u6574\u4e2a\u7f51\u7edc\uff0c\u5b83\u5c06\u5206\u5e03\u5728\u7f51\u7edc\u4e2d\u67d0\u4e2a\u8282\u70b9\u7684\u8d44\u6e90\u901a\u8fc7URL\u8fdb\u884c\u6807\u8bc6\uff0c\u5ba2\u6237\u7aef\u5e94\u7528\u901a\u8fc7URL\u6765\u83b7\u53d6\u8d44\u6e90\u7684\u8868\u5f81\uff0c\u83b7\u5f97\u8fd9\u4e9b\u8868\u5f81\u81f4\u4f7f\u8fd9\u4e9b\u5e94\u7528\u8f6c\u53d8\u72b6\u6001 \u6240\u6709\u7684\u6570\u636e\uff0c\u4e0d\u7ba1\u662f\u901a\u8fc7\u7f51\u7edc\u83b7\u53d6\u7684\u8fd8\u662f\u64cd\u4f5c\uff08\u589e\u5220\u6539\u67e5\uff09\u7684\u6570\u636e\uff0c\u90fd\u662f\u8d44\u6e90\uff0c\u5c06\u4e00\u5207\u6570\u636e\u89c6\u4e3a\u8d44\u6e90\u662fREST\u533a\u522b\u4e0e\u5176\u4ed6\u67b6\u6784\u98ce\u683c\u7684\u6700\u672c\u8d28\u5c5e\u6027 \u5bf9\u4e8eREST\u8fd9\u79cd\u9762\u5411\u8d44\u6e90\u7684\u67b6\u6784\u98ce\u683c\uff0c\u6709\u4eba\u63d0\u51fa\u4e00\u79cd\u5168\u65b0\u7684\u7ed3\u6784\u7406\u5ff5\uff0c\u5373\uff1a\u9762\u5411\u8d44\u6e90\u67b6\u6784\uff08ROA\uff1aResource Oriented Architecture\uff09 Restful\u8bbe\u8ba1\u89c4\u8303 \u00b6 API\u4e0e\u7528\u6237\u7684\u901a\u4fe1\u534f\u8bae\uff0c\u603b\u662f\u4f7f\u7528 HTTPs\u534f\u8bae \u3002\uff08\u63a8\u8350\u4f7f\u7528https\uff09 \u57df\u540d - https : // api . example . com \uff1a\u5c3d\u91cf\u5c06 API\u90e8\u7f72\u5728\u4e13\u7528\u57df\u540d \uff08\u4f1a\u5b58\u5728\u8de8\u57df\u95ee\u9898\uff0c\u9700\u8981\u81ea\u5df1\u89e3\u51b3\uff09 - https : // example . org / api / \uff1a\u5c3d\u91cf\u4f7f\u7528\u8fd9\u79cd\uff0c\u8fd9\u6837\u7684 API\u5f88\u7b80\u5355 \u7248\u672c\uff1a\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u7248\u672c\u5171\u5b58\u7684\u60c5\u51b5\uff0c\u7248\u672c\u4e4b\u95f4\u53ef\u80fd\u4e5f\u9700\u8981\u8fc7\u6e21\uff0c\u56e0\u6b64url\u540e\u9762\u4e00\u822c\u8fd8\u4f1a\u5e26\u4e00\u4e2a\u7248\u672c - URL \uff0c\u5982\uff1a https : // api . example . com / v1 / \u4e00\u822c\u7248\u672c\u53f7\u653e\u5728 url - \u7248\u672c\u597d\u4e5f\u53ef\u4ee5\u52a0\u5230\u8bf7\u6c42\u5934\u8de8\u57df\u65f6\uff0c\u5f15\u53d1\u53d1\u9001\u591a\u6b21\u8bf7\u6c42 \u8def\u5f84\uff0c\u89c6\u7f51\u7edc\u4e0a\u4efb\u4f55\u4e1c\u897f\u90fd\u662f\u8d44\u6e90\uff08\u9762\u5411\u8d44\u6e90\u7f16\u7a0b\uff09\uff0c\u5747\u4f7f\u7528\u540d\u8bcd\u8868\u793a\uff08\u53ef\u590d\u6570\uff09\uff0c\u6bd4\u5982\u8ba2\u5355order\uff0c\u800c\u4e0d\u662fget_order\uff0c\u6216\u8005delete_order\u8fd9\u6837\u7684url\u3002 - https : // api . example . com / v1 / zoos - https : // api . example . com / v1 / animals - https : // api . example . com / v1 / employees method - GET \uff1a\u4ece\u670d\u52a1\u5668\u53d6\u51fa\u8d44\u6e90\uff08\u4e00\u9879\u6216\u591a\u9879\uff09 - POST \uff1a\u5728\u670d\u52a1\u5668\u65b0\u5efa\u4e00\u4e2a\u8d44\u6e90 - PUT \uff1a\u5728\u670d\u52a1\u5668\u66f4\u65b0\u8d44\u6e90\uff08\u5ba2\u6237\u7aef\u63d0\u4f9b\u6539\u53d8\u540e\u7684\u5b8c\u6574\u8d44\u6e90\uff0c\u5373\u5168\u90e8\u66f4\u65b0\uff09 - PATCH \uff1a\u5728\u670d\u52a1\u5668\u66f4\u65b0\u8d44\u6e90\uff08\u5ba2\u6237\u7aef\u63d0\u4f9b\u6539\u53d8\u7684\u5c5e\u6027\uff0c\u5373\u5c40\u90e8\u66f4\u65b0\uff09 - DELETE \uff1a\u4ece\u670d\u52a1\u5668\u5220\u9664\u8d44\u6e90 \u8fc7\u6ee4\uff0c\u901a\u8fc7\u5728url\u4e0a\u4f20\u53c2\u7684\u5f62\u5f0f\u4f20\u9012\u641c\u7d22\u6761\u4ef6 - https : // api . example . com / v1 / zoos ? limit = 10 \uff1a\u6307\u5b9a\u8fd4\u56de\u8bb0\u5f55\u7684\u6570\u91cf - https : // api . example . com / v1 / zoos ? offset = 10 \uff1a\u6307\u5b9a\u8fd4\u56de\u8bb0\u5f55\u7684\u5f00\u59cb\u4f4d\u7f6e - https : // api . example . com / v1 / zoos ? page = 2 & per_page = 100 \uff1a\u6307\u5b9a\u7b2c\u51e0\u9875\uff0c\u4ee5\u53ca\u6bcf\u9875\u7684\u8bb0\u5f55\u6570 - https : // api . example . com / v1 / zoos ? sortby = name & order = asc \uff1a\u6307\u5b9a\u8fd4\u56de\u7ed3\u679c\u6309\u7167\u54ea\u4e2a\u5c5e\u6027\u6392\u5e8f\uff0c\u4ee5\u53ca\u6392\u5e8f\u987a\u5e8f - https : // api . example . com / v1 / zoos ? animal_type_id = 1 \uff1a\u6307\u5b9a\u7b5b\u9009\u6761\u4ef6 \u72b6\u6001\u7801\uff1a\u6839\u636e\u72b6\u6001\u7801\u7ed9\u7528\u6237\u505a\u63d0\u793a\uff0c\u4f46\u662f\u4ec5\u4ec5\u7528\u72b6\u6001\u7801\u662f\u4e0d\u591f\u7684\uff0c\u56e0\u6b64\u5927\u591a\u4f7f\u7528code+\u72b6\u6001\u7801\u7ed3\u5408\u4f7f\u7528\u3002status code\u53ef\u4ee5\u5728HTTPResponse\u4e2d\u4ee5\u53c2\u6570\u5f62\u5f0f\u8fd4\u56de\u3002\u73b0\u5728\u4e3b\u8981\u8fd8\u662f\u4ee5code\u4e3a\u4e3b\u3002\u6709\u7684\u5bf9\u72b6\u6001\u7801\u6709\u9700\u6c42\uff0c\u6709\u7684\u6ca1\u6709\u9700\u6c42\uff0c\u5728\u5199\u63a5\u53e3\u524d\u8981\u95ee\u6e05\u695a\u3002 200 OK - [GET]\uff1a\u670d\u52a1\u5668\u6210\u529f\u8fd4\u56de\u7528\u6237\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u8be5\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\uff08Idempotent\uff09\u3002 201 CREATED - [POST/PUT/PATCH]\uff1a\u7528\u6237\u65b0\u5efa\u6216\u4fee\u6539\u6570\u636e\u6210\u529f\u3002 202 Accepted - [*]\uff1a\u8868\u793a\u4e00\u4e2a\u8bf7\u6c42\u5df2\u7ecf\u8fdb\u5165\u540e\u53f0\u6392\u961f\uff08\u5f02\u6b65\u4efb\u52a1\uff09 204 NO CONTENT - [DELETE]\uff1a\u7528\u6237\u5220\u9664\u6570\u636e\u6210\u529f\u3002 400 INVALID REQUEST - [POST/PUT/PATCH]\uff1a\u7528\u6237\u53d1\u51fa\u7684\u8bf7\u6c42\u6709\u9519\u8bef\uff0c\u670d\u52a1\u5668\u6ca1\u6709\u8fdb\u884c\u65b0\u5efa\u6216\u4fee\u6539\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\u3002 401 Unauthorized - [*]\uff1a\u8868\u793a\u7528\u6237\u6ca1\u6709\u6743\u9650\uff08\u4ee4\u724c\u3001\u7528\u6237\u540d\u3001\u5bc6\u7801\u9519\u8bef\uff09\u3002 403 Forbidden - [*] \u8868\u793a\u7528\u6237\u5f97\u5230\u6388\u6743\uff08\u4e0e401\u9519\u8bef\u76f8\u5bf9\uff09\uff0c\u4f46\u662f\u8bbf\u95ee\u662f\u88ab\u7981\u6b62\u7684\u3002 404 NOT FOUND - [*]\uff1a\u7528\u6237\u53d1\u51fa\u7684\u8bf7\u6c42\u9488\u5bf9\u7684\u662f\u4e0d\u5b58\u5728\u7684\u8bb0\u5f55\uff0c\u670d\u52a1\u5668\u6ca1\u6709\u8fdb\u884c\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\u3002 406 Not Acceptable - [GET]\uff1a\u7528\u6237\u8bf7\u6c42\u7684\u683c\u5f0f\u4e0d\u53ef\u5f97\uff08\u6bd4\u5982\u7528\u6237\u8bf7\u6c42JSON\u683c\u5f0f\uff0c\u4f46\u662f\u53ea\u6709XML\u683c\u5f0f\uff09\u3002 410 Gone -[GET]\uff1a\u7528\u6237\u8bf7\u6c42\u7684\u8d44\u6e90\u88ab\u6c38\u4e45\u5220\u9664\uff0c\u4e14\u4e0d\u4f1a\u518d\u5f97\u5230\u7684\u3002 422 Unprocesable entity - [POST/PUT/PATCH] \u5f53\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u53d1\u751f\u4e00\u4e2a\u9a8c\u8bc1\u9519\u8bef\u3002 500 INTERNAL SERVER ERROR - [*]\uff1a\u670d\u52a1\u5668\u53d1\u751f\u9519\u8bef\uff0c\u7528\u6237\u5c06\u65e0\u6cd5\u5224\u65ad\u53d1\u51fa\u7684\u8bf7\u6c42\u662f\u5426\u6210\u529f\u3002 \u66f4\u591a\u770b\u8fd9\u91cc\uff1ahttp://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html \u9519\u8bef\u5904\u7406\uff0c\u72b6\u6001\u7801\u662f4xx\u65f6\uff0c\u5e94\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0c\u63a8\u8350\u7528error\u5f53\u505akey\u3002 { error: \"Invalid API key\" } \u8fd4\u56de\u7ed3\u679c\uff0c\u9488\u5bf9\u4e0d\u540c\u64cd\u4f5c\uff0c\u670d\u52a1\u5668\u5411\u7528\u6237\u8fd4\u56de\u7684\u7ed3\u679c\u5e94\u8be5\u7b26\u5408\u4ee5\u4e0b\u89c4\u8303\u3002 GET /collection\uff1a\u8fd4\u56de\u8d44\u6e90\u5bf9\u8c61\u7684\u5217\u8868\uff08\u6570\u7ec4\uff09 GET /collection/resource\uff1a\u8fd4\u56de\u5355\u4e2a\u8d44\u6e90\u5bf9\u8c61 POST /collection\uff1a\u8fd4\u56de\u65b0\u751f\u6210\u7684\u8d44\u6e90\u5bf9\u8c61 PUT /collection/resource\uff1a\u8fd4\u56de\u5b8c\u6574\u7684\u8d44\u6e90\u5bf9\u8c61 PATCH /collection/resource\uff1a\u8fd4\u56de\u5b8c\u6574\u7684\u8d44\u6e90\u5bf9\u8c61 DELETE /collection/resource\uff1a\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6587\u6863 Hypermedia API\uff0cRESTful API\u6700\u597d\u505a\u5230Hypermedia\uff0c\u5373\u8fd4\u56de\u7ed3\u679c\u4e2d\u63d0\u4f9b\u94fe\u63a5\uff0c\u8fde\u5411\u5176\u4ed6API\u65b9\u6cd5\uff0c\u4f7f\u5f97\u7528\u6237\u4e0d\u67e5\u6587\u6863\uff0c\u4e5f\u77e5\u9053\u4e0b\u4e00\u6b65\u5e94\u8be5\u505a\u4ec0\u4e48\u3002\uff08\u5176\u5b9e\u5c31\u662f\u4e3a\u4e86\u8ba9\u4f60\u7701\u4e8b\uff0c\u518d\u7ed9\u4f60\u8fd4\u56de\u4e00\u4e2aurl\uff09 { \"link\": { \"rel\": \"collection https://www.example.com/zoos\", \"href\": \"https://api.example.com/zoos\", \"title\": \"List of zoos\", \"type\": \"application/vnd.yourformat+json\" } } \u8c08\u8c08\u4f60\u5bf9Restful\u89c4\u8303\u7684\u8ba4\u8bc6 \u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u89c4\u8303\uff0c\u8ba9\u540e\u53f0\u66f4\u5bb9\u6613\u5904\u7406\uff0c\u8ba9\u524d\u7aef\u66f4\u5bb9\u6613\u8bb0\u4f4f\u8fd9\u4e9burl\uff0c\u5728url\u4e0a\u80fd\u4f53\u73b0\u66f4\u591a\u7684\u64cd\u4f5c\u3002 restful\u6709\u4e9b\u9002\u7528\u9879\u76ee\uff0c\u6709\u4e9b\u4e5f\u4e0d\u9002\u7528\uff0c\u4e0d\u4e00\u5b9a\u8981\u5b8c\u5168\u7b26\u5408\u8fd9\u4e2a\u6807\u51c6\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u5951\u5408\u9879\u76ee\u3002 \u534f\u540c\u5f00\u53d1\u7684\u65f6\u5019\u5171\u540c\u9075\u5faa\u8fd9\u4e2a\u89c4\u8303\uff0c\u8ba9\u64cd\u4f5c\u66f4\u52a0\u7edf\u4e00\u3002 \u63a8\u8350\u4f7f\u7528CBV\u7684\u65b9\u5f0f DRF\u7684\u5b89\u88c5 \u00b6 # \u5b89\u88c5\u8fc7\u7a0b\u6781\u5176\u7b80\u5355 pip3 install djangorestframework","title":"DRF"},{"location":"django/DRF/01-Restful/#drf","text":"\u6b66Sir\u535a\u5ba2","title":"DRF"},{"location":"django/DRF/01-Restful/#restful","text":"","title":"RestFul"},{"location":"django/DRF/01-Restful/#restful_1","text":"REST\u4e0e\u6280\u672f\u65e0\u5173\uff0c\u4ee3\u8868\u7684\u662f\u4e00\u79cd\u8f6f\u4ef6\u67b6\u6784\u98ce\u683c\uff0cREST\u662fRepresentational State Transfer\u7684\u7b80\u79f0\uff0c\u4e2d\u6587\u7ffb\u8bd1\u4e3a\u201c\u8868\u5f81\u72b6\u6001\u8f6c\u79fb\u201d REST\u4ece\u8d44\u6e90\u7684\u89d2\u5ea6\u7c7b\u5ba1\u89c6\u6574\u4e2a\u7f51\u7edc\uff0c\u5b83\u5c06\u5206\u5e03\u5728\u7f51\u7edc\u4e2d\u67d0\u4e2a\u8282\u70b9\u7684\u8d44\u6e90\u901a\u8fc7URL\u8fdb\u884c\u6807\u8bc6\uff0c\u5ba2\u6237\u7aef\u5e94\u7528\u901a\u8fc7URL\u6765\u83b7\u53d6\u8d44\u6e90\u7684\u8868\u5f81\uff0c\u83b7\u5f97\u8fd9\u4e9b\u8868\u5f81\u81f4\u4f7f\u8fd9\u4e9b\u5e94\u7528\u8f6c\u53d8\u72b6\u6001 \u6240\u6709\u7684\u6570\u636e\uff0c\u4e0d\u7ba1\u662f\u901a\u8fc7\u7f51\u7edc\u83b7\u53d6\u7684\u8fd8\u662f\u64cd\u4f5c\uff08\u589e\u5220\u6539\u67e5\uff09\u7684\u6570\u636e\uff0c\u90fd\u662f\u8d44\u6e90\uff0c\u5c06\u4e00\u5207\u6570\u636e\u89c6\u4e3a\u8d44\u6e90\u662fREST\u533a\u522b\u4e0e\u5176\u4ed6\u67b6\u6784\u98ce\u683c\u7684\u6700\u672c\u8d28\u5c5e\u6027 \u5bf9\u4e8eREST\u8fd9\u79cd\u9762\u5411\u8d44\u6e90\u7684\u67b6\u6784\u98ce\u683c\uff0c\u6709\u4eba\u63d0\u51fa\u4e00\u79cd\u5168\u65b0\u7684\u7ed3\u6784\u7406\u5ff5\uff0c\u5373\uff1a\u9762\u5411\u8d44\u6e90\u67b6\u6784\uff08ROA\uff1aResource Oriented Architecture\uff09","title":"Restful\u8bf4\u660e"},{"location":"django/DRF/01-Restful/#restful_2","text":"API\u4e0e\u7528\u6237\u7684\u901a\u4fe1\u534f\u8bae\uff0c\u603b\u662f\u4f7f\u7528 HTTPs\u534f\u8bae \u3002\uff08\u63a8\u8350\u4f7f\u7528https\uff09 \u57df\u540d - https : // api . example . com \uff1a\u5c3d\u91cf\u5c06 API\u90e8\u7f72\u5728\u4e13\u7528\u57df\u540d \uff08\u4f1a\u5b58\u5728\u8de8\u57df\u95ee\u9898\uff0c\u9700\u8981\u81ea\u5df1\u89e3\u51b3\uff09 - https : // example . org / api / \uff1a\u5c3d\u91cf\u4f7f\u7528\u8fd9\u79cd\uff0c\u8fd9\u6837\u7684 API\u5f88\u7b80\u5355 \u7248\u672c\uff1a\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u7248\u672c\u5171\u5b58\u7684\u60c5\u51b5\uff0c\u7248\u672c\u4e4b\u95f4\u53ef\u80fd\u4e5f\u9700\u8981\u8fc7\u6e21\uff0c\u56e0\u6b64url\u540e\u9762\u4e00\u822c\u8fd8\u4f1a\u5e26\u4e00\u4e2a\u7248\u672c - URL \uff0c\u5982\uff1a https : // api . example . com / v1 / \u4e00\u822c\u7248\u672c\u53f7\u653e\u5728 url - \u7248\u672c\u597d\u4e5f\u53ef\u4ee5\u52a0\u5230\u8bf7\u6c42\u5934\u8de8\u57df\u65f6\uff0c\u5f15\u53d1\u53d1\u9001\u591a\u6b21\u8bf7\u6c42 \u8def\u5f84\uff0c\u89c6\u7f51\u7edc\u4e0a\u4efb\u4f55\u4e1c\u897f\u90fd\u662f\u8d44\u6e90\uff08\u9762\u5411\u8d44\u6e90\u7f16\u7a0b\uff09\uff0c\u5747\u4f7f\u7528\u540d\u8bcd\u8868\u793a\uff08\u53ef\u590d\u6570\uff09\uff0c\u6bd4\u5982\u8ba2\u5355order\uff0c\u800c\u4e0d\u662fget_order\uff0c\u6216\u8005delete_order\u8fd9\u6837\u7684url\u3002 - https : // api . example . com / v1 / zoos - https : // api . example . com / v1 / animals - https : // api . example . com / v1 / employees method - GET \uff1a\u4ece\u670d\u52a1\u5668\u53d6\u51fa\u8d44\u6e90\uff08\u4e00\u9879\u6216\u591a\u9879\uff09 - POST \uff1a\u5728\u670d\u52a1\u5668\u65b0\u5efa\u4e00\u4e2a\u8d44\u6e90 - PUT \uff1a\u5728\u670d\u52a1\u5668\u66f4\u65b0\u8d44\u6e90\uff08\u5ba2\u6237\u7aef\u63d0\u4f9b\u6539\u53d8\u540e\u7684\u5b8c\u6574\u8d44\u6e90\uff0c\u5373\u5168\u90e8\u66f4\u65b0\uff09 - PATCH \uff1a\u5728\u670d\u52a1\u5668\u66f4\u65b0\u8d44\u6e90\uff08\u5ba2\u6237\u7aef\u63d0\u4f9b\u6539\u53d8\u7684\u5c5e\u6027\uff0c\u5373\u5c40\u90e8\u66f4\u65b0\uff09 - DELETE \uff1a\u4ece\u670d\u52a1\u5668\u5220\u9664\u8d44\u6e90 \u8fc7\u6ee4\uff0c\u901a\u8fc7\u5728url\u4e0a\u4f20\u53c2\u7684\u5f62\u5f0f\u4f20\u9012\u641c\u7d22\u6761\u4ef6 - https : // api . example . com / v1 / zoos ? limit = 10 \uff1a\u6307\u5b9a\u8fd4\u56de\u8bb0\u5f55\u7684\u6570\u91cf - https : // api . example . com / v1 / zoos ? offset = 10 \uff1a\u6307\u5b9a\u8fd4\u56de\u8bb0\u5f55\u7684\u5f00\u59cb\u4f4d\u7f6e - https : // api . example . com / v1 / zoos ? page = 2 & per_page = 100 \uff1a\u6307\u5b9a\u7b2c\u51e0\u9875\uff0c\u4ee5\u53ca\u6bcf\u9875\u7684\u8bb0\u5f55\u6570 - https : // api . example . com / v1 / zoos ? sortby = name & order = asc \uff1a\u6307\u5b9a\u8fd4\u56de\u7ed3\u679c\u6309\u7167\u54ea\u4e2a\u5c5e\u6027\u6392\u5e8f\uff0c\u4ee5\u53ca\u6392\u5e8f\u987a\u5e8f - https : // api . example . com / v1 / zoos ? animal_type_id = 1 \uff1a\u6307\u5b9a\u7b5b\u9009\u6761\u4ef6 \u72b6\u6001\u7801\uff1a\u6839\u636e\u72b6\u6001\u7801\u7ed9\u7528\u6237\u505a\u63d0\u793a\uff0c\u4f46\u662f\u4ec5\u4ec5\u7528\u72b6\u6001\u7801\u662f\u4e0d\u591f\u7684\uff0c\u56e0\u6b64\u5927\u591a\u4f7f\u7528code+\u72b6\u6001\u7801\u7ed3\u5408\u4f7f\u7528\u3002status code\u53ef\u4ee5\u5728HTTPResponse\u4e2d\u4ee5\u53c2\u6570\u5f62\u5f0f\u8fd4\u56de\u3002\u73b0\u5728\u4e3b\u8981\u8fd8\u662f\u4ee5code\u4e3a\u4e3b\u3002\u6709\u7684\u5bf9\u72b6\u6001\u7801\u6709\u9700\u6c42\uff0c\u6709\u7684\u6ca1\u6709\u9700\u6c42\uff0c\u5728\u5199\u63a5\u53e3\u524d\u8981\u95ee\u6e05\u695a\u3002 200 OK - [GET]\uff1a\u670d\u52a1\u5668\u6210\u529f\u8fd4\u56de\u7528\u6237\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u8be5\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\uff08Idempotent\uff09\u3002 201 CREATED - [POST/PUT/PATCH]\uff1a\u7528\u6237\u65b0\u5efa\u6216\u4fee\u6539\u6570\u636e\u6210\u529f\u3002 202 Accepted - [*]\uff1a\u8868\u793a\u4e00\u4e2a\u8bf7\u6c42\u5df2\u7ecf\u8fdb\u5165\u540e\u53f0\u6392\u961f\uff08\u5f02\u6b65\u4efb\u52a1\uff09 204 NO CONTENT - [DELETE]\uff1a\u7528\u6237\u5220\u9664\u6570\u636e\u6210\u529f\u3002 400 INVALID REQUEST - [POST/PUT/PATCH]\uff1a\u7528\u6237\u53d1\u51fa\u7684\u8bf7\u6c42\u6709\u9519\u8bef\uff0c\u670d\u52a1\u5668\u6ca1\u6709\u8fdb\u884c\u65b0\u5efa\u6216\u4fee\u6539\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\u3002 401 Unauthorized - [*]\uff1a\u8868\u793a\u7528\u6237\u6ca1\u6709\u6743\u9650\uff08\u4ee4\u724c\u3001\u7528\u6237\u540d\u3001\u5bc6\u7801\u9519\u8bef\uff09\u3002 403 Forbidden - [*] \u8868\u793a\u7528\u6237\u5f97\u5230\u6388\u6743\uff08\u4e0e401\u9519\u8bef\u76f8\u5bf9\uff09\uff0c\u4f46\u662f\u8bbf\u95ee\u662f\u88ab\u7981\u6b62\u7684\u3002 404 NOT FOUND - [*]\uff1a\u7528\u6237\u53d1\u51fa\u7684\u8bf7\u6c42\u9488\u5bf9\u7684\u662f\u4e0d\u5b58\u5728\u7684\u8bb0\u5f55\uff0c\u670d\u52a1\u5668\u6ca1\u6709\u8fdb\u884c\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u662f\u5e42\u7b49\u7684\u3002 406 Not Acceptable - [GET]\uff1a\u7528\u6237\u8bf7\u6c42\u7684\u683c\u5f0f\u4e0d\u53ef\u5f97\uff08\u6bd4\u5982\u7528\u6237\u8bf7\u6c42JSON\u683c\u5f0f\uff0c\u4f46\u662f\u53ea\u6709XML\u683c\u5f0f\uff09\u3002 410 Gone -[GET]\uff1a\u7528\u6237\u8bf7\u6c42\u7684\u8d44\u6e90\u88ab\u6c38\u4e45\u5220\u9664\uff0c\u4e14\u4e0d\u4f1a\u518d\u5f97\u5230\u7684\u3002 422 Unprocesable entity - [POST/PUT/PATCH] \u5f53\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u53d1\u751f\u4e00\u4e2a\u9a8c\u8bc1\u9519\u8bef\u3002 500 INTERNAL SERVER ERROR - [*]\uff1a\u670d\u52a1\u5668\u53d1\u751f\u9519\u8bef\uff0c\u7528\u6237\u5c06\u65e0\u6cd5\u5224\u65ad\u53d1\u51fa\u7684\u8bf7\u6c42\u662f\u5426\u6210\u529f\u3002 \u66f4\u591a\u770b\u8fd9\u91cc\uff1ahttp://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html \u9519\u8bef\u5904\u7406\uff0c\u72b6\u6001\u7801\u662f4xx\u65f6\uff0c\u5e94\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0c\u63a8\u8350\u7528error\u5f53\u505akey\u3002 { error: \"Invalid API key\" } \u8fd4\u56de\u7ed3\u679c\uff0c\u9488\u5bf9\u4e0d\u540c\u64cd\u4f5c\uff0c\u670d\u52a1\u5668\u5411\u7528\u6237\u8fd4\u56de\u7684\u7ed3\u679c\u5e94\u8be5\u7b26\u5408\u4ee5\u4e0b\u89c4\u8303\u3002 GET /collection\uff1a\u8fd4\u56de\u8d44\u6e90\u5bf9\u8c61\u7684\u5217\u8868\uff08\u6570\u7ec4\uff09 GET /collection/resource\uff1a\u8fd4\u56de\u5355\u4e2a\u8d44\u6e90\u5bf9\u8c61 POST /collection\uff1a\u8fd4\u56de\u65b0\u751f\u6210\u7684\u8d44\u6e90\u5bf9\u8c61 PUT /collection/resource\uff1a\u8fd4\u56de\u5b8c\u6574\u7684\u8d44\u6e90\u5bf9\u8c61 PATCH /collection/resource\uff1a\u8fd4\u56de\u5b8c\u6574\u7684\u8d44\u6e90\u5bf9\u8c61 DELETE /collection/resource\uff1a\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6587\u6863 Hypermedia API\uff0cRESTful API\u6700\u597d\u505a\u5230Hypermedia\uff0c\u5373\u8fd4\u56de\u7ed3\u679c\u4e2d\u63d0\u4f9b\u94fe\u63a5\uff0c\u8fde\u5411\u5176\u4ed6API\u65b9\u6cd5\uff0c\u4f7f\u5f97\u7528\u6237\u4e0d\u67e5\u6587\u6863\uff0c\u4e5f\u77e5\u9053\u4e0b\u4e00\u6b65\u5e94\u8be5\u505a\u4ec0\u4e48\u3002\uff08\u5176\u5b9e\u5c31\u662f\u4e3a\u4e86\u8ba9\u4f60\u7701\u4e8b\uff0c\u518d\u7ed9\u4f60\u8fd4\u56de\u4e00\u4e2aurl\uff09 { \"link\": { \"rel\": \"collection https://www.example.com/zoos\", \"href\": \"https://api.example.com/zoos\", \"title\": \"List of zoos\", \"type\": \"application/vnd.yourformat+json\" } } \u8c08\u8c08\u4f60\u5bf9Restful\u89c4\u8303\u7684\u8ba4\u8bc6 \u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u89c4\u8303\uff0c\u8ba9\u540e\u53f0\u66f4\u5bb9\u6613\u5904\u7406\uff0c\u8ba9\u524d\u7aef\u66f4\u5bb9\u6613\u8bb0\u4f4f\u8fd9\u4e9burl\uff0c\u5728url\u4e0a\u80fd\u4f53\u73b0\u66f4\u591a\u7684\u64cd\u4f5c\u3002 restful\u6709\u4e9b\u9002\u7528\u9879\u76ee\uff0c\u6709\u4e9b\u4e5f\u4e0d\u9002\u7528\uff0c\u4e0d\u4e00\u5b9a\u8981\u5b8c\u5168\u7b26\u5408\u8fd9\u4e2a\u6807\u51c6\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u5951\u5408\u9879\u76ee\u3002 \u534f\u540c\u5f00\u53d1\u7684\u65f6\u5019\u5171\u540c\u9075\u5faa\u8fd9\u4e2a\u89c4\u8303\uff0c\u8ba9\u64cd\u4f5c\u66f4\u52a0\u7edf\u4e00\u3002 \u63a8\u8350\u4f7f\u7528CBV\u7684\u65b9\u5f0f","title":"Restful\u8bbe\u8ba1\u89c4\u8303"},{"location":"django/DRF/01-Restful/#drf_1","text":"# \u5b89\u88c5\u8fc7\u7a0b\u6781\u5176\u7b80\u5355 pip3 install djangorestframework","title":"DRF\u7684\u5b89\u88c5"},{"location":"django/DRF/02-Request\u7684\u5c01\u88c5/","text":"Request\u7684\u5c01\u88c5 \u00b6 \u5728Django\u7684RestFrameWork\u4e2d\uff0c\u6211\u4eec\u5e38\u7528\u7684\u662fCBV\uff08\u6ce8\u610f\u4e0d\u662f\u4e0d\u80fd\u7528FBV\uff0cFBV\u53ef\u4ee5\u901a\u8fc7\u88c5\u9970\u5668\u7684\u5f62\u5f0f\u53bb\u5b9e\u73b0\uff09\uff0c\u800c\u4e14CBV\u7ee7\u627f\u7684\u4e0d\u662f\u539f\u751f\u7684django\u7684View\uff0c\u800c\u662fDRF\u5728Django\u7684view\u57fa\u7840\u4e0a\u8fdb\u4e00\u6b65\u5c01\u88c5\u7684APIView\uff0c\u5728\u8fd9\u4e00\u6b65\u8fdb\u884c\u4e86Request\u7684\u91cd\u65b0\u5c01\u88c5\uff0c\u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\u65b0\u7684Request\u90fd\u5c01\u88c5\u4e86\u54ea\u4e9b\u5185\u5bb9\u3002 \u5c01\u88c5\u8fc7\u7a0b \u00b6 \u6574\u4e2a\u6d41\u7a0b\u4ece\u4e00\u4e2a\u8bf7\u6c42\u8fdb\u6765\u5f00\u59cb\u8bf4\uff1a from rest_framework.views import APIView class AuthView ( APIView ): pass rest_framework\u7684APIView\u9ed8\u8ba4\u7ee7\u627fDjango\u7684View\uff0cCBV\u4e2d\u627e\u5230\u5bf9\u5e94\u7684request\u7684\u8bf7\u6c42\u65b9\u6cd5\u662f\u5229\u7528\u53cd\u5c04\u6765\u5b9e\u73b0\u7684\uff0c\u539f\u751fDjango View\u901a\u8fc7dispatch\u65b9\u6cd5\u6765\u5b9e\u73b0\uff1a # \u539f\u751fDjango View def dispatch ( self , request , * args , ** kwargs ): # Try to dispatch to the right method; if a method doesn't exist, # defer to the error handler. Also defer to the error handler if the # request method isn't on the approved list. if request . method . lower () in self . http_method_names : handler = getattr ( self , request . method . lower (), self . http_method_not_allowed ) else : handler = self . http_method_not_allowed return handler ( request , * args , ** kwargs ) \u4e0d\u8fc7\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u81ea\u5df1\u7684CBV\u4e2d\u91cd\u5199\u8fd9\u4e2adispatch\uff0c\u501f\u6b64\u6765\u5b9e\u73b0\u66f4\u591a\u7684\u64cd\u4f5c\u3002\u5148\u8c03\u7528\u4e00\u4e0b\u7236\u7c7b\uff08View\uff09\u7684dispatch\u65b9\u6cd5\uff0c\u7136\u540e\u5728\u8c03\u7528\u4e4b\u524d\u548c\u8c03\u7528\u4e4b\u540e\u5c31\u53ef\u4ee5\u505a\u4e00\u4e9b\u6211\u4eec\u81ea\u5df1\u7684\u64cd\u4f5c\u4e86\uff0c\u5176\u5b9eDRF\u7684APIView\u4e5f\u662f\u8fd9\u4e48\u5e72\u7684\u3002 # DRF\u7684dispatch\uff0cdrf\u7684dispatch\u548cdjango\u7684dispatch\u51e0\u4e4e\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u4e0d\u8fc7\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u52a0\u4e86\u4e00\u4e9b\u94a9\u5b50\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u5728\u8c03\u7528\u7236\u7c7b\u7684\u64cd\u4f5c\u4e4b\u524d\uff0c\u6267\u884c\u4e00\u4e9b\u5176\u4ed6\u7684\u65b9\u6cd5\u3002\u8fd9\u4e9b\u94a9\u5b50\u5206\u522b\u5b58\u5728\u4e8e\u5f00\u59cb\uff0c\u7ed3\u675f\u4ee5\u53ca\u5f02\u5e38\u7684\u65f6\u5019\u3002 def dispatch ( self , request , * args , ** kwargs ): self . args = args self . kwargs = kwargs # 1\u3001\u9996\u5148\u4ece\u8fd9\u91cc\u5f00\u59cb\uff0cDRF\u5bf9django\u7684request\u505a\u4e86\u5c01\u88c5\u3002 # \u8fd9\u4e2arequest\u5df2\u7ecf\u53d1\u751f\u53d8\u5316\u4e86\uff0c\u662f\u7ecf\u8fc7drf\u52a0\u5de5\u8fc7\u540e\u7684request\u4e86\u3002 request = self . initialize_request ( request , * args , ** kwargs ) self . request = request self . headers = self . default_response_headers # deprecate? try : self . initial ( request , * args , ** kwargs ) # Get the appropriate handler method if request . method . lower () in self . http_method_names : handler = getattr ( self , request . method . lower (), self . http_method_not_allowed ) else : handler = self . http_method_not_allowed response = handler ( request , * args , ** kwargs ) except Exception as exc : response = self . handle_exception ( exc ) self . response = self . finalize_response ( request , response , * args , ** kwargs ) return self . response \u5728dispatch\u8fd9\u4e00\u6b65\u9aa4\uff0crequest\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c\u5df2\u7ecf\u4e0d\u662f\u539f\u751f\u7684request\u4e86\uff0c\u800c\u662f\u7ecf\u8fc7DRF\u5c01\u88c5\u4e4b\u540e\u7684Request\u3002\u8c03\u7528\u4e86\u521d\u59cb\u5316\u7684\u65b9\u6cd5\uff0c\u6765\u770b\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u5177\u4f53\u505a\u4e86\u4ec0\u4e48\uff1a # initialize_request def initialize_request ( self , request , * args , ** kwargs ): \"\"\" \u8fd4\u56de\u521d\u59cb\u5316\u7684request\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u662fdrf\u7684Request\u7684\u5bf9\u8c61\uff0c\u76f8\u5f53\u4e8e\u5728\u539f\u57fa\u7840\u4e0a\u5c01\u88c5\u4e86\u66f4\u591a\u7684\u5185\u5bb9 \u4f46\u662f\u539f\u6765\u7684django\u7684request\u7ed9\u5c01\u88c5\u5230\u4e86\u8fd4\u56de\u7684\u5bf9\u8c61\u91cc\uff0c\u6240\u4ee5\u8bf4\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u7684request\u3002 \"\"\" parser_context = self . get_parser_context ( request ) # _request\uff1a\u539f\u751f\u7684request\uff0cauthenticators\u83b7\u53d6\u8ba4\u8bc1\u7c7b\u7684\u5bf9\u8c61\u3002 return Request ( request , # \u8fd9\u91cc\u8fd4\u56de\u7684Request\u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u5c06\u539f\u751f\u7684Django\u7684request\u5c01\u88c5\u8fdb\u53bb\u4e86\u3002 parsers = self . get_parsers (), authenticators = self . get_authenticators (), negotiator = self . get_content_negotiator (), parser_context = parser_context ) \u5728\u521d\u59cb\u5316\u7684\u8fd9\u4e00\u6b65\u91cc\u8fd4\u56de\u4e86Request\u5b9e\u4f8b\u5316\u540e\u7684\u5bf9\u8c61\u5e76\u590d\u5236\u7ed9request\uff0c\u5230\u6b64\u4e3a\u6b62\uff0cRequest\u88ab\u5c01\u88c5\u5b8c\u6bd5\uff0c\u63a5\u4e0b\u6765\u5927\u6982\u7c97\u7565\u7684\u6d4f\u89c8\u4e00\u4e0b\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u5c01\u88c5\u7684request\u7684\u4ec0\u4e48\u5c5e\u6027\u3002 \u5e38\u7528\u5c5e\u6027 \u00b6 _request\uff1a \u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c self._request = request \uff0c\u539f\u751f\u7684request\u88ab\u5c01\u88c5\u8fdb_request\u4e2d content_type\uff1a\u8fd4\u56de\u8bf7\u6c42\u5934\u7684\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4ece self._request.META \u4e2d\u53bb\u53d6\u3002 query_params\uff1aGET\u8bf7\u6c42\u7684\u53c2\u6570\uff0c\u5982\u679c\u6211\u4eec\u81ea\u5df1\u62ff\u7684\u8bdd\u9700\u8981 request._request.GET.get \uff0c\u5176\u5b9e\u8fd9\u4e00\u4e2a\u6b65\u9aa4\u76f8\u5f53\u4e8eDRF\u5e2e\u6211\u53bb\u505a\u4e86\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u5c31\u662frequest\u5185\u90e8\u8fd8\u6709\u4e00\u4e2a __getattr__ \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5141\u8bb8\u6211\u4eec\u8c03\u7528\u5c01\u88c5\u7684request\u4e2d\u6ca1\u6709\u7684\u5c5e\u6027\u7684\u65f6\u5019\uff0c\u4f1a\u53bb\u539f\u751f\u7684request\u4e2d\u53bb\u8c03\u7528\u8fd4\u56de\u3002 def __getattr__ ( self , attr ): \"\"\" If an attribute does not exist on this instance, then we also attempt to proxy it to the underlying HttpRequest object. \"\"\" try : return getattr ( self . _request , attr ) except AttributeError : return self . __getattribute__ ( attr )","title":"Request\u7684\u5c01\u88c5"},{"location":"django/DRF/02-Request\u7684\u5c01\u88c5/#request","text":"\u5728Django\u7684RestFrameWork\u4e2d\uff0c\u6211\u4eec\u5e38\u7528\u7684\u662fCBV\uff08\u6ce8\u610f\u4e0d\u662f\u4e0d\u80fd\u7528FBV\uff0cFBV\u53ef\u4ee5\u901a\u8fc7\u88c5\u9970\u5668\u7684\u5f62\u5f0f\u53bb\u5b9e\u73b0\uff09\uff0c\u800c\u4e14CBV\u7ee7\u627f\u7684\u4e0d\u662f\u539f\u751f\u7684django\u7684View\uff0c\u800c\u662fDRF\u5728Django\u7684view\u57fa\u7840\u4e0a\u8fdb\u4e00\u6b65\u5c01\u88c5\u7684APIView\uff0c\u5728\u8fd9\u4e00\u6b65\u8fdb\u884c\u4e86Request\u7684\u91cd\u65b0\u5c01\u88c5\uff0c\u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\u65b0\u7684Request\u90fd\u5c01\u88c5\u4e86\u54ea\u4e9b\u5185\u5bb9\u3002","title":"Request\u7684\u5c01\u88c5"},{"location":"django/DRF/02-Request\u7684\u5c01\u88c5/#_1","text":"\u6574\u4e2a\u6d41\u7a0b\u4ece\u4e00\u4e2a\u8bf7\u6c42\u8fdb\u6765\u5f00\u59cb\u8bf4\uff1a from rest_framework.views import APIView class AuthView ( APIView ): pass rest_framework\u7684APIView\u9ed8\u8ba4\u7ee7\u627fDjango\u7684View\uff0cCBV\u4e2d\u627e\u5230\u5bf9\u5e94\u7684request\u7684\u8bf7\u6c42\u65b9\u6cd5\u662f\u5229\u7528\u53cd\u5c04\u6765\u5b9e\u73b0\u7684\uff0c\u539f\u751fDjango View\u901a\u8fc7dispatch\u65b9\u6cd5\u6765\u5b9e\u73b0\uff1a # \u539f\u751fDjango View def dispatch ( self , request , * args , ** kwargs ): # Try to dispatch to the right method; if a method doesn't exist, # defer to the error handler. Also defer to the error handler if the # request method isn't on the approved list. if request . method . lower () in self . http_method_names : handler = getattr ( self , request . method . lower (), self . http_method_not_allowed ) else : handler = self . http_method_not_allowed return handler ( request , * args , ** kwargs ) \u4e0d\u8fc7\u6211\u4eec\u77e5\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u81ea\u5df1\u7684CBV\u4e2d\u91cd\u5199\u8fd9\u4e2adispatch\uff0c\u501f\u6b64\u6765\u5b9e\u73b0\u66f4\u591a\u7684\u64cd\u4f5c\u3002\u5148\u8c03\u7528\u4e00\u4e0b\u7236\u7c7b\uff08View\uff09\u7684dispatch\u65b9\u6cd5\uff0c\u7136\u540e\u5728\u8c03\u7528\u4e4b\u524d\u548c\u8c03\u7528\u4e4b\u540e\u5c31\u53ef\u4ee5\u505a\u4e00\u4e9b\u6211\u4eec\u81ea\u5df1\u7684\u64cd\u4f5c\u4e86\uff0c\u5176\u5b9eDRF\u7684APIView\u4e5f\u662f\u8fd9\u4e48\u5e72\u7684\u3002 # DRF\u7684dispatch\uff0cdrf\u7684dispatch\u548cdjango\u7684dispatch\u51e0\u4e4e\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u4e0d\u8fc7\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u52a0\u4e86\u4e00\u4e9b\u94a9\u5b50\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u5728\u8c03\u7528\u7236\u7c7b\u7684\u64cd\u4f5c\u4e4b\u524d\uff0c\u6267\u884c\u4e00\u4e9b\u5176\u4ed6\u7684\u65b9\u6cd5\u3002\u8fd9\u4e9b\u94a9\u5b50\u5206\u522b\u5b58\u5728\u4e8e\u5f00\u59cb\uff0c\u7ed3\u675f\u4ee5\u53ca\u5f02\u5e38\u7684\u65f6\u5019\u3002 def dispatch ( self , request , * args , ** kwargs ): self . args = args self . kwargs = kwargs # 1\u3001\u9996\u5148\u4ece\u8fd9\u91cc\u5f00\u59cb\uff0cDRF\u5bf9django\u7684request\u505a\u4e86\u5c01\u88c5\u3002 # \u8fd9\u4e2arequest\u5df2\u7ecf\u53d1\u751f\u53d8\u5316\u4e86\uff0c\u662f\u7ecf\u8fc7drf\u52a0\u5de5\u8fc7\u540e\u7684request\u4e86\u3002 request = self . initialize_request ( request , * args , ** kwargs ) self . request = request self . headers = self . default_response_headers # deprecate? try : self . initial ( request , * args , ** kwargs ) # Get the appropriate handler method if request . method . lower () in self . http_method_names : handler = getattr ( self , request . method . lower (), self . http_method_not_allowed ) else : handler = self . http_method_not_allowed response = handler ( request , * args , ** kwargs ) except Exception as exc : response = self . handle_exception ( exc ) self . response = self . finalize_response ( request , response , * args , ** kwargs ) return self . response \u5728dispatch\u8fd9\u4e00\u6b65\u9aa4\uff0crequest\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c\u5df2\u7ecf\u4e0d\u662f\u539f\u751f\u7684request\u4e86\uff0c\u800c\u662f\u7ecf\u8fc7DRF\u5c01\u88c5\u4e4b\u540e\u7684Request\u3002\u8c03\u7528\u4e86\u521d\u59cb\u5316\u7684\u65b9\u6cd5\uff0c\u6765\u770b\u4e00\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\u5177\u4f53\u505a\u4e86\u4ec0\u4e48\uff1a # initialize_request def initialize_request ( self , request , * args , ** kwargs ): \"\"\" \u8fd4\u56de\u521d\u59cb\u5316\u7684request\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u662fdrf\u7684Request\u7684\u5bf9\u8c61\uff0c\u76f8\u5f53\u4e8e\u5728\u539f\u57fa\u7840\u4e0a\u5c01\u88c5\u4e86\u66f4\u591a\u7684\u5185\u5bb9 \u4f46\u662f\u539f\u6765\u7684django\u7684request\u7ed9\u5c01\u88c5\u5230\u4e86\u8fd4\u56de\u7684\u5bf9\u8c61\u91cc\uff0c\u6240\u4ee5\u8bf4\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u7684request\u3002 \"\"\" parser_context = self . get_parser_context ( request ) # _request\uff1a\u539f\u751f\u7684request\uff0cauthenticators\u83b7\u53d6\u8ba4\u8bc1\u7c7b\u7684\u5bf9\u8c61\u3002 return Request ( request , # \u8fd9\u91cc\u8fd4\u56de\u7684Request\u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u5c06\u539f\u751f\u7684Django\u7684request\u5c01\u88c5\u8fdb\u53bb\u4e86\u3002 parsers = self . get_parsers (), authenticators = self . get_authenticators (), negotiator = self . get_content_negotiator (), parser_context = parser_context ) \u5728\u521d\u59cb\u5316\u7684\u8fd9\u4e00\u6b65\u91cc\u8fd4\u56de\u4e86Request\u5b9e\u4f8b\u5316\u540e\u7684\u5bf9\u8c61\u5e76\u590d\u5236\u7ed9request\uff0c\u5230\u6b64\u4e3a\u6b62\uff0cRequest\u88ab\u5c01\u88c5\u5b8c\u6bd5\uff0c\u63a5\u4e0b\u6765\u5927\u6982\u7c97\u7565\u7684\u6d4f\u89c8\u4e00\u4e0b\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u5c01\u88c5\u7684request\u7684\u4ec0\u4e48\u5c5e\u6027\u3002","title":"\u5c01\u88c5\u8fc7\u7a0b"},{"location":"django/DRF/02-Request\u7684\u5c01\u88c5/#_2","text":"_request\uff1a \u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c self._request = request \uff0c\u539f\u751f\u7684request\u88ab\u5c01\u88c5\u8fdb_request\u4e2d content_type\uff1a\u8fd4\u56de\u8bf7\u6c42\u5934\u7684\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4ece self._request.META \u4e2d\u53bb\u53d6\u3002 query_params\uff1aGET\u8bf7\u6c42\u7684\u53c2\u6570\uff0c\u5982\u679c\u6211\u4eec\u81ea\u5df1\u62ff\u7684\u8bdd\u9700\u8981 request._request.GET.get \uff0c\u5176\u5b9e\u8fd9\u4e00\u4e2a\u6b65\u9aa4\u76f8\u5f53\u4e8eDRF\u5e2e\u6211\u53bb\u505a\u4e86\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u5c31\u662frequest\u5185\u90e8\u8fd8\u6709\u4e00\u4e2a __getattr__ \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5141\u8bb8\u6211\u4eec\u8c03\u7528\u5c01\u88c5\u7684request\u4e2d\u6ca1\u6709\u7684\u5c5e\u6027\u7684\u65f6\u5019\uff0c\u4f1a\u53bb\u539f\u751f\u7684request\u4e2d\u53bb\u8c03\u7528\u8fd4\u56de\u3002 def __getattr__ ( self , attr ): \"\"\" If an attribute does not exist on this instance, then we also attempt to proxy it to the underlying HttpRequest object. \"\"\" try : return getattr ( self . _request , attr ) except AttributeError : return self . __getattribute__ ( attr )","title":"\u5e38\u7528\u5c5e\u6027"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/","text":"Django Rest FrameWork \u00b6 DRF\u7684\u8ba4\u8bc1 \u00b6 \u7b80\u5355\u73af\u5883\u51c6\u5907 \u00b6 model class\u7b80\u5355\u70b9\uff0c\u4e00\u4e2a\u7528\u6765\u5b58\u50a8\u7528\u6237\u4fe1\u606f\u4e00\u4e2a\u7528\u6765\u5b58\u50a8token\u8ba4\u8bc1\u4fe1\u606f\u3002 from django.db import models class UserInfo ( models . Model ): user_type_choices = ( ( 1 , '\u666e\u901a\u7528\u6237' ), ( 2 , 'VIP' ), ( 3 , 'SVIP' ), ) user_type = models . IntegerField ( choices = user_type_choices ) username = models . CharField ( max_length = 64 , unique = True ) password = models . CharField ( max_length = 64 ) class UserToken ( models . Model ): # \u8fd8\u53ef\u4ee5\u5728\u8fd9\u91cc\u52a0token\u65f6\u95f4\uff0c\u6700\u591a\u4f7f\u7528\u6b21\u6570\uff0c\u6bd4\u5982\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2aexpire_time\u4f5c\u4e3a\u8fc7\u671f\u65f6\u95f4 # \u907f\u514d\u6bcf\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\u90fd\u5237\u65b0token user = models . OneToOneField ( 'UserInfo' , on_delete = models . CASCADE ) token = models . CharField ( max_length = 64 ) \u8ba4\u8bc1\u6e90\u7801\u89e3\u6790 \u00b6 \u4ecd\u7136\u4ee5dispatch\u4f5c\u4e3a\u5207\u5165\u53e3\uff0c\u67e5\u770brequest\u5c01\u88c5\u8fc7\u7a0b\u7684\u65f6\u5019\u6709\u5bf9\u8ba4\u8bc1\u90e8\u5206\u7684\u5c01\u88c5 \u8fd9\u91cc\u53ea\u7740\u91cd\u8ba4\u8bc1\u90e8\u5206\uff0c\u5176\u4ed6\u7684\u90e8\u5206\u4f1a\u56de\u8fc7\u5934\u6765\u91cd\u65b0\u8bf4\u660e\u7684\u3002 # initialize_request def initialize_request ( self , request , * args , ** kwargs ): \"\"\" \u8fd4\u56de\u521d\u59cb\u5316\u7684request\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u662fdrf\u7684Request\u7684\u5bf9\u8c61\uff0c\u76f8\u5f53\u4e8e\u5728\u539f\u57fa\u7840\u4e0a\u5c01\u88c5\u4e86\u66f4\u591a\u7684\u5185\u5bb9 \u4f46\u662f\u539f\u6765\u7684django\u7684request\u7ed9\u5c01\u88c5\u5230\u4e86\u8fd4\u56de\u7684\u5bf9\u8c61\u91cc\uff0c\u6240\u4ee5\u8bf4\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u7684request\u3002 \"\"\" parser_context = self . get_parser_context ( request ) return Request ( request , parsers = self . get_parsers (), # self.authentication_classes\u4e2d\u5217\u51fa\u7684\u7c7b\u7684\u5bf9\u8c61 authenticators = self . get_authenticators (), negotiator = self . get_content_negotiator (), parser_context = parser_context ) \u5728\u521d\u59cb\u5316\u5c01\u88c5request\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd4\u56de\u4e86\u4e00\u4e2aDRF\u7684Request\u5bf9\u8c61\uff0c\u91cc\u9762\u5c01\u88c5\u4e86\u539f\u751f\u7684request\u4ee5\u53ca\u4e00\u4e2aauthenticators\uff0c\u8fd9\u4e2aauthenticators\u662f\u8c03\u7528 self.get_authenticators() \u83b7\u5f97\u7684\u3002 \u6765\u770b\u4e00\u4e0bget_authenticators\u662f\u5982\u4f55\u64cd\u4f5c\u7684\u3002 # \u904d\u5386self.authentications_classes\u8fd4\u56de\u5bf9\u5e94\u6bcf\u4e00\u4e2aitem\u7684\u5b9e\u4f8b\uff0c\u586b\u5145\u5230\u5217\u8868\u91cc\u3002\u56e0\u6b64\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684CBV\u4e2d\u5e94\u8be5\u9700\u8981\u5b58\u5728\u4e00\u4e2a\u5217\u8868authentication_classes\uff0c\u5217\u8868\u91cc\u662f\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u8ba4\u8bc1\u7c7b def get_authenticators ( self ): \"\"\" Instantiates and returns the list of authenticators that this view can use. \"\"\" return [ auth () for auth in self . authentication_classes ] \u6b64\u65f6\u7684\u8fd9\u4e2aself\u662f\u8c01\uff1f\u8fd9\u4e2aself\u73b0\u5728\u662f\u6211\u4eec\u5b9a\u4e49\u7684CBV\uff0c\u56e0\u6b64\u53bb\u627eself.authentication_classes\u7684\u65f6\u5019\u4f1a\u4f18\u5148\u5230\u6211\u4eec\u81ea\u5df1\u7684\u7c7b\u91cc\u9762\u53bb\u627e\uff0c\u5047\u5982\u6211\u5728\u6211\u81ea\u5df1\u7684\u7c7b\u91cc\u9762\u5b9a\u4e49\u4e86\u8fd9\u4e2a\u5185\u5bb9\uff1a class OrderView ( APIView ): # \u8868\u793a\u5728\u4f60\u5199\u7684\u8fd9\u4e2a\u7c7b\u4e2d\u5e94\u7528drf\u7684\u8ba4\u8bc1\u89c4\u5219 authentication_classes = [ Authtication , ] def get ( self , request , * args , ** kwargs ): pass def post ( self , request , * args , ** kwargs ): pass \u90a3\u4e48get_authenticators\u8fd4\u56de\u7684\u5c31\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684authentication_classes\u4e2d\u7684\u5bf9\u8c61\u7684\u5217\u8868\u3002\u5230\u6b64\u4e3a\u6b62\u6211\u4eec\u5728\u8ba4\u8bc1\u65b9\u9762\u77e5\u9053dispatch\u5728DRF\u4e2d\u88ab\u521d\u59cb\u5316\uff0crequest\u88ab\u91cd\u65b0\u5c01\u88c5\uff0c\u800c\u4e14\u5c01\u88c5\u540e\u7684\u5185\u5bb9\u5305\u542b\u539f\u751f\u7684request\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6211\u4eec\u81ea\u5b9a\u5236\u7684\u8ba4\u8bc1\u89c4\u5219\u7c7b\u7684\u5bf9\u8c61\u5217\u8868\u3002 \u63a5\u4e0b\u6765\u7ee7\u7eed\u770bdispatch\u7684\u5185\u5bb9\uff0c\u5728dispatch\u7684\u540e\u7eed\u4ee3\u7801\u4e2d\u8c03\u7528\u4e86initial\u65b9\u6cd5\u3002 def dispatch ( self , request , * args , ** kwargs ): self . args = args self . kwargs = kwargs request = self . initialize_request ( request , * args , ** kwargs ) self . request = request self . headers = self . default_response_headers # deprecate? try : # \u8c03\u7528initial\u65b9\u6cd5 self . initial ( request , * args , ** kwargs ) if request . method . lower () in self . http_method_names : handler = getattr ( self , request . method . lower (), self . http_method_not_allowed ) else : handler = self . http_method_not_allowed response = handler ( request , * args , ** kwargs ) except Exception as exc : response = self . handle_exception ( exc ) self . response = self . finalize_response ( request , response , * args , ** kwargs ) return self . response \u627e\u5230self.initial\u65b9\u6cd5 def initial ( self , request , * args , ** kwargs ): \"\"\" Runs anything that needs to occur prior to calling the method handler. \"\"\" self . format_kwarg = self . get_format_suffix ( ** kwargs ) # Perform content negotiation and store the accepted info on the request neg = self . perform_content_negotiation ( request ) request . accepted_renderer , request . accepted_media_type = neg # Determine the API version, if versioning is in use. version , scheme = self . determine_version ( request , * args , ** kwargs ) request . version , request . versioning_scheme = version , scheme # \u786e\u8ba4\u8fdb\u6765\u7684\u8bf7\u6c42\u662f\u5426\u88ab\u5141\u8bb8\u3002 self . perform_authentication ( request ) self . check_permissions ( request ) self . check_throttles ( request ) \u770b\u6700\u540e\u7684self.perform_authentication\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u7528\u6765\u786e\u8ba4\u8fd9\u4e2a\u8fdb\u6765\u7684\u8bf7\u6c42\u662f\u5426\u7ecf\u8fc7\u5141\u8bb8\uff0c\u4e5f\u5c31\u662f\u8fdb\u6765\u7684\u8fd9\u4e2a\u8bf7\u6c42\u662f\u5426\u8ba4\u8bc1\u6210\u529f\uff1f def perform_authentication ( self , request ): \"\"\" Perform authentication on the incoming request. Note that if you override this and simply 'pass', then authentication will instead be performed lazily, the first time either `request.user` or `request.auth` is accessed. \"\"\" request . user \u8fd4\u56de\u4e86\u4e00\u4e2arequest\u5bf9\u8c61\u7684user\u65b9\u6cd5\uff0c\u6ce8\u610f\u6b64\u65f6\u7684request\u662f\u5df2\u7ecf\u88ab\u5c01\u88c5\u8fc7\u7684request\uff0c\u6211\u4eec\u53bbDRF\u7684Request\u7c7b\u4e2d\u53bb\u627e\u8fd9\u4e48\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4e4b\u6240\u4ee5\u6ca1\u6709\u52a0\u62ec\u53f7\u662f\u56e0\u4e3a\u88abproperty\u4fee\u9970\u8fc7\u4e86\uff1a @property def user ( self ): \"\"\" Returns the user associated with the current request, as authenticated by the authentication classes provided to the request. \"\"\" # \u5982\u679c\u5f53\u524d\u5bf9\u8c61\u4e2d(\u6ce8\u610fself\u6307\u7684\u662fCBV\u7684\u5bf9\u8c61)\u6ca1\u6709_user\u8fd9\u4e2a\u5c5e\u6027\u7684\u8bdd\u90a3\u4e48\u5c31\u8c03\u7528_authenticate\u65b9\u6cd5 # \u5982\u679c\u6709\u76f4\u63a5\u8fd4\u56deself._user if not hasattr ( self , '_user' ): with wrap_attributeerrors (): self . _authenticate () return self . _user \u6211\u4eec\u770b\uff0c\u5982\u679c\u8bf4\u8ba4\u8bc1\u6210\u529f\u4ee5\u540e\u4f1a\u8fd4\u56deself._user\uff0c\u5982\u679c\u6ca1\u6709_user\u5219\u4f1a\u8c03\u7528self._authentication()\u65b9\u6cd5 # \u6765\u770b\u4e00\u4e0b_authenticate\u5e72\u4e86\u70b9\u4ec0\u4e48 def _authenticate ( self ): \"\"\" Attempt to authenticate the request using each authentication instance in turn. \"\"\" # \u5faa\u73afself.authenticators\u4e2d\u7684\u5bf9\u8c61 for authenticator in self . authenticators : try : # \u6267\u884c\u8ba4\u8bc1\u7c7b\u5bf9\u8c61\u7684authenticate\u65b9\u6cd5\uff0c\u5982\u679c\u6ca1\u6709\u5f02\u5e38\u7684\u8bdd\uff0c\u8fd4\u56de\u4e00\u4e2a\u7528\u6237\u8ba4\u8bc1\u7684\u5143\u7ec4 # \u6240\u4ee5\u6211\u4eec\u5728\u5199authenticate\u65b9\u6cd5\u7684\u65f6\u5019\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4 user_auth_tuple = authenticator . authenticate ( self ) except exceptions . APIException : # \u5982\u679c\u6355\u83b7\u5230\u5f02\u5e38\u4e86\uff0c\u90a3\u4e48\u5c31\u8c03\u7528_not_authenticated\u65b9\u6cd5\u3002 self . _not_authenticated () # \u5411\u4e0a\u7ea7\u629b\u51fa\u5f02\u5e38 raise if user_auth_tuple is not None : # \u5982\u679c\u6709\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u8bc1\u660e\u6267\u884c\u8fc7\u76f8\u5173\u8ba4\u8bc1\u8d4b\u503c\u64cd\u4f5c # \u5982\u679c\u8fd4\u56deNone\u7684\u8bdd\uff0c\u90a3\u4e48\u5faa\u73af\u7ee7\u7eed\uff0c\u8868\u793a\u5f53\u524d\u8ba4\u8bc1\u4e0d\u5904\u7406\uff0c\u4ea4\u7ed9\u4e0b\u4e00\u4e2a\u8ba4\u8bc1\u7c7b\u53bb\u5904\u7406\u3002 # \u8d4b\u503c\uff0crequest.user\u548crequest.auth\u5c31\u662f\u8fd9\u4e48\u6765\u7684\u3002\u56e0\u6b64\u6709\u8fd4\u56de\u503c\u5fc5\u987b\u662f\u4e00\u4e2a\u5143\u7ec4 # \u5143\u7ec4\u91cc\u9762\u5fc5\u987b\u6709\u4e24\u4e2a\u5143\u7d20\uff0c\u7b2c\u4e00\u4e2a\u7ed9request.user\uff0c\u7b2c\u4e8c\u4e2a\u7ed9request.auth # \u5bf9\u5e94\u7684request.user\u5c31\u662fuser\u5bf9\u8c61\uff0crequest.auth\u5c31\u662ftoken\u5bf9\u8c61\u3002 self . _authenticator = authenticator self . user , self . auth = user_auth_tuple return # \u4e5f\u6709\u53ef\u80fd\u90fd\u4e0d\u5904\u7406\uff0c\u8fd4\u56de\u7684\u90fd\u662fNone\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9ed8\u8ba4\u8d4b\u503c self . _not_authenticated () \u6211\u4eec\u5728_authenticate\u4e2d\u53d1\u73b0\uff0c\u5faa\u73af\u904d\u5386\u4e86\u6211\u4eec\u5c01\u88c5\u7684self.authenticators\u4e2d\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u5bf9\u8c61\u7684authenticate\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u6211\u4eec\u81ea\u5df1\u5199\u7684\u7c7b\u91cc\u9762\u8981\u6709\u4e00\u4e2aauthenticate\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5e94\u8be5\u8fd4\u56de\u4ec0\u4e48\uff1f\u4e0a\u9762\u7684\u65b9\u6cd5\u652f\u6301\u4e09\u79cd\u8fd4\u56de\u503c\uff1a \u81ea\u5df1\u8fd4\u56de\u5143\u7ec4\uff1a\u5143\u7ec4\u4e2d\u5305\u542b\u8ba4\u8bc1\u7528\u6237\u7684user\u5bf9\u8c61\uff0c\u4ee5\u53ca\u8ba4\u8bc1\u7ed3\u679c\u7684\u8ba4\u8bc1\u5bf9\u8c61\uff08\u6bd4\u5982token\u8868\u4e2d\u7684\u5bf9\u8c61\uff09\u3002 \u629b\u51fa\u5f02\u5e38\uff1a\u8c03\u7528 self._not_authenticated() \uff0c\u629b\u51fa\u7684\u5f02\u5e38\u4f1a\u5728_authenticate\u4e2d\u6355\u83b7\u5230\u3002 \u8fd4\u56deNone\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u7684\u8ba4\u8bc1\u89c4\u5219\u5168\u90e8\u901a\u8fc7\uff0c\u4f46\u662f\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u6b64\u65f6\u8c03\u7528 self._not_authenticated() . \u6765\u770b\u770b self._not_authenticated() \u90fd\u5e72\u4e86\u70b9\u4ec0\u4e48\uff1f def _not_authenticated ( self ): # \u8bbe\u7f6e\u9ed8\u8ba4\u7684_authenticator\u4e3a\u7a7a\uff0c self . _authenticator = None # \u5982\u679c\u8bbe\u7f6e\u4e86UNAUTHENTICATED_USER\u90a3\u4e48\u5c31\u8c03\u7528\uff08AnonymousUser\uff09\uff0c\u5426\u5219\u5c31\u8fd4\u56deNone if api_settings . UNAUTHENTICATED_USER : self . user = api_settings . UNAUTHENTICATED_USER () else : self . user = None # \u5982\u679c\u8bbe\u7f6e\u4e86UNAUTHENTICATED_TOKEN\u90a3\u4e48\u5c31\u8c03\u7528\uff0c\u5426\u5219\u5c31\u8fd4\u56deNone if api_settings . UNAUTHENTICATED_TOKEN : self . auth = api_settings . UNAUTHENTICATED_TOKEN () else : self . auth = None \u5176\u5b9e\u5c31\u662f\u4e3a\u9ed8\u8ba4\u7684\u7528\u6237\u505a\u4e00\u4e2a\u8bbe\u7f6e\uff0c\u7ed9\u901a\u8fc7\u8ba4\u8bc1\u5374\u6ca1\u6709\u8fd4\u56de\u5177\u4f53\u8ba4\u8bc1\u4fe1\u606f\u7684\u4eba\u4e00\u4e2a\u8eab\u4efd\uff08\u533f\u540d\u7528\u6237\uff09\u3002\u5230\u6b64\u4e3a\u6b62\uff0c\u8ba4\u8bc1\u662fok\u4e86\u3002\u4e0d\u8fc7\u521a\u624d\u8d70\u7684authenticate_classes\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\uff0c\u96be\u9053\u6211\u4eec\u6bcf\u5199\u4e00\u4e2a\u7c7b\u90fd\u8981\u81ea\u5df1\u8fd9\u6837\u5b9a\u4e49\u4e00\u4e0b\u4e48\uff1f\u5176\u5b9e\u4e0d\u662f\u7684\uff0c\u9488\u5bf9\u8fd9\u4e2a\u8ba4\u8bc1\u89c4\u5219\u662f\u6709\u4e00\u4e2a\u5168\u5c40\u8bbe\u7f6e\u7684\u3002 \u4e4b\u524d\u7684authenticate_classes\u662f\u9ed8\u8ba4\u4f18\u5148\u627e\u81ea\u5df1\u5b9a\u4e49\u7684cbv\u4e2d\u7684\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5047\u5982\u8bf4\u6ca1\u6709\u7684\u8bdd\u90a3\u4e48\u5c31\u5e94\u8be5\u53bb\u7236\u7c7b\u53bb\u627e\u4e86\uff0c\u90a3\u4e48\u7236\u7c7b\u4e2d\u662f\u5982\u4f55\u5b9a\u4e49\u7684\uff1f\u6700\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u5185\u7f6e\u7684authentication_classess\uff0c\u5b83\u662f\u4e00\u4e2aapi_settings\u7684\u4e00\u4e2a\u914d\u7f6e\u9879\uff1a class APIView ( View ): # \u4e0b\u9762\u7684\u8fd9\u4e9b\u7b56\u7565\u53ef\u4ee5\u8bbe\u7f6e\u6210\u5168\u5c40\u7684\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u6bcf\u4e00\u4e2a\u5355\u72ec\u7684CBV\u53bb\u8bbe\u7f6e\u3002 renderer_classes = api_settings . DEFAULT_RENDERER_CLASSES parser_classes = api_settings . DEFAULT_PARSER_CLASSES authentication_classes = api_settings . DEFAULT_AUTHENTICATION_CLASSES \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 # \u8fd9\u4e2a\u914d\u7f6e\u662f\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u7684\u3002 api_settings = APISettings ( None , DEFAULTS , IMPORT_STRINGS ) def reload_api_settings ( * args , ** kwargs ): setting = kwargs [ 'setting' ] # \u4f1a\u53bb\u914d\u7f6e\u6587\u4ef6\u4e2d\u627eREST_FRAMEWORK\u8fd9\u6837\u4e00\u4e2akey\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u914d\u7f6e\u9879\u5199\u5230\u8fd9\u91cc\u3002 if setting == 'REST_FRAMEWORK' : api_settings . reload () \u9ed8\u8ba4\u8fd9\u4e2a\u53d8\u91cf\u662f\u6ca1\u6709\u4e1c\u897f\u7684\uff0c\u9700\u8981\u6211\u4eec\u81ea\u5df1\u53bb\u52a0\uff0c\u52a0\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a # settings.py\u6587\u4ef6\u6700\u540e\u8fdb\u884c\u6dfb\u52a0 REST_FRAMEWORK = { # \u8fd9\u91cc\u5199\u7684\u662f\u8ba4\u8bc1\u7c7b\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u5355\u72ec\u6254\u5230\u4e00\u4e2apy\u6587\u4ef6\u91cc 'DEFAULT_AUTHENTICATION_CLASSES' : [ 'api.utils.auth.FirstAuth' , 'api.utils.xxx.xxx' ], # \u63a8\u8350\u4f7f\u7528None\uff0c\u8fd9\u4e2a\u73a9\u610f\u662f\u53ef\u4ee5\u8c03\u7528\u7684\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u5199\u4e00\u4e2alambda\u8868\u8fbe\u5f0f\u8fd4\u56de\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u4fe1\u606f\u5c31\u53ef\u4ee5\u4e86\u3002 'UNAUTHENTICATED_USER' : None , # request.user = None 'UNAUTHENTICATED_TOKEN' : None , # request.auth = None } \u8ba4\u8bc1\u7c7b\u4e0d\u8981\u548cview\u5199\u5230\u4e00\u8d77\uff0c\u8fd9\u6837\u89c6\u56fe\u51fd\u6570\u5c31\u53ea\u6709\u89c6\u56fe\u76f8\u5173\u7684\u903b\u8f91\uff0c\u800c\u8ba4\u8bc1\u76f8\u5173\u7684\u88ab\u5265\u79bb\u5230auth.py\u4e2d\u4e86\u3002\u56e0\u6b64\u5728api\u9879\u76ee\u4e0b\u65b0\u5efa\u4e00\u4e2autils\u7684\u76ee\u5f55\uff0c\u65b0\u5efa\u4e00\u4e2aauth.py\u5c06\u6211\u4eec\u7684\u8ba4\u8bc1\u903b\u8f91\u90fd\u6254\u5230auth.py\u91cc\u9762\u53bb\uff0c\u8fd9\u91cc\u7684\u503c\u6211\u4eec\u77e5\u9053\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u91cc\u9762\u5199\u7684\u90fd\u662f\u7c7b\u7684\u5168\u8def\u5f84\uff08\u7c7b\u4f3cmiddleware\u90a3\u79cd\u5199\u6cd5\uff09\u3002 \u8fd9\u6837\u6211\u4eec\u5b9e\u9645\u7684\u6bcf\u4e00\u4e2a\u4e1a\u52a1\u7c7b\u5c31\u4e0d\u7528\u5199\u8fd9\u4e9b\u5185\u5bb9\u4e86\uff0c\u76f8\u5f53\u4e8e\u5168\u5c40\u6dfb\u52a0\u4e86\u8ba4\u8bc1\uff0c\u4f46\u662f\u4e5f\u6709\u4f8b\u5916\u7684\u9875\u9762\uff0c\u6bd4\u5982\u8ba4\u8bc1\u9875\u9762\uff0c\u8ba4\u8bc1\u9875\u9762\u662f\u4e0d\u9700\u8981\u6dfb\u52a0\u8ba4\u8bc1\u673a\u5236\u7684\uff0c\u4f60\u5f97\u5148\u901a\u8fc7\u4e86\u8ba4\u8bc1\u9875\u9762\u62ff\u5230\u4e86token\u8bbf\u95ee\u522b\u7684\u9700\u8981\u8ba4\u8bc1\u7684\u9875\u9762\u7684\u65f6\u5019\u624d\u9700\u8981\u8ba4\u8bc1\uff0c\u4f60\u73b0\u5728\u90fd\u6ca1\u767b\u5f55\uff0c\u6211\u8ba4\u8bc1\u9875\u9762\u8fd8\u52a0\u4e86\u8ba4\u8bc1\uff0c\u90a3\u5c31\u6ca1\u529e\u6cd5\u8bbf\u95ee\u4e86\u3002\u56e0\u6b64\u9488\u5bf9\u4e00\u4e9b\u4e1a\u52a1\u7c7b\u9700\u8981\u653e\u5f00\u8fd9\u4e2a\u6743\u9650\uff0c\u653e\u5f00\u7684\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7a7a\u5217\u8868\u5c31\u884c\u4e86\u3002\u56e0\u4e3a\u5728\u7c7b\u7684\u5185\u90e8\u5b9a\u4e49\u4e86\uff0c\u56e0\u6b64\u4f1a\u4f18\u5148\u8d70\u7c7b\u5185\u90e8\u7684\uff0c\u5b9e\u73b0\u4e86\u5355\u72ec\u7684\u7c7b\u7684\u7279\u6b8a\u653e\u5f00\u3002 class AuthView ( APIView ): # \u76f4\u63a5\u8df3\u8fc7\u9a8c\u8bc1 authentication_classes = [] def post ( self , request , * args , ** kwargs ): \u2026\u2026\u2026\u2026\u2026\u2026 def get ( self , request , * args , ** kwargs ): \u2026\u2026\u2026\u2026\u2026\u2026 \u5185\u7f6e\u8ba4\u8bc1\u7c7b \u00b6 from rest_framework.authentication import BaseAuthentication \u4e3a\u4e86\u89c4\u8303\u90fd\u8981\u7ee7\u627f\u9ed8\u8ba4\u7684BaseAuthentication\u7c7b\u3002authenticate_header\u662f\u8ba4\u8bc1\u5931\u8d25\uff08\u8fd9\u4e2a\u662f\u6d4f\u89c8\u5668\u7684\u4e00\u79cd\u8ba4\u8bc1\u673a\u5236\uff09\u7684\u65f6\u5019\u7ed9\u4f60\u7684\u6d4f\u89c8\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u5934\u3002BaseAuthentication\u8fd9\u4e2a\u7c7b\u5176\u5b9e\u5565\u90fd\u6ca1\u5199\uff0c\u5c31\u662f\u5b9a\u4e49\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff0c\u4e00\u4e2aauthenticate\u4e00\u4e2aauthenticate_header\u65b9\u6cd5\u3002\u800c\u4e14authenticate\u5fc5\u987b\u8981\u91cd\u5199\uff0c\u5426\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\u3002 \u5176\u4ed6\u7684\u5185\u7f6e\u8ba4\u8bc1\u7c7b\u578b\u8fd8\u5305\u62ecSession\u7684\uff0cToken\u7684\uff0cRemoteUser\u7684\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u8ba4\u8bc1\u90fd\u662f\u57fa\u4e8eDjango\u7684\uff0c\u4ee5Session\u4e3a\u4f8b\uff0c\u5b83\u4f1a\u53bb\u83b7\u53d6request.user\u8fd9\u4e2a\u9009\u9879\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u81ea\u5df1\u53bb\u5199session\u7684\u65f6\u5019\u662f\u6ca1\u6709\u8fd9\u4e2a\u5185\u5bb9\u7684\u3002request.user\u662f\u57fa\u4e8eDjango\u7684\u3002\u518d\u6bd4\u5982RemoteUser\u662f\u57fa\u4e8eDjango\u7684auth\u53bb\u8fdb\u884c\u8ba4\u8bc1\u7684\u3002\u56e0\u6b64\u5185\u7f6e\u7684\u8fd9\u51e0\u79cd\u65b9\u6cd5\u5176\u5b9e\u90fd\u662f\u6709\u4e00\u5b9a\u5c40\u9650\u6027\u7684\uff0c\u56e0\u6b64\u8ba4\u8bc1\u7c7b\uff0c\u4e00\u822c\u662f\u6211\u4eec\u81ea\u5df1\u53bb\u5199\uff0c\u4e0d\u4f1a\u53bb\u7528\u5230DRF\u539f\u751f\u7684\u3002 \u8bf4\u4e00\u4e0bBasicAuthentication\uff0c\u8fd9\u4e2a\u662f\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u8d26\u53f7\u5bc6\u7801\u8ba4\u8bc1\uff0c\u5728\u8bbf\u95ee\u9875\u9762\u7684\u65f6\u5019\u4f1a\u4ee5\u6d4f\u89c8\u5668\u7684\u5f62\u5f0f\u5f39\u51fa\u6765\u4e00\u4e2a\u8d26\u53f7\u5bc6\u7801\u7684\u8ba4\u8bc1\u8f93\u5165\u6846\uff0c\u6d4f\u89c8\u5668\u4f1a\u628a\u8f93\u5165\u7684\u8d26\u53f7\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u6254\u5230\u8bf7\u6c42\u5934\uff0c\u52a0\u5bc6\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a HTTP_AUTHORIZATION : \"basic (\u7528\u6237\u540d+\u5bc6\u7801)base64\u8f6c\u7801\" \u5728BasicAuthentication\u4e2d\u4f1a\u53bb\u83b7\u53d6\u8fd9\u4e00\u90e8\u5206\uff1a def get_authorization_header ( request ): \"\"\" Return request's 'Authorization:' header, as a bytestring. Hide some test client ickyness where the header can be unicode. \"\"\" # \u4ecerequest.META\u4e2d\u628a\u8fd9\u4e2aHTTP_AUTHORIZATION\u53d6\u51fa\u6765\u3002 auth = request . META . get ( 'HTTP_AUTHORIZATION' , b '' ) if isinstance ( auth , text_type ): # Work around django test client oddness auth = auth . encode ( HTTP_HEADER_ENCODING ) return auth \u62ff\u5230base64\u8f6c\u7801\u540e\u7684\u5185\u5bb9\u8fdb\u884c\u89e3\u7801\u7684\u64cd\u4f5c\u3002 class BasicAuthentication ( BaseAuthentication ): \"\"\" HTTP Basic authentication against username/password. \"\"\" www_authenticate_realm = 'api' def authenticate ( self , request ): \"\"\" Returns a `User` if a correct username and password have been supplied using HTTP Basic authentication. Otherwise returns `None`. \"\"\" auth = get_authorization_header ( request ) . split () # \u5982\u679c\u8fd4\u56de\u4e3aNone\u6216\u8005\u4e0d\u662fbasic\u8ba4\u8bc1\uff0c\u90a3\u4e48return None if not auth or auth [ 0 ] . lower () != b 'basic' : return None if len ( auth ) == 1 : msg = _ ( 'Invalid basic header. No credentials provided.' ) raise exceptions . AuthenticationFailed ( msg ) elif len ( auth ) > 2 : msg = _ ( 'Invalid basic header. Credentials string should not contain spaces.' ) raise exceptions . AuthenticationFailed ( msg ) try : # \u5f00\u59cbbase64\u89e3\u7801\uff0c\u6ce8\u610fsplit\u548cpartition\u7c7b\u4f3c\uff0csplit\u4e0d\u4f1a\u53d6\u5206\u9694\u7b26\uff0c\u4f46\u662fpartition\u4f1a\u53d6 auth_parts = base64 . b64decode ( auth [ 1 ]) . decode ( HTTP_HEADER_ENCODING ) . partition ( ':' ) except ( TypeError , UnicodeDecodeError , binascii . Error ): msg = _ ( 'Invalid basic header. Credentials not correctly base64 encoded.' ) raise exceptions . AuthenticationFailed ( msg ) userid , password = auth_parts [ 0 ], auth_parts [ 2 ] return self . authenticate_credentials ( userid , password , request ) \u5c0f\u7ed3 \u00b6 authenticate\u8fd4\u56de\u503c \u00b6 None\uff1a\u6211\u4e0d\u7ba1\u4e86\uff0c\u4e0b\u4e00\u4e2a\u8ba4\u8bc1\u6765\u6267\u884c \u629b\u51fa\u5f02\u5e38\uff0c raise exception.AuthenticationFailed('Auth Failed') \u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c(user obj\uff0cauth obj)\uff0c\u56e0\u6b64\u5143\u7d20\u4e00\u8d4b\u503c\u7ed9request.user\uff0c\u5143\u7d20\u4e8c\u8d4b\u503c\u7ed9request.auth \u4f7f\u7528\u8303\u56f4 \u00b6 \u5c40\u90e8\u4f7f\u7528\uff1a\u89c6\u56fe\u7c7b\u4e2d\u5199\u4e00\u4e2a\u9759\u6001\u5b57\u6bb5\uff0cauthentication_classes\uff0c\u5217\u8868\u91cc\u9762\u662f\u7c7b\u7684\u540d\u79f0\uff0c\u8fd9\u91cc\u548c\u5168\u5c40\u4e0d\u4e00\u6837\u3002 \u5168\u5c40\u4f7f\u7528\uff0c\u5728settings\u4e2d\u914d\u7f6e\uff1a REST_FRAMEWORK = { # \u8fd9\u91cc\u5199\u7684\u662f\u8ba4\u8bc1\u7c7b\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u5355\u72ec\u6254\u5230\u4e00\u4e2apy\u6587\u4ef6\u91cc 'DEFAULT_AUTHENTION_CLASSES' : [ 'api.utils.auth.Authtication' , ], 'UNAUTHENTICATED_USER' : None , 'UNAUTHENTICATED_TOKEN' : None , }","title":"Django Rest FrameWork"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#django-rest-framework","text":"","title":"Django Rest FrameWork"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#drf","text":"","title":"DRF\u7684\u8ba4\u8bc1"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#_1","text":"model class\u7b80\u5355\u70b9\uff0c\u4e00\u4e2a\u7528\u6765\u5b58\u50a8\u7528\u6237\u4fe1\u606f\u4e00\u4e2a\u7528\u6765\u5b58\u50a8token\u8ba4\u8bc1\u4fe1\u606f\u3002 from django.db import models class UserInfo ( models . Model ): user_type_choices = ( ( 1 , '\u666e\u901a\u7528\u6237' ), ( 2 , 'VIP' ), ( 3 , 'SVIP' ), ) user_type = models . IntegerField ( choices = user_type_choices ) username = models . CharField ( max_length = 64 , unique = True ) password = models . CharField ( max_length = 64 ) class UserToken ( models . Model ): # \u8fd8\u53ef\u4ee5\u5728\u8fd9\u91cc\u52a0token\u65f6\u95f4\uff0c\u6700\u591a\u4f7f\u7528\u6b21\u6570\uff0c\u6bd4\u5982\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2aexpire_time\u4f5c\u4e3a\u8fc7\u671f\u65f6\u95f4 # \u907f\u514d\u6bcf\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\u90fd\u5237\u65b0token user = models . OneToOneField ( 'UserInfo' , on_delete = models . CASCADE ) token = models . CharField ( max_length = 64 )","title":"\u7b80\u5355\u73af\u5883\u51c6\u5907"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#_2","text":"\u4ecd\u7136\u4ee5dispatch\u4f5c\u4e3a\u5207\u5165\u53e3\uff0c\u67e5\u770brequest\u5c01\u88c5\u8fc7\u7a0b\u7684\u65f6\u5019\u6709\u5bf9\u8ba4\u8bc1\u90e8\u5206\u7684\u5c01\u88c5 \u8fd9\u91cc\u53ea\u7740\u91cd\u8ba4\u8bc1\u90e8\u5206\uff0c\u5176\u4ed6\u7684\u90e8\u5206\u4f1a\u56de\u8fc7\u5934\u6765\u91cd\u65b0\u8bf4\u660e\u7684\u3002 # initialize_request def initialize_request ( self , request , * args , ** kwargs ): \"\"\" \u8fd4\u56de\u521d\u59cb\u5316\u7684request\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u662fdrf\u7684Request\u7684\u5bf9\u8c61\uff0c\u76f8\u5f53\u4e8e\u5728\u539f\u57fa\u7840\u4e0a\u5c01\u88c5\u4e86\u66f4\u591a\u7684\u5185\u5bb9 \u4f46\u662f\u539f\u6765\u7684django\u7684request\u7ed9\u5c01\u88c5\u5230\u4e86\u8fd4\u56de\u7684\u5bf9\u8c61\u91cc\uff0c\u6240\u4ee5\u8bf4\u4f9d\u7136\u53ef\u4ee5\u4f7f\u7528\u4e4b\u524d\u7684request\u3002 \"\"\" parser_context = self . get_parser_context ( request ) return Request ( request , parsers = self . get_parsers (), # self.authentication_classes\u4e2d\u5217\u51fa\u7684\u7c7b\u7684\u5bf9\u8c61 authenticators = self . get_authenticators (), negotiator = self . get_content_negotiator (), parser_context = parser_context ) \u5728\u521d\u59cb\u5316\u5c01\u88c5request\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd4\u56de\u4e86\u4e00\u4e2aDRF\u7684Request\u5bf9\u8c61\uff0c\u91cc\u9762\u5c01\u88c5\u4e86\u539f\u751f\u7684request\u4ee5\u53ca\u4e00\u4e2aauthenticators\uff0c\u8fd9\u4e2aauthenticators\u662f\u8c03\u7528 self.get_authenticators() \u83b7\u5f97\u7684\u3002 \u6765\u770b\u4e00\u4e0bget_authenticators\u662f\u5982\u4f55\u64cd\u4f5c\u7684\u3002 # \u904d\u5386self.authentications_classes\u8fd4\u56de\u5bf9\u5e94\u6bcf\u4e00\u4e2aitem\u7684\u5b9e\u4f8b\uff0c\u586b\u5145\u5230\u5217\u8868\u91cc\u3002\u56e0\u6b64\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684CBV\u4e2d\u5e94\u8be5\u9700\u8981\u5b58\u5728\u4e00\u4e2a\u5217\u8868authentication_classes\uff0c\u5217\u8868\u91cc\u662f\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u8ba4\u8bc1\u7c7b def get_authenticators ( self ): \"\"\" Instantiates and returns the list of authenticators that this view can use. \"\"\" return [ auth () for auth in self . authentication_classes ] \u6b64\u65f6\u7684\u8fd9\u4e2aself\u662f\u8c01\uff1f\u8fd9\u4e2aself\u73b0\u5728\u662f\u6211\u4eec\u5b9a\u4e49\u7684CBV\uff0c\u56e0\u6b64\u53bb\u627eself.authentication_classes\u7684\u65f6\u5019\u4f1a\u4f18\u5148\u5230\u6211\u4eec\u81ea\u5df1\u7684\u7c7b\u91cc\u9762\u53bb\u627e\uff0c\u5047\u5982\u6211\u5728\u6211\u81ea\u5df1\u7684\u7c7b\u91cc\u9762\u5b9a\u4e49\u4e86\u8fd9\u4e2a\u5185\u5bb9\uff1a class OrderView ( APIView ): # \u8868\u793a\u5728\u4f60\u5199\u7684\u8fd9\u4e2a\u7c7b\u4e2d\u5e94\u7528drf\u7684\u8ba4\u8bc1\u89c4\u5219 authentication_classes = [ Authtication , ] def get ( self , request , * args , ** kwargs ): pass def post ( self , request , * args , ** kwargs ): pass \u90a3\u4e48get_authenticators\u8fd4\u56de\u7684\u5c31\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684authentication_classes\u4e2d\u7684\u5bf9\u8c61\u7684\u5217\u8868\u3002\u5230\u6b64\u4e3a\u6b62\u6211\u4eec\u5728\u8ba4\u8bc1\u65b9\u9762\u77e5\u9053dispatch\u5728DRF\u4e2d\u88ab\u521d\u59cb\u5316\uff0crequest\u88ab\u91cd\u65b0\u5c01\u88c5\uff0c\u800c\u4e14\u5c01\u88c5\u540e\u7684\u5185\u5bb9\u5305\u542b\u539f\u751f\u7684request\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6211\u4eec\u81ea\u5b9a\u5236\u7684\u8ba4\u8bc1\u89c4\u5219\u7c7b\u7684\u5bf9\u8c61\u5217\u8868\u3002 \u63a5\u4e0b\u6765\u7ee7\u7eed\u770bdispatch\u7684\u5185\u5bb9\uff0c\u5728dispatch\u7684\u540e\u7eed\u4ee3\u7801\u4e2d\u8c03\u7528\u4e86initial\u65b9\u6cd5\u3002 def dispatch ( self , request , * args , ** kwargs ): self . args = args self . kwargs = kwargs request = self . initialize_request ( request , * args , ** kwargs ) self . request = request self . headers = self . default_response_headers # deprecate? try : # \u8c03\u7528initial\u65b9\u6cd5 self . initial ( request , * args , ** kwargs ) if request . method . lower () in self . http_method_names : handler = getattr ( self , request . method . lower (), self . http_method_not_allowed ) else : handler = self . http_method_not_allowed response = handler ( request , * args , ** kwargs ) except Exception as exc : response = self . handle_exception ( exc ) self . response = self . finalize_response ( request , response , * args , ** kwargs ) return self . response \u627e\u5230self.initial\u65b9\u6cd5 def initial ( self , request , * args , ** kwargs ): \"\"\" Runs anything that needs to occur prior to calling the method handler. \"\"\" self . format_kwarg = self . get_format_suffix ( ** kwargs ) # Perform content negotiation and store the accepted info on the request neg = self . perform_content_negotiation ( request ) request . accepted_renderer , request . accepted_media_type = neg # Determine the API version, if versioning is in use. version , scheme = self . determine_version ( request , * args , ** kwargs ) request . version , request . versioning_scheme = version , scheme # \u786e\u8ba4\u8fdb\u6765\u7684\u8bf7\u6c42\u662f\u5426\u88ab\u5141\u8bb8\u3002 self . perform_authentication ( request ) self . check_permissions ( request ) self . check_throttles ( request ) \u770b\u6700\u540e\u7684self.perform_authentication\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u7528\u6765\u786e\u8ba4\u8fd9\u4e2a\u8fdb\u6765\u7684\u8bf7\u6c42\u662f\u5426\u7ecf\u8fc7\u5141\u8bb8\uff0c\u4e5f\u5c31\u662f\u8fdb\u6765\u7684\u8fd9\u4e2a\u8bf7\u6c42\u662f\u5426\u8ba4\u8bc1\u6210\u529f\uff1f def perform_authentication ( self , request ): \"\"\" Perform authentication on the incoming request. Note that if you override this and simply 'pass', then authentication will instead be performed lazily, the first time either `request.user` or `request.auth` is accessed. \"\"\" request . user \u8fd4\u56de\u4e86\u4e00\u4e2arequest\u5bf9\u8c61\u7684user\u65b9\u6cd5\uff0c\u6ce8\u610f\u6b64\u65f6\u7684request\u662f\u5df2\u7ecf\u88ab\u5c01\u88c5\u8fc7\u7684request\uff0c\u6211\u4eec\u53bbDRF\u7684Request\u7c7b\u4e2d\u53bb\u627e\u8fd9\u4e48\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4e4b\u6240\u4ee5\u6ca1\u6709\u52a0\u62ec\u53f7\u662f\u56e0\u4e3a\u88abproperty\u4fee\u9970\u8fc7\u4e86\uff1a @property def user ( self ): \"\"\" Returns the user associated with the current request, as authenticated by the authentication classes provided to the request. \"\"\" # \u5982\u679c\u5f53\u524d\u5bf9\u8c61\u4e2d(\u6ce8\u610fself\u6307\u7684\u662fCBV\u7684\u5bf9\u8c61)\u6ca1\u6709_user\u8fd9\u4e2a\u5c5e\u6027\u7684\u8bdd\u90a3\u4e48\u5c31\u8c03\u7528_authenticate\u65b9\u6cd5 # \u5982\u679c\u6709\u76f4\u63a5\u8fd4\u56deself._user if not hasattr ( self , '_user' ): with wrap_attributeerrors (): self . _authenticate () return self . _user \u6211\u4eec\u770b\uff0c\u5982\u679c\u8bf4\u8ba4\u8bc1\u6210\u529f\u4ee5\u540e\u4f1a\u8fd4\u56deself._user\uff0c\u5982\u679c\u6ca1\u6709_user\u5219\u4f1a\u8c03\u7528self._authentication()\u65b9\u6cd5 # \u6765\u770b\u4e00\u4e0b_authenticate\u5e72\u4e86\u70b9\u4ec0\u4e48 def _authenticate ( self ): \"\"\" Attempt to authenticate the request using each authentication instance in turn. \"\"\" # \u5faa\u73afself.authenticators\u4e2d\u7684\u5bf9\u8c61 for authenticator in self . authenticators : try : # \u6267\u884c\u8ba4\u8bc1\u7c7b\u5bf9\u8c61\u7684authenticate\u65b9\u6cd5\uff0c\u5982\u679c\u6ca1\u6709\u5f02\u5e38\u7684\u8bdd\uff0c\u8fd4\u56de\u4e00\u4e2a\u7528\u6237\u8ba4\u8bc1\u7684\u5143\u7ec4 # \u6240\u4ee5\u6211\u4eec\u5728\u5199authenticate\u65b9\u6cd5\u7684\u65f6\u5019\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4 user_auth_tuple = authenticator . authenticate ( self ) except exceptions . APIException : # \u5982\u679c\u6355\u83b7\u5230\u5f02\u5e38\u4e86\uff0c\u90a3\u4e48\u5c31\u8c03\u7528_not_authenticated\u65b9\u6cd5\u3002 self . _not_authenticated () # \u5411\u4e0a\u7ea7\u629b\u51fa\u5f02\u5e38 raise if user_auth_tuple is not None : # \u5982\u679c\u6709\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u8bc1\u660e\u6267\u884c\u8fc7\u76f8\u5173\u8ba4\u8bc1\u8d4b\u503c\u64cd\u4f5c # \u5982\u679c\u8fd4\u56deNone\u7684\u8bdd\uff0c\u90a3\u4e48\u5faa\u73af\u7ee7\u7eed\uff0c\u8868\u793a\u5f53\u524d\u8ba4\u8bc1\u4e0d\u5904\u7406\uff0c\u4ea4\u7ed9\u4e0b\u4e00\u4e2a\u8ba4\u8bc1\u7c7b\u53bb\u5904\u7406\u3002 # \u8d4b\u503c\uff0crequest.user\u548crequest.auth\u5c31\u662f\u8fd9\u4e48\u6765\u7684\u3002\u56e0\u6b64\u6709\u8fd4\u56de\u503c\u5fc5\u987b\u662f\u4e00\u4e2a\u5143\u7ec4 # \u5143\u7ec4\u91cc\u9762\u5fc5\u987b\u6709\u4e24\u4e2a\u5143\u7d20\uff0c\u7b2c\u4e00\u4e2a\u7ed9request.user\uff0c\u7b2c\u4e8c\u4e2a\u7ed9request.auth # \u5bf9\u5e94\u7684request.user\u5c31\u662fuser\u5bf9\u8c61\uff0crequest.auth\u5c31\u662ftoken\u5bf9\u8c61\u3002 self . _authenticator = authenticator self . user , self . auth = user_auth_tuple return # \u4e5f\u6709\u53ef\u80fd\u90fd\u4e0d\u5904\u7406\uff0c\u8fd4\u56de\u7684\u90fd\u662fNone\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9ed8\u8ba4\u8d4b\u503c self . _not_authenticated () \u6211\u4eec\u5728_authenticate\u4e2d\u53d1\u73b0\uff0c\u5faa\u73af\u904d\u5386\u4e86\u6211\u4eec\u5c01\u88c5\u7684self.authenticators\u4e2d\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u5bf9\u8c61\u7684authenticate\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u6211\u4eec\u81ea\u5df1\u5199\u7684\u7c7b\u91cc\u9762\u8981\u6709\u4e00\u4e2aauthenticate\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5e94\u8be5\u8fd4\u56de\u4ec0\u4e48\uff1f\u4e0a\u9762\u7684\u65b9\u6cd5\u652f\u6301\u4e09\u79cd\u8fd4\u56de\u503c\uff1a \u81ea\u5df1\u8fd4\u56de\u5143\u7ec4\uff1a\u5143\u7ec4\u4e2d\u5305\u542b\u8ba4\u8bc1\u7528\u6237\u7684user\u5bf9\u8c61\uff0c\u4ee5\u53ca\u8ba4\u8bc1\u7ed3\u679c\u7684\u8ba4\u8bc1\u5bf9\u8c61\uff08\u6bd4\u5982token\u8868\u4e2d\u7684\u5bf9\u8c61\uff09\u3002 \u629b\u51fa\u5f02\u5e38\uff1a\u8c03\u7528 self._not_authenticated() \uff0c\u629b\u51fa\u7684\u5f02\u5e38\u4f1a\u5728_authenticate\u4e2d\u6355\u83b7\u5230\u3002 \u8fd4\u56deNone\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u7684\u8ba4\u8bc1\u89c4\u5219\u5168\u90e8\u901a\u8fc7\uff0c\u4f46\u662f\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u6b64\u65f6\u8c03\u7528 self._not_authenticated() . \u6765\u770b\u770b self._not_authenticated() \u90fd\u5e72\u4e86\u70b9\u4ec0\u4e48\uff1f def _not_authenticated ( self ): # \u8bbe\u7f6e\u9ed8\u8ba4\u7684_authenticator\u4e3a\u7a7a\uff0c self . _authenticator = None # \u5982\u679c\u8bbe\u7f6e\u4e86UNAUTHENTICATED_USER\u90a3\u4e48\u5c31\u8c03\u7528\uff08AnonymousUser\uff09\uff0c\u5426\u5219\u5c31\u8fd4\u56deNone if api_settings . UNAUTHENTICATED_USER : self . user = api_settings . UNAUTHENTICATED_USER () else : self . user = None # \u5982\u679c\u8bbe\u7f6e\u4e86UNAUTHENTICATED_TOKEN\u90a3\u4e48\u5c31\u8c03\u7528\uff0c\u5426\u5219\u5c31\u8fd4\u56deNone if api_settings . UNAUTHENTICATED_TOKEN : self . auth = api_settings . UNAUTHENTICATED_TOKEN () else : self . auth = None \u5176\u5b9e\u5c31\u662f\u4e3a\u9ed8\u8ba4\u7684\u7528\u6237\u505a\u4e00\u4e2a\u8bbe\u7f6e\uff0c\u7ed9\u901a\u8fc7\u8ba4\u8bc1\u5374\u6ca1\u6709\u8fd4\u56de\u5177\u4f53\u8ba4\u8bc1\u4fe1\u606f\u7684\u4eba\u4e00\u4e2a\u8eab\u4efd\uff08\u533f\u540d\u7528\u6237\uff09\u3002\u5230\u6b64\u4e3a\u6b62\uff0c\u8ba4\u8bc1\u662fok\u4e86\u3002\u4e0d\u8fc7\u521a\u624d\u8d70\u7684authenticate_classes\u662f\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\uff0c\u96be\u9053\u6211\u4eec\u6bcf\u5199\u4e00\u4e2a\u7c7b\u90fd\u8981\u81ea\u5df1\u8fd9\u6837\u5b9a\u4e49\u4e00\u4e0b\u4e48\uff1f\u5176\u5b9e\u4e0d\u662f\u7684\uff0c\u9488\u5bf9\u8fd9\u4e2a\u8ba4\u8bc1\u89c4\u5219\u662f\u6709\u4e00\u4e2a\u5168\u5c40\u8bbe\u7f6e\u7684\u3002 \u4e4b\u524d\u7684authenticate_classes\u662f\u9ed8\u8ba4\u4f18\u5148\u627e\u81ea\u5df1\u5b9a\u4e49\u7684cbv\u4e2d\u7684\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5047\u5982\u8bf4\u6ca1\u6709\u7684\u8bdd\u90a3\u4e48\u5c31\u5e94\u8be5\u53bb\u7236\u7c7b\u53bb\u627e\u4e86\uff0c\u90a3\u4e48\u7236\u7c7b\u4e2d\u662f\u5982\u4f55\u5b9a\u4e49\u7684\uff1f\u6700\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u5185\u7f6e\u7684authentication_classess\uff0c\u5b83\u662f\u4e00\u4e2aapi_settings\u7684\u4e00\u4e2a\u914d\u7f6e\u9879\uff1a class APIView ( View ): # \u4e0b\u9762\u7684\u8fd9\u4e9b\u7b56\u7565\u53ef\u4ee5\u8bbe\u7f6e\u6210\u5168\u5c40\u7684\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u6bcf\u4e00\u4e2a\u5355\u72ec\u7684CBV\u53bb\u8bbe\u7f6e\u3002 renderer_classes = api_settings . DEFAULT_RENDERER_CLASSES parser_classes = api_settings . DEFAULT_PARSER_CLASSES authentication_classes = api_settings . DEFAULT_AUTHENTICATION_CLASSES \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026 # \u8fd9\u4e2a\u914d\u7f6e\u662f\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u7684\u3002 api_settings = APISettings ( None , DEFAULTS , IMPORT_STRINGS ) def reload_api_settings ( * args , ** kwargs ): setting = kwargs [ 'setting' ] # \u4f1a\u53bb\u914d\u7f6e\u6587\u4ef6\u4e2d\u627eREST_FRAMEWORK\u8fd9\u6837\u4e00\u4e2akey\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u914d\u7f6e\u9879\u5199\u5230\u8fd9\u91cc\u3002 if setting == 'REST_FRAMEWORK' : api_settings . reload () \u9ed8\u8ba4\u8fd9\u4e2a\u53d8\u91cf\u662f\u6ca1\u6709\u4e1c\u897f\u7684\uff0c\u9700\u8981\u6211\u4eec\u81ea\u5df1\u53bb\u52a0\uff0c\u52a0\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a # settings.py\u6587\u4ef6\u6700\u540e\u8fdb\u884c\u6dfb\u52a0 REST_FRAMEWORK = { # \u8fd9\u91cc\u5199\u7684\u662f\u8ba4\u8bc1\u7c7b\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u5355\u72ec\u6254\u5230\u4e00\u4e2apy\u6587\u4ef6\u91cc 'DEFAULT_AUTHENTICATION_CLASSES' : [ 'api.utils.auth.FirstAuth' , 'api.utils.xxx.xxx' ], # \u63a8\u8350\u4f7f\u7528None\uff0c\u8fd9\u4e2a\u73a9\u610f\u662f\u53ef\u4ee5\u8c03\u7528\u7684\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u5199\u4e00\u4e2alambda\u8868\u8fbe\u5f0f\u8fd4\u56de\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u4fe1\u606f\u5c31\u53ef\u4ee5\u4e86\u3002 'UNAUTHENTICATED_USER' : None , # request.user = None 'UNAUTHENTICATED_TOKEN' : None , # request.auth = None } \u8ba4\u8bc1\u7c7b\u4e0d\u8981\u548cview\u5199\u5230\u4e00\u8d77\uff0c\u8fd9\u6837\u89c6\u56fe\u51fd\u6570\u5c31\u53ea\u6709\u89c6\u56fe\u76f8\u5173\u7684\u903b\u8f91\uff0c\u800c\u8ba4\u8bc1\u76f8\u5173\u7684\u88ab\u5265\u79bb\u5230auth.py\u4e2d\u4e86\u3002\u56e0\u6b64\u5728api\u9879\u76ee\u4e0b\u65b0\u5efa\u4e00\u4e2autils\u7684\u76ee\u5f55\uff0c\u65b0\u5efa\u4e00\u4e2aauth.py\u5c06\u6211\u4eec\u7684\u8ba4\u8bc1\u903b\u8f91\u90fd\u6254\u5230auth.py\u91cc\u9762\u53bb\uff0c\u8fd9\u91cc\u7684\u503c\u6211\u4eec\u77e5\u9053\u5bf9\u5e94\u7684\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u91cc\u9762\u5199\u7684\u90fd\u662f\u7c7b\u7684\u5168\u8def\u5f84\uff08\u7c7b\u4f3cmiddleware\u90a3\u79cd\u5199\u6cd5\uff09\u3002 \u8fd9\u6837\u6211\u4eec\u5b9e\u9645\u7684\u6bcf\u4e00\u4e2a\u4e1a\u52a1\u7c7b\u5c31\u4e0d\u7528\u5199\u8fd9\u4e9b\u5185\u5bb9\u4e86\uff0c\u76f8\u5f53\u4e8e\u5168\u5c40\u6dfb\u52a0\u4e86\u8ba4\u8bc1\uff0c\u4f46\u662f\u4e5f\u6709\u4f8b\u5916\u7684\u9875\u9762\uff0c\u6bd4\u5982\u8ba4\u8bc1\u9875\u9762\uff0c\u8ba4\u8bc1\u9875\u9762\u662f\u4e0d\u9700\u8981\u6dfb\u52a0\u8ba4\u8bc1\u673a\u5236\u7684\uff0c\u4f60\u5f97\u5148\u901a\u8fc7\u4e86\u8ba4\u8bc1\u9875\u9762\u62ff\u5230\u4e86token\u8bbf\u95ee\u522b\u7684\u9700\u8981\u8ba4\u8bc1\u7684\u9875\u9762\u7684\u65f6\u5019\u624d\u9700\u8981\u8ba4\u8bc1\uff0c\u4f60\u73b0\u5728\u90fd\u6ca1\u767b\u5f55\uff0c\u6211\u8ba4\u8bc1\u9875\u9762\u8fd8\u52a0\u4e86\u8ba4\u8bc1\uff0c\u90a3\u5c31\u6ca1\u529e\u6cd5\u8bbf\u95ee\u4e86\u3002\u56e0\u6b64\u9488\u5bf9\u4e00\u4e9b\u4e1a\u52a1\u7c7b\u9700\u8981\u653e\u5f00\u8fd9\u4e2a\u6743\u9650\uff0c\u653e\u5f00\u7684\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7a7a\u5217\u8868\u5c31\u884c\u4e86\u3002\u56e0\u4e3a\u5728\u7c7b\u7684\u5185\u90e8\u5b9a\u4e49\u4e86\uff0c\u56e0\u6b64\u4f1a\u4f18\u5148\u8d70\u7c7b\u5185\u90e8\u7684\uff0c\u5b9e\u73b0\u4e86\u5355\u72ec\u7684\u7c7b\u7684\u7279\u6b8a\u653e\u5f00\u3002 class AuthView ( APIView ): # \u76f4\u63a5\u8df3\u8fc7\u9a8c\u8bc1 authentication_classes = [] def post ( self , request , * args , ** kwargs ): \u2026\u2026\u2026\u2026\u2026\u2026 def get ( self , request , * args , ** kwargs ): \u2026\u2026\u2026\u2026\u2026\u2026","title":"\u8ba4\u8bc1\u6e90\u7801\u89e3\u6790"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#_3","text":"from rest_framework.authentication import BaseAuthentication \u4e3a\u4e86\u89c4\u8303\u90fd\u8981\u7ee7\u627f\u9ed8\u8ba4\u7684BaseAuthentication\u7c7b\u3002authenticate_header\u662f\u8ba4\u8bc1\u5931\u8d25\uff08\u8fd9\u4e2a\u662f\u6d4f\u89c8\u5668\u7684\u4e00\u79cd\u8ba4\u8bc1\u673a\u5236\uff09\u7684\u65f6\u5019\u7ed9\u4f60\u7684\u6d4f\u89c8\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u5934\u3002BaseAuthentication\u8fd9\u4e2a\u7c7b\u5176\u5b9e\u5565\u90fd\u6ca1\u5199\uff0c\u5c31\u662f\u5b9a\u4e49\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff0c\u4e00\u4e2aauthenticate\u4e00\u4e2aauthenticate_header\u65b9\u6cd5\u3002\u800c\u4e14authenticate\u5fc5\u987b\u8981\u91cd\u5199\uff0c\u5426\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\u3002 \u5176\u4ed6\u7684\u5185\u7f6e\u8ba4\u8bc1\u7c7b\u578b\u8fd8\u5305\u62ecSession\u7684\uff0cToken\u7684\uff0cRemoteUser\u7684\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u8ba4\u8bc1\u90fd\u662f\u57fa\u4e8eDjango\u7684\uff0c\u4ee5Session\u4e3a\u4f8b\uff0c\u5b83\u4f1a\u53bb\u83b7\u53d6request.user\u8fd9\u4e2a\u9009\u9879\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u81ea\u5df1\u53bb\u5199session\u7684\u65f6\u5019\u662f\u6ca1\u6709\u8fd9\u4e2a\u5185\u5bb9\u7684\u3002request.user\u662f\u57fa\u4e8eDjango\u7684\u3002\u518d\u6bd4\u5982RemoteUser\u662f\u57fa\u4e8eDjango\u7684auth\u53bb\u8fdb\u884c\u8ba4\u8bc1\u7684\u3002\u56e0\u6b64\u5185\u7f6e\u7684\u8fd9\u51e0\u79cd\u65b9\u6cd5\u5176\u5b9e\u90fd\u662f\u6709\u4e00\u5b9a\u5c40\u9650\u6027\u7684\uff0c\u56e0\u6b64\u8ba4\u8bc1\u7c7b\uff0c\u4e00\u822c\u662f\u6211\u4eec\u81ea\u5df1\u53bb\u5199\uff0c\u4e0d\u4f1a\u53bb\u7528\u5230DRF\u539f\u751f\u7684\u3002 \u8bf4\u4e00\u4e0bBasicAuthentication\uff0c\u8fd9\u4e2a\u662f\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u8d26\u53f7\u5bc6\u7801\u8ba4\u8bc1\uff0c\u5728\u8bbf\u95ee\u9875\u9762\u7684\u65f6\u5019\u4f1a\u4ee5\u6d4f\u89c8\u5668\u7684\u5f62\u5f0f\u5f39\u51fa\u6765\u4e00\u4e2a\u8d26\u53f7\u5bc6\u7801\u7684\u8ba4\u8bc1\u8f93\u5165\u6846\uff0c\u6d4f\u89c8\u5668\u4f1a\u628a\u8f93\u5165\u7684\u8d26\u53f7\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u6254\u5230\u8bf7\u6c42\u5934\uff0c\u52a0\u5bc6\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a HTTP_AUTHORIZATION : \"basic (\u7528\u6237\u540d+\u5bc6\u7801)base64\u8f6c\u7801\" \u5728BasicAuthentication\u4e2d\u4f1a\u53bb\u83b7\u53d6\u8fd9\u4e00\u90e8\u5206\uff1a def get_authorization_header ( request ): \"\"\" Return request's 'Authorization:' header, as a bytestring. Hide some test client ickyness where the header can be unicode. \"\"\" # \u4ecerequest.META\u4e2d\u628a\u8fd9\u4e2aHTTP_AUTHORIZATION\u53d6\u51fa\u6765\u3002 auth = request . META . get ( 'HTTP_AUTHORIZATION' , b '' ) if isinstance ( auth , text_type ): # Work around django test client oddness auth = auth . encode ( HTTP_HEADER_ENCODING ) return auth \u62ff\u5230base64\u8f6c\u7801\u540e\u7684\u5185\u5bb9\u8fdb\u884c\u89e3\u7801\u7684\u64cd\u4f5c\u3002 class BasicAuthentication ( BaseAuthentication ): \"\"\" HTTP Basic authentication against username/password. \"\"\" www_authenticate_realm = 'api' def authenticate ( self , request ): \"\"\" Returns a `User` if a correct username and password have been supplied using HTTP Basic authentication. Otherwise returns `None`. \"\"\" auth = get_authorization_header ( request ) . split () # \u5982\u679c\u8fd4\u56de\u4e3aNone\u6216\u8005\u4e0d\u662fbasic\u8ba4\u8bc1\uff0c\u90a3\u4e48return None if not auth or auth [ 0 ] . lower () != b 'basic' : return None if len ( auth ) == 1 : msg = _ ( 'Invalid basic header. No credentials provided.' ) raise exceptions . AuthenticationFailed ( msg ) elif len ( auth ) > 2 : msg = _ ( 'Invalid basic header. Credentials string should not contain spaces.' ) raise exceptions . AuthenticationFailed ( msg ) try : # \u5f00\u59cbbase64\u89e3\u7801\uff0c\u6ce8\u610fsplit\u548cpartition\u7c7b\u4f3c\uff0csplit\u4e0d\u4f1a\u53d6\u5206\u9694\u7b26\uff0c\u4f46\u662fpartition\u4f1a\u53d6 auth_parts = base64 . b64decode ( auth [ 1 ]) . decode ( HTTP_HEADER_ENCODING ) . partition ( ':' ) except ( TypeError , UnicodeDecodeError , binascii . Error ): msg = _ ( 'Invalid basic header. Credentials not correctly base64 encoded.' ) raise exceptions . AuthenticationFailed ( msg ) userid , password = auth_parts [ 0 ], auth_parts [ 2 ] return self . authenticate_credentials ( userid , password , request )","title":"\u5185\u7f6e\u8ba4\u8bc1\u7c7b"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#_4","text":"","title":"\u5c0f\u7ed3"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#authenticate","text":"None\uff1a\u6211\u4e0d\u7ba1\u4e86\uff0c\u4e0b\u4e00\u4e2a\u8ba4\u8bc1\u6765\u6267\u884c \u629b\u51fa\u5f02\u5e38\uff0c raise exception.AuthenticationFailed('Auth Failed') \u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c(user obj\uff0cauth obj)\uff0c\u56e0\u6b64\u5143\u7d20\u4e00\u8d4b\u503c\u7ed9request.user\uff0c\u5143\u7d20\u4e8c\u8d4b\u503c\u7ed9request.auth","title":"authenticate\u8fd4\u56de\u503c"},{"location":"django/DRF/03-DRF\u7684\u8ba4\u8bc1/#_5","text":"\u5c40\u90e8\u4f7f\u7528\uff1a\u89c6\u56fe\u7c7b\u4e2d\u5199\u4e00\u4e2a\u9759\u6001\u5b57\u6bb5\uff0cauthentication_classes\uff0c\u5217\u8868\u91cc\u9762\u662f\u7c7b\u7684\u540d\u79f0\uff0c\u8fd9\u91cc\u548c\u5168\u5c40\u4e0d\u4e00\u6837\u3002 \u5168\u5c40\u4f7f\u7528\uff0c\u5728settings\u4e2d\u914d\u7f6e\uff1a REST_FRAMEWORK = { # \u8fd9\u91cc\u5199\u7684\u662f\u8ba4\u8bc1\u7c7b\u7684\u8def\u5f84\uff0c\u53ef\u4ee5\u5355\u72ec\u6254\u5230\u4e00\u4e2apy\u6587\u4ef6\u91cc 'DEFAULT_AUTHENTION_CLASSES' : [ 'api.utils.auth.Authtication' , ], 'UNAUTHENTICATED_USER' : None , 'UNAUTHENTICATED_TOKEN' : None , }","title":"\u4f7f\u7528\u8303\u56f4"},{"location":"django/DRF/04-DRF\u6743\u9650/","text":"DRF\u6743\u9650 \u00b6 DRF\u7684\u6743\u9650\u662f\u5728\u8ba4\u8bc1\u7684\u57fa\u7840\u4e0a\u505a\u8fdb\u4e00\u6b65\u7684\u8ba4\u8bc1\uff0c\u6bd4\u5982\u7528\u6237\u6839\u636e\u4e0d\u540c\u7684\u7528\u6237\u7c7b\u578b\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u6743\u9650\uff0c\u6bd4\u5982\u666e\u901a\u7528\u6237\uff0c\u7ba1\u7406\u5458\uff0c\u8d85\u7ea7\u7ba1\u7406\u5458\u7b49\u7b49\u3002 \u6743\u9650\u7684\u57fa\u672c\u4f7f\u7528 \u00b6 DRF\u7684\u6743\u9650\u7684\u8bbe\u7f6e\u6d41\u7a0b\u5176\u5b9e\u548c\u8ba4\u8bc1\u662f\u5927\u540c\u5c0f\u5f02\u7684\uff0c\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u6743\u9650\u7684\u4f7f\u7528\u8303\u56f4\uff0c\u914d\u7f6e\u5728settings\u914d\u7f6e\u6587\u4ef6\u7684\u5c31\u662f\u5168\u5c40\u6027\u8d28\u7684\uff0c\u5c40\u90e8\u89c6\u56fe\u7684\u76f4\u63a5\u5728\u5bf9\u5e94\u7684\u89c6\u56fe\u7c7b\u8bbe\u7f6e permission_classes \u5c5e\u6027\u3002 \u6e90\u7801\u6d41\u7a0b \u00b6 \u5728\u6e90\u7801\u6d41\u7a0b\u90e8\u5206\u5176\u5b9e\u548c\u8ba4\u8bc1\u90e8\u5206\u662f\u5927\u540c\u5c0f\u5f02\u7684\uff0c\u5165\u53e3\u4f9d\u65e7\u662fdispatch\u3002 \u627e\u5230dispatch\u4e2d\u5c01\u88c5\u7684initial\u65b9\u6cd5 def initial ( self , request , * args , ** kwargs ): \"\"\"\u6b64\u5904\u7701\u7565\u5f88\u591a\u4ee3\u7801~~~~~\"\"\" self . perform_authentication ( request ) # \u627e\u5230\u8fd9\u4e00\u6b65\u9aa4 self . check_permissions ( request ) self . check_throttles ( request ) \u770b\u770bcheck_permissions\u505a\u4e86\u4ec0\u4e48 def check_permissions ( self , request ): \"\"\" Check if the request should be permitted. Raises an appropriate exception if the request is not permitted. \"\"\" for permission in self . get_permissions (): if not permission . has_permission ( request , self ): self . permission_denied ( request , message = getattr ( permission , 'message' , None ) ) \u6211\u4eec\u53d1\u73b0\u5b83\u53c8\u5728self\uff08\u4e5f\u5c31\u662f\u6211\u4eecCBV\u7684\u5bf9\u8c61\u91cc\uff09\u627e\u8fd9\u4e2aget_permissions\u4e86\uff0c\u5982\u679c\u6211\u4eec\u81ea\u5df1\u6ca1\u6709\u5b9a\u4e49\u7684\u8bdd\u90a3\u4e48\u5c31\u4f1a\u53bb\u7236\u7c7b\u91cc\u9762\u627e\u3002\u627e\u5230\u7236\u7c7b\u7684APIView\uff0c\u5bf9\u5e94\u7684\u6709\u8fd9\u4e48\u4e00\u6761\uff1a class APIView ( View ): \u2026\u2026\u2026\u2026\u2026\u2026 permission_classes = api_settings . DEFAULT_PERMISSION_CLASSES \u2026\u2026\u2026\u2026\u2026\u2026 \u8fd9\u6837\u5c31\u548c\u4e4b\u524d\u7684\u8ba4\u8bc1\u90e8\u5206\u4e00\u81f4\u4e86\uff0c\u5982\u679c\u8981\u81ea\u5df1\u5b9a\u4e49\u7684\u8bdd\u8bb0\u5f97KEY\u8981\u5199\u6210\u5bf9\u5e94\u7684\u4e0a\u9762\u7684\u540d\u5b57\uff0c\u522b\u5199\u9519\u4e86\uff0c\u5426\u5219\u662f\u4e0d\u4f1a\u751f\u6548\u7684\u3002 \u7ee7\u7eed\u6765\u770bcheck_permissions\uff1a # get_permissions()\u505a\u4e86\u4e00\u4ef6\u4e8b\u5c31\u662f\u904d\u5386self.permission_classes\u7136\u540e\u901a\u8fc7\u5217\u8868\u751f\u6210\u5f0f\u8fd4\u56de\u6240\u6709\u6743\u9650\u7c7b\u7684\u5bf9\u8c61\u5217\u8868\u3002 def get_permissions ( self ): \"\"\" Instantiates and returns the list of permissions that this view requires. \"\"\" return [ permission () for permission in self . permission_classes ] # permission_denied\u4e2d\u629b\u51fa\u4e86\u5f02\u5e38 def permission_denied ( self , request , message = None ): \"\"\" If request is not permitted, determine what kind of exception to raise. \"\"\" if request . authenticators and not request . successful_authenticator : raise exceptions . NotAuthenticated () raise exceptions . PermissionDenied ( detail = message ) for permission in self . get_permissions (): # \u8c03\u7528\u6743\u9650\u5bf9\u8c61\u7684has_permission\u65b9\u6cd5\uff0c\u5982\u679c\u8fd4\u56de\u7684\u662fTrue\uff0c\u5373\u6743\u9650\u901a\u8fc7\u5219\u7ee7\u7eed\u5faa\u73af # \u5982\u679c\u8fd4\u56deFalse\uff0c\u5219\u6743\u9650\u4e0d\u901a\u8fc7\uff0c\u8fdb\u5165if\u6761\u4ef6\u4e2d\u3002 if not permission . has_permission ( request , self ): # \u8c03\u7528self\u7684permission_denied\uff0c self . permission_denied ( # messages\u5728permission\u4e2d\u53d6\u4e86\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8fd9\u4e2amessage request , message = getattr ( permission , 'message' , None ) ) \u5185\u7f6e\u6743\u9650 \u00b6 @six.add_metaclass ( BasePermissionMetaclass ) class BasePermission ( object ): \"\"\" A base class from which all permission classes should inherit. \"\"\" def has_permission ( self , request , view ): \"\"\" Return `True` if permission is granted, `False` otherwise. \"\"\" return True def has_object_permission ( self , request , view , obj ): \"\"\" Return `True` if permission is granted, `False` otherwise. \"\"\" return True \u4e3a\u4e86\u89c4\u8303\uff0c\u6211\u4eec\u5199\u7684\u6743\u9650\u7c7b\u90fd\u8981\u7ee7\u627fBasePermission\u7c7b\uff0c\u5176\u4ed6\u7684\u8fd8\u6709\u4e00\u4e9b\u9ed8\u8ba4\u7684\u6743\u9650\u7c7b\uff0c\u8fd9\u91cc\u4ec5\u4f5c\u53c2\u8003\uff0c\u4e00\u822c\u751f\u4ea7\u73af\u5883\u7684\u65f6\u5019\u662f\u4e0d\u4f1a\u7528\u5230\u8fd9\u4e9b\u5185\u7f6e\u7c7b\u7684\uff0c\u800c\u662f\u6839\u636e\u4e1a\u52a1\u81ea\u5df1\u5f00\u53d1\u6743\u9650\u3002 class AllowAny ( BasePermission ): \"\"\" Allow any access. This isn't strictly required, since you could use an empty permission_classes list, but it's useful because it makes the intention more explicit. \"\"\" def has_permission ( self , request , view ): return True class IsAuthenticated ( BasePermission ): \"\"\" Allows access only to authenticated users. \"\"\" def has_permission ( self , request , view ): return bool ( request . user and request . user . is_authenticated ) class IsAdminUser ( BasePermission ): \"\"\" Allows access only to admin users. \"\"\" def has_permission ( self , request , view ): return bool ( request . user and request . user . is_staff ) class IsAuthenticatedOrReadOnly ( BasePermission ): \"\"\" The request is authenticated as a user, or is a read-only request. \"\"\" def has_permission ( self , request , view ): return bool ( request . method in SAFE_METHODS or request . user and request . user . is_authenticated ) class DjangoModelPermissions ( BasePermission ): \"\"\" The request is authenticated using `django.contrib.auth` permissions. See: https://docs.djangoproject.com/en/dev/topics/auth/#permissions It ensures that the user is authenticated, and has the appropriate `add`/`change`/`delete` permissions on the model. This permission can only be applied against view classes that provide a `.queryset` attribute. \"\"\" # Map methods into required permission codes. # Override this if you need to also provide 'view' permissions, # or if you want to provide custom permission codes. perms_map = { 'GET' : [], 'OPTIONS' : [], 'HEAD' : [], 'POST' : [ ' %(app_label)s .add_ %(model_name)s ' ], 'PUT' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'PATCH' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'DELETE' : [ ' %(app_label)s .delete_ %(model_name)s ' ], } authenticated_users_only = True def get_required_permissions ( self , method , model_cls ): \"\"\" Given a model and an HTTP method, return the list of permission codes that the user is required to have. \"\"\" kwargs = { 'app_label' : model_cls . _meta . app_label , 'model_name' : model_cls . _meta . model_name } if method not in self . perms_map : raise exceptions . MethodNotAllowed ( method ) return [ perm % kwargs for perm in self . perms_map [ method ]] def _queryset ( self , view ): assert hasattr ( view , 'get_queryset' ) \\ or getattr ( view , 'queryset' , None ) is not None , ( 'Cannot apply {} on a view that does not set ' '`.queryset` or have a `.get_queryset()` method.' ) . format ( self . __class__ . __name__ ) if hasattr ( view , 'get_queryset' ): queryset = view . get_queryset () assert queryset is not None , ( '{}.get_queryset() returned None' . format ( view . __class__ . __name__ ) ) return queryset return view . queryset def has_permission ( self , request , view ): # Workaround to ensure DjangoModelPermissions are not applied # to the root view when using DefaultRouter. if getattr ( view , '_ignore_model_permissions' , False ): return True if not request . user or ( not request . user . is_authenticated and self . authenticated_users_only ): return False queryset = self . _queryset ( view ) perms = self . get_required_permissions ( request . method , queryset . model ) return request . user . has_perms ( perms ) class DjangoModelPermissionsOrAnonReadOnly ( DjangoModelPermissions ): \"\"\" Similar to DjangoModelPermissions, except that anonymous users are allowed read-only access. \"\"\" authenticated_users_only = False # \u9488\u5bf9\u5bf9\u8c61\u7684\u8ba4\u8bc1 class DjangoObjectPermissions ( DjangoModelPermissions ): \"\"\" The request is authenticated using Django's object-level permissions. It requires an object-permissions-enabled backend, such as Django Guardian. It ensures that the user is authenticated, and has the appropriate `add`/`change`/`delete` permissions on the object using .has_perms. This permission can only be applied against view classes that provide a `.queryset` attribute. \"\"\" perms_map = { 'GET' : [], 'OPTIONS' : [], 'HEAD' : [], 'POST' : [ ' %(app_label)s .add_ %(model_name)s ' ], 'PUT' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'PATCH' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'DELETE' : [ ' %(app_label)s .delete_ %(model_name)s ' ], } def get_required_object_permissions ( self , method , model_cls ): kwargs = { 'app_label' : model_cls . _meta . app_label , 'model_name' : model_cls . _meta . model_name } if method not in self . perms_map : raise exceptions . MethodNotAllowed ( method ) return [ perm % kwargs for perm in self . perms_map [ method ]] def has_object_permission ( self , request , view , obj ): # authentication checks have already executed via has_permission queryset = self . _queryset ( view ) model_cls = queryset . model user = request . user perms = self . get_required_object_permissions ( request . method , model_cls ) if not user . has_perms ( perms , obj ): # If the user does not have permissions we need to determine if # they have read permissions to see 403, or not, and simply see # a 404 response. if request . method in SAFE_METHODS : # Read permissions already checked and failed, no need # to make another lookup. raise Http404 read_perms = self . get_required_object_permissions ( 'GET' , model_cls ) if not user . has_perms ( read_perms , obj ): raise Http404 # Has read permissions. return False return True","title":"DRF\u6743\u9650"},{"location":"django/DRF/04-DRF\u6743\u9650/#drf","text":"DRF\u7684\u6743\u9650\u662f\u5728\u8ba4\u8bc1\u7684\u57fa\u7840\u4e0a\u505a\u8fdb\u4e00\u6b65\u7684\u8ba4\u8bc1\uff0c\u6bd4\u5982\u7528\u6237\u6839\u636e\u4e0d\u540c\u7684\u7528\u6237\u7c7b\u578b\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u6743\u9650\uff0c\u6bd4\u5982\u666e\u901a\u7528\u6237\uff0c\u7ba1\u7406\u5458\uff0c\u8d85\u7ea7\u7ba1\u7406\u5458\u7b49\u7b49\u3002","title":"DRF\u6743\u9650"},{"location":"django/DRF/04-DRF\u6743\u9650/#_1","text":"DRF\u7684\u6743\u9650\u7684\u8bbe\u7f6e\u6d41\u7a0b\u5176\u5b9e\u548c\u8ba4\u8bc1\u662f\u5927\u540c\u5c0f\u5f02\u7684\uff0c\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u6743\u9650\u7684\u4f7f\u7528\u8303\u56f4\uff0c\u914d\u7f6e\u5728settings\u914d\u7f6e\u6587\u4ef6\u7684\u5c31\u662f\u5168\u5c40\u6027\u8d28\u7684\uff0c\u5c40\u90e8\u89c6\u56fe\u7684\u76f4\u63a5\u5728\u5bf9\u5e94\u7684\u89c6\u56fe\u7c7b\u8bbe\u7f6e permission_classes \u5c5e\u6027\u3002","title":"\u6743\u9650\u7684\u57fa\u672c\u4f7f\u7528"},{"location":"django/DRF/04-DRF\u6743\u9650/#_2","text":"\u5728\u6e90\u7801\u6d41\u7a0b\u90e8\u5206\u5176\u5b9e\u548c\u8ba4\u8bc1\u90e8\u5206\u662f\u5927\u540c\u5c0f\u5f02\u7684\uff0c\u5165\u53e3\u4f9d\u65e7\u662fdispatch\u3002 \u627e\u5230dispatch\u4e2d\u5c01\u88c5\u7684initial\u65b9\u6cd5 def initial ( self , request , * args , ** kwargs ): \"\"\"\u6b64\u5904\u7701\u7565\u5f88\u591a\u4ee3\u7801~~~~~\"\"\" self . perform_authentication ( request ) # \u627e\u5230\u8fd9\u4e00\u6b65\u9aa4 self . check_permissions ( request ) self . check_throttles ( request ) \u770b\u770bcheck_permissions\u505a\u4e86\u4ec0\u4e48 def check_permissions ( self , request ): \"\"\" Check if the request should be permitted. Raises an appropriate exception if the request is not permitted. \"\"\" for permission in self . get_permissions (): if not permission . has_permission ( request , self ): self . permission_denied ( request , message = getattr ( permission , 'message' , None ) ) \u6211\u4eec\u53d1\u73b0\u5b83\u53c8\u5728self\uff08\u4e5f\u5c31\u662f\u6211\u4eecCBV\u7684\u5bf9\u8c61\u91cc\uff09\u627e\u8fd9\u4e2aget_permissions\u4e86\uff0c\u5982\u679c\u6211\u4eec\u81ea\u5df1\u6ca1\u6709\u5b9a\u4e49\u7684\u8bdd\u90a3\u4e48\u5c31\u4f1a\u53bb\u7236\u7c7b\u91cc\u9762\u627e\u3002\u627e\u5230\u7236\u7c7b\u7684APIView\uff0c\u5bf9\u5e94\u7684\u6709\u8fd9\u4e48\u4e00\u6761\uff1a class APIView ( View ): \u2026\u2026\u2026\u2026\u2026\u2026 permission_classes = api_settings . DEFAULT_PERMISSION_CLASSES \u2026\u2026\u2026\u2026\u2026\u2026 \u8fd9\u6837\u5c31\u548c\u4e4b\u524d\u7684\u8ba4\u8bc1\u90e8\u5206\u4e00\u81f4\u4e86\uff0c\u5982\u679c\u8981\u81ea\u5df1\u5b9a\u4e49\u7684\u8bdd\u8bb0\u5f97KEY\u8981\u5199\u6210\u5bf9\u5e94\u7684\u4e0a\u9762\u7684\u540d\u5b57\uff0c\u522b\u5199\u9519\u4e86\uff0c\u5426\u5219\u662f\u4e0d\u4f1a\u751f\u6548\u7684\u3002 \u7ee7\u7eed\u6765\u770bcheck_permissions\uff1a # get_permissions()\u505a\u4e86\u4e00\u4ef6\u4e8b\u5c31\u662f\u904d\u5386self.permission_classes\u7136\u540e\u901a\u8fc7\u5217\u8868\u751f\u6210\u5f0f\u8fd4\u56de\u6240\u6709\u6743\u9650\u7c7b\u7684\u5bf9\u8c61\u5217\u8868\u3002 def get_permissions ( self ): \"\"\" Instantiates and returns the list of permissions that this view requires. \"\"\" return [ permission () for permission in self . permission_classes ] # permission_denied\u4e2d\u629b\u51fa\u4e86\u5f02\u5e38 def permission_denied ( self , request , message = None ): \"\"\" If request is not permitted, determine what kind of exception to raise. \"\"\" if request . authenticators and not request . successful_authenticator : raise exceptions . NotAuthenticated () raise exceptions . PermissionDenied ( detail = message ) for permission in self . get_permissions (): # \u8c03\u7528\u6743\u9650\u5bf9\u8c61\u7684has_permission\u65b9\u6cd5\uff0c\u5982\u679c\u8fd4\u56de\u7684\u662fTrue\uff0c\u5373\u6743\u9650\u901a\u8fc7\u5219\u7ee7\u7eed\u5faa\u73af # \u5982\u679c\u8fd4\u56deFalse\uff0c\u5219\u6743\u9650\u4e0d\u901a\u8fc7\uff0c\u8fdb\u5165if\u6761\u4ef6\u4e2d\u3002 if not permission . has_permission ( request , self ): # \u8c03\u7528self\u7684permission_denied\uff0c self . permission_denied ( # messages\u5728permission\u4e2d\u53d6\u4e86\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8fd9\u4e2amessage request , message = getattr ( permission , 'message' , None ) )","title":"\u6e90\u7801\u6d41\u7a0b"},{"location":"django/DRF/04-DRF\u6743\u9650/#_3","text":"@six.add_metaclass ( BasePermissionMetaclass ) class BasePermission ( object ): \"\"\" A base class from which all permission classes should inherit. \"\"\" def has_permission ( self , request , view ): \"\"\" Return `True` if permission is granted, `False` otherwise. \"\"\" return True def has_object_permission ( self , request , view , obj ): \"\"\" Return `True` if permission is granted, `False` otherwise. \"\"\" return True \u4e3a\u4e86\u89c4\u8303\uff0c\u6211\u4eec\u5199\u7684\u6743\u9650\u7c7b\u90fd\u8981\u7ee7\u627fBasePermission\u7c7b\uff0c\u5176\u4ed6\u7684\u8fd8\u6709\u4e00\u4e9b\u9ed8\u8ba4\u7684\u6743\u9650\u7c7b\uff0c\u8fd9\u91cc\u4ec5\u4f5c\u53c2\u8003\uff0c\u4e00\u822c\u751f\u4ea7\u73af\u5883\u7684\u65f6\u5019\u662f\u4e0d\u4f1a\u7528\u5230\u8fd9\u4e9b\u5185\u7f6e\u7c7b\u7684\uff0c\u800c\u662f\u6839\u636e\u4e1a\u52a1\u81ea\u5df1\u5f00\u53d1\u6743\u9650\u3002 class AllowAny ( BasePermission ): \"\"\" Allow any access. This isn't strictly required, since you could use an empty permission_classes list, but it's useful because it makes the intention more explicit. \"\"\" def has_permission ( self , request , view ): return True class IsAuthenticated ( BasePermission ): \"\"\" Allows access only to authenticated users. \"\"\" def has_permission ( self , request , view ): return bool ( request . user and request . user . is_authenticated ) class IsAdminUser ( BasePermission ): \"\"\" Allows access only to admin users. \"\"\" def has_permission ( self , request , view ): return bool ( request . user and request . user . is_staff ) class IsAuthenticatedOrReadOnly ( BasePermission ): \"\"\" The request is authenticated as a user, or is a read-only request. \"\"\" def has_permission ( self , request , view ): return bool ( request . method in SAFE_METHODS or request . user and request . user . is_authenticated ) class DjangoModelPermissions ( BasePermission ): \"\"\" The request is authenticated using `django.contrib.auth` permissions. See: https://docs.djangoproject.com/en/dev/topics/auth/#permissions It ensures that the user is authenticated, and has the appropriate `add`/`change`/`delete` permissions on the model. This permission can only be applied against view classes that provide a `.queryset` attribute. \"\"\" # Map methods into required permission codes. # Override this if you need to also provide 'view' permissions, # or if you want to provide custom permission codes. perms_map = { 'GET' : [], 'OPTIONS' : [], 'HEAD' : [], 'POST' : [ ' %(app_label)s .add_ %(model_name)s ' ], 'PUT' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'PATCH' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'DELETE' : [ ' %(app_label)s .delete_ %(model_name)s ' ], } authenticated_users_only = True def get_required_permissions ( self , method , model_cls ): \"\"\" Given a model and an HTTP method, return the list of permission codes that the user is required to have. \"\"\" kwargs = { 'app_label' : model_cls . _meta . app_label , 'model_name' : model_cls . _meta . model_name } if method not in self . perms_map : raise exceptions . MethodNotAllowed ( method ) return [ perm % kwargs for perm in self . perms_map [ method ]] def _queryset ( self , view ): assert hasattr ( view , 'get_queryset' ) \\ or getattr ( view , 'queryset' , None ) is not None , ( 'Cannot apply {} on a view that does not set ' '`.queryset` or have a `.get_queryset()` method.' ) . format ( self . __class__ . __name__ ) if hasattr ( view , 'get_queryset' ): queryset = view . get_queryset () assert queryset is not None , ( '{}.get_queryset() returned None' . format ( view . __class__ . __name__ ) ) return queryset return view . queryset def has_permission ( self , request , view ): # Workaround to ensure DjangoModelPermissions are not applied # to the root view when using DefaultRouter. if getattr ( view , '_ignore_model_permissions' , False ): return True if not request . user or ( not request . user . is_authenticated and self . authenticated_users_only ): return False queryset = self . _queryset ( view ) perms = self . get_required_permissions ( request . method , queryset . model ) return request . user . has_perms ( perms ) class DjangoModelPermissionsOrAnonReadOnly ( DjangoModelPermissions ): \"\"\" Similar to DjangoModelPermissions, except that anonymous users are allowed read-only access. \"\"\" authenticated_users_only = False # \u9488\u5bf9\u5bf9\u8c61\u7684\u8ba4\u8bc1 class DjangoObjectPermissions ( DjangoModelPermissions ): \"\"\" The request is authenticated using Django's object-level permissions. It requires an object-permissions-enabled backend, such as Django Guardian. It ensures that the user is authenticated, and has the appropriate `add`/`change`/`delete` permissions on the object using .has_perms. This permission can only be applied against view classes that provide a `.queryset` attribute. \"\"\" perms_map = { 'GET' : [], 'OPTIONS' : [], 'HEAD' : [], 'POST' : [ ' %(app_label)s .add_ %(model_name)s ' ], 'PUT' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'PATCH' : [ ' %(app_label)s .change_ %(model_name)s ' ], 'DELETE' : [ ' %(app_label)s .delete_ %(model_name)s ' ], } def get_required_object_permissions ( self , method , model_cls ): kwargs = { 'app_label' : model_cls . _meta . app_label , 'model_name' : model_cls . _meta . model_name } if method not in self . perms_map : raise exceptions . MethodNotAllowed ( method ) return [ perm % kwargs for perm in self . perms_map [ method ]] def has_object_permission ( self , request , view , obj ): # authentication checks have already executed via has_permission queryset = self . _queryset ( view ) model_cls = queryset . model user = request . user perms = self . get_required_object_permissions ( request . method , model_cls ) if not user . has_perms ( perms , obj ): # If the user does not have permissions we need to determine if # they have read permissions to see 403, or not, and simply see # a 404 response. if request . method in SAFE_METHODS : # Read permissions already checked and failed, no need # to make another lookup. raise Http404 read_perms = self . get_required_object_permissions ( 'GET' , model_cls ) if not user . has_perms ( read_perms , obj ): raise Http404 # Has read permissions. return False return True","title":"\u5185\u7f6e\u6743\u9650"},{"location":"django/DRF/05-DRF\u8bbf\u95ee\u9650\u5236/","text":"DRF\u8bbf\u95ee\u9650\u5236 \u00b6 \u63a5\u53e3\u9700\u8981\u6709\u8bbf\u95ee\u7684\u9650\u5236\uff0c\u800c\u4e0d\u662f\u968f\u610f\u7684\u65e0\u9650\u5236\u7684\u8bbf\u95ee\uff0cDRF\u63d0\u4f9b\u4e86\u8bbf\u95ee\u9650\u5236\u65b9\u9762\u7684\u5185\u5bb9\u3002 \u63a7\u5236\u8bbf\u95ee\u9891\u7387 \u00b6 \u9996\u5148\u6765\u770b\u9488\u5bf9\u533f\u540d\u7528\u6237\u7684\u8bbf\u95ee\u9650\u5236\u7684\u8bbe\u8ba1\u601d\u8def\uff0c\u9996\u5148\u8bf4\u8bbf\u95ee\u9650\u5236\u4e0d\u662f\u7edd\u5bf9\u7684\uff0c\u9488\u5bf9\u975e\u767b\u5f55\u7684\u533f\u540d\u7528\u6237\u6765\u8bb2\uff0cIP\u53ef\u4ee5\u8bf4\u662f\u7528\u6237\u552f\u4e00\u7684\u6807\u8bc6\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u8bbf\u95ee\u7684\u6e90IP\u6765\u505a\u9650\u5236\uff0c\u4f46\u662f\u7528\u6237\u7684IP\u662f\u53ef\u4ee5\u6362\u7684\uff0c\u6bd4\u5982\u7528\u6237\u66f4\u6362\u4ee3\u7406\uff0c\u90a3\u4e48\u53ef\u80fd\u7684IP\u5c31\u662f\u65e0\u9650\u591a\u4e2a\uff0c\u4f46\u662f\u8bbf\u95ee\u4eba\u662f\u540c\u4e00\u4e2a\uff0c\u56e0\u6b64\u6ca1\u6709\u529e\u6cd5\u505a\u5230\u7edd\u5bf9\u7684\u9650\u5236\u3002 \u540c\u6837\u7684\uff0c\u9488\u5bf9\u767b\u5f55\u7528\u6237\u4e5f\u662f\u4e0d\u80fd\u505a\u5230\u7edd\u5bf9\u7684\u5b8c\u5168\u7684\u9650\u5236\uff0c\u73b0\u5728\u57fa\u672c\u6bcf\u4e2a\u8d26\u53f7\u90fd\u4f1a\u7ed1\u5b9a\u624b\u673a\u53f7\uff0c\u4f46\u662f\u4f60\u62e6\u4e0d\u4f4f\u7528\u6237\u76f4\u63a5\u53bb\u67d0\u5b9d\u4e70\u624b\u673a\u53f7\uff0c\u4ee3\u7406\u6ce8\u518c\uff0c\u6240\u4ee5\u8bf4\u8fd9\u4e9b\u9650\u5236\u5728\u5e94\u7528\u5c42\u9762\u4e0a\u6765\u8bb2\uff0c\u53ea\u80fd\u8bf4\u662f\u4e00\u5b9a\u7a0b\u5ea6\u505a\u4e86\u9650\u5236\u3002 \u533f\u540d\u7528\u6237\u8bbf\u95ee\u9891\u7387\u7684\u8bbe\u8ba1\u601d\u8def\uff1a \u9996\u5148\u6355\u83b7\u7528\u6237\u7684IP\u5730\u5740\uff0c\u8fd9\u4e2aip\u5730\u5740\u53ef\u4ee5\u5728request\u7684META\u4fe1\u606f\u4e2d\u53bb\u53d6\u5230\uff0cremote_addr\u6216\u8005\u662fx_forward_for \u51c6\u5907\u4e00\u4e2a\u5b57\u5178\uff0c\u8fd9\u4e2a\u5b57\u5178\u53ef\u4ee5\u662f\u4e00\u4e2a\u5168\u5c40\u7ea7\u522b\u7684\u53d8\u91cf\uff0c\u6216\u8005\u662f\u6570\u636e\u5e93\u4ea6\u6216\u662fredis\u3002 \u6355\u83b7\u5230\u7684IP\u4f5c\u4e3akey\uff0c\u800cvalue\u4e3a\u4e00\u4e2a\u5217\u8868\u53bb\u5b58\u50a8\u7528\u6237\u7684\u8bbf\u95ee\u8bb0\u5f55 - \u8bbf\u95ee\u8bb0\u5f55\u7684\u5b9e\u4f53\u4e3a\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u7528\u6237\u6bcf\u8bbf\u95ee\u4e00\u6b21\u5411 value\u5217\u8868\u4e2d\u7684\u9996\u90e8\u6dfb\u52a0\u4e00\u4e2a - \u5f53\u7528\u6237\u6765\u8bbf\u95ee\u7684\u65f6\u5019\u9996\u5148\u6765\u770b\u8fd9\u4e2a\u5168\u5c40\u5b57\u5178\u4e2d\u6709\u6ca1\u6709\u5bf9\u5e94\u7684 IP\u7684key \uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\u90a3\u4e48\u5c31\u6dfb\u52a0\uff0c\u5e76\u5411\u5217\u8868\u4e2d\u8ffd\u52a0\u5f53\u524d\u7684\u65f6\u95f4\u6233\u3002 - \u5982\u679c\u6709\u5f53\u524d\u7684 key\u8bc1\u660e\u8fd9\u4e2aip\u7684\u533f\u540d\u7528\u6237\u4e4b\u524d\u6709\u8bbf\u95ee\u8fc7 \uff0c\u90a3\u4e48\u5c31\u4ece\u540e\u5f80\u524d\u9010\u4e2a\u5bf9\u6bd4\u65f6\u95f4\u5dee\u503c\u662f\u5426\u8d85\u8fc7\u8bbe\u7f6e\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5982\u679c\u6709\u8d85\u8fc7\u7684\u5c31 POP\u6389 \uff0c\u8fd9\u5c31\u662f\u4e3a\u5565\u8bb0\u5f55\u65f6\u95f4\u6233\u7684\u65f6\u5019\u8981\u8bb0\u5f55\u5728\u524d\u9762\uff0c\u56e0\u4e3a\u5728\u6e05\u7406\u8fc7\u671f\u8bbf\u95ee\u8bb0\u5f55\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 pop\u65b9\u4fbf\u7684\u53bb\u5220\u9664\u8bb0\u5f55 \u3002 - \u53bb\u9664\u6389\u8fc7\u671f\u8bb0\u5f55\u4ee5\u540e\u53bb\u6392\u67e5\u5f53\u524d\u5217\u8868\u7684\u957f\u5ea6\uff0c\u6bd4\u5982\u4e00\u5206\u949f\u5185\u53ea\u8ba9\u8bbf\u95ee 10 \u6b21\uff0c\u90a3\u4e48\u5047\u5982\u5f53\u524d\u7684\u5217\u8868\u957f\u5ea6\u53ea\u6709\u5c0f\u4e8e 10 \u7684\u65f6\u5019\u624d\u5141\u8bb8\u4f60\u8fdb\u884c\u4e0b\u4e00\u6b21\u8bbf\u95ee\u3002 \u90a3\u4e48\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u903b\u8f91\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u7b80\u5355\u4ee3\u7801 \"\"\"\u6240\u6709\u5bfc\u5165\u7684\u5305\u90fd\u7701\u7565\u4e86\"\"\" def md5 ( user ): ctime = time . time () m = hashlib . md5 ( bytes ( user , encoding = 'utf8' )) m . update ( bytes ( str ( ctime ), encoding = 'utf8' )) return m . hexdigest () # \u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\uff0c\u6570\u636e\u5e93\u53ef\u4ee5\uff0credis\u4e5f\u53ef\u4ee5 VISIT_RECORD = {} class VisitThrottle ( BaseThrottle ): def __init__ ( self ): self . history = None def allow_request ( self , request , view ): \"\"\" \u5982\u679creturn true\u8868\u793a\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\uff0c\u5982\u679c\u8fd4\u56defalse\uff0c\u8868\u793a\u8bbf\u95ee\u9891\u7387\u592a\u9ad8\uff0c\u88ab\u9650\u5236\u8bbf\u95ee :param request: :param view: :return: \"\"\" # 1\u3001\u83b7\u53d6\u7528\u6237IP\uff0c\u6211\u4eec\u77e5\u9053\u8bf4\u8fd9\u91cc\u7684request\u662f\u5df2\u7ecf\u88ab\u5c01\u88c5\u8fc7\u7684 # \u4e4b\u524d\u770b\u5c01\u88c5\u7684request\u7684\u65f6\u5019\uff0c\u91cc\u9762\u6709\u4e00\u4e2agetattr\u65b9\u6cd5\uff0c\u5f53\u6211\u4eec\u8c03\u7528META\u7684\u65f6\u5019\uff0c\u5c01\u88c5\u7684 # request\u4e2d\u5e76\u4e0d\u5b58\u5728\u8fd9\u4e2a\u5c5e\u6027\uff0c\u56e0\u6b64\u4f1a\u53bb\u539f\u751f\u7684request\u53bb\u627e\uff0c\u56e0\u6b64\u4ecd\u7136\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u3002 # \u56e0\u6b64\u8fd9\u91cc\u53ef\u4ee5\u7701\u7565_request\uff0c\u76f4\u63a5\u8c03\u7528META remote_addr = request . META . get ( 'REMOTE_ADDR' ) current_time = time . time () # \u5982\u679c\u6355\u83b7\u5230\u7684IP\u5730\u5740\u6ca1\u6709\u518d\u8fd9\u4e2a\u8bbf\u95ee\u8bb0\u5f55\u7684\u5b57\u5178\u91cc\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u589e\u52a0\u4e00\u4e0b\u3002 if remote_addr not in VISIT_RECORD : VISIT_RECORD [ remote_addr ] = [ current_time , ] return True # \u5982\u679c\u8bf4\u6709\u8bbf\u95ee\u8bb0\u5f55\uff0c\u90a3\u4e48\u5c31\u628a\u8bbf\u95ee\u8bb0\u5f55\u7684\u5217\u8868\u8d4b\u503c\u7ed9self.history self . history = VISIT_RECORD . get ( remote_addr ) # \u6e05\u7406\u8fc7\u671f\u7684\u8bbf\u95ee\u8bb0\u5f55\uff0c\u6bd4\u5982\u6211\u73b0\u5728\u5141\u8bb8\u4f60\u4e00\u5206\u949f\u4f60\u8bbf\u95ee10\u6b21\uff0c\u4e5f\u5c31\u662f60s\u5185\u8bbf\u95ee10\u6b21 # \u90a3\u4e48\u65b0\u7684\u4e00\u6b21\u8bbf\u95ee\u8fdb\u6765\u4ee5\u540e\uff0c\u9996\u5148\u6bd4\u5bf9\u65b0\u7684\u65f6\u95f4\u6233\u548c\u6700\u8001\u7684\u65f6\u95f4\u6233\uff0c\u5982\u679c\u5dee\u503c\u5927\u4e8e60s # \u90a3\u4e48\u8bc1\u660e\u8fd9\u4e2a\u8bbf\u95ee\u8bb0\u5f55\u53ef\u80fd\u5df2\u7ecf\u5f88\u4e45\u8fdc\u4e86\uff0c\u5c31\u53ef\u4ee5\u5220\u6389\u4e86\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4f9d\u6b21\u5bf9\u6bd4\u3002 while self . history and self . history [ - 1 ] < ( current_time - 10 ): self . history . pop () # \u5c06\u8001\u65e7\u7684\u4fe1\u606f\u5220\u6389\u4ee5\u540e\uff0c\u7136\u540e\u770b\u770b\u5217\u8868\u7684\u957f\u5ea6\uff0c\u4e00\u5206\u949f\u518510\u6b21\u7684\u8bdd\u90a3\u4e48\u5217\u8868\u957f\u5ea6\u5c31\u5e94\u8be5\u5c0f\u4e8e\u7b49\u4e8e10 # \u5f5310\u7684\u65f6\u5019\u6b64\u65f6\u5c31\u5df2\u7ecf\u8fbe\u5230\u8bbf\u95ee\u4e0a\u9650\u4e86\uff0c\u56e0\u6b64\u53ea\u6709\u5f53\u5217\u8868\u957f\u5ea6\u5c0f\u4e8e10\u7684\u624d\u5141\u8bb8\u7ee7\u7eed\u8bbf\u95ee\u63d2\u503c\u3002 if len ( self . history ) < 3 : # \u65f6\u95f4\u8d8a\u8fd1\u7684\u585e\u5230\u5217\u8868\u7684\u9996\u90e8 self . history . insert ( 0 , current_time ) return True def wait ( self ): \"\"\"\u63d0\u793a\u4f60\u8ddd\u79bb\u8bbf\u95ee\u8fd8\u9700\u8981\u591a\u4e45\"\"\" return time . time () - self . history [ - 1 ] class AuthView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [ VisitThrottle , ] def post ( self , request , * args , ** kwargs ): ret = { 'errmsg' : None , 'errcode' : 0 } try : user = request . _request . POST . get ( 'username' ) pwd = request . _request . POST . get ( 'password' ) user_obj = models . UserInfo . objects . filter ( username = user , password = pwd ) . first () if not user_obj : ret [ 'errcode' ] = 1000 ret [ 'errmsg' ] = '\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef' return JsonResponse ( ret ) token = md5 ( user ) models . UserToken . objects . update_or_create ( user = user_obj , defaults = { 'token' : token }) ret [ 'token' ] = token ret [ 'errmsg' ] = 'ok' except Exception as e : ret [ 'errcode' ] = 1002 ret [ 'errmsg' ] = '\u8bf7\u6c42\u5f02\u5e38' ret [ 'token' ] = '' return JsonResponse ( ret ) \u7ecf\u8fc7\u8fd9\u6837\u4e00\u4e2a\u6d41\u7a0b\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6211\u4eec\u7684\u8bbf\u95ee\u9891\u6b21\u7684\u9650\u5236\u4e86\uff0c\u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\u8fd9\u90e8\u5206\u6e90\u7801\u6d41\u7a0b\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002 \u6e90\u7801\u6d41\u7a0b \u00b6 \u5176\u5b9e\u4ed4\u7ec6\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e00\u5757\u7684\u903b\u8f91\u548c\u8ba4\u8bc1\u4ee5\u53ca\u6743\u9650\u7684\u903b\u8f91\u662f\u975e\u5e38\u76f8\u50cf\u7684\uff0c\u5165\u53e3\u4f9d\u7136\u662fdispatch\u3002 def initial ( self , request , * args , ** kwargs ): \"\"\"\u6b64\u5904\u7701\u7565\u5f88\u591a\u4ee3\u7801\"\"\" self . perform_authentication ( request ) self . check_permissions ( request ) # \u627e\u5230\u8fd9\u91cc\uff0c\u8282\u6d41\u7684\u76f8\u5173\u8bbe\u7f6e self . check_throttles ( request ) \u770b\u4e00\u4e0bcheck_throttles\u90fd\u5e72\u4e86\u4ec0\u4e48 # get_throttles\u7684\u903b\u8f91\u548c\u524d\u9762\u7684\u8ba4\u8bc1\u548c\u6743\u9650\u7684\u7ba1\u7406\u90fd\u662f\u4e00\u4e2a\u5957\u8def\uff0c\u8fd9\u91cc\u4e0d\u591a\u505a\u8d58\u8ff0\u4e86 # \u8fd9\u91cc\u4f9d\u7136\u662f\u8fd4\u56de\u4e86self\u4e2d\u7684throtle_classes\u7684\u7c7b\u7684\u5bf9\u8c61\u7684\u5217\u8868\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd # \u4f1a\u627e\u5230\u7236\u7c7bAPIView\u4e2d\u7684\u5982\u4e0b\u8fd9\u4e00\u6bb5\u5185\u5bb9\uff0c\u5982\u679c\u8981\u5168\u5c40\u5316\u76f4\u63a5\u5199\u5230settings\u4e2d\u5373\u53ef\u3002 # throttle_classes = api_settings.DEFAULT_THROTTLE_CLASSES def get_throttles ( self ): \"\"\" Instantiates and returns the list of throttles that this view uses. \"\"\" return [ throttle () for throttle in self . throttle_classes ] def check_throttles ( self , request ): \"\"\" Check if request should be throttled. Raises an appropriate exception if the request is throttled. \"\"\" for throttle in self . get_throttles (): # \u8c03\u7528\u5bf9\u8c61\u7684allow_request\u65b9\u6cd5\uff0c\u5982\u679c\u8fd4\u56detrue\u8868\u660e\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\uff0c\u5982\u679c\u4e0d\u53cd\u56de\u6216\u8005\u8fd4\u56deFalse # \u8868\u793a\u4e0d\u80fd\u591f\u7ee7\u7eed\u8bbf\u95ee\u3002\u5f53\u4e0d\u80fd\u591f\u7ee7\u7eed\u8bbf\u95ee\u7684\u65f6\u5019\u4f1a\u8fdb\u5165\u5230\u4e0b\u9762\u7684\u6761\u4ef6\u4e2d\uff0c\u6307\u5b9athrottled\u65b9\u6cd5 # \u8c03\u7528throttled\u65b9\u6cd5\u7684\u540c\u65f6\u8fd8\u8c03\u7528\u4e86throttle\u7684wait\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u81ea\u5b9a\u4e49\u7684wait\u65b9\u6cd5 if not throttle . allow_request ( request , self ): self . throttled ( request , throttle . wait ()) throttled\u65b9\u6cd5\u76f4\u63a5\u629b\u51fa\u4e86\u5f02\u5e38\uff0c\u8fd9\u91cc\u63a5\u6536\u7684wait\u5c31\u662f\u6211\u4eec\u8fd4\u56de\u7684\u79d2\u6570\u3002 def throttled ( self , request , wait ): \"\"\" If request is throttled, determine what kind of exception to raise. \"\"\" raise exceptions . Throttled ( wait ) # \u770b\u4e00\u4e0b\u8fd9\u4e2a\u5f02\u5e38\u7c7b\u7684\u8c03\u7528 class Throttled ( APIException ): status_code = status . HTTP_429_TOO_MANY_REQUESTS default_detail = _ ( 'Request was throttled.' ) extra_detail_singular = 'Expected available in {wait} second.' extra_detail_plural = 'Expected available in {wait} seconds.' default_code = 'throttled' def __init__ ( self , wait = None , detail = None , code = None ): if detail is None : detail = force_text ( self . default_detail ) if wait is not None : wait = math . ceil ( wait ) detail = ' ' . join (( detail , force_text ( ungettext ( self . extra_detail_singular . format ( wait = wait ), self . extra_detail_plural . format ( wait = wait ), wait )))) self . wait = wait super ( Throttled , self ) . __init__ ( detail , code ) \u5185\u7f6e\u7684\u8282\u6d41\u7c7b \u00b6 \u5176\u5b9e\u4e0a\u9762\u8fd9\u4e00\u5806\u64cd\u4f5c\u5185\u7f6e\u7684\u8282\u6d41\u7c7b\u5c31\u5df2\u7ecf\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86 \u9996\u5148\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u8282\u6d41\u7c7b\u90fd\u5e94\u8be5\u7ee7\u627fBaseThrottle\u3002 class BaseThrottle ( object ): \"\"\" Rate throttling of requests. \"\"\" def allow_request ( self , request , view ): \"\"\" Return `True` if the request should be allowed, `False` otherwise. \"\"\" raise NotImplementedError ( '.allow_request() must be overridden' ) def get_ident ( self , request ): \"\"\" Identify the machine making the request by parsing HTTP_X_FORWARDED_FOR if present and number of proxies is > 0. If not use all of HTTP_X_FORWARDED_FOR if it is available, if not use REMOTE_ADDR. \u6ce8\u610f\u8fd9\u91cc\u5df2\u7ecf\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86\u83b7\u53d6IP\u7684\u903b\u8f91\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u9700\u8981\u81ea\u5df1\u4eceMETA\u4e2d\u53bb\u53d6\u4e86\uff0c\u76f4\u63a5\u8c03\u7528 self.get_indent\u5c31\u53ef\u4ee5\u62ff\u5230\u533f\u540d\u7528\u6237\u7684\u5730\u5740\u6807\u8bc6\u4e86\u3002 \"\"\" xff = request . META . get ( 'HTTP_X_FORWARDED_FOR' ) remote_addr = request . META . get ( 'REMOTE_ADDR' ) num_proxies = api_settings . NUM_PROXIES if num_proxies is not None : if num_proxies == 0 or xff is None : return remote_addr addrs = xff . split ( ',' ) client_addr = addrs [ - min ( num_proxies , len ( addrs ))] return client_addr . strip () return '' . join ( xff . split ()) if xff else remote_addr def wait ( self ): \"\"\" Optionally, return a recommended number of seconds to wait before the next request. \"\"\" return None \u6211\u4eec\u4e0a\u9762\u5199\u5230\u4e86\u4e00\u5b9a\u65f6\u95f4\u5185\u9650\u5236\u7528\u6237\u7684\u8bbf\u95ee\u9891\u6b21\uff0c\u5176\u5b9eDRF\u5185\u90e8\u5df2\u7ecf\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u9650\u6d41\u7c7b\u5e2e\u6211\u4eec\u5199\u597d\u4e86\uff0c\u5177\u4f53\u5185\u5bb9\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a class SimpleRateThrottle ( BaseThrottle ): \"\"\" A simple cache implementation, that only requires `.get_cache_key()` to be overridden. The rate (requests / seconds) is set by a `rate` attribute on the View class. The attribute is a string of the form 'number_of_requests/period'. Period should be one of: ('s', 'sec', 'm', 'min', 'h', 'hour', 'd', 'day') Previous request information used for throttling is stored in the cache. \"\"\" cache = default_cache timer = time . time cache_format = 'throttle_ %(scope)s _ %(ident)s ' scope = None # 4\u3001\u4ece\u8fd9\u91cc\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2akey\u662f\u4ecesettings\u4e2d\u53d6\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728REST_FRAMEWORK\u4e2d\u914d\u7f6e\u8fd9\u4e2akey # \u5bf9\u5e94\u7684value\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5bf9\u5e94\u7684\u6709\u4e00\u4e2ascope\u7684key\uff0c\u6bd4\u5982\u6211\u5728\u6211\u81ea\u5df1\u5b9a\u4e49\u7684\u7c7b\u91cc\u914d\u7f6escope\u4e3atest_throttle # \u90a3\u4e48\u5b83\u5c31\u4f1a\u53bb\u914d\u7f6e\u6587\u4ef6\u91cc\u627ekey\u4e3ascope\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u5b9a\u4e49\u7684\u8fd9\u4e2ascope\u5176\u5b9e\u5c31\u662f\u914d\u7f6e\u6587\u4ef6\u91cc\u5bf9\u5e94\u7684key # \u90a3\u4e48\u8fd9\u4e2akey\u5bf9\u5e94\u7684value\u5e94\u8be5\u586b\u5199\u4ec0\u4e48\u5462\uff1f\u5e94\u8be5\u586b\u5199\u7c7b\u4f3c\u4e8e3/m\u8fd9\u6837\u7c7b\u4f3c\u7684\u5185\u5bb9\uff0c\u5176\u4e2dm\u4ee3\u8868\u5206\u949f\uff0cs\u79d2\uff0ch\u5c0f\u65f6 # d\u4ee3\u8868day\uff0c3/m\u5c31\u8868\u793a\u6bcf\u5206\u949f3\u6b21\u7684\u610f\u601d\uff0c\u5176\u4ed6\u7684\u7c7b\u63a8\u3002\u90a3\u4e48\u6700\u540e\u6211\u4eec\u62ff\u5230\u7684\u8fd9\u4e2aTHROTTLE_RATES\u5176\u5b9e\u5c31\u662f3/m THROTTLE_RATES = api_settings . DEFAULT_THROTTLE_RATES # 1\u3001\u5b9e\u73b0\u6784\u9020\u65b9\u6cd5\uff0c\u5728\u5bf9\u8c61\u5185\u90e8\u627erate\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5982\u679crate\u5c5e\u6027\u4e0d\u5b58\u5728\u8fd9\u56de\u8c03\u7528self.get_rate def __init__ ( self ): if not getattr ( self , 'rate' , None ): # 5\u3001\u56de\u5230\u8fd9\u91cc\uff0cselt.rate\u5176\u5b9e\u5c31\u662f3/m\u4e86\u3002 self . rate = self . get_rate () # 6\u3001\u8c03\u7528parse_rate\u5bf9\u6211\u4eec\u76843/m\u8fdb\u884c\u6570\u636e\u5904\u7406\uff0c\u63a5\u6536\u5230\u8bf7\u6c42\u6570\u548c\u79d2\u6570\u3002 self . num_requests , self . duration = self . parse_rate ( self . rate ) def get_cache_key ( self , request , view ): \"\"\" Should return a unique cache-key which can be used for throttling. Must be overridden. May return `None` if the request should not be throttled. \"\"\" raise NotImplementedError ( '.get_cache_key() must be overridden' ) # 2\u3001\u5f53rate\u4e0d\u5b58\u5728\u7684\u65f6\u5019\u8c03\u7528\u5f53\u524d\u65b9\u6cd5\uff0c\u65b9\u6cd5\u5185\u90e8\u53bb\u8c03\u7528scope\u5c5e\u6027\uff0c\u5f53\u6ca1\u6709\u8bbe\u7f6escope\u7684\u65f6\u5019\u4f1a\u629b\u51fa\u5f02\u5e38 def get_rate ( self ): \"\"\" Determine the string representation of the allowed request rate. \"\"\" if not getattr ( self , 'scope' , None ): msg = ( \"You must set either `.scope` or `.rate` for ' %s ' throttle\" % self . __class__ . __name__ ) raise ImproperlyConfigured ( msg ) try : # 3\u3001\u5982\u679c\u8bbe\u7f6e\u4e86scope\u90a3\u4e48\u5c31\u4f1a\u53bbself.THROTTLE_RATES\u4e2d\u627e\u5bf9\u5e94\u7684key\uff0c\u8fd9\u4e2a\u503c\u662f\u4e00\u4e2a\u5b57\u5178 return self . THROTTLE_RATES [ self . scope ] except KeyError : msg = \"No default throttle rate set for ' %s ' scope\" % self . scope raise ImproperlyConfigured ( msg ) # 7\u3001\u5bf9self.rate\u8fdb\u884c\u6570\u636e\u5904\u7406 def parse_rate ( self , rate ): \"\"\" Given the request rate string, return a two tuple of: <allowed number of requests>, <period of time in seconds> \"\"\" if rate is None : return ( None , None ) # 8\u3001\u6211\u4eec\u7684\u6a21\u5f0f\u90fd\u662fx/x\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5\u7528/\u7ed9\u9694\u5f00\u4e86\uff0c\u83b7\u53d6\u5230\u7684num\u5c31\u662f\u6b21\u6570\uff0cperiod\u5c31\u662f\u95f4\u9694\u3002 num , period = rate . split ( '/' ) # 9\u3001int\u8f6c\u6362\u6210\u6574\u5f62 num_requests = int ( num ) # 10\u3001\u5c06\u5bf9\u5e94\u7684\u65e5\u671f\u8f6c\u6362\u6210\u79d2\uff0cperiod\u53ef\u80fd\u4e3as\uff0cm\uff0ch\uff0cd\uff0c\u53d6\u7b2c\u4e00\u4e2a\uff0c\u6240\u4ee5\u4f60\u5199day\uff0chour\uff0cminute\uff0csecond # \u5176\u5b9e\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u56e0\u4e3a\u90fd\u662f\u53d6\u7684\u9996\u5b57\u6bcd\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u76f8\u5f53\u4e8e\u53d6\u5bf9\u5e94\u7684\u5b57\u5178\u7684key\u5f97\u5230\u5bf9\u5e94\u7684\u79d2\u6570 duration = { 's' : 1 , 'm' : 60 , 'h' : 3600 , 'd' : 86400 }[ period [ 0 ]] # 11\u3001\u8fd4\u56de\u8bf7\u6c42\u6570\u548c\u79d2\u6570 return ( num_requests , duration ) # 12\u3001\u8bf7\u6c42\u8fdb\u6765\u4ee5\u540e\u5728\u6e90\u7801\u6d41\u7a0b\u4e2d\u4f1a\u8c03\u7528allow_request\u65b9\u6cd5\u3002 def allow_request ( self , request , view ): \"\"\" Implement the check to see if the request should be throttled. On success calls `throttle_success`. On failure calls `throttle_failure`. \"\"\" if self . rate is None : return True # 13\u3001\u8fd9\u91cc\u76f4\u63a5\u8c03\u7528self.get_cache_key\uff0c\u5982\u679c\u4ed4\u7ec6\u770b\u4e0a\u9762\u7684\u6e90\u7801\u7684\u8bdd\u4f1a\u53d1\u73b0\u8c03\u7528\u539f\u751f\u7684\u4f1a\u76f4\u63a5\u629b\u5f02\u5e38 # \u62a5\u9519\u4fe1\u606f\u544a\u77e5\u6211\u4eec\u5fc5\u987b\u81ea\u5df1\u91cd\u5199\u53bb\u8986\u76d6\u539f\u6765\u7684\u65b9\u6cd5\uff0c\u5176\u5b9e\u539f\u6765\u7684\u65b9\u6cd5\u5c31\u662f\u4e2a\u6846\u5b50\u3002 # \u6211\u4eec\u6700\u4e0a\u9762\u9488\u5bf9\u533f\u540d\u7528\u6237\u662f\u4ee5\u533f\u540d\u7528\u6237\u7684ip\u4f5c\u4e3akey\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u5728\u6211\u4eec\u7684\u9650\u6d41\u7c7b\u91cc\u8c03\u7528 # self.get_ident\u8fd4\u56deip\u8d4b\u503c\u7ed9self.key\u3002 self . key = self . get_cache_key ( request , view ) if self . key is None : return True # 14\u3001\u4ece\u7f13\u5b58\u4e2d\u62ff\u5230\u6240\u6709\u7684\u8bb0\u5f55\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e4b\u524d\u7684VISIT_RECORD\uff0c\u8fd9\u4e2a\u7f13\u5b58\u662fDjango\u5185\u7f6e\u7684\u7f13\u5b58 self . history = self . cache . get ( self . key , []) # 15\u3001\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 self . now = self . timer () # 16\u3001\u8fd9\u4e00\u5757\u7684\u903b\u8f91\u57fa\u672c\u5c31\u548c\u6211\u4eec\u4e4b\u524d\u5199\u7684\u662f\u4e00\u6837\u7684\u4e86\u3002 while self . history and self . history [ - 1 ] <= self . now - self . duration : self . history . pop () if len ( self . history ) >= self . num_requests : # 17\u3001\u5982\u679c\u8bf4\u5217\u8868\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e\u8bf7\u6c42\u6570\u90a3\u4e48\u8bc1\u660e\u5df2\u7ecf\u5230\u4e86\u8bbf\u95ee\u4e0a\u7ebf\u4e86\uff0c\u76f4\u63a5return False return self . throttle_failure () # 18\u3001\u5426\u5219\u8c03\u7528throttle_success\u63d2\u5165\u65f6\u95f4\u6233\u5230\u5217\u8868\u5934\u90e8\uff0c\u5e76\u8fd4\u56deTrue\u8868\u793a\u4e0d\u9650\u6d41\u3002 return self . throttle_success () def throttle_success ( self ): \"\"\" Inserts the current request's timestamp along with the key into the cache. \"\"\" self . history . insert ( 0 , self . now ) self . cache . set ( self . key , self . history , self . duration ) return True def throttle_failure ( self ): \"\"\" Called when a request to the API has failed due to throttling. \"\"\" return False def wait ( self ): \"\"\" Returns the recommended next request time in seconds. \"\"\" if self . history : remaining_duration = self . duration - ( self . now - self . history [ - 1 ]) else : remaining_duration = self . duration available_requests = self . num_requests - len ( self . history ) + 1 if available_requests <= 0 : return None return remaining_duration / float ( available_requests ) \u90a3\u4e48\u6211\u4eec\u81ea\u5df1\u7684\u9650\u6d41\u7c7b\u5176\u5b9e\u76f8\u5bf9\u6765\u8bb2\u5c31\u7b80\u5355\u5f88\u591a\u4e86\uff0c\u53ea\u9700\u8981\u7ee7\u627f\u5982\u4e0a\u9762\u8fd9\u4e2a\u7c7b\u518d\u505a\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\uff1a from rest_framework.throttling import SimpleRateThrottle # \u6700\u540e\u6211\u4eec\u9700\u8981\u505a\u7684\u5185\u5bb9\u5c31\u7b80\u7b80\u5355\u5355\u7684\u8fd9\u4e00\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002 class VisitThrottle ( SimpleRateThrottle ): scope = 'test_throttle' def get_cache_key ( self , request , view ): # \u5982\u679c\u662f\u9488\u5bf9\u767b\u5f55\u7528\u6237\u6211\u4eec\u53ef\u4ee5\u8fd4\u56de\u7528\u6237\u7684\u552f\u4e00\u767b\u5f55\u540d\uff0c\u6216\u8005\u7528\u6237\u7684pk(id) return self . get_ident ( request ) \u5bf9\u5e94\u7684settings\u914d\u7f6e\u5982\u4e0b: REST_FRAMEWORK = { 'DEFAULT_AUTHENTICATION_CLASSES' : [ 'api.utils.auth.Authtication' , ], 'UNAUTHENTICATED_USER' : None , 'UNAUTHENTICATED_TOKEN' : None , 'DEFAULT_PERMISSION_CLASSES' : [ 'api.utils.permission.MyPermission' ], 'DEFAULT_THROTTLE_CLASSES' : [ '' ], 'DEFAULT_THROTTLE_RATES' : { 'test_throttle' : '10/m' } } \u5176\u4ed6\u7684\u63d0\u4f9b\u5185\u7f6e\u9650\u6d41\u7c7b\u5982\u4e0b\u4ee5\u4f9b\u53c2\u8003\uff1a # \u9650\u5236\u533f\u540d\u7528\u6237 class AnonRateThrottle ( SimpleRateThrottle ): \"\"\" Limits the rate of API calls that may be made by a anonymous users. The IP address of the request will be used as the unique cache key. \"\"\" scope = 'anon' def get_cache_key ( self , request , view ): if request . user . is_authenticated : return None # Only throttle unauthenticated requests. return self . cache_format % { 'scope' : self . scope , 'ident' : self . get_ident ( request ) } # \u9650\u5236\u767b\u5f55\u7528\u6237\u7684 class UserRateThrottle ( SimpleRateThrottle ): \"\"\" Limits the rate of API calls that may be made by a given user. The user id will be used as a unique cache key if the user is authenticated. For anonymous requests, the IP address of the request will be used. \"\"\" scope = 'user' def get_cache_key ( self , request , view ): if request . user . is_authenticated : ident = request . user . pk else : ident = self . get_ident ( request ) return self . cache_format % { 'scope' : self . scope , 'ident' : ident } # \u8fd9\u4e2a\u662f\u5e94\u7528\u5728\u5c40\u90e8\u89c6\u56fe\u4e0a\u7684\uff0c\u4f46\u662f\u6211\u4eec\u5e94\u7528\u5230\u5c40\u90e8\u89c6\u56fe\u76f4\u63a5\u5728\u5bf9\u5e94\u7684\u89c6\u56fe\u7c7b\u5199throttle_classes\u5c31\u53ef\u4ee5\u4e86 # \u56e0\u6b64\u8fd9\u4e2a\u57fa\u672c\u7528\u4e0d\u5230\u3002 class ScopedRateThrottle ( SimpleRateThrottle ): \"\"\" Limits the rate of API calls by different amounts for various parts of the API. Any view that has the `throttle_scope` property set will be throttled. The unique cache key will be generated by concatenating the user id of the request, and the scope of the view being accessed. \"\"\" scope_attr = 'throttle_scope' def __init__ ( self ): # Override the usual SimpleRateThrottle, because we can't determine # the rate until called by the view. pass def allow_request ( self , request , view ): # We can only determine the scope once we're called by the view. self . scope = getattr ( view , self . scope_attr , None ) # If a view does not have a `throttle_scope` always allow the request if not self . scope : return True # Determine the allowed request rate as we normally would during # the `__init__` call. self . rate = self . get_rate () self . num_requests , self . duration = self . parse_rate ( self . rate ) # We can now proceed as normal. return super ( ScopedRateThrottle , self ) . allow_request ( request , view ) def get_cache_key ( self , request , view ): \"\"\" If `view.throttle_scope` is not set, don't apply this throttle. Otherwise generate the unique cache key by concatenating the user id with the '.throttle_scope` property of the view. \"\"\" if request . user . is_authenticated : ident = request . user . pk else : ident = self . get_ident ( request ) return self . cache_format % { 'scope' : self . scope , 'ident' : ident } \u5c0f\u7ed3 \u00b6 \u4f9d\u7136\u9700\u8981\u6ce8\u610f\uff0c\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u7684\u8282\u6d41\u7c7b\u662f\u5168\u5c40\u7684\uff0c\u662f\u7ed9\u6240\u6709\u7684\u4eba\u7528\u7684\uff0c\u5982\u679c\u8bf4\u5355\u72ec\u9700\u8981\u5176\u4ed6\u7684\u65b9\u6848\u7684\u9700\u8981\u5355\u72ec\u5904\u7406\uff0c\u76f4\u63a5\u5728\u5bf9\u5e94\u7684\u89c6\u56feCBV\u4e2d\u5199 throttle_classes = [] \u5355\u72ec\u5904\u7406\u5c31\u53ef\u4ee5\u4e86\u3002","title":"DRF\u8bbf\u95ee\u9650\u5236"},{"location":"django/DRF/05-DRF\u8bbf\u95ee\u9650\u5236/#drf","text":"\u63a5\u53e3\u9700\u8981\u6709\u8bbf\u95ee\u7684\u9650\u5236\uff0c\u800c\u4e0d\u662f\u968f\u610f\u7684\u65e0\u9650\u5236\u7684\u8bbf\u95ee\uff0cDRF\u63d0\u4f9b\u4e86\u8bbf\u95ee\u9650\u5236\u65b9\u9762\u7684\u5185\u5bb9\u3002","title":"DRF\u8bbf\u95ee\u9650\u5236"},{"location":"django/DRF/05-DRF\u8bbf\u95ee\u9650\u5236/#_1","text":"\u9996\u5148\u6765\u770b\u9488\u5bf9\u533f\u540d\u7528\u6237\u7684\u8bbf\u95ee\u9650\u5236\u7684\u8bbe\u8ba1\u601d\u8def\uff0c\u9996\u5148\u8bf4\u8bbf\u95ee\u9650\u5236\u4e0d\u662f\u7edd\u5bf9\u7684\uff0c\u9488\u5bf9\u975e\u767b\u5f55\u7684\u533f\u540d\u7528\u6237\u6765\u8bb2\uff0cIP\u53ef\u4ee5\u8bf4\u662f\u7528\u6237\u552f\u4e00\u7684\u6807\u8bc6\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u8bbf\u95ee\u7684\u6e90IP\u6765\u505a\u9650\u5236\uff0c\u4f46\u662f\u7528\u6237\u7684IP\u662f\u53ef\u4ee5\u6362\u7684\uff0c\u6bd4\u5982\u7528\u6237\u66f4\u6362\u4ee3\u7406\uff0c\u90a3\u4e48\u53ef\u80fd\u7684IP\u5c31\u662f\u65e0\u9650\u591a\u4e2a\uff0c\u4f46\u662f\u8bbf\u95ee\u4eba\u662f\u540c\u4e00\u4e2a\uff0c\u56e0\u6b64\u6ca1\u6709\u529e\u6cd5\u505a\u5230\u7edd\u5bf9\u7684\u9650\u5236\u3002 \u540c\u6837\u7684\uff0c\u9488\u5bf9\u767b\u5f55\u7528\u6237\u4e5f\u662f\u4e0d\u80fd\u505a\u5230\u7edd\u5bf9\u7684\u5b8c\u5168\u7684\u9650\u5236\uff0c\u73b0\u5728\u57fa\u672c\u6bcf\u4e2a\u8d26\u53f7\u90fd\u4f1a\u7ed1\u5b9a\u624b\u673a\u53f7\uff0c\u4f46\u662f\u4f60\u62e6\u4e0d\u4f4f\u7528\u6237\u76f4\u63a5\u53bb\u67d0\u5b9d\u4e70\u624b\u673a\u53f7\uff0c\u4ee3\u7406\u6ce8\u518c\uff0c\u6240\u4ee5\u8bf4\u8fd9\u4e9b\u9650\u5236\u5728\u5e94\u7528\u5c42\u9762\u4e0a\u6765\u8bb2\uff0c\u53ea\u80fd\u8bf4\u662f\u4e00\u5b9a\u7a0b\u5ea6\u505a\u4e86\u9650\u5236\u3002 \u533f\u540d\u7528\u6237\u8bbf\u95ee\u9891\u7387\u7684\u8bbe\u8ba1\u601d\u8def\uff1a \u9996\u5148\u6355\u83b7\u7528\u6237\u7684IP\u5730\u5740\uff0c\u8fd9\u4e2aip\u5730\u5740\u53ef\u4ee5\u5728request\u7684META\u4fe1\u606f\u4e2d\u53bb\u53d6\u5230\uff0cremote_addr\u6216\u8005\u662fx_forward_for \u51c6\u5907\u4e00\u4e2a\u5b57\u5178\uff0c\u8fd9\u4e2a\u5b57\u5178\u53ef\u4ee5\u662f\u4e00\u4e2a\u5168\u5c40\u7ea7\u522b\u7684\u53d8\u91cf\uff0c\u6216\u8005\u662f\u6570\u636e\u5e93\u4ea6\u6216\u662fredis\u3002 \u6355\u83b7\u5230\u7684IP\u4f5c\u4e3akey\uff0c\u800cvalue\u4e3a\u4e00\u4e2a\u5217\u8868\u53bb\u5b58\u50a8\u7528\u6237\u7684\u8bbf\u95ee\u8bb0\u5f55 - \u8bbf\u95ee\u8bb0\u5f55\u7684\u5b9e\u4f53\u4e3a\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u7528\u6237\u6bcf\u8bbf\u95ee\u4e00\u6b21\u5411 value\u5217\u8868\u4e2d\u7684\u9996\u90e8\u6dfb\u52a0\u4e00\u4e2a - \u5f53\u7528\u6237\u6765\u8bbf\u95ee\u7684\u65f6\u5019\u9996\u5148\u6765\u770b\u8fd9\u4e2a\u5168\u5c40\u5b57\u5178\u4e2d\u6709\u6ca1\u6709\u5bf9\u5e94\u7684 IP\u7684key \uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\u90a3\u4e48\u5c31\u6dfb\u52a0\uff0c\u5e76\u5411\u5217\u8868\u4e2d\u8ffd\u52a0\u5f53\u524d\u7684\u65f6\u95f4\u6233\u3002 - \u5982\u679c\u6709\u5f53\u524d\u7684 key\u8bc1\u660e\u8fd9\u4e2aip\u7684\u533f\u540d\u7528\u6237\u4e4b\u524d\u6709\u8bbf\u95ee\u8fc7 \uff0c\u90a3\u4e48\u5c31\u4ece\u540e\u5f80\u524d\u9010\u4e2a\u5bf9\u6bd4\u65f6\u95f4\u5dee\u503c\u662f\u5426\u8d85\u8fc7\u8bbe\u7f6e\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5982\u679c\u6709\u8d85\u8fc7\u7684\u5c31 POP\u6389 \uff0c\u8fd9\u5c31\u662f\u4e3a\u5565\u8bb0\u5f55\u65f6\u95f4\u6233\u7684\u65f6\u5019\u8981\u8bb0\u5f55\u5728\u524d\u9762\uff0c\u56e0\u4e3a\u5728\u6e05\u7406\u8fc7\u671f\u8bbf\u95ee\u8bb0\u5f55\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 pop\u65b9\u4fbf\u7684\u53bb\u5220\u9664\u8bb0\u5f55 \u3002 - \u53bb\u9664\u6389\u8fc7\u671f\u8bb0\u5f55\u4ee5\u540e\u53bb\u6392\u67e5\u5f53\u524d\u5217\u8868\u7684\u957f\u5ea6\uff0c\u6bd4\u5982\u4e00\u5206\u949f\u5185\u53ea\u8ba9\u8bbf\u95ee 10 \u6b21\uff0c\u90a3\u4e48\u5047\u5982\u5f53\u524d\u7684\u5217\u8868\u957f\u5ea6\u53ea\u6709\u5c0f\u4e8e 10 \u7684\u65f6\u5019\u624d\u5141\u8bb8\u4f60\u8fdb\u884c\u4e0b\u4e00\u6b21\u8bbf\u95ee\u3002 \u90a3\u4e48\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u903b\u8f91\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u7b80\u5355\u4ee3\u7801 \"\"\"\u6240\u6709\u5bfc\u5165\u7684\u5305\u90fd\u7701\u7565\u4e86\"\"\" def md5 ( user ): ctime = time . time () m = hashlib . md5 ( bytes ( user , encoding = 'utf8' )) m . update ( bytes ( str ( ctime ), encoding = 'utf8' )) return m . hexdigest () # \u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\uff0c\u6570\u636e\u5e93\u53ef\u4ee5\uff0credis\u4e5f\u53ef\u4ee5 VISIT_RECORD = {} class VisitThrottle ( BaseThrottle ): def __init__ ( self ): self . history = None def allow_request ( self , request , view ): \"\"\" \u5982\u679creturn true\u8868\u793a\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\uff0c\u5982\u679c\u8fd4\u56defalse\uff0c\u8868\u793a\u8bbf\u95ee\u9891\u7387\u592a\u9ad8\uff0c\u88ab\u9650\u5236\u8bbf\u95ee :param request: :param view: :return: \"\"\" # 1\u3001\u83b7\u53d6\u7528\u6237IP\uff0c\u6211\u4eec\u77e5\u9053\u8bf4\u8fd9\u91cc\u7684request\u662f\u5df2\u7ecf\u88ab\u5c01\u88c5\u8fc7\u7684 # \u4e4b\u524d\u770b\u5c01\u88c5\u7684request\u7684\u65f6\u5019\uff0c\u91cc\u9762\u6709\u4e00\u4e2agetattr\u65b9\u6cd5\uff0c\u5f53\u6211\u4eec\u8c03\u7528META\u7684\u65f6\u5019\uff0c\u5c01\u88c5\u7684 # request\u4e2d\u5e76\u4e0d\u5b58\u5728\u8fd9\u4e2a\u5c5e\u6027\uff0c\u56e0\u6b64\u4f1a\u53bb\u539f\u751f\u7684request\u53bb\u627e\uff0c\u56e0\u6b64\u4ecd\u7136\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u3002 # \u56e0\u6b64\u8fd9\u91cc\u53ef\u4ee5\u7701\u7565_request\uff0c\u76f4\u63a5\u8c03\u7528META remote_addr = request . META . get ( 'REMOTE_ADDR' ) current_time = time . time () # \u5982\u679c\u6355\u83b7\u5230\u7684IP\u5730\u5740\u6ca1\u6709\u518d\u8fd9\u4e2a\u8bbf\u95ee\u8bb0\u5f55\u7684\u5b57\u5178\u91cc\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u589e\u52a0\u4e00\u4e0b\u3002 if remote_addr not in VISIT_RECORD : VISIT_RECORD [ remote_addr ] = [ current_time , ] return True # \u5982\u679c\u8bf4\u6709\u8bbf\u95ee\u8bb0\u5f55\uff0c\u90a3\u4e48\u5c31\u628a\u8bbf\u95ee\u8bb0\u5f55\u7684\u5217\u8868\u8d4b\u503c\u7ed9self.history self . history = VISIT_RECORD . get ( remote_addr ) # \u6e05\u7406\u8fc7\u671f\u7684\u8bbf\u95ee\u8bb0\u5f55\uff0c\u6bd4\u5982\u6211\u73b0\u5728\u5141\u8bb8\u4f60\u4e00\u5206\u949f\u4f60\u8bbf\u95ee10\u6b21\uff0c\u4e5f\u5c31\u662f60s\u5185\u8bbf\u95ee10\u6b21 # \u90a3\u4e48\u65b0\u7684\u4e00\u6b21\u8bbf\u95ee\u8fdb\u6765\u4ee5\u540e\uff0c\u9996\u5148\u6bd4\u5bf9\u65b0\u7684\u65f6\u95f4\u6233\u548c\u6700\u8001\u7684\u65f6\u95f4\u6233\uff0c\u5982\u679c\u5dee\u503c\u5927\u4e8e60s # \u90a3\u4e48\u8bc1\u660e\u8fd9\u4e2a\u8bbf\u95ee\u8bb0\u5f55\u53ef\u80fd\u5df2\u7ecf\u5f88\u4e45\u8fdc\u4e86\uff0c\u5c31\u53ef\u4ee5\u5220\u6389\u4e86\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4f9d\u6b21\u5bf9\u6bd4\u3002 while self . history and self . history [ - 1 ] < ( current_time - 10 ): self . history . pop () # \u5c06\u8001\u65e7\u7684\u4fe1\u606f\u5220\u6389\u4ee5\u540e\uff0c\u7136\u540e\u770b\u770b\u5217\u8868\u7684\u957f\u5ea6\uff0c\u4e00\u5206\u949f\u518510\u6b21\u7684\u8bdd\u90a3\u4e48\u5217\u8868\u957f\u5ea6\u5c31\u5e94\u8be5\u5c0f\u4e8e\u7b49\u4e8e10 # \u5f5310\u7684\u65f6\u5019\u6b64\u65f6\u5c31\u5df2\u7ecf\u8fbe\u5230\u8bbf\u95ee\u4e0a\u9650\u4e86\uff0c\u56e0\u6b64\u53ea\u6709\u5f53\u5217\u8868\u957f\u5ea6\u5c0f\u4e8e10\u7684\u624d\u5141\u8bb8\u7ee7\u7eed\u8bbf\u95ee\u63d2\u503c\u3002 if len ( self . history ) < 3 : # \u65f6\u95f4\u8d8a\u8fd1\u7684\u585e\u5230\u5217\u8868\u7684\u9996\u90e8 self . history . insert ( 0 , current_time ) return True def wait ( self ): \"\"\"\u63d0\u793a\u4f60\u8ddd\u79bb\u8bbf\u95ee\u8fd8\u9700\u8981\u591a\u4e45\"\"\" return time . time () - self . history [ - 1 ] class AuthView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [ VisitThrottle , ] def post ( self , request , * args , ** kwargs ): ret = { 'errmsg' : None , 'errcode' : 0 } try : user = request . _request . POST . get ( 'username' ) pwd = request . _request . POST . get ( 'password' ) user_obj = models . UserInfo . objects . filter ( username = user , password = pwd ) . first () if not user_obj : ret [ 'errcode' ] = 1000 ret [ 'errmsg' ] = '\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef' return JsonResponse ( ret ) token = md5 ( user ) models . UserToken . objects . update_or_create ( user = user_obj , defaults = { 'token' : token }) ret [ 'token' ] = token ret [ 'errmsg' ] = 'ok' except Exception as e : ret [ 'errcode' ] = 1002 ret [ 'errmsg' ] = '\u8bf7\u6c42\u5f02\u5e38' ret [ 'token' ] = '' return JsonResponse ( ret ) \u7ecf\u8fc7\u8fd9\u6837\u4e00\u4e2a\u6d41\u7a0b\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6211\u4eec\u7684\u8bbf\u95ee\u9891\u6b21\u7684\u9650\u5236\u4e86\uff0c\u63a5\u4e0b\u6765\u770b\u4e00\u4e0b\u8fd9\u90e8\u5206\u6e90\u7801\u6d41\u7a0b\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002","title":"\u63a7\u5236\u8bbf\u95ee\u9891\u7387"},{"location":"django/DRF/05-DRF\u8bbf\u95ee\u9650\u5236/#_2","text":"\u5176\u5b9e\u4ed4\u7ec6\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e00\u5757\u7684\u903b\u8f91\u548c\u8ba4\u8bc1\u4ee5\u53ca\u6743\u9650\u7684\u903b\u8f91\u662f\u975e\u5e38\u76f8\u50cf\u7684\uff0c\u5165\u53e3\u4f9d\u7136\u662fdispatch\u3002 def initial ( self , request , * args , ** kwargs ): \"\"\"\u6b64\u5904\u7701\u7565\u5f88\u591a\u4ee3\u7801\"\"\" self . perform_authentication ( request ) self . check_permissions ( request ) # \u627e\u5230\u8fd9\u91cc\uff0c\u8282\u6d41\u7684\u76f8\u5173\u8bbe\u7f6e self . check_throttles ( request ) \u770b\u4e00\u4e0bcheck_throttles\u90fd\u5e72\u4e86\u4ec0\u4e48 # get_throttles\u7684\u903b\u8f91\u548c\u524d\u9762\u7684\u8ba4\u8bc1\u548c\u6743\u9650\u7684\u7ba1\u7406\u90fd\u662f\u4e00\u4e2a\u5957\u8def\uff0c\u8fd9\u91cc\u4e0d\u591a\u505a\u8d58\u8ff0\u4e86 # \u8fd9\u91cc\u4f9d\u7136\u662f\u8fd4\u56de\u4e86self\u4e2d\u7684throtle_classes\u7684\u7c7b\u7684\u5bf9\u8c61\u7684\u5217\u8868\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd # \u4f1a\u627e\u5230\u7236\u7c7bAPIView\u4e2d\u7684\u5982\u4e0b\u8fd9\u4e00\u6bb5\u5185\u5bb9\uff0c\u5982\u679c\u8981\u5168\u5c40\u5316\u76f4\u63a5\u5199\u5230settings\u4e2d\u5373\u53ef\u3002 # throttle_classes = api_settings.DEFAULT_THROTTLE_CLASSES def get_throttles ( self ): \"\"\" Instantiates and returns the list of throttles that this view uses. \"\"\" return [ throttle () for throttle in self . throttle_classes ] def check_throttles ( self , request ): \"\"\" Check if request should be throttled. Raises an appropriate exception if the request is throttled. \"\"\" for throttle in self . get_throttles (): # \u8c03\u7528\u5bf9\u8c61\u7684allow_request\u65b9\u6cd5\uff0c\u5982\u679c\u8fd4\u56detrue\u8868\u660e\u53ef\u4ee5\u7ee7\u7eed\u8bbf\u95ee\uff0c\u5982\u679c\u4e0d\u53cd\u56de\u6216\u8005\u8fd4\u56deFalse # \u8868\u793a\u4e0d\u80fd\u591f\u7ee7\u7eed\u8bbf\u95ee\u3002\u5f53\u4e0d\u80fd\u591f\u7ee7\u7eed\u8bbf\u95ee\u7684\u65f6\u5019\u4f1a\u8fdb\u5165\u5230\u4e0b\u9762\u7684\u6761\u4ef6\u4e2d\uff0c\u6307\u5b9athrottled\u65b9\u6cd5 # \u8c03\u7528throttled\u65b9\u6cd5\u7684\u540c\u65f6\u8fd8\u8c03\u7528\u4e86throttle\u7684wait\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u81ea\u5b9a\u4e49\u7684wait\u65b9\u6cd5 if not throttle . allow_request ( request , self ): self . throttled ( request , throttle . wait ()) throttled\u65b9\u6cd5\u76f4\u63a5\u629b\u51fa\u4e86\u5f02\u5e38\uff0c\u8fd9\u91cc\u63a5\u6536\u7684wait\u5c31\u662f\u6211\u4eec\u8fd4\u56de\u7684\u79d2\u6570\u3002 def throttled ( self , request , wait ): \"\"\" If request is throttled, determine what kind of exception to raise. \"\"\" raise exceptions . Throttled ( wait ) # \u770b\u4e00\u4e0b\u8fd9\u4e2a\u5f02\u5e38\u7c7b\u7684\u8c03\u7528 class Throttled ( APIException ): status_code = status . HTTP_429_TOO_MANY_REQUESTS default_detail = _ ( 'Request was throttled.' ) extra_detail_singular = 'Expected available in {wait} second.' extra_detail_plural = 'Expected available in {wait} seconds.' default_code = 'throttled' def __init__ ( self , wait = None , detail = None , code = None ): if detail is None : detail = force_text ( self . default_detail ) if wait is not None : wait = math . ceil ( wait ) detail = ' ' . join (( detail , force_text ( ungettext ( self . extra_detail_singular . format ( wait = wait ), self . extra_detail_plural . format ( wait = wait ), wait )))) self . wait = wait super ( Throttled , self ) . __init__ ( detail , code )","title":"\u6e90\u7801\u6d41\u7a0b"},{"location":"django/DRF/05-DRF\u8bbf\u95ee\u9650\u5236/#_3","text":"\u5176\u5b9e\u4e0a\u9762\u8fd9\u4e00\u5806\u64cd\u4f5c\u5185\u7f6e\u7684\u8282\u6d41\u7c7b\u5c31\u5df2\u7ecf\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86 \u9996\u5148\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u8282\u6d41\u7c7b\u90fd\u5e94\u8be5\u7ee7\u627fBaseThrottle\u3002 class BaseThrottle ( object ): \"\"\" Rate throttling of requests. \"\"\" def allow_request ( self , request , view ): \"\"\" Return `True` if the request should be allowed, `False` otherwise. \"\"\" raise NotImplementedError ( '.allow_request() must be overridden' ) def get_ident ( self , request ): \"\"\" Identify the machine making the request by parsing HTTP_X_FORWARDED_FOR if present and number of proxies is > 0. If not use all of HTTP_X_FORWARDED_FOR if it is available, if not use REMOTE_ADDR. \u6ce8\u610f\u8fd9\u91cc\u5df2\u7ecf\u5e2e\u6211\u4eec\u5b9e\u73b0\u4e86\u83b7\u53d6IP\u7684\u903b\u8f91\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u9700\u8981\u81ea\u5df1\u4eceMETA\u4e2d\u53bb\u53d6\u4e86\uff0c\u76f4\u63a5\u8c03\u7528 self.get_indent\u5c31\u53ef\u4ee5\u62ff\u5230\u533f\u540d\u7528\u6237\u7684\u5730\u5740\u6807\u8bc6\u4e86\u3002 \"\"\" xff = request . META . get ( 'HTTP_X_FORWARDED_FOR' ) remote_addr = request . META . get ( 'REMOTE_ADDR' ) num_proxies = api_settings . NUM_PROXIES if num_proxies is not None : if num_proxies == 0 or xff is None : return remote_addr addrs = xff . split ( ',' ) client_addr = addrs [ - min ( num_proxies , len ( addrs ))] return client_addr . strip () return '' . join ( xff . split ()) if xff else remote_addr def wait ( self ): \"\"\" Optionally, return a recommended number of seconds to wait before the next request. \"\"\" return None \u6211\u4eec\u4e0a\u9762\u5199\u5230\u4e86\u4e00\u5b9a\u65f6\u95f4\u5185\u9650\u5236\u7528\u6237\u7684\u8bbf\u95ee\u9891\u6b21\uff0c\u5176\u5b9eDRF\u5185\u90e8\u5df2\u7ecf\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u9650\u6d41\u7c7b\u5e2e\u6211\u4eec\u5199\u597d\u4e86\uff0c\u5177\u4f53\u5185\u5bb9\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a class SimpleRateThrottle ( BaseThrottle ): \"\"\" A simple cache implementation, that only requires `.get_cache_key()` to be overridden. The rate (requests / seconds) is set by a `rate` attribute on the View class. The attribute is a string of the form 'number_of_requests/period'. Period should be one of: ('s', 'sec', 'm', 'min', 'h', 'hour', 'd', 'day') Previous request information used for throttling is stored in the cache. \"\"\" cache = default_cache timer = time . time cache_format = 'throttle_ %(scope)s _ %(ident)s ' scope = None # 4\u3001\u4ece\u8fd9\u91cc\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2akey\u662f\u4ecesettings\u4e2d\u53d6\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728REST_FRAMEWORK\u4e2d\u914d\u7f6e\u8fd9\u4e2akey # \u5bf9\u5e94\u7684value\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5bf9\u5e94\u7684\u6709\u4e00\u4e2ascope\u7684key\uff0c\u6bd4\u5982\u6211\u5728\u6211\u81ea\u5df1\u5b9a\u4e49\u7684\u7c7b\u91cc\u914d\u7f6escope\u4e3atest_throttle # \u90a3\u4e48\u5b83\u5c31\u4f1a\u53bb\u914d\u7f6e\u6587\u4ef6\u91cc\u627ekey\u4e3ascope\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u5b9a\u4e49\u7684\u8fd9\u4e2ascope\u5176\u5b9e\u5c31\u662f\u914d\u7f6e\u6587\u4ef6\u91cc\u5bf9\u5e94\u7684key # \u90a3\u4e48\u8fd9\u4e2akey\u5bf9\u5e94\u7684value\u5e94\u8be5\u586b\u5199\u4ec0\u4e48\u5462\uff1f\u5e94\u8be5\u586b\u5199\u7c7b\u4f3c\u4e8e3/m\u8fd9\u6837\u7c7b\u4f3c\u7684\u5185\u5bb9\uff0c\u5176\u4e2dm\u4ee3\u8868\u5206\u949f\uff0cs\u79d2\uff0ch\u5c0f\u65f6 # d\u4ee3\u8868day\uff0c3/m\u5c31\u8868\u793a\u6bcf\u5206\u949f3\u6b21\u7684\u610f\u601d\uff0c\u5176\u4ed6\u7684\u7c7b\u63a8\u3002\u90a3\u4e48\u6700\u540e\u6211\u4eec\u62ff\u5230\u7684\u8fd9\u4e2aTHROTTLE_RATES\u5176\u5b9e\u5c31\u662f3/m THROTTLE_RATES = api_settings . DEFAULT_THROTTLE_RATES # 1\u3001\u5b9e\u73b0\u6784\u9020\u65b9\u6cd5\uff0c\u5728\u5bf9\u8c61\u5185\u90e8\u627erate\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5982\u679crate\u5c5e\u6027\u4e0d\u5b58\u5728\u8fd9\u56de\u8c03\u7528self.get_rate def __init__ ( self ): if not getattr ( self , 'rate' , None ): # 5\u3001\u56de\u5230\u8fd9\u91cc\uff0cselt.rate\u5176\u5b9e\u5c31\u662f3/m\u4e86\u3002 self . rate = self . get_rate () # 6\u3001\u8c03\u7528parse_rate\u5bf9\u6211\u4eec\u76843/m\u8fdb\u884c\u6570\u636e\u5904\u7406\uff0c\u63a5\u6536\u5230\u8bf7\u6c42\u6570\u548c\u79d2\u6570\u3002 self . num_requests , self . duration = self . parse_rate ( self . rate ) def get_cache_key ( self , request , view ): \"\"\" Should return a unique cache-key which can be used for throttling. Must be overridden. May return `None` if the request should not be throttled. \"\"\" raise NotImplementedError ( '.get_cache_key() must be overridden' ) # 2\u3001\u5f53rate\u4e0d\u5b58\u5728\u7684\u65f6\u5019\u8c03\u7528\u5f53\u524d\u65b9\u6cd5\uff0c\u65b9\u6cd5\u5185\u90e8\u53bb\u8c03\u7528scope\u5c5e\u6027\uff0c\u5f53\u6ca1\u6709\u8bbe\u7f6escope\u7684\u65f6\u5019\u4f1a\u629b\u51fa\u5f02\u5e38 def get_rate ( self ): \"\"\" Determine the string representation of the allowed request rate. \"\"\" if not getattr ( self , 'scope' , None ): msg = ( \"You must set either `.scope` or `.rate` for ' %s ' throttle\" % self . __class__ . __name__ ) raise ImproperlyConfigured ( msg ) try : # 3\u3001\u5982\u679c\u8bbe\u7f6e\u4e86scope\u90a3\u4e48\u5c31\u4f1a\u53bbself.THROTTLE_RATES\u4e2d\u627e\u5bf9\u5e94\u7684key\uff0c\u8fd9\u4e2a\u503c\u662f\u4e00\u4e2a\u5b57\u5178 return self . THROTTLE_RATES [ self . scope ] except KeyError : msg = \"No default throttle rate set for ' %s ' scope\" % self . scope raise ImproperlyConfigured ( msg ) # 7\u3001\u5bf9self.rate\u8fdb\u884c\u6570\u636e\u5904\u7406 def parse_rate ( self , rate ): \"\"\" Given the request rate string, return a two tuple of: <allowed number of requests>, <period of time in seconds> \"\"\" if rate is None : return ( None , None ) # 8\u3001\u6211\u4eec\u7684\u6a21\u5f0f\u90fd\u662fx/x\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5\u7528/\u7ed9\u9694\u5f00\u4e86\uff0c\u83b7\u53d6\u5230\u7684num\u5c31\u662f\u6b21\u6570\uff0cperiod\u5c31\u662f\u95f4\u9694\u3002 num , period = rate . split ( '/' ) # 9\u3001int\u8f6c\u6362\u6210\u6574\u5f62 num_requests = int ( num ) # 10\u3001\u5c06\u5bf9\u5e94\u7684\u65e5\u671f\u8f6c\u6362\u6210\u79d2\uff0cperiod\u53ef\u80fd\u4e3as\uff0cm\uff0ch\uff0cd\uff0c\u53d6\u7b2c\u4e00\u4e2a\uff0c\u6240\u4ee5\u4f60\u5199day\uff0chour\uff0cminute\uff0csecond # \u5176\u5b9e\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u56e0\u4e3a\u90fd\u662f\u53d6\u7684\u9996\u5b57\u6bcd\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u76f8\u5f53\u4e8e\u53d6\u5bf9\u5e94\u7684\u5b57\u5178\u7684key\u5f97\u5230\u5bf9\u5e94\u7684\u79d2\u6570 duration = { 's' : 1 , 'm' : 60 , 'h' : 3600 , 'd' : 86400 }[ period [ 0 ]] # 11\u3001\u8fd4\u56de\u8bf7\u6c42\u6570\u548c\u79d2\u6570 return ( num_requests , duration ) # 12\u3001\u8bf7\u6c42\u8fdb\u6765\u4ee5\u540e\u5728\u6e90\u7801\u6d41\u7a0b\u4e2d\u4f1a\u8c03\u7528allow_request\u65b9\u6cd5\u3002 def allow_request ( self , request , view ): \"\"\" Implement the check to see if the request should be throttled. On success calls `throttle_success`. On failure calls `throttle_failure`. \"\"\" if self . rate is None : return True # 13\u3001\u8fd9\u91cc\u76f4\u63a5\u8c03\u7528self.get_cache_key\uff0c\u5982\u679c\u4ed4\u7ec6\u770b\u4e0a\u9762\u7684\u6e90\u7801\u7684\u8bdd\u4f1a\u53d1\u73b0\u8c03\u7528\u539f\u751f\u7684\u4f1a\u76f4\u63a5\u629b\u5f02\u5e38 # \u62a5\u9519\u4fe1\u606f\u544a\u77e5\u6211\u4eec\u5fc5\u987b\u81ea\u5df1\u91cd\u5199\u53bb\u8986\u76d6\u539f\u6765\u7684\u65b9\u6cd5\uff0c\u5176\u5b9e\u539f\u6765\u7684\u65b9\u6cd5\u5c31\u662f\u4e2a\u6846\u5b50\u3002 # \u6211\u4eec\u6700\u4e0a\u9762\u9488\u5bf9\u533f\u540d\u7528\u6237\u662f\u4ee5\u533f\u540d\u7528\u6237\u7684ip\u4f5c\u4e3akey\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u5728\u6211\u4eec\u7684\u9650\u6d41\u7c7b\u91cc\u8c03\u7528 # self.get_ident\u8fd4\u56deip\u8d4b\u503c\u7ed9self.key\u3002 self . key = self . get_cache_key ( request , view ) if self . key is None : return True # 14\u3001\u4ece\u7f13\u5b58\u4e2d\u62ff\u5230\u6240\u6709\u7684\u8bb0\u5f55\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e4b\u524d\u7684VISIT_RECORD\uff0c\u8fd9\u4e2a\u7f13\u5b58\u662fDjango\u5185\u7f6e\u7684\u7f13\u5b58 self . history = self . cache . get ( self . key , []) # 15\u3001\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 self . now = self . timer () # 16\u3001\u8fd9\u4e00\u5757\u7684\u903b\u8f91\u57fa\u672c\u5c31\u548c\u6211\u4eec\u4e4b\u524d\u5199\u7684\u662f\u4e00\u6837\u7684\u4e86\u3002 while self . history and self . history [ - 1 ] <= self . now - self . duration : self . history . pop () if len ( self . history ) >= self . num_requests : # 17\u3001\u5982\u679c\u8bf4\u5217\u8868\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e\u8bf7\u6c42\u6570\u90a3\u4e48\u8bc1\u660e\u5df2\u7ecf\u5230\u4e86\u8bbf\u95ee\u4e0a\u7ebf\u4e86\uff0c\u76f4\u63a5return False return self . throttle_failure () # 18\u3001\u5426\u5219\u8c03\u7528throttle_success\u63d2\u5165\u65f6\u95f4\u6233\u5230\u5217\u8868\u5934\u90e8\uff0c\u5e76\u8fd4\u56deTrue\u8868\u793a\u4e0d\u9650\u6d41\u3002 return self . throttle_success () def throttle_success ( self ): \"\"\" Inserts the current request's timestamp along with the key into the cache. \"\"\" self . history . insert ( 0 , self . now ) self . cache . set ( self . key , self . history , self . duration ) return True def throttle_failure ( self ): \"\"\" Called when a request to the API has failed due to throttling. \"\"\" return False def wait ( self ): \"\"\" Returns the recommended next request time in seconds. \"\"\" if self . history : remaining_duration = self . duration - ( self . now - self . history [ - 1 ]) else : remaining_duration = self . duration available_requests = self . num_requests - len ( self . history ) + 1 if available_requests <= 0 : return None return remaining_duration / float ( available_requests ) \u90a3\u4e48\u6211\u4eec\u81ea\u5df1\u7684\u9650\u6d41\u7c7b\u5176\u5b9e\u76f8\u5bf9\u6765\u8bb2\u5c31\u7b80\u5355\u5f88\u591a\u4e86\uff0c\u53ea\u9700\u8981\u7ee7\u627f\u5982\u4e0a\u9762\u8fd9\u4e2a\u7c7b\u518d\u505a\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\uff1a from rest_framework.throttling import SimpleRateThrottle # \u6700\u540e\u6211\u4eec\u9700\u8981\u505a\u7684\u5185\u5bb9\u5c31\u7b80\u7b80\u5355\u5355\u7684\u8fd9\u4e00\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002 class VisitThrottle ( SimpleRateThrottle ): scope = 'test_throttle' def get_cache_key ( self , request , view ): # \u5982\u679c\u662f\u9488\u5bf9\u767b\u5f55\u7528\u6237\u6211\u4eec\u53ef\u4ee5\u8fd4\u56de\u7528\u6237\u7684\u552f\u4e00\u767b\u5f55\u540d\uff0c\u6216\u8005\u7528\u6237\u7684pk(id) return self . get_ident ( request ) \u5bf9\u5e94\u7684settings\u914d\u7f6e\u5982\u4e0b: REST_FRAMEWORK = { 'DEFAULT_AUTHENTICATION_CLASSES' : [ 'api.utils.auth.Authtication' , ], 'UNAUTHENTICATED_USER' : None , 'UNAUTHENTICATED_TOKEN' : None , 'DEFAULT_PERMISSION_CLASSES' : [ 'api.utils.permission.MyPermission' ], 'DEFAULT_THROTTLE_CLASSES' : [ '' ], 'DEFAULT_THROTTLE_RATES' : { 'test_throttle' : '10/m' } } \u5176\u4ed6\u7684\u63d0\u4f9b\u5185\u7f6e\u9650\u6d41\u7c7b\u5982\u4e0b\u4ee5\u4f9b\u53c2\u8003\uff1a # \u9650\u5236\u533f\u540d\u7528\u6237 class AnonRateThrottle ( SimpleRateThrottle ): \"\"\" Limits the rate of API calls that may be made by a anonymous users. The IP address of the request will be used as the unique cache key. \"\"\" scope = 'anon' def get_cache_key ( self , request , view ): if request . user . is_authenticated : return None # Only throttle unauthenticated requests. return self . cache_format % { 'scope' : self . scope , 'ident' : self . get_ident ( request ) } # \u9650\u5236\u767b\u5f55\u7528\u6237\u7684 class UserRateThrottle ( SimpleRateThrottle ): \"\"\" Limits the rate of API calls that may be made by a given user. The user id will be used as a unique cache key if the user is authenticated. For anonymous requests, the IP address of the request will be used. \"\"\" scope = 'user' def get_cache_key ( self , request , view ): if request . user . is_authenticated : ident = request . user . pk else : ident = self . get_ident ( request ) return self . cache_format % { 'scope' : self . scope , 'ident' : ident } # \u8fd9\u4e2a\u662f\u5e94\u7528\u5728\u5c40\u90e8\u89c6\u56fe\u4e0a\u7684\uff0c\u4f46\u662f\u6211\u4eec\u5e94\u7528\u5230\u5c40\u90e8\u89c6\u56fe\u76f4\u63a5\u5728\u5bf9\u5e94\u7684\u89c6\u56fe\u7c7b\u5199throttle_classes\u5c31\u53ef\u4ee5\u4e86 # \u56e0\u6b64\u8fd9\u4e2a\u57fa\u672c\u7528\u4e0d\u5230\u3002 class ScopedRateThrottle ( SimpleRateThrottle ): \"\"\" Limits the rate of API calls by different amounts for various parts of the API. Any view that has the `throttle_scope` property set will be throttled. The unique cache key will be generated by concatenating the user id of the request, and the scope of the view being accessed. \"\"\" scope_attr = 'throttle_scope' def __init__ ( self ): # Override the usual SimpleRateThrottle, because we can't determine # the rate until called by the view. pass def allow_request ( self , request , view ): # We can only determine the scope once we're called by the view. self . scope = getattr ( view , self . scope_attr , None ) # If a view does not have a `throttle_scope` always allow the request if not self . scope : return True # Determine the allowed request rate as we normally would during # the `__init__` call. self . rate = self . get_rate () self . num_requests , self . duration = self . parse_rate ( self . rate ) # We can now proceed as normal. return super ( ScopedRateThrottle , self ) . allow_request ( request , view ) def get_cache_key ( self , request , view ): \"\"\" If `view.throttle_scope` is not set, don't apply this throttle. Otherwise generate the unique cache key by concatenating the user id with the '.throttle_scope` property of the view. \"\"\" if request . user . is_authenticated : ident = request . user . pk else : ident = self . get_ident ( request ) return self . cache_format % { 'scope' : self . scope , 'ident' : ident }","title":"\u5185\u7f6e\u7684\u8282\u6d41\u7c7b"},{"location":"django/DRF/05-DRF\u8bbf\u95ee\u9650\u5236/#_4","text":"\u4f9d\u7136\u9700\u8981\u6ce8\u610f\uff0c\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u7684\u8282\u6d41\u7c7b\u662f\u5168\u5c40\u7684\uff0c\u662f\u7ed9\u6240\u6709\u7684\u4eba\u7528\u7684\uff0c\u5982\u679c\u8bf4\u5355\u72ec\u9700\u8981\u5176\u4ed6\u7684\u65b9\u6848\u7684\u9700\u8981\u5355\u72ec\u5904\u7406\uff0c\u76f4\u63a5\u5728\u5bf9\u5e94\u7684\u89c6\u56feCBV\u4e2d\u5199 throttle_classes = [] \u5355\u72ec\u5904\u7406\u5c31\u53ef\u4ee5\u4e86\u3002","title":"\u5c0f\u7ed3"},{"location":"django/DRF/06-DRF\u7248\u672c&\u89e3\u6790\u5668/","text":"DRF\u7248\u672c&\u89e3\u6790\u5668 \u00b6 \u7f16\u8f91\u65e5\u671f\uff1a2019-2-13 \u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1arestframework\u4f60\u90fd\u7ee7\u627f\u8fc7\u54ea\u4e9b\u7c7b DRF\u7248\u672c \u00b6 \u7248\u672c\u53ef\u4ee5\u653e\u5728URL\u91cc\uff0c\u4e5f\u53ef\u4ee5\u653e\u5728\u8bf7\u6c42\u5934\uff0c\u53ea\u8981\u662f\u53ef\u4ee5\u83b7\u53d6\u5230\u5c31\u884c\u3002 def initial ( self , request , * args , ** kwargs ): \"\"\" Runs anything that needs to occur prior to calling the method handler. \"\"\" self . format_kwarg = self . get_format_suffix ( ** kwargs ) neg = self . perform_content_negotiation ( request ) request . accepted_renderer , request . accepted_media_type = neg # Determine the API version, if versioning is in use. # \u8c03\u7528self.determine_version\u65b9\u6cd5\uff0c\u4f1a\u6536\u5230\u4e24\u4e2a\u8fd4\u56de\u503c # \u4e24\u4e2a\u8fd4\u56de\u503c\u5206\u522b\u5bf9\u5e94\u7684\u7b2c\u4e00\u4e2a\u662fdetermine_version\u7684\u8fd4\u56de\u503c\uff0c\u53e6\u5916\u4e00\u4e2a\u5c31\u662f\u8fd9\u4e2aversion\u7c7b\u5bf9\u8c61\u3002 version , scheme = self . determine_version ( request , * args , ** kwargs ) # \u5bf9\u5e94\u7684\u7248\u672c\u53f7\u548cversion\u7c7b\u5bf9\u8c61\u4f1a\u88ab\u8d4b\u503c\u7ed9request.version\u548crequest.versioning_scheme request . version , request . versioning_scheme = version , scheme # Ensure that the incoming request is permitted self . perform_authentication ( request ) self . check_permissions ( request ) self . check_throttles ( request ) def determine_version ( self , request , * args , ** kwargs ): \"\"\" If versioning is being used, then determine any API version for the incoming request. Returns a two-tuple of (version, versioning_scheme) \"\"\" if self . versioning_class is None : # \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u7684\u8bdd\u4e5f\u5c31\u662f\u8bf4\u6839\u672c\u4e0d\u7528\uff0c\u90a3\u5c31\u8fd4\u56deNone\uff0cNone\u7684\u5143\u7ec4 return ( None , None ) # versioning_class = api_settings.DEFAULT_VERSIONING_CLASS scheme = self . versioning_class () # \u8fd4\u56de\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u3002\u8c03\u7528\u5bf9\u8c61\u7684determine_version\u65b9\u6cd5 return ( scheme . determine_version ( request , * args , ** kwargs ), scheme ) \u6ce8\u610f\u8fd9\u4e2a\u5728\u7c7b\u4e2d\u58f0\u660e\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53ef\u4e0d\u662f\u7c7b\u5217\u8868\uff0cclass\u540e\u9762\u6ca1\u6709es\uff0c\u8fd9\u4e2a\u5c31\u662f\u5355\u72ec\u7684\u4e00\u4e2a\u7c7b\u3002 class UserView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] versioning_class = ParamVersion def get ( self , request , * args , ** kwargs ): return HttpResponse ( 'userlist' ) \u4ee5\u53c2\u6570\u5f62\u5f0f\u83b7\u53d6 \u00b6 \u4e0d\u8fc7\u5728\u7248\u672c\u8fd9\u4e00\u5757\uff0c\u4e0d\u7528\u81ea\u5df1\u5199\uff0cdrf\u4e2d\u5df2\u7ecf\u63d0\u4f9b\u4e86\u8fd9\u4e00\u5757\u7684\u5185\u5bb9\u3002 # \u76f4\u63a5\u8c03\u7528\u5185\u7f6e\u7684QueryParameterVersioning\u5c31\u53ef\u4ee5\u4e86\u3002 from rest_framework.versioning import QueryParameterVersioning class UserView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] versioning_class = [ QueryParameterVersioning , ] def get ( self , request , * args , ** kwargs ): return HttpResponse ( '\u5f53\u524d\u7684\u7248\u672c\u4e3a\uff1a \" %s \"' % request . version ) \u6765\u770b\u4e00\u4e0b\u8fd9\u4e2a\u7248\u672c\u7c7b\u7684\u5b9e\u73b0\uff1a class QueryParameterVersioning ( BaseVersioning ): \"\"\" GET /something/?version=0.1 HTTP/1.1 Host: example.com Accept: application/json \"\"\" invalid_version_message = _ ( 'Invalid version in query parameter.' ) def determine_version ( self , request , * args , ** kwargs ): # \u800c\u4e14\u8fd9\u91cc\u5982\u679c\u83b7\u53d6\u4e0d\u5230\u914d\u7f6e\u7684VERSION_PARAM\u8fd8\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684version\u914d\u7f6e\uff1aDEFAULT_VERSION # version_param\u5c31\u662f\u4f60\u4f20\u9012\u7684\u90a3\u4e2aversion\u7684key\u662f\u4ec0\u4e48\uff0c\u540e\u9762\u7684\u5c31\u662f\u4f60\u4e0d\u4f20\u9ed8\u8ba4\u662f\u4ec0\u4e48 # \u8fd9\u4e9b\u90fd\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u53bb\u4f53\u73b0\u3002 version = request . query_params . get ( self . version_param , self . default_version ) if not self . is_allowed_version ( version ): raise exceptions . NotFound ( self . invalid_version_message ) return version # reverse\u7528\u6765\u53cd\u5411\u751f\u6210url\uff0cviewname\u5c31\u662f\u6211\u4eec\u7684\u90a3\u4e2aname\uff0c\u800c\u4e14version\u6211\u4eec\u4e0d\u7528\u52a0 # \u56e0\u4e3arequest.version\u643a\u5e26\u5728request\u91cc\u9762\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7701\u7565\u8fd9\u4e2a\u53c2\u6570\u3002 def reverse ( self , viewname , args = None , kwargs = None , request = None , format = None , ** extra ): url = super ( QueryParameterVersioning , self ) . reverse ( viewname , args , kwargs , request , format , ** extra ) if request . version is not None : return replace_query_param ( url , self . version_param , request . version ) return url # \u8bbe\u7f6e\u90fd\u5141\u8bb8\u54ea\u4e9bversion # allowed_versions = api_settings.ALLOWED_VERSIONS def is_allowed_version ( self , version ): if not self . allowed_versions : return True return (( version is not None and version == self . default_version ) or ( version in self . allowed_versions )) \u5728\u8def\u5f84\u4e2d\u4f53\u73b0 \u00b6 \u4e0a\u9762\u7684version\u53c2\u6570\u4f20\u9012\u662f\u4ee5\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u60c5\u51b5\u4e0b\u8fd9\u79cd\u4f7f\u7528\u7684\u5176\u5b9e\u5e76\u4e0d\u591a\uff0c\u66f4\u591a\u7684\u5176\u5b9e\u662f\u5c06version\u5305\u542b\u5728\u8def\u5f84\u4e2d\uff0c\u6bd4\u5982xxx.xxx.com/api/v1\u8fd9\u6837\u7684\u5f62\u5f0f\u3002\u5f53\u7136DRF\u5173\u4e8e\u8fd9\u79cd\u60c5\u51b5\u4e5f\u7ed9\u4f60\u5199\u597d\u4e86\u3002 class URLPathVersioning ( BaseVersioning ): \"\"\" To the client this is the same style as `NamespaceVersioning`. The difference is in the backend - this implementation uses Django's URL keyword arguments to determine the version. An example URL conf for two views that accept two different versions. urlpatterns = [ url(r'^(?P<version>[v1|v2]+)/users/$', users_list, name='users-list'), url(r'^(?P<version>[v1|v2]+)/users/(?P<pk>[0-9]+)/$', users_detail, name='users-detail') ] GET /1.0/something/ HTTP/1.1 Host: example.com Accept: application/json \"\"\" invalid_version_message = _ ( 'Invalid version in URL path.' ) def determine_version ( self , request , * args , ** kwargs ): version = kwargs . get ( self . version_param , self . default_version ) if version is None : version = self . default_version if not self . is_allowed_version ( version ): raise exceptions . NotFound ( self . invalid_version_message ) return version def reverse ( self , viewname , args = None , kwargs = None , request = None , format = None , ** extra ): if request . version is not None : kwargs = {} if ( kwargs is None ) else kwargs kwargs [ self . version_param ] = request . version return super ( URLPathVersioning , self ) . reverse ( viewname , args , kwargs , request , format , ** extra ) \u66f4\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u914d\u7f6e\uff0c\u5176\u4ed6\u7684\u5185\u7f6e\u65b9\u6848\u4ec5\u4f9b\u53c2\u8003\uff1a class NamespaceVersioning ( BaseVersioning ): \"\"\" To the client this is the same style as `URLPathVersioning`. The difference is in the backend - this implementation uses Django's URL namespaces to determine the version. An example URL conf that is namespaced into two separate versions # users/urls.py urlpatterns = [ url(r'^/users/$', users_list, name='users-list'), url(r'^/users/(?P<pk>[0-9]+)/$', users_detail, name='users-detail') ] # urls.py urlpatterns = [ url(r'^v1/', include('users.urls', namespace='v1')), url(r'^v2/', include('users.urls', namespace='v2')) ] GET /1.0/something/ HTTP/1.1 Host: example.com Accept: application/json \"\"\" invalid_version_message = _ ( 'Invalid version in URL path. Does not match any version namespace.' ) def determine_version ( self , request , * args , ** kwargs ): resolver_match = getattr ( request , 'resolver_match' , None ) if resolver_match is None or not resolver_match . namespace : return self . default_version # Allow for possibly nested namespaces. possible_versions = resolver_match . namespace . split ( ':' ) for version in possible_versions : if self . is_allowed_version ( version ): return version raise exceptions . NotFound ( self . invalid_version_message ) def reverse ( self , viewname , args = None , kwargs = None , request = None , format = None , ** extra ): if request . version is not None : viewname = self . get_versioned_viewname ( viewname , request ) return super ( NamespaceVersioning , self ) . reverse ( viewname , args , kwargs , request , format , ** extra ) def get_versioned_viewname ( self , viewname , request ): return request . version + ':' + viewname class HostNameVersioning ( BaseVersioning ): \"\"\" GET /something/ HTTP/1.1 Host: v1.example.com Accept: application/json \"\"\" hostname_regex = re . compile ( r '^([a-zA-Z0-9]+)\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$' ) invalid_version_message = _ ( 'Invalid version in hostname.' ) def determine_version ( self , request , * args , ** kwargs ): hostname , separator , port = request . get_host () . partition ( ':' ) match = self . hostname_regex . match ( hostname ) if not match : return self . default_version version = match . group ( 1 ) if not self . is_allowed_version ( version ): raise exceptions . NotFound ( self . invalid_version_message ) return version # We don't need to implement `reverse`, as the hostname will already be # preserved as part of the REST framework `reverse` implementation. class AcceptHeaderVersioning ( BaseVersioning ): \"\"\" GET /something/ HTTP/1.1 Host: example.com Accept: application/json; version=1.0 \"\"\" invalid_version_message = _ ( 'Invalid version in \"Accept\" header.' ) def determine_version ( self , request , * args , ** kwargs ): media_type = _MediaType ( request . accepted_media_type ) version = media_type . params . get ( self . version_param , self . default_version ) version = unicode_http_header ( version ) if not self . is_allowed_version ( version ): raise exceptions . NotAcceptable ( self . invalid_version_message ) return version # We don't need to implement `reverse`, as the versioning is based # on the `Accept` header, not on the request URL. DRF\u89e3\u6790\u5668 \u00b6 def _load_post_and_files ( self ): \"\"\"Populate self._post and self._files if the content-type is a form type\"\"\" if self . method != 'POST' : self . _post , self . _files = QueryDict ( encoding = self . _encoding ), MultiValueDict () return if self . _read_started and not hasattr ( self , '_body' ): self . _mark_post_parse_error () return if self . content_type == 'multipart/form-data' : if hasattr ( self , '_body' ): # Use already read data data = BytesIO ( self . _body ) else : data = self try : self . _post , self . _files = self . parse_file_upload ( self . META , data ) except MultiPartParserError : # An error occurred while parsing POST data. Since when # formatting the error the request handler might access # self.POST, set self._post and self._file to prevent # attempts to parse POST data again. # Mark that an error occurred. This allows self.__repr__ to # be explicit about it instead of simply representing an # empty POST self . _mark_post_parse_error () raise # \u5982\u679c\u662f\u8fd9\u4e2a\u5934\u624d\u53bbrequest.body\u4e2d\u53bb\u89e3\u6790\u6570\u636e\uff0c\u4e0d\u4ec5\u5982\u6b64\uff0c\u8fd8\u5bf9\u6570\u636e\u683c\u5f0f\u6709\u8981\u6c42 # \u6570\u636e\u683c\u5f0f\u8981\u6c42\u5fc5\u987b\u662fa=1&b=2&c=3\u8fd9\u79cd\u7684\u3002form\u8868\u5355\u7684\u63d0\u4ea4\u9ed8\u8ba4\u5c31\u662f\u8fd9\u4e2a\u5934\uff0c\u6570\u636e\u683c\u5f0f\u9ed8\u8ba4\u4e5f\u662f\u8fd9\u6837\u7684 # \u5f53\u7136Ajax\u4e5f\u662f\u53ef\u4ee5\u63d0\u4ea4\u7684\uff0c\u867d\u7136\u4f60data\u5199\u7684\u662f\u5b57\u5178\uff0c\u4e0d\u8fc7\u5185\u90e8\u4e5f\u4f1a\u7ed9\u4f60\u8f6c\u6210\u4e0a\u9762\u7684\u6570\u636e\u683c\u5f0f\uff0c\u800c\u4e14ajax\u8fd8\u53ef\u4ee5 # \u5b9a\u5236\u8bf7\u6c42\u5934headers\u3002 elif self . content_type == 'application/x-www-form-urlencoded' : self . _post , self . _files = QueryDict ( self . body , encoding = self . _encoding ), MultiValueDict () else : self . _post , self . _files = QueryDict ( encoding = self . _encoding ), MultiValueDict () \u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u4e5f\u662frequest.body\u6709\u503c\uff0c\u4f46\u662frequest.post\u6ca1\u6709\u503c # \u8fd9\u4e2a\u65f6\u5019\u4e0d\u4ec5\u5934\u4e0d\u6ee1\u8db3 \uff0c \u6570\u636e\u683c\u5f0f\u4e5f\u4e0d\u6ee1\u8db3 \uff0c \u90fd\u4e0d\u6ee1\u8db3 \u3002 \u6240\u6709request . post\u4f9d\u7136\u6ca1\u6709\u503c \u3002 $ . ajax ({ url : xxx , method : xxx , data : JSON . Stringfy ({ 'a' : 1 , 'b' : 2 }) }) \u4e0a\u9762\u8fd9\u4e2a\u662fDjango\u7684\uff0c\u63a5\u4e0b\u6765\u770bDRF\u89e3\u6790\u5668 \u83b7\u53d6\u7528\u6237\u8bf7\u6c42 \u83b7\u53d6\u7528\u6237\u8bf7\u6c42\u4f53 \u6839\u636e\u7528\u6237\u8bf7\u6c42\u5934\u548cparser_classes\u4e2d\u652f\u6301\u7684\u5168\u7ed9\u4f60\u6c42\u5934\u8fdb\u884c\u6bd4\u8f83 \u7b26\u5408\u7684\u5904\u7406\u7c7b\u8fdb\u884c\u8bf7\u6c42\u7684\u5904\u7406 \u8d4b\u503c\u7ed9request.data \u8c03\u7528request.data\u7684\u65f6\u5019\u751f\u6548\u3002 # JSONParser class JSONParser ( BaseParser ): \"\"\" Parses JSON-serialized data. \"\"\" # \u5728JSONParser\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2amedia type media_type = 'application/json' renderer_class = renderers . JSONRenderer strict = api_settings . STRICT_JSON def parse ( self , stream , media_type = None , parser_context = None ): \"\"\" Parses the incoming bytestream as JSON and returns the resulting data. \"\"\" parser_context = parser_context or {} encoding = parser_context . get ( 'encoding' , settings . DEFAULT_CHARSET ) try : decoded_stream = codecs . getreader ( encoding )( stream ) parse_constant = json . strict_constant if self . strict else None return json . load ( decoded_stream , parse_constant = parse_constant ) except ValueError as exc : raise ParseError ( 'JSON parse error - %s ' % six . text_type ( exc )) # FormParser class FormParser ( BaseParser ): \"\"\" Parser for form data. \"\"\" media_type = 'application/x-www-form-urlencoded' def parse ( self , stream , media_type = None , parser_context = None ): \"\"\" Parses the incoming bytestream as a URL encoded form, and returns the resulting QueryDict. \"\"\" parser_context = parser_context or {} encoding = parser_context . get ( 'encoding' , settings . DEFAULT_CHARSET ) data = QueryDict ( stream . read (), encoding = encoding ) return data # 1\u3001\u6211\u4eec\u77e5\u9053\u6700\u540e\u83b7\u53d6\u5230\u7684\u7ed3\u679c\u53ef\u4ee5\u4ecerequest.data\u4e2d\u62ff\u5230\uff0c\u4f46\u662f\u8fd9\u4e2arequest\u662f\u7ecf\u8fc7\u5c01\u88c5\u540e\u7684Request\u7684\u5bf9\u8c61 # \u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u53bbRequest\u91cc\u9762\u53bb\u627edata\u5c5e\u6027\uff0c\u9996\u5148\u8c03\u7528\u4e86_hasattr\uff0c\u6ce8\u610f\u8fd9\u91cc\u662f\u5e26\u4e0b\u5212\u7ebf\u7684 @property def data ( self ): # 3\u3001\u9ed8\u8ba4\u7684self._full_data\u4e3aEmpty\uff0c\u90a3\u4e48_hasattr\u4f1a\u8fd4\u56deFalse\uff0c\u76f4\u63a5\u8c03\u7528_load_data_and_files if not _hasattr ( self , '_full_data' ): self . _load_data_and_files () return self . _full_data # 2\u3001\u627e\u5230\u4e0b\u5212\u7ebf_has_attr,\u5b83\u4f1a\u4ece\u5f53\u524dself\u4e2d\u53bb\u53d6\u5bf9\u5e94\u7684name\uff0c\u5982\u679c\u8fd9\u4e2aname\u53d6\u5230\u4e86\u662fEmpty\uff0c\u90a3\u4e48\u5c31\u8fd4\u56deFalse def _hasattr ( obj , name ): return not getattr ( obj , name ) is Empty # 4\u3001_full_data\u9ed8\u8ba4\u503c self . _full_data = Empty # 5\u3001Empty\u7684\u5b9a\u4e49 class Empty ( object ): \"\"\" Placeholder for unset attributes. Cannot use `None`, as that may be a valid value. \"\"\" pass # 6\u3001_load_data_and_files\u65b9\u6cd5 def _load_data_and_files ( self ): \"\"\" Parses the request content into `self.data`. \"\"\" # \u9ed8\u8ba4\u7684self._data = Empty\uff0c\u6240\u4ee5\u6761\u4ef6\u6ee1\u8db3\u76f4\u63a5\u8fdb\u5165\u8c03\u7528 if not _hasattr ( self , '_data' ): # \u8c03\u7528self._parse\u65b9\u6cd5 self . _data , self . _files = self . _parse () if self . _files : self . _full_data = self . _data . copy () self . _full_data . update ( self . _files ) else : self . _full_data = self . _data # if a form media type, copy data & files refs to the underlying # http request so that closable objects are handled appropriately. if is_form_media_type ( self . content_type ): self . _request . _post = self . POST self . _request . _files = self . FILES # 7\u3001self._parse\u65b9\u6cd5 def _parse ( self ): \"\"\" \u683c\u5f0f\u5316request\u7684\u6587\u672c\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u4e24\u4e2a\u5143\u7d20\u7684\u5143\u7ec4(data\uff0cfiles) May raise an `UnsupportedMediaType`, or `ParseError` exception. \"\"\" # 8\u3001\u83b7\u53d6\u7528\u6237\u7684\u8bf7\u6c42\u5934 media_type = self . content_type try : # 10\u3001\u83b7\u53d6\u7528\u6237\u7684request.body\u7684\u5185\u5bb9\uff0c\u4ee5stream\u7684\u5f62\u5f0f stream = self . stream except RawPostDataException : if not hasattr ( self . _request , '_post' ): raise # If request.POST has been accessed in middleware, and a method='POST' # request was made with 'multipart/form-data', then the request stream # will already have been exhausted. if self . _supports_form_parsing (): return ( self . _request . POST , self . _request . FILES ) stream = None if stream is None or media_type is None : if media_type and is_form_media_type ( media_type ): empty_data = QueryDict ( '' , encoding = self . _request . _encoding ) else : empty_data = {} empty_files = MultiValueDict () return ( empty_data , empty_files ) # 13\u3001\u8c03\u7528parser\u9009\u62e9\u5668\uff0c\u540e\u9762\u7684self.parsers\u5176\u5b9e\u5c31\u662f\u652f\u6301\u7684\u5bf9\u8c61\u3002parser_classes # self\u4e2d\u4e5f\u6709content-type\uff0c\u6240\u4ee5\u8fd9\u4e2aself\u662f\u8bf7\u6c42\u5bf9\u8c61\uff0c\u5305\u542b\u7528\u6237\u8bf7\u6c42\u7684content-type parser = self . negotiator . select_parser ( self , self . parsers ) if not parser : raise exceptions . UnsupportedMediaType ( media_type ) try : parsed = parser . parse ( stream , media_type , self . parser_context ) except Exception : # If we get an exception during parsing, fill in empty data and # re-raise. Ensures we don't simply repeat the error when # attempting to render the browsable renderer response, or when # logging the request or similar. self . _data = QueryDict ( '' , encoding = self . _request . _encoding ) self . _files = MultiValueDict () self . _full_data = self . _data raise # Parser classes may return the raw data, or a # DataAndFiles object. Unpack the result as required. try : return ( parsed . data , parsed . files ) except AttributeError : empty_files = MultiValueDict () return ( parsed , empty_files ) # 9\u3001\u52a0\u4e86property\u5c5e\u6027\uff0c\u53ef\u4ee5\u76f4\u63a5\u50cf\u503c\u4e00\u6837\u53bb\u4f7f\u7528\uff0c\u8fd9\u4e2acontent_type\u5b9e\u9645\u4e0a\u5c31\u662f\u53bb\u83b7\u53d6\u7528\u6237\u5b9e\u9645\u7684\u8bf7\u6c42\u5934\u3002 @property def content_type ( self ): meta = self . _request . META return meta . get ( 'CONTENT_TYPE' , meta . get ( 'HTTP_CONTENT_TYPE' , '' )) # 11\u3001stream @property def stream ( self ): \"\"\" Returns an object that may be used to stream the request content. \"\"\" # \u9ed8\u8ba4\u7684_stream\u5c31\u662fEmpty\u6240\u4ee5\uff0c\u76f4\u63a5\u8c03\u7528_load_stream\u65b9\u6cd5 if not _hasattr ( self , '_stream' ): self . _load_stream () return self . _stream # 12\u3001\u8fd4\u56deBytesIO\u5f62\u5f0f\u7684body\u4fe1\u606f def _load_stream ( self ): \"\"\" Return the content body of the request, as a stream. \"\"\" meta = self . _request . META try : content_length = int ( meta . get ( 'CONTENT_LENGTH' , meta . get ( 'HTTP_CONTENT_LENGTH' , 0 )) ) except ( ValueError , TypeError ): content_length = 0 if content_length == 0 : self . _stream = None elif not self . _request . _read_started : self . _stream = self . _request else : self . _stream = io . BytesIO ( self . body ) \u770b\u4e00\u5207\u7684\u5f00\u5934\uff0c\u5165\u53e3\u8fd8\u662fdispatch def initialize_request ( self , request , * args , ** kwargs ): \"\"\" Returns the initial request object. \"\"\" parser_context = self . get_parser_context ( request ) return Request ( request , # \u8fd9\u6837Request\u7684\u5b9e\u4f8b\u5c31\u4f1a\u5b58\u5728self.parsers\u8fd9\u4e2a\u5c5e\u6027\u53ef\u4ee5\u8c03\u7528\u3002 parsers = self . get_parsers (), authenticators = self . get_authenticators (), negotiator = self . get_content_negotiator (), parser_context = parser_context ) def get_parsers ( self ): \"\"\" Instantiates and returns the list of parsers that this view can use. \"\"\" return [ parser () for parser in self . parser_classes ] \u6700\u540e\u8fd9\u4e2a\u89e3\u6790\u5668\u7684\u5c5e\u6027\u5199\u5728\u5168\u5c40\u5c31\u53ef\u4ee5\u4e86\u3002 http\u534f\u8bae\u7684\u8bf7\u6c42\u65b9\u6cd5 \u5e38\u7528\u7684\u8bf7\u6c42\u5934\uff08\u72b6\u6001\u7801\uff0c\u65b9\u6cd5\u7b49\uff09\uff1a application/ refer\u7528\u6765\u505a\u9632\u76d7\u94fe\uff0cuser_agent\uff0caccept\uff0chost\u7b49\u3002","title":"DRF\u7248\u672c&\u89e3\u6790\u5668"},{"location":"django/DRF/06-DRF\u7248\u672c&\u89e3\u6790\u5668/#drf","text":"\u7f16\u8f91\u65e5\u671f\uff1a2019-2-13 \u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1arestframework\u4f60\u90fd\u7ee7\u627f\u8fc7\u54ea\u4e9b\u7c7b","title":"DRF\u7248\u672c&amp;\u89e3\u6790\u5668"},{"location":"django/DRF/06-DRF\u7248\u672c&\u89e3\u6790\u5668/#drf_1","text":"\u7248\u672c\u53ef\u4ee5\u653e\u5728URL\u91cc\uff0c\u4e5f\u53ef\u4ee5\u653e\u5728\u8bf7\u6c42\u5934\uff0c\u53ea\u8981\u662f\u53ef\u4ee5\u83b7\u53d6\u5230\u5c31\u884c\u3002 def initial ( self , request , * args , ** kwargs ): \"\"\" Runs anything that needs to occur prior to calling the method handler. \"\"\" self . format_kwarg = self . get_format_suffix ( ** kwargs ) neg = self . perform_content_negotiation ( request ) request . accepted_renderer , request . accepted_media_type = neg # Determine the API version, if versioning is in use. # \u8c03\u7528self.determine_version\u65b9\u6cd5\uff0c\u4f1a\u6536\u5230\u4e24\u4e2a\u8fd4\u56de\u503c # \u4e24\u4e2a\u8fd4\u56de\u503c\u5206\u522b\u5bf9\u5e94\u7684\u7b2c\u4e00\u4e2a\u662fdetermine_version\u7684\u8fd4\u56de\u503c\uff0c\u53e6\u5916\u4e00\u4e2a\u5c31\u662f\u8fd9\u4e2aversion\u7c7b\u5bf9\u8c61\u3002 version , scheme = self . determine_version ( request , * args , ** kwargs ) # \u5bf9\u5e94\u7684\u7248\u672c\u53f7\u548cversion\u7c7b\u5bf9\u8c61\u4f1a\u88ab\u8d4b\u503c\u7ed9request.version\u548crequest.versioning_scheme request . version , request . versioning_scheme = version , scheme # Ensure that the incoming request is permitted self . perform_authentication ( request ) self . check_permissions ( request ) self . check_throttles ( request ) def determine_version ( self , request , * args , ** kwargs ): \"\"\" If versioning is being used, then determine any API version for the incoming request. Returns a two-tuple of (version, versioning_scheme) \"\"\" if self . versioning_class is None : # \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u7684\u8bdd\u4e5f\u5c31\u662f\u8bf4\u6839\u672c\u4e0d\u7528\uff0c\u90a3\u5c31\u8fd4\u56deNone\uff0cNone\u7684\u5143\u7ec4 return ( None , None ) # versioning_class = api_settings.DEFAULT_VERSIONING_CLASS scheme = self . versioning_class () # \u8fd4\u56de\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u3002\u8c03\u7528\u5bf9\u8c61\u7684determine_version\u65b9\u6cd5 return ( scheme . determine_version ( request , * args , ** kwargs ), scheme ) \u6ce8\u610f\u8fd9\u4e2a\u5728\u7c7b\u4e2d\u58f0\u660e\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u53ef\u4e0d\u662f\u7c7b\u5217\u8868\uff0cclass\u540e\u9762\u6ca1\u6709es\uff0c\u8fd9\u4e2a\u5c31\u662f\u5355\u72ec\u7684\u4e00\u4e2a\u7c7b\u3002 class UserView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] versioning_class = ParamVersion def get ( self , request , * args , ** kwargs ): return HttpResponse ( 'userlist' )","title":"DRF\u7248\u672c"},{"location":"django/DRF/06-DRF\u7248\u672c&\u89e3\u6790\u5668/#_1","text":"\u4e0d\u8fc7\u5728\u7248\u672c\u8fd9\u4e00\u5757\uff0c\u4e0d\u7528\u81ea\u5df1\u5199\uff0cdrf\u4e2d\u5df2\u7ecf\u63d0\u4f9b\u4e86\u8fd9\u4e00\u5757\u7684\u5185\u5bb9\u3002 # \u76f4\u63a5\u8c03\u7528\u5185\u7f6e\u7684QueryParameterVersioning\u5c31\u53ef\u4ee5\u4e86\u3002 from rest_framework.versioning import QueryParameterVersioning class UserView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] versioning_class = [ QueryParameterVersioning , ] def get ( self , request , * args , ** kwargs ): return HttpResponse ( '\u5f53\u524d\u7684\u7248\u672c\u4e3a\uff1a \" %s \"' % request . version ) \u6765\u770b\u4e00\u4e0b\u8fd9\u4e2a\u7248\u672c\u7c7b\u7684\u5b9e\u73b0\uff1a class QueryParameterVersioning ( BaseVersioning ): \"\"\" GET /something/?version=0.1 HTTP/1.1 Host: example.com Accept: application/json \"\"\" invalid_version_message = _ ( 'Invalid version in query parameter.' ) def determine_version ( self , request , * args , ** kwargs ): # \u800c\u4e14\u8fd9\u91cc\u5982\u679c\u83b7\u53d6\u4e0d\u5230\u914d\u7f6e\u7684VERSION_PARAM\u8fd8\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684version\u914d\u7f6e\uff1aDEFAULT_VERSION # version_param\u5c31\u662f\u4f60\u4f20\u9012\u7684\u90a3\u4e2aversion\u7684key\u662f\u4ec0\u4e48\uff0c\u540e\u9762\u7684\u5c31\u662f\u4f60\u4e0d\u4f20\u9ed8\u8ba4\u662f\u4ec0\u4e48 # \u8fd9\u4e9b\u90fd\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u53bb\u4f53\u73b0\u3002 version = request . query_params . get ( self . version_param , self . default_version ) if not self . is_allowed_version ( version ): raise exceptions . NotFound ( self . invalid_version_message ) return version # reverse\u7528\u6765\u53cd\u5411\u751f\u6210url\uff0cviewname\u5c31\u662f\u6211\u4eec\u7684\u90a3\u4e2aname\uff0c\u800c\u4e14version\u6211\u4eec\u4e0d\u7528\u52a0 # \u56e0\u4e3arequest.version\u643a\u5e26\u5728request\u91cc\u9762\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7701\u7565\u8fd9\u4e2a\u53c2\u6570\u3002 def reverse ( self , viewname , args = None , kwargs = None , request = None , format = None , ** extra ): url = super ( QueryParameterVersioning , self ) . reverse ( viewname , args , kwargs , request , format , ** extra ) if request . version is not None : return replace_query_param ( url , self . version_param , request . version ) return url # \u8bbe\u7f6e\u90fd\u5141\u8bb8\u54ea\u4e9bversion # allowed_versions = api_settings.ALLOWED_VERSIONS def is_allowed_version ( self , version ): if not self . allowed_versions : return True return (( version is not None and version == self . default_version ) or ( version in self . allowed_versions ))","title":"\u4ee5\u53c2\u6570\u5f62\u5f0f\u83b7\u53d6"},{"location":"django/DRF/06-DRF\u7248\u672c&\u89e3\u6790\u5668/#_2","text":"\u4e0a\u9762\u7684version\u53c2\u6570\u4f20\u9012\u662f\u4ee5\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u60c5\u51b5\u4e0b\u8fd9\u79cd\u4f7f\u7528\u7684\u5176\u5b9e\u5e76\u4e0d\u591a\uff0c\u66f4\u591a\u7684\u5176\u5b9e\u662f\u5c06version\u5305\u542b\u5728\u8def\u5f84\u4e2d\uff0c\u6bd4\u5982xxx.xxx.com/api/v1\u8fd9\u6837\u7684\u5f62\u5f0f\u3002\u5f53\u7136DRF\u5173\u4e8e\u8fd9\u79cd\u60c5\u51b5\u4e5f\u7ed9\u4f60\u5199\u597d\u4e86\u3002 class URLPathVersioning ( BaseVersioning ): \"\"\" To the client this is the same style as `NamespaceVersioning`. The difference is in the backend - this implementation uses Django's URL keyword arguments to determine the version. An example URL conf for two views that accept two different versions. urlpatterns = [ url(r'^(?P<version>[v1|v2]+)/users/$', users_list, name='users-list'), url(r'^(?P<version>[v1|v2]+)/users/(?P<pk>[0-9]+)/$', users_detail, name='users-detail') ] GET /1.0/something/ HTTP/1.1 Host: example.com Accept: application/json \"\"\" invalid_version_message = _ ( 'Invalid version in URL path.' ) def determine_version ( self , request , * args , ** kwargs ): version = kwargs . get ( self . version_param , self . default_version ) if version is None : version = self . default_version if not self . is_allowed_version ( version ): raise exceptions . NotFound ( self . invalid_version_message ) return version def reverse ( self , viewname , args = None , kwargs = None , request = None , format = None , ** extra ): if request . version is not None : kwargs = {} if ( kwargs is None ) else kwargs kwargs [ self . version_param ] = request . version return super ( URLPathVersioning , self ) . reverse ( viewname , args , kwargs , request , format , ** extra ) \u66f4\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u914d\u7f6e\uff0c\u5176\u4ed6\u7684\u5185\u7f6e\u65b9\u6848\u4ec5\u4f9b\u53c2\u8003\uff1a class NamespaceVersioning ( BaseVersioning ): \"\"\" To the client this is the same style as `URLPathVersioning`. The difference is in the backend - this implementation uses Django's URL namespaces to determine the version. An example URL conf that is namespaced into two separate versions # users/urls.py urlpatterns = [ url(r'^/users/$', users_list, name='users-list'), url(r'^/users/(?P<pk>[0-9]+)/$', users_detail, name='users-detail') ] # urls.py urlpatterns = [ url(r'^v1/', include('users.urls', namespace='v1')), url(r'^v2/', include('users.urls', namespace='v2')) ] GET /1.0/something/ HTTP/1.1 Host: example.com Accept: application/json \"\"\" invalid_version_message = _ ( 'Invalid version in URL path. Does not match any version namespace.' ) def determine_version ( self , request , * args , ** kwargs ): resolver_match = getattr ( request , 'resolver_match' , None ) if resolver_match is None or not resolver_match . namespace : return self . default_version # Allow for possibly nested namespaces. possible_versions = resolver_match . namespace . split ( ':' ) for version in possible_versions : if self . is_allowed_version ( version ): return version raise exceptions . NotFound ( self . invalid_version_message ) def reverse ( self , viewname , args = None , kwargs = None , request = None , format = None , ** extra ): if request . version is not None : viewname = self . get_versioned_viewname ( viewname , request ) return super ( NamespaceVersioning , self ) . reverse ( viewname , args , kwargs , request , format , ** extra ) def get_versioned_viewname ( self , viewname , request ): return request . version + ':' + viewname class HostNameVersioning ( BaseVersioning ): \"\"\" GET /something/ HTTP/1.1 Host: v1.example.com Accept: application/json \"\"\" hostname_regex = re . compile ( r '^([a-zA-Z0-9]+)\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$' ) invalid_version_message = _ ( 'Invalid version in hostname.' ) def determine_version ( self , request , * args , ** kwargs ): hostname , separator , port = request . get_host () . partition ( ':' ) match = self . hostname_regex . match ( hostname ) if not match : return self . default_version version = match . group ( 1 ) if not self . is_allowed_version ( version ): raise exceptions . NotFound ( self . invalid_version_message ) return version # We don't need to implement `reverse`, as the hostname will already be # preserved as part of the REST framework `reverse` implementation. class AcceptHeaderVersioning ( BaseVersioning ): \"\"\" GET /something/ HTTP/1.1 Host: example.com Accept: application/json; version=1.0 \"\"\" invalid_version_message = _ ( 'Invalid version in \"Accept\" header.' ) def determine_version ( self , request , * args , ** kwargs ): media_type = _MediaType ( request . accepted_media_type ) version = media_type . params . get ( self . version_param , self . default_version ) version = unicode_http_header ( version ) if not self . is_allowed_version ( version ): raise exceptions . NotAcceptable ( self . invalid_version_message ) return version # We don't need to implement `reverse`, as the versioning is based # on the `Accept` header, not on the request URL.","title":"\u5728\u8def\u5f84\u4e2d\u4f53\u73b0"},{"location":"django/DRF/06-DRF\u7248\u672c&\u89e3\u6790\u5668/#drf_2","text":"def _load_post_and_files ( self ): \"\"\"Populate self._post and self._files if the content-type is a form type\"\"\" if self . method != 'POST' : self . _post , self . _files = QueryDict ( encoding = self . _encoding ), MultiValueDict () return if self . _read_started and not hasattr ( self , '_body' ): self . _mark_post_parse_error () return if self . content_type == 'multipart/form-data' : if hasattr ( self , '_body' ): # Use already read data data = BytesIO ( self . _body ) else : data = self try : self . _post , self . _files = self . parse_file_upload ( self . META , data ) except MultiPartParserError : # An error occurred while parsing POST data. Since when # formatting the error the request handler might access # self.POST, set self._post and self._file to prevent # attempts to parse POST data again. # Mark that an error occurred. This allows self.__repr__ to # be explicit about it instead of simply representing an # empty POST self . _mark_post_parse_error () raise # \u5982\u679c\u662f\u8fd9\u4e2a\u5934\u624d\u53bbrequest.body\u4e2d\u53bb\u89e3\u6790\u6570\u636e\uff0c\u4e0d\u4ec5\u5982\u6b64\uff0c\u8fd8\u5bf9\u6570\u636e\u683c\u5f0f\u6709\u8981\u6c42 # \u6570\u636e\u683c\u5f0f\u8981\u6c42\u5fc5\u987b\u662fa=1&b=2&c=3\u8fd9\u79cd\u7684\u3002form\u8868\u5355\u7684\u63d0\u4ea4\u9ed8\u8ba4\u5c31\u662f\u8fd9\u4e2a\u5934\uff0c\u6570\u636e\u683c\u5f0f\u9ed8\u8ba4\u4e5f\u662f\u8fd9\u6837\u7684 # \u5f53\u7136Ajax\u4e5f\u662f\u53ef\u4ee5\u63d0\u4ea4\u7684\uff0c\u867d\u7136\u4f60data\u5199\u7684\u662f\u5b57\u5178\uff0c\u4e0d\u8fc7\u5185\u90e8\u4e5f\u4f1a\u7ed9\u4f60\u8f6c\u6210\u4e0a\u9762\u7684\u6570\u636e\u683c\u5f0f\uff0c\u800c\u4e14ajax\u8fd8\u53ef\u4ee5 # \u5b9a\u5236\u8bf7\u6c42\u5934headers\u3002 elif self . content_type == 'application/x-www-form-urlencoded' : self . _post , self . _files = QueryDict ( self . body , encoding = self . _encoding ), MultiValueDict () else : self . _post , self . _files = QueryDict ( encoding = self . _encoding ), MultiValueDict () \u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u4e5f\u662frequest.body\u6709\u503c\uff0c\u4f46\u662frequest.post\u6ca1\u6709\u503c # \u8fd9\u4e2a\u65f6\u5019\u4e0d\u4ec5\u5934\u4e0d\u6ee1\u8db3 \uff0c \u6570\u636e\u683c\u5f0f\u4e5f\u4e0d\u6ee1\u8db3 \uff0c \u90fd\u4e0d\u6ee1\u8db3 \u3002 \u6240\u6709request . post\u4f9d\u7136\u6ca1\u6709\u503c \u3002 $ . ajax ({ url : xxx , method : xxx , data : JSON . Stringfy ({ 'a' : 1 , 'b' : 2 }) }) \u4e0a\u9762\u8fd9\u4e2a\u662fDjango\u7684\uff0c\u63a5\u4e0b\u6765\u770bDRF\u89e3\u6790\u5668 \u83b7\u53d6\u7528\u6237\u8bf7\u6c42 \u83b7\u53d6\u7528\u6237\u8bf7\u6c42\u4f53 \u6839\u636e\u7528\u6237\u8bf7\u6c42\u5934\u548cparser_classes\u4e2d\u652f\u6301\u7684\u5168\u7ed9\u4f60\u6c42\u5934\u8fdb\u884c\u6bd4\u8f83 \u7b26\u5408\u7684\u5904\u7406\u7c7b\u8fdb\u884c\u8bf7\u6c42\u7684\u5904\u7406 \u8d4b\u503c\u7ed9request.data \u8c03\u7528request.data\u7684\u65f6\u5019\u751f\u6548\u3002 # JSONParser class JSONParser ( BaseParser ): \"\"\" Parses JSON-serialized data. \"\"\" # \u5728JSONParser\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2amedia type media_type = 'application/json' renderer_class = renderers . JSONRenderer strict = api_settings . STRICT_JSON def parse ( self , stream , media_type = None , parser_context = None ): \"\"\" Parses the incoming bytestream as JSON and returns the resulting data. \"\"\" parser_context = parser_context or {} encoding = parser_context . get ( 'encoding' , settings . DEFAULT_CHARSET ) try : decoded_stream = codecs . getreader ( encoding )( stream ) parse_constant = json . strict_constant if self . strict else None return json . load ( decoded_stream , parse_constant = parse_constant ) except ValueError as exc : raise ParseError ( 'JSON parse error - %s ' % six . text_type ( exc )) # FormParser class FormParser ( BaseParser ): \"\"\" Parser for form data. \"\"\" media_type = 'application/x-www-form-urlencoded' def parse ( self , stream , media_type = None , parser_context = None ): \"\"\" Parses the incoming bytestream as a URL encoded form, and returns the resulting QueryDict. \"\"\" parser_context = parser_context or {} encoding = parser_context . get ( 'encoding' , settings . DEFAULT_CHARSET ) data = QueryDict ( stream . read (), encoding = encoding ) return data # 1\u3001\u6211\u4eec\u77e5\u9053\u6700\u540e\u83b7\u53d6\u5230\u7684\u7ed3\u679c\u53ef\u4ee5\u4ecerequest.data\u4e2d\u62ff\u5230\uff0c\u4f46\u662f\u8fd9\u4e2arequest\u662f\u7ecf\u8fc7\u5c01\u88c5\u540e\u7684Request\u7684\u5bf9\u8c61 # \u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u53bbRequest\u91cc\u9762\u53bb\u627edata\u5c5e\u6027\uff0c\u9996\u5148\u8c03\u7528\u4e86_hasattr\uff0c\u6ce8\u610f\u8fd9\u91cc\u662f\u5e26\u4e0b\u5212\u7ebf\u7684 @property def data ( self ): # 3\u3001\u9ed8\u8ba4\u7684self._full_data\u4e3aEmpty\uff0c\u90a3\u4e48_hasattr\u4f1a\u8fd4\u56deFalse\uff0c\u76f4\u63a5\u8c03\u7528_load_data_and_files if not _hasattr ( self , '_full_data' ): self . _load_data_and_files () return self . _full_data # 2\u3001\u627e\u5230\u4e0b\u5212\u7ebf_has_attr,\u5b83\u4f1a\u4ece\u5f53\u524dself\u4e2d\u53bb\u53d6\u5bf9\u5e94\u7684name\uff0c\u5982\u679c\u8fd9\u4e2aname\u53d6\u5230\u4e86\u662fEmpty\uff0c\u90a3\u4e48\u5c31\u8fd4\u56deFalse def _hasattr ( obj , name ): return not getattr ( obj , name ) is Empty # 4\u3001_full_data\u9ed8\u8ba4\u503c self . _full_data = Empty # 5\u3001Empty\u7684\u5b9a\u4e49 class Empty ( object ): \"\"\" Placeholder for unset attributes. Cannot use `None`, as that may be a valid value. \"\"\" pass # 6\u3001_load_data_and_files\u65b9\u6cd5 def _load_data_and_files ( self ): \"\"\" Parses the request content into `self.data`. \"\"\" # \u9ed8\u8ba4\u7684self._data = Empty\uff0c\u6240\u4ee5\u6761\u4ef6\u6ee1\u8db3\u76f4\u63a5\u8fdb\u5165\u8c03\u7528 if not _hasattr ( self , '_data' ): # \u8c03\u7528self._parse\u65b9\u6cd5 self . _data , self . _files = self . _parse () if self . _files : self . _full_data = self . _data . copy () self . _full_data . update ( self . _files ) else : self . _full_data = self . _data # if a form media type, copy data & files refs to the underlying # http request so that closable objects are handled appropriately. if is_form_media_type ( self . content_type ): self . _request . _post = self . POST self . _request . _files = self . FILES # 7\u3001self._parse\u65b9\u6cd5 def _parse ( self ): \"\"\" \u683c\u5f0f\u5316request\u7684\u6587\u672c\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u4e24\u4e2a\u5143\u7d20\u7684\u5143\u7ec4(data\uff0cfiles) May raise an `UnsupportedMediaType`, or `ParseError` exception. \"\"\" # 8\u3001\u83b7\u53d6\u7528\u6237\u7684\u8bf7\u6c42\u5934 media_type = self . content_type try : # 10\u3001\u83b7\u53d6\u7528\u6237\u7684request.body\u7684\u5185\u5bb9\uff0c\u4ee5stream\u7684\u5f62\u5f0f stream = self . stream except RawPostDataException : if not hasattr ( self . _request , '_post' ): raise # If request.POST has been accessed in middleware, and a method='POST' # request was made with 'multipart/form-data', then the request stream # will already have been exhausted. if self . _supports_form_parsing (): return ( self . _request . POST , self . _request . FILES ) stream = None if stream is None or media_type is None : if media_type and is_form_media_type ( media_type ): empty_data = QueryDict ( '' , encoding = self . _request . _encoding ) else : empty_data = {} empty_files = MultiValueDict () return ( empty_data , empty_files ) # 13\u3001\u8c03\u7528parser\u9009\u62e9\u5668\uff0c\u540e\u9762\u7684self.parsers\u5176\u5b9e\u5c31\u662f\u652f\u6301\u7684\u5bf9\u8c61\u3002parser_classes # self\u4e2d\u4e5f\u6709content-type\uff0c\u6240\u4ee5\u8fd9\u4e2aself\u662f\u8bf7\u6c42\u5bf9\u8c61\uff0c\u5305\u542b\u7528\u6237\u8bf7\u6c42\u7684content-type parser = self . negotiator . select_parser ( self , self . parsers ) if not parser : raise exceptions . UnsupportedMediaType ( media_type ) try : parsed = parser . parse ( stream , media_type , self . parser_context ) except Exception : # If we get an exception during parsing, fill in empty data and # re-raise. Ensures we don't simply repeat the error when # attempting to render the browsable renderer response, or when # logging the request or similar. self . _data = QueryDict ( '' , encoding = self . _request . _encoding ) self . _files = MultiValueDict () self . _full_data = self . _data raise # Parser classes may return the raw data, or a # DataAndFiles object. Unpack the result as required. try : return ( parsed . data , parsed . files ) except AttributeError : empty_files = MultiValueDict () return ( parsed , empty_files ) # 9\u3001\u52a0\u4e86property\u5c5e\u6027\uff0c\u53ef\u4ee5\u76f4\u63a5\u50cf\u503c\u4e00\u6837\u53bb\u4f7f\u7528\uff0c\u8fd9\u4e2acontent_type\u5b9e\u9645\u4e0a\u5c31\u662f\u53bb\u83b7\u53d6\u7528\u6237\u5b9e\u9645\u7684\u8bf7\u6c42\u5934\u3002 @property def content_type ( self ): meta = self . _request . META return meta . get ( 'CONTENT_TYPE' , meta . get ( 'HTTP_CONTENT_TYPE' , '' )) # 11\u3001stream @property def stream ( self ): \"\"\" Returns an object that may be used to stream the request content. \"\"\" # \u9ed8\u8ba4\u7684_stream\u5c31\u662fEmpty\u6240\u4ee5\uff0c\u76f4\u63a5\u8c03\u7528_load_stream\u65b9\u6cd5 if not _hasattr ( self , '_stream' ): self . _load_stream () return self . _stream # 12\u3001\u8fd4\u56deBytesIO\u5f62\u5f0f\u7684body\u4fe1\u606f def _load_stream ( self ): \"\"\" Return the content body of the request, as a stream. \"\"\" meta = self . _request . META try : content_length = int ( meta . get ( 'CONTENT_LENGTH' , meta . get ( 'HTTP_CONTENT_LENGTH' , 0 )) ) except ( ValueError , TypeError ): content_length = 0 if content_length == 0 : self . _stream = None elif not self . _request . _read_started : self . _stream = self . _request else : self . _stream = io . BytesIO ( self . body ) \u770b\u4e00\u5207\u7684\u5f00\u5934\uff0c\u5165\u53e3\u8fd8\u662fdispatch def initialize_request ( self , request , * args , ** kwargs ): \"\"\" Returns the initial request object. \"\"\" parser_context = self . get_parser_context ( request ) return Request ( request , # \u8fd9\u6837Request\u7684\u5b9e\u4f8b\u5c31\u4f1a\u5b58\u5728self.parsers\u8fd9\u4e2a\u5c5e\u6027\u53ef\u4ee5\u8c03\u7528\u3002 parsers = self . get_parsers (), authenticators = self . get_authenticators (), negotiator = self . get_content_negotiator (), parser_context = parser_context ) def get_parsers ( self ): \"\"\" Instantiates and returns the list of parsers that this view can use. \"\"\" return [ parser () for parser in self . parser_classes ] \u6700\u540e\u8fd9\u4e2a\u89e3\u6790\u5668\u7684\u5c5e\u6027\u5199\u5728\u5168\u5c40\u5c31\u53ef\u4ee5\u4e86\u3002 http\u534f\u8bae\u7684\u8bf7\u6c42\u65b9\u6cd5 \u5e38\u7528\u7684\u8bf7\u6c42\u5934\uff08\u72b6\u6001\u7801\uff0c\u65b9\u6cd5\u7b49\uff09\uff1a application/ refer\u7528\u6765\u505a\u9632\u76d7\u94fe\uff0cuser_agent\uff0caccept\uff0chost\u7b49\u3002","title":"DRF\u89e3\u6790\u5668"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/","text":"DRF\u5e8f\u5217\u5316 \u00b6 \u8bf7\u6c42\u8ba4\u8bc1 QuerySet\u8fdb\u884c\u5e8f\u5217\u5316 \u7b80\u5355\u4f7f\u7528 \u00b6 QuerySet\u5e8f\u5217\u5316 \u00b6 class UserInfoSer ( serializers . Serializer ): \"\"\" \u4ee5userinfo\u8868\u4e3a\u4f8b\u5b50\uff0c\u5982\u4e0b\u662f\u6211\u60f3\u8981\u663e\u793a\u7684\u5b57\u6bb5 1-username\u548cpassword\u90fd\u662f\u672c\u8868\u5b57\u6bb5\uff0c\u76f4\u63a5\u5c55\u793a\u5c31\u53ef\u4ee5\uff0c\u8c03\u7528\u5bf9\u5e94\u7c7b\u522b\u4e3aCharField 2-user_type\u4e3a\u7528\u6237\u7c7b\u578b\uff0c\u8fd9\u5728\u6211\u4eec\u7684models\u5b9a\u4e49\u4e2d\u662f\u4e00\u4e2achoice\u5b57\u6bb5\uff0c\u5982\u679c\u76f4\u63a5\u53d6IntegerField\u7684\u8bdd \u90a3\u4e48\u8fd4\u56de\u7684\u5c06\u662f\u4e00\u4e2aid\u800c\u5df2\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684typeid\u5bf9\u5e94\u7684\u4e2d\u6587\u540d\u79f0\uff0c\u56e0\u6b64\u8fd9\u4e00\u5757\u8981\u6307\u5b9a\u6e90source\u3002 orm\u5185\u90e8\u9488\u5bf9choice\u5b57\u6bb5\u5b58\u5728\u4e00\u4e2aget_Foo_display\u7684\u65b9\u6cd5\uff0c\u4f1a\u8fd4\u56de\u5bf9\u5e94\u7684choice\u5bf9\u5e94\u7684\u503c\uff0c\u90a3\u4e48\u5bf9\u5e94\u5230\u8fd9\u91cc\u5c31\u662f \u8981\u663e\u793auser_type\u5b57\u6bb5\u5bf9\u5e94\u7684choice\u7684\u9009\u9879\u503c\u3002 3-\u5916\u952e\u5b57\u6bb5\uff0c\u8fd9\u91cc\u8fd8\u53ef\u4ee5\u586b\u5199\u5bf9\u5e94\u7684\u5916\u952e\u5b57\u6bb5\uff0c\u6bd4\u5982group\uff0c\u5bf9\u5e94\u7684\u5c31\u662fgroup\u5bf9\u8c61\uff0c.title\uff0c\u5c31\u662f\u8c03\u7528group\u5bf9\u8c61 \u7684title\u5b57\u6bb5\u7684\u503c\uff0c\u540c\u6837\u4e5f\u8981\u6307\u5b9asource\u3002 4-\u800c\u9488\u5bf9\u591a\u5bf9\u591a\u5b57\u5178\u5728\u8fd9\u91cc\u6307\u5b9a\u65b9\u6cd5\u7684\u8bdd\u5176\u5b9e\u5c31\u4e0d\u662f\u90a3\u4e48\u65b9\u4fbf\u4e86\uff0c\u56e0\u6b64\u91c7\u7528\u4e00\u4e2a\u65b0\u7684\u7c7bSerializerMethodField \uff0c\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u5141\u8bb8\u6211\u4eec\u81ea\u5b9a\u4e49\u65b9\u6cd5\u6765\u6307\u5b9a\u663e\u793a\u5185\u5bb9\uff0c\u5047\u5982\u5b57\u6bb5\u540d\u53ebrls\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u547d\u540d\u4e00\u4e2aget_rls\u7684\u65b9\u6cd5\uff0c\u5185\u90e8 \u64cd\u4f5c\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u62ff\u5230\u6240\u6709\u7684role\u5bf9\u8c61\u4ee5\u540e\u7136\u540e\u628a\u5bf9\u8c61\u7684id\u548ctitle\u53d6\u51fa\u6765\u6dfb\u52a0\u5230ret\u91cc\uff0c\u8fd4\u56de\u7684ret\u5373\u662frls\u7684\u503c \"\"\" username = serializers . CharField () password = serializers . CharField () # choices\u5b57\u6bb5 ut = serializers . CharField ( source = 'get_user_type_display' ) # \u5916\u952e\u5b57\u6bb5\u5185\u90e8\u662f\u6839\u636e.\u505asplit\uff0c\u53d6\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e00\u76f4.\u4e0b\u53bb\u3002 gp = serializers . CharField ( source = 'group.title' ) # \u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u7528SerializerMethod\u8fdb\u884c\u81ea\u5b9a\u4e49\u65b9\u6cd5\u663e\u793a\uff0c\u4e0a\u7ebf\u7684choice\uff0cgp\u90fd\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u7684\u5f62\u5f0f rls = serializers . SerializerMethodField () def get_rls ( self , row ): role_obj_list = row . roles . all () ret = [] for item in role_obj_list : ret . append ({ 'id' : item . id , 'title' : item . title }) return ret # \u5bf9\u5e94\u7684CBV class UserInfo ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def get ( self , request , * args , ** kwargs ): users = models . UserInfo . objects . all () ser = UserInfoSer ( instance = users , many = True ) # ser.data\u8fd4\u56de\u7684\u662f\u4e00\u4e2aOrderedDIct\u662f\u4e00\u4e2a\u6709\u5e8f\u5b57\u5178\uff0c\u5b9e\u8d28\u4e0a\u8fd8\u662f\u4e00\u4e2a\u5b57\u5178 ret = json . dumps ( ser . data , ensure_ascii = False ) return HttpResponse ( ret ) \u8bbf\u95ee\u5bf9\u5e94\u7684\u8def\u7531\u5f97\u5230\u7684\u7ed3\u679c\u5982\u4e0b\uff1a [{ \"username\" : \"lamber\" , \"password\" : \"123\" , \"ut\" : \"\u666e\u901a\u7528\u6237\" , \"gp\" : \"A\u7ec4\" , \"rls\" : [{ \"id\" : 1 , \"title\" : \"\u533b\u751f\" }, { \"id\" : 2 , \"title\" : \"\u5b66\u751f\" }]}, { \"username\" : \"maxiaoyu\" , \"password\" : \"123\" , \"ut\" : \"VIP\" , \"gp\" : \"b\u7ec4\" , \"rls\" : [{ \"id\" : 2 , \"title\" : \"\u5b66\u751f\" }, { \"id\" : 3 , \"title\" : \"\u8001\u5e08\" }]}, { \"username\" : \"qimaosen\" , \"password\" : \"123\" , \"ut\" : \"SVIP\" , \"gp\" : \"A\u7ec4\" , \"rls\" : [{ \"id\" : 3 , \"title\" : \"\u8001\u5e08\" }]}] \u5176\u5b9e\u6211\u4eec\u53ea\u505a\u4e86\u4e24\u4e2a\u4e8b\u60c5\uff1a \u5b9a\u4e49\u4e00\u4e2a\u5e8f\u5217\u5316\u7684\u7c7b\uff0c\u5199\u4e0a\u5bf9\u5e94\u7684\u5b57\u6bb5 \u5728CBV\u4e2d\u5b9e\u4f8b\u5316\u5e8f\u5217\u7c7b\uff0c\u751f\u6210\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\uff0c\u8fd4\u56de\u7ed9\u524d\u7aef\u3002 \u5728\u5e8f\u5217\u5316\u7c7b\u4e2d\u6211\u4eec\u5355\u72ec\u6307\u5b9a\u4e86\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u7684\u663e\u793a\uff0c\u5176\u5b9e\u8fd9\u4e2a\u8fd8\u53ef\u4ee5\u66f4\u7b80\u5355\u7684\u7684\u53bb\u64cd\u4f5c\uff0c\u53ea\u8981\u7ee7\u627f\u5185\u7f6e\u7684ModelSerializer\u7c7b\u5373\u53ef\uff0c\u56e0\u6b64\u4e0a\u9762\u7684\u5185\u5bb9\u5c31\u53ef\u4ee5\u6539\u6210\u5982\u4e0b\u7684\u5f62\u5f0f\uff1a class UserInfoSer ( serializers . ModelSerializer ): class Meta : model = models . UserInfo fields = \"__all__\" \u5f53fields\u8bbe\u7f6e\u4e3a __all__ \u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u5e2e\u4f60\u663e\u793a\u6240\u6709\u7684\u5b57\u6bb5\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u81ea\u5df1\u4e00\u4e2a\u4e00\u4e2a\u624b\u5199\u4e86\uff0c\u4e0d\u8fc7\u4e5f\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u8fd9\u91cc\u7684\u5904\u7406\u90fd\u662f\u6700\u7b80\u5355\u5316\u7684\u5904\u7406\uff0c\u5373\u5bf9\u5e94\u7684group\u4e5f\u53ea\u662f\u7ed9\u4f60\u663e\u793a\u7ec4id\uff0cchoices\u4e5f\u662f\u663e\u793achoice\u7684id\u800c\u4e0d\u662f\u663e\u793achoice\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u90e8\u5206\u5b57\u6bb5\u8fd8\u662f\u9700\u8981\u6211\u4eec\u81ea\u5df1\u6765\u8fdb\u884c\u5904\u7406\uff0c\u6765\u8fdb\u884c\u4e00\u4e0b\u6539\u8fdb\u5982\u4e0b\uff1a class UserInfoSer ( serializers . ModelSerializer ): ut = serializers . CharField ( source = 'get_user_type_display' ) gp = serializers . CharField ( source = 'group.title' ) rls = serializers . SerializerMethodField () class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'ut' , 'rls' , 'gp' ] def get_rls ( self , row ): role_obj_list = row . roles . all () ret = [] for item in role_obj_list : ret . append ({ 'id' : item . id , 'title' : item . title }) return ret \u4e0d\u8fc7\u8fd8\u6709\u4e00\u79cd\u66f4\u4e3a\u7b80\u5355\u7684\u5199\u6cd5\uff0c\u6307\u5b9a\u4e00\u4e2adepth\uff0cdepth\u8868\u793a\u6df1\u5ea6\uff0c\u6211\u4eec\u5728\u5916\u952e\u8fdb\u884c\u8054\u8868\u67e5\u8be2\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u201c.\u201d\u4e00\u76f4\u591a\u7ea7\u53bb\u83b7\u53d6\uff0c\u5373\u4e00\u76f4\u201c.\u201d\u4e0b\u53bb\uff0c\u8fd9\u91ccdepth\u5c31\u662f\u6307\u5b9a\u8981\u6df1\u5165\u8d70\u591a\u5c11\u5c42\uff0c\uff1a class UserInfoSer ( serializers . ModelSerializer ): class Meta : model = models . UserInfo fields = \"__all__\" # \u9ed8\u8ba4ModelSerializer\u4f7f\u7528\u4e3b\u952e\u4f5c\u4e3a\u5173\u8054\u5b57\u6bb5\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528depth\u6765\u7b80\u5355\u7684\u751f\u6210\u5d4c\u5957\u8868\u793a\uff0c # depth\u5e94\u8be5\u662f\u6574\u6570\uff0c\u8868\u660e\u5d4c\u5957\u7684\u5c42\u7ea7\u6570\u91cf\uff0c\u5efa\u8bae3~4\u5c42\u5c31\u5dee\u4e0d\u591a\u4e86\uff0c\u518d\u591a\u5c31\u4f1a\u6162\u4e86\u3002 depth = 1 \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b57\u6bb5\u663e\u793a\uff0c\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u5236\u7684Field\u7684\u7c7b\uff0c\u5728\u5185\u90e8\u91cd\u5199to_representtation\u65b9\u6cd5\uff0c\u65b9\u6cd5\u8fd4\u56de\u4ec0\u4e48\u5c31\u663e\u793a\u4ec0\u4e48\u3002 class MyField ( serializers . CharField ): def to_representation ( self , value ): \"\"\" \u53ef\u4ee5\u81ea\u5b9a\u4e49\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u4ec0\u4e48\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u9875\u9762\u6570\u636e\u5c31\u662f\u4ec0\u4e48\uff0cvalue\u662f\u4ece\u6570\u636e\u5e93\u53d6\u5230\u7684\u503c\uff0c \u8fd9\u4e2a\u65b9\u6cd5\u4e00\u822c\u662f\u7528\u4e0d\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u81ea\u5b9a\u4e49\u65b9\u6cd5\u4e00\u822c\u5c31\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002 \"\"\" return time . time () class UserInfoSer ( serializers . ModelSerializer ): ut = serializers . CharField ( source = 'get_user_type_display' ) gp = serializers . CharField ( source = 'group.title' ) x1 = MyField ( source = 'username' ) class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'ut' , 'gp' , 'x1' ] \u5bf9\u5e94\u7684\u7ed3\u679c\u5982\u4e0b\uff1a [{ \"id\" : 1 , \"username\" : \"lamber\" , \"ut\" : \"\u666e\u901a\u7528\u6237\" , \"gp\" : \"A\u7ec4\" , \"x1\" : 1550142281.049991 }, { \"id\" : 2 , \"username\" : \"maxiaoyu\" , \"ut\" : \"VIP\" , \"gp\" : \"b\u7ec4\" , \"x1\" : 1550142281.052642 }, { \"id\" : 3 , \"username\" : \"qimaosen\" , \"ut\" : \"SVIP\" , \"gp\" : \"A\u7ec4\" , \"x1\" : 1550142281.054938 }] Hypermedia API \u00b6 Hypermedia API\uff0cRESTful API\u6700\u597d\u505a\u5230Hypermedia\uff0c\u5373\u8fd4\u56de\u7ed3\u679c\u4e2d\u63d0\u4f9b\u94fe\u63a5\uff0c\u8fde\u5411\u5176\u4ed6API\u65b9\u6cd5\uff0c\u4f7f\u5f97\u7528\u6237\u4e0d\u67e5\u6587\u6863\uff0c\u4e5f\u77e5\u9053\u4e0b\u4e00\u6b65\u5e94\u8be5\u505a\u4ec0\u4e48\u3002\u4ee5\u7528\u6237\u7ec4\u4e3a\u4f8b\uff1a class UserInfoSer ( serializers . ModelSerializer ): \"\"\" \u8fd9\u91cc\u7684lookup_url_kwarg\u662f\u6307\u7684\u6211\u53bb\u53cd\u5411\u751f\u6210url\u7684\u65f6\u5019\uff0c\u53c2\u6570\u5199\u7684\u503c\u662f\u4ec0\u4e48\uff0c \u5982\u679c\u662fpk\u90a3\u5c31\u662fpk\uff0c\u5982\u679c\u662fxxx\u90a3\u5339\u914d\u5230\u7684\u5c31\u662fxxx\uff0c\u8fd9\u4e2a\u662f\u9488\u5bf9URL\u4e0a\u6709\u53c2\u6570\u7684\u60c5\u51b5 lookup_field\u7528\u4e8e\u6267\u884c\u5404\u4e2a\u6a21\u578b\u5b9e\u4f8b\u7684\u5bf9\u8c61\u67e5\u627e\u7684\u6a21\u578b\u5b57\u6bb5\u3002\u9ed8\u8ba4\u4e3a 'pk'\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f7f\u7528 hyperlinked API \u65f6\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u81ea\u5b9a\u4e49\u503c\uff0c \u5219\u9700\u8981\u786e\u4fdd API \u89c6\u56fe\u548c\u5e8f\u5217\u5316\u7c7b\u8bbe\u7f6e\u4e86 lookup field\uff0c\u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u6309\u7167pk\u6765\uff0c\u6570\u636e\u53ef\u80fd\u662f\u4e0d\u5bf9\u7684\u3002 \u751f\u6210\u53cd\u5411URL\u5730\u5740\uff0c\u5e2e\u52a9\u63a5\u53e3\u4eba\u8c03\u7528\u7684\u65f6\u5019\u53ef\u4ee5\u4e86\u89e3\u5230\u8fde\u63a5\u7684\u5185\u5bb9\u3002 \"\"\" group = serializers . HyperlinkedIdentityField ( view_name = 'gp' , lookup_url_kwarg = 'pk' , lookup_field = 'group_id' ) class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'group' ] class UserInfo ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def get ( self , request , * args , ** kwargs ): users = models . UserInfo . objects . all () ser = UserInfoSer ( instance = users , many = True ) # \u8fd4\u56de\u7684ser.data\u662f\u4e00\u4e2aOrderedDIct\u662f\u4e00\u4e2a\u6709\u5e8f\u5b57\u5178\uff0c\u5b9e\u8d28\u4e0a\u8fd8\u662f\u4e00\u4e2a\u5b57\u5178 ret = json . dumps ( ser . data , ensure_ascii = False ) return HttpResponse ( ret ) class GroupSer ( serializers . ModelSerializer ): group = serializers . HyperlinkedIdentityField ( view_name = 'gp' , lookup_url_kwarg = 'pk' , lookup_field = 'id' ) class Meta : model = models . UserGroup fields = \"__all__\" class Group ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def get ( self , request , * args , ** kwargs ): pk = kwargs . get ( 'pk' ) obj = models . UserGroup . objects . filter ( id = pk ) . first () # \u4f46\u51e1\u4f60\u8981\u662f\u4f7f\u7528HyperlinkedIdentityField\u4e86\uff0c\u4f60\u5c31\u8981\u52a0\u4e0acontext\u8fd9\u4e2a\u53c2\u6570\uff0c\u8fd9\u6837\u5c31\u80fd\u83b7\u5f97\u53cd\u5411\u7684url # \u5426\u5219\u4f1a\u62a5\u5982\u4e0b\u5f02\u5e38\uff1a # `HyperlinkedIdentityField` requires the request in the serializer context. Add `context={'request': request}` when instantiating the serializer. ser = GroupSer ( instance = obj , many = False , context = { 'request' : request }) ret = json . dumps ( ser . data ) return HttpResponse ( ret ) \u8fd4\u56de\u7684\u7ed3\u679c\u5185\u5bb9\u5982\u4e0b\uff1a [ { \"id\" : 1 , \"username\" : \"lamber\" , \"group\" : \"http://127.0.0.1:8000/group/1\" }, { \"id\" : 2 , \"username\" : \"maxiaoyu\" , \"group\" : \"http://127.0.0.1:8000/group/2\" }, { \"id\" : 3 , \"username\" : \"qimaosen\" , \"group\" : \"http://127.0.0.1:8000/group/1\" } ] \u8bf7\u6c42\u8ba4\u8bc1 \u00b6 \u5728\u8bf7\u6c42\u8ba4\u8bc1\u8fd9\u91cc\u5176\u5b9e\u5f88\u7c7b\u4f3c\u4e8eForm\u7ec4\u4ef6\u7684\u8bf7\u6c42\u8ba4\u8bc1\uff0c\u6bd4\u5982\u6211\u8981\u9488\u5bf9username\u505a\u4e00\u4e2a\u8bf7\u6c42\u8ba4\u8bc1 class xxValidator ( object ): def __init__ ( self , base ): self . base = base def __call__ ( self , value , * args , ** kwargs ): if not value . startswith ( self . base ): message = '\u6807\u9898\u5fc5\u987b\u4ee5 %s \u5f00\u5934' % self . base raise serializers . ValidationError ( message ) class UserInfoSer ( serializers . ModelSerializer ): username = serializers . CharField ( # \u8fd9\u91cc\u9762\u5305\u542b\u4e86\u5f88\u591a\u539f\u751f\u7684\u9a8c\u8bc1\u89c4\u5219\uff0c\u6bd4\u5982required\uff0c\u4e0d\u80fd\u4e3a\u7a7a error_messages = { 'required' : '\u4e0d\u80fd\u4e3a\u7a7a' }, # \u4f46\u662f\u6211\u4eec\u8fd8\u53ef\u4ee5\u81ea\u5df1\u53bb\u5b9a\u4e49\u9a8c\u8bc1\u89c4\u5219\uff0c\u65b9\u6cd5\u5c31\u662f\u5b9a\u4e00\u4e2a\u7c7b\u5c31\u53ef\u4ee5\u4e86\uff0c\u6bd4\u5982\u4e0a\u9762\u7684xxValidator\u7c7b # \u5982\u679c\u6ee1\u8db3\u7684\u8bdd\u4e0d\u4f5c\u64cd\u4f5c\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3raise\u4e00\u4e2aValidationError # \u8fd9\u91cc\u8c03\u7528\u4e86__call__\u65b9\u6cd5\uff0c\u56e0\u6b64\u7c7b\u53ef\u4ee5\u76f4\u63a5\u52a0\u62ec\u53f7\u8c03\u7528\uff0c\u9ed8\u8ba4\u5c31\u662f\u8c03\u7528\u7684__call__\u65b9\u6cd5\u3002 validators = [ xxValidator ( '\u5475\u5475\u54d2' ), ], ) group = serializers . HyperlinkedIdentityField ( view_name = 'gp' , lookup_url_kwarg = 'pk' , lookup_field = 'group_id' ) class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'group' ] class UserInfo ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def post ( self , request , * args , ** kwargs ): ser = UserInfoSer ( data = request . data ) if ser . is_valid (): print ( ser . validated_data ) else : print ( ser . errors ) return HttpResponse ( '\u6d4b\u8bd5\u7684post\u8bf7\u6c42' ) \u5982\u679cpost\u8bf7\u6c42\u8fc7\u6765\u7684\u5185\u5bb9\u4e0d\u662f\u4ee5\u201c\u5475\u5475\u54d2\u201d\u5f00\u5934\u7684\u8bdd\uff0cser.errors\u5c31\u4f1a\u6253\u5370\u51fa\u5bf9\u5e94\u7684\u62a5\u9519 { 'username' : [ ErrorDetail ( string = '\u6807\u9898\u5fc5\u987b\u4ee5\u5475\u5475\u54d2\u5f00\u5934' , code = 'invalid' )]} \u5f53\u7136\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u4e0d\u4f1a\u53bb\u8fd9\u4e48\u505a\uff0cForm\u7ec4\u4ef6\u4e2d\u6709\u94a9\u5b50\uff0c\u8fd9\u91cc\u540c\u6837\u4e5f\u6709\u3002 def is_valid ( self , raise_exception = False ): \"\"\"\u7701\u7565\u4e00\u90e8\u5206\u4ee3\u7801\"\"\" # \u5982\u679c\u6ca1\u6709_validated_data\u5c5e\u6027\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u4f1a\u53bb\u8c03\u7528run_validation\u65b9\u6cd5\u3002 if not hasattr ( self , '_validated_data' ): try : self . _validated_data = self . run_validation ( self . initial_data ) except ValidationError as exc : self . _validated_data = {} self . _errors = exc . detail else : self . _errors = {} if self . _errors and raise_exception : raise ValidationError ( self . errors ) return not bool ( self . _errors ) def run_validation ( self , data = empty ): \"\"\" Validate a simple representation and return the internal value. The provided data may be `empty` if no representation was included in the input. May raise `SkipField` if the field should not be included in the validated data. \"\"\" ( is_empty_value , data ) = self . validate_empty_values ( data ) if is_empty_value : return data value = self . to_internal_value ( data ) self . run_validators ( value ) return value def validate_empty_values ( self , data ): \"\"\" Validate empty values, and either: * Raise `ValidationError`, \u6307\u51fa\u65e0\u6548\u7684\u6570\u636e * Raise `SkipField`, \u6307\u51fa\u8fd9\u4e2a\u5b57\u6bb5\u5e94\u8be5\u88ab\u5ffd\u7565 * Return (True, data), indicating an empty value that should be returned without any further validation being applied. * Return (False, data), indicating a non-empty value, that should have validation applied as normal. \"\"\" if self . read_only : return ( True , self . get_default ()) if data is empty : if getattr ( self . root , 'partial' , False ): raise SkipField () if self . required : self . fail ( 'required' ) return ( True , self . get_default ()) if data is None : if not self . allow_null : self . fail ( 'null' ) return ( True , None ) return ( False , data ) \u6e90\u7801\u6d41\u7a0b \u00b6 \u6211\u4eec\u5199\u4e00\u4e2a\u8981\u505a\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u5047\u5982\u8bf4\u7ee7\u627f\u4e86serializers.Serializer\u7c7b\uff0c\u6211\u4eec\u5728CBV\u4e2d\u8981\u8fdb\u884c\u8c03\u7528\uff1a # \u4e5f\u5c31\u662f\u5b9e\u4f8b\u5316\uff0c\u90a3\u4e48\u6574\u4e2a\u4ee3\u7801\u6d41\u7a0b\u5c31\u4ece\u5b9e\u4f8b\u5316\u5f00\u59cb\u770b ser = UserInfoSer ( instance = users , many = True ) \u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u4f1a\u4f18\u5148\u6307\u5b9a\u7684\u4e24\u4e2a\u65b9\u6cd5\u4e00\u4e2a\u662f __new__ \u53e6\u5916\u4e00\u4e2a\u5c31\u662f\u6784\u9020\u65b9\u6cd5 __init__ \u3002\u4f46\u662f\u6211\u4eec\u5728Serializer\u4e2d\u5e76\u6ca1\u6709\u53d1\u73b0\uff0c\u6240\u4ee5\u5230\u5b83\u96c6\u6210\u7684\u7236\u7c7bBaseSerializer\u4e2d\u53bb\u627e\u3002 def __init__ ( self , instance = None , data = empty , ** kwargs ): # \u8fd9\u4e2a\u5c31\u662f\u6211\u4eec\u4f20\u9012\u7684instance\uff0c\u53ef\u80fd\u662f\u4e00\u4e2a\uff0c\u4e5f\u53ef\u80fd\u662f\u591a\u4e2a\u3002 self . instance = instance if data is not empty : self . initial_data = data self . partial = kwargs . pop ( 'partial' , False ) self . _context = kwargs . pop ( 'context' , {}) kwargs . pop ( 'many' , None ) super ( BaseSerializer , self ) . __init__ ( ** kwargs ) def __new__ ( cls , * args , ** kwargs ): # \u91cd\u5199\u8fd9\u4e2a\u7c7b\u6765\u81ea\u52a8\u6784\u5efaListSerializer\u7c7b\u4ee3\u66ff\uff0c\u5f53\u8bbe\u7f6e\u4e86many=True\u65f6\u5019 # \u6211\u4eec\u4f1a\u53bb\u628amany\u8fd9\u4e2a\u9009\u9879pop\u51fa\u6765\uff0c\u5982\u679c\u6ca1\u6709\u90a3\u5c31\u662fFalse\uff0c\u4e0d\u8d70\u8fd9\u91cc\u7684\u6761\u4ef6 # \u76f4\u63a5\u53bb\u8c03\u7528\u7236\u7c7b\u7684__new__\u65b9\u6cd5. if kwargs . pop ( 'many' , False ): # \u5982\u679c\u8bf4\u6709many\uff0c\u90a3\u4e48\u8c03\u7528\u7c7b\u65b9\u6cd5many_init return cls . many_init ( * args , ** kwargs ) return super ( BaseSerializer , cls ) . __new__ ( cls , * args , ** kwargs ) \u5728Serializer\uff0c\u5982\u679c\u6ca1\u6709\u7ed9meta\u8bbe\u7f6elist_serializer_class\u5c5e\u6027\uff0c\u90a3\u4e48list_serializer_class\u5c5e\u6027\u5c31\u662fListSerializer\uff0c\u6700\u540e\u8fd4\u56de\u7684\u4e5f\u5c31\u662fListSerializer\u7684\u5bf9\u8c61\uff0c\u63a5\u4e0b\u6765\u6267\u884cListSerializer\u5bf9\u8c61\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5426\u5219\u6267\u884cBaseSerializer\u91cc\u9762\u7684\u6784\u9020\u65b9\u6cd5\uff08\u5982\u679c\u6211\u4eec\u91cd\u5199\u4e86\u8fd9\u4e2a\u5c31\u4f1a\u8c03\u7528\u6211\u4eec\u81ea\u5df1\u7684\u6784\u9020\u65b9\u6cd5\uff09\u3002 @classmethod def many_init ( cls , * args , ** kwargs ): \"\"\" This method implements the creation of a `ListSerializer` parent class when `many=True` is used. You can customize it if you need to control which keyword arguments are passed to the parent, and which are passed to the child. Note that we're over-cautious in passing most arguments to both parent and child classes in order to try to cover the general case. If you're overriding this method you'll probably want something much simpler, eg: @classmethod def many_init(cls, *args, **kwargs): kwargs['child'] = cls() return CustomListSerializer(*args, **kwargs) \"\"\" allow_empty = kwargs . pop ( 'allow_empty' , None ) child_serializer = cls ( * args , ** kwargs ) list_kwargs = { 'child' : child_serializer , } if allow_empty is not None : list_kwargs [ 'allow_empty' ] = allow_empty list_kwargs . update ({ key : value for key , value in kwargs . items () if key in LIST_SERIALIZER_KWARGS }) meta = getattr ( cls , 'Meta' , None ) list_serializer_class = getattr ( meta , 'list_serializer_class' , ListSerializer ) return list_serializer_class ( * args , ** list_kwargs ) \u7136\u540e\u6211\u4eec\u8c03\u7528\u4e86\u8fd9\u4e2a\u8fd9\u4e2a\u5bf9\u8c61\u7684data\u5c5e\u6027\uff1a ret = json . dumps ( ser . data , ensure_ascii = False ) \u6765\u770b\u4e00\u4e0b\u8fd9\u4e2adata\u65b9\u6cd5\u7684\u5b9e\u73b0 @property def data ( self ): ret = super ( Serializer , self ) . data return ReturnDict ( ret , serializer = self ) @property def data ( self ): if hasattr ( self , 'initial_data' ) and not hasattr ( self , '_validated_data' ): msg = ( 'When a serializer is passed a `data` keyword argument you ' 'must call `.is_valid()` before attempting to access the ' 'serialized `.data` representation. \\n ' 'You should either call `.is_valid()` first, ' 'or access `.initial_data` instead.' ) raise AssertionError ( msg ) if not hasattr ( self , '_data' ): if self . instance is not None and not getattr ( self , '_errors' , None ): self . _data = self . to_representation ( self . instance ) elif hasattr ( self , '_validated_data' ) and not getattr ( self , '_errors' , None ): self . _data = self . to_representation ( self . validated_data ) else : self . _data = self . get_initial () return self . _data def to_representation ( self , instance ): raise NotImplementedError ( '`to_representation()` must be implemented.' ) # Serializer\u7c7b\u7684\u7c7b\u65b9\u6cd5 def to_representation ( self , instance ): \"\"\" Object instance -> Dict of primitive datatypes. \"\"\" ret = OrderedDict () fields = self . _readable_fields # fields\u5176\u5b9e\u5c31\u662f\u54b1\u4eec\u5b9a\u4e49\u7684\u8fd9\u4e9b\u5b57\u6bb5 for field in fields : try : # \u8c03\u7528\u5b57\u6bb5\u7684get_attribute\u65b9\u6cd5\uff0c\u5e76\u628ainstance\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u8fdb\u53bb\u3002 attribute = field . get_attribute ( instance ) except SkipField : continue # We skip `to_representation` for `None` values so that fields do # not have to explicitly deal with that case. # # For related fields with `use_pk_only_optimization` we need to # resolve the pk value. check_for_none = attribute . pk if isinstance ( attribute , PKOnlyObject ) else attribute if check_for_none is None : ret [ field . field_name ] = None else : ret [ field . field_name ] = field . to_representation ( attribute ) return ret \u627e\u4e00\u4e2aCharfield\u770b\u770b # from rest_framework.serializers import CharField\uff0c\u53d1\u73b0CharField\u4e2d\u5e76\u6ca1\u6709get_attribute\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6240\u4ee5\u7ee7\u7eed\u627e\uff0c\u5b83\u7684\u7236\u7c7bField\u53d1\u73b0\u4e86\u8fd9\u4e2a\u65b9\u6cd5 def get_attribute ( self , instance ): \"\"\" Given the *outgoing* object instance, return the primitive value that should be used for this field. \"\"\" try : return get_attribute ( instance , self . source_attrs ) except ( KeyError , AttributeError ) as exc : if self . default is not empty : return self . get_default () if self . allow_null : return None if not self . required : raise SkipField () msg = ( 'Got {exc_type} when attempting to get a value for field ' '`{field}` on serializer `{serializer}`. \\n The serializer ' 'field might be named incorrectly and not match ' 'any attribute or key on the `{instance}` instance. \\n ' 'Original exception text was: {exc}.' . format ( exc_type = type ( exc ) . __name__ , field = self . field_name , serializer = self . parent . __class__ . __name__ , instance = instance . __class__ . __name__ , exc = exc ) ) raise type ( exc )( msg ) # source if self . source == '*' : self . source_attrs = [] else : # \u6bd4\u5982group.title\uff0c\u5206\u9694\u540e\u5c31\u662fgroup\uff0ctitle self . source_attrs = self . source . split ( '.' ) def get_attribute ( instance , attrs ): \"\"\" Similar to Python's built in `getattr(instance, attr)`, but takes a list of nested attributes, instead of a single attribute. Also accepts either attribute lookup on objects or dictionary lookups. \"\"\" for attr in attrs : try : if isinstance ( instance , collections . Mapping ): instance = instance [ attr ] else : instance = getattr ( instance , attr ) except ObjectDoesNotExist : return None if is_simple_callable ( instance ): try : instance = instance () except ( AttributeError , KeyError ) as exc : # If we raised an Attribute or KeyError here it'd get treated # as an omitted field in `Field.get_attribute()`. Instead we # raise a ValueError to ensure the exception is not masked. raise ValueError ( 'Exception raised in callable attribute \"{0}\"; original exception was: {1}' . format ( attr , exc )) return instance def is_simple_callable ( obj ): \"\"\" True if the object is a callable that takes no arguments. \"\"\" if not ( inspect . isfunction ( obj ) or inspect . ismethod ( obj ) or isinstance ( obj , functools . partial )): return False sig = inspect . signature ( obj ) params = sig . parameters . values () return all ( param . kind == param . VAR_POSITIONAL or param . kind == param . VAR_KEYWORD or param . default != param . empty for param in params ) def isfunction ( object ): \"\"\"Return true if the object is a user-defined function. Function objects provide these attributes: __doc__ documentation string __name__ name with which this function was defined __code__ code object containing compiled function bytecode __defaults__ tuple of any default values for arguments __globals__ global namespace in which this function was defined __annotations__ dict of parameter annotations __kwdefaults__ dict of keyword only parameters with defaults\"\"\" # \u548ccallable\u662f\u7b49\u4ef7\u7684 return isinstance ( object , types . FunctionType ) def ismethod ( object ): \"\"\"Return true if the object is an instance method. Instance method objects provide these attributes: __doc__ documentation string __name__ name with which this method was defined __func__ function object containing implementation of method __self__ instance to which this method is bound\"\"\" return isinstance ( object , types . MethodType ) \u8bf7\u6c42\u6570\u636e\u6821\u9a8c \u00b6","title":"DRF\u5e8f\u5217\u5316"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#drf","text":"\u8bf7\u6c42\u8ba4\u8bc1 QuerySet\u8fdb\u884c\u5e8f\u5217\u5316","title":"DRF\u5e8f\u5217\u5316"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#_1","text":"","title":"\u7b80\u5355\u4f7f\u7528"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#queryset","text":"class UserInfoSer ( serializers . Serializer ): \"\"\" \u4ee5userinfo\u8868\u4e3a\u4f8b\u5b50\uff0c\u5982\u4e0b\u662f\u6211\u60f3\u8981\u663e\u793a\u7684\u5b57\u6bb5 1-username\u548cpassword\u90fd\u662f\u672c\u8868\u5b57\u6bb5\uff0c\u76f4\u63a5\u5c55\u793a\u5c31\u53ef\u4ee5\uff0c\u8c03\u7528\u5bf9\u5e94\u7c7b\u522b\u4e3aCharField 2-user_type\u4e3a\u7528\u6237\u7c7b\u578b\uff0c\u8fd9\u5728\u6211\u4eec\u7684models\u5b9a\u4e49\u4e2d\u662f\u4e00\u4e2achoice\u5b57\u6bb5\uff0c\u5982\u679c\u76f4\u63a5\u53d6IntegerField\u7684\u8bdd \u90a3\u4e48\u8fd4\u56de\u7684\u5c06\u662f\u4e00\u4e2aid\u800c\u5df2\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684typeid\u5bf9\u5e94\u7684\u4e2d\u6587\u540d\u79f0\uff0c\u56e0\u6b64\u8fd9\u4e00\u5757\u8981\u6307\u5b9a\u6e90source\u3002 orm\u5185\u90e8\u9488\u5bf9choice\u5b57\u6bb5\u5b58\u5728\u4e00\u4e2aget_Foo_display\u7684\u65b9\u6cd5\uff0c\u4f1a\u8fd4\u56de\u5bf9\u5e94\u7684choice\u5bf9\u5e94\u7684\u503c\uff0c\u90a3\u4e48\u5bf9\u5e94\u5230\u8fd9\u91cc\u5c31\u662f \u8981\u663e\u793auser_type\u5b57\u6bb5\u5bf9\u5e94\u7684choice\u7684\u9009\u9879\u503c\u3002 3-\u5916\u952e\u5b57\u6bb5\uff0c\u8fd9\u91cc\u8fd8\u53ef\u4ee5\u586b\u5199\u5bf9\u5e94\u7684\u5916\u952e\u5b57\u6bb5\uff0c\u6bd4\u5982group\uff0c\u5bf9\u5e94\u7684\u5c31\u662fgroup\u5bf9\u8c61\uff0c.title\uff0c\u5c31\u662f\u8c03\u7528group\u5bf9\u8c61 \u7684title\u5b57\u6bb5\u7684\u503c\uff0c\u540c\u6837\u4e5f\u8981\u6307\u5b9asource\u3002 4-\u800c\u9488\u5bf9\u591a\u5bf9\u591a\u5b57\u5178\u5728\u8fd9\u91cc\u6307\u5b9a\u65b9\u6cd5\u7684\u8bdd\u5176\u5b9e\u5c31\u4e0d\u662f\u90a3\u4e48\u65b9\u4fbf\u4e86\uff0c\u56e0\u6b64\u91c7\u7528\u4e00\u4e2a\u65b0\u7684\u7c7bSerializerMethodField \uff0c\u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u5141\u8bb8\u6211\u4eec\u81ea\u5b9a\u4e49\u65b9\u6cd5\u6765\u6307\u5b9a\u663e\u793a\u5185\u5bb9\uff0c\u5047\u5982\u5b57\u6bb5\u540d\u53ebrls\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u547d\u540d\u4e00\u4e2aget_rls\u7684\u65b9\u6cd5\uff0c\u5185\u90e8 \u64cd\u4f5c\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u62ff\u5230\u6240\u6709\u7684role\u5bf9\u8c61\u4ee5\u540e\u7136\u540e\u628a\u5bf9\u8c61\u7684id\u548ctitle\u53d6\u51fa\u6765\u6dfb\u52a0\u5230ret\u91cc\uff0c\u8fd4\u56de\u7684ret\u5373\u662frls\u7684\u503c \"\"\" username = serializers . CharField () password = serializers . CharField () # choices\u5b57\u6bb5 ut = serializers . CharField ( source = 'get_user_type_display' ) # \u5916\u952e\u5b57\u6bb5\u5185\u90e8\u662f\u6839\u636e.\u505asplit\uff0c\u53d6\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e00\u76f4.\u4e0b\u53bb\u3002 gp = serializers . CharField ( source = 'group.title' ) # \u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u7528SerializerMethod\u8fdb\u884c\u81ea\u5b9a\u4e49\u65b9\u6cd5\u663e\u793a\uff0c\u4e0a\u7ebf\u7684choice\uff0cgp\u90fd\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u7684\u5f62\u5f0f rls = serializers . SerializerMethodField () def get_rls ( self , row ): role_obj_list = row . roles . all () ret = [] for item in role_obj_list : ret . append ({ 'id' : item . id , 'title' : item . title }) return ret # \u5bf9\u5e94\u7684CBV class UserInfo ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def get ( self , request , * args , ** kwargs ): users = models . UserInfo . objects . all () ser = UserInfoSer ( instance = users , many = True ) # ser.data\u8fd4\u56de\u7684\u662f\u4e00\u4e2aOrderedDIct\u662f\u4e00\u4e2a\u6709\u5e8f\u5b57\u5178\uff0c\u5b9e\u8d28\u4e0a\u8fd8\u662f\u4e00\u4e2a\u5b57\u5178 ret = json . dumps ( ser . data , ensure_ascii = False ) return HttpResponse ( ret ) \u8bbf\u95ee\u5bf9\u5e94\u7684\u8def\u7531\u5f97\u5230\u7684\u7ed3\u679c\u5982\u4e0b\uff1a [{ \"username\" : \"lamber\" , \"password\" : \"123\" , \"ut\" : \"\u666e\u901a\u7528\u6237\" , \"gp\" : \"A\u7ec4\" , \"rls\" : [{ \"id\" : 1 , \"title\" : \"\u533b\u751f\" }, { \"id\" : 2 , \"title\" : \"\u5b66\u751f\" }]}, { \"username\" : \"maxiaoyu\" , \"password\" : \"123\" , \"ut\" : \"VIP\" , \"gp\" : \"b\u7ec4\" , \"rls\" : [{ \"id\" : 2 , \"title\" : \"\u5b66\u751f\" }, { \"id\" : 3 , \"title\" : \"\u8001\u5e08\" }]}, { \"username\" : \"qimaosen\" , \"password\" : \"123\" , \"ut\" : \"SVIP\" , \"gp\" : \"A\u7ec4\" , \"rls\" : [{ \"id\" : 3 , \"title\" : \"\u8001\u5e08\" }]}] \u5176\u5b9e\u6211\u4eec\u53ea\u505a\u4e86\u4e24\u4e2a\u4e8b\u60c5\uff1a \u5b9a\u4e49\u4e00\u4e2a\u5e8f\u5217\u5316\u7684\u7c7b\uff0c\u5199\u4e0a\u5bf9\u5e94\u7684\u5b57\u6bb5 \u5728CBV\u4e2d\u5b9e\u4f8b\u5316\u5e8f\u5217\u7c7b\uff0c\u751f\u6210\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\uff0c\u8fd4\u56de\u7ed9\u524d\u7aef\u3002 \u5728\u5e8f\u5217\u5316\u7c7b\u4e2d\u6211\u4eec\u5355\u72ec\u6307\u5b9a\u4e86\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u7684\u663e\u793a\uff0c\u5176\u5b9e\u8fd9\u4e2a\u8fd8\u53ef\u4ee5\u66f4\u7b80\u5355\u7684\u7684\u53bb\u64cd\u4f5c\uff0c\u53ea\u8981\u7ee7\u627f\u5185\u7f6e\u7684ModelSerializer\u7c7b\u5373\u53ef\uff0c\u56e0\u6b64\u4e0a\u9762\u7684\u5185\u5bb9\u5c31\u53ef\u4ee5\u6539\u6210\u5982\u4e0b\u7684\u5f62\u5f0f\uff1a class UserInfoSer ( serializers . ModelSerializer ): class Meta : model = models . UserInfo fields = \"__all__\" \u5f53fields\u8bbe\u7f6e\u4e3a __all__ \u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u5e2e\u4f60\u663e\u793a\u6240\u6709\u7684\u5b57\u6bb5\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u81ea\u5df1\u4e00\u4e2a\u4e00\u4e2a\u624b\u5199\u4e86\uff0c\u4e0d\u8fc7\u4e5f\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u8fd9\u91cc\u7684\u5904\u7406\u90fd\u662f\u6700\u7b80\u5355\u5316\u7684\u5904\u7406\uff0c\u5373\u5bf9\u5e94\u7684group\u4e5f\u53ea\u662f\u7ed9\u4f60\u663e\u793a\u7ec4id\uff0cchoices\u4e5f\u662f\u663e\u793achoice\u7684id\u800c\u4e0d\u662f\u663e\u793achoice\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u90e8\u5206\u5b57\u6bb5\u8fd8\u662f\u9700\u8981\u6211\u4eec\u81ea\u5df1\u6765\u8fdb\u884c\u5904\u7406\uff0c\u6765\u8fdb\u884c\u4e00\u4e0b\u6539\u8fdb\u5982\u4e0b\uff1a class UserInfoSer ( serializers . ModelSerializer ): ut = serializers . CharField ( source = 'get_user_type_display' ) gp = serializers . CharField ( source = 'group.title' ) rls = serializers . SerializerMethodField () class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'ut' , 'rls' , 'gp' ] def get_rls ( self , row ): role_obj_list = row . roles . all () ret = [] for item in role_obj_list : ret . append ({ 'id' : item . id , 'title' : item . title }) return ret \u4e0d\u8fc7\u8fd8\u6709\u4e00\u79cd\u66f4\u4e3a\u7b80\u5355\u7684\u5199\u6cd5\uff0c\u6307\u5b9a\u4e00\u4e2adepth\uff0cdepth\u8868\u793a\u6df1\u5ea6\uff0c\u6211\u4eec\u5728\u5916\u952e\u8fdb\u884c\u8054\u8868\u67e5\u8be2\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u201c.\u201d\u4e00\u76f4\u591a\u7ea7\u53bb\u83b7\u53d6\uff0c\u5373\u4e00\u76f4\u201c.\u201d\u4e0b\u53bb\uff0c\u8fd9\u91ccdepth\u5c31\u662f\u6307\u5b9a\u8981\u6df1\u5165\u8d70\u591a\u5c11\u5c42\uff0c\uff1a class UserInfoSer ( serializers . ModelSerializer ): class Meta : model = models . UserInfo fields = \"__all__\" # \u9ed8\u8ba4ModelSerializer\u4f7f\u7528\u4e3b\u952e\u4f5c\u4e3a\u5173\u8054\u5b57\u6bb5\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528depth\u6765\u7b80\u5355\u7684\u751f\u6210\u5d4c\u5957\u8868\u793a\uff0c # depth\u5e94\u8be5\u662f\u6574\u6570\uff0c\u8868\u660e\u5d4c\u5957\u7684\u5c42\u7ea7\u6570\u91cf\uff0c\u5efa\u8bae3~4\u5c42\u5c31\u5dee\u4e0d\u591a\u4e86\uff0c\u518d\u591a\u5c31\u4f1a\u6162\u4e86\u3002 depth = 1 \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b57\u6bb5\u663e\u793a\uff0c\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u5236\u7684Field\u7684\u7c7b\uff0c\u5728\u5185\u90e8\u91cd\u5199to_representtation\u65b9\u6cd5\uff0c\u65b9\u6cd5\u8fd4\u56de\u4ec0\u4e48\u5c31\u663e\u793a\u4ec0\u4e48\u3002 class MyField ( serializers . CharField ): def to_representation ( self , value ): \"\"\" \u53ef\u4ee5\u81ea\u5b9a\u4e49\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u4ec0\u4e48\uff0c\u90a3\u4e48\u8fd4\u56de\u7684\u9875\u9762\u6570\u636e\u5c31\u662f\u4ec0\u4e48\uff0cvalue\u662f\u4ece\u6570\u636e\u5e93\u53d6\u5230\u7684\u503c\uff0c \u8fd9\u4e2a\u65b9\u6cd5\u4e00\u822c\u662f\u7528\u4e0d\u4e0a\uff0c\u56e0\u4e3a\u6211\u4eec\u81ea\u5b9a\u4e49\u65b9\u6cd5\u4e00\u822c\u5c31\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002 \"\"\" return time . time () class UserInfoSer ( serializers . ModelSerializer ): ut = serializers . CharField ( source = 'get_user_type_display' ) gp = serializers . CharField ( source = 'group.title' ) x1 = MyField ( source = 'username' ) class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'ut' , 'gp' , 'x1' ] \u5bf9\u5e94\u7684\u7ed3\u679c\u5982\u4e0b\uff1a [{ \"id\" : 1 , \"username\" : \"lamber\" , \"ut\" : \"\u666e\u901a\u7528\u6237\" , \"gp\" : \"A\u7ec4\" , \"x1\" : 1550142281.049991 }, { \"id\" : 2 , \"username\" : \"maxiaoyu\" , \"ut\" : \"VIP\" , \"gp\" : \"b\u7ec4\" , \"x1\" : 1550142281.052642 }, { \"id\" : 3 , \"username\" : \"qimaosen\" , \"ut\" : \"SVIP\" , \"gp\" : \"A\u7ec4\" , \"x1\" : 1550142281.054938 }]","title":"QuerySet\u5e8f\u5217\u5316"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#hypermedia-api","text":"Hypermedia API\uff0cRESTful API\u6700\u597d\u505a\u5230Hypermedia\uff0c\u5373\u8fd4\u56de\u7ed3\u679c\u4e2d\u63d0\u4f9b\u94fe\u63a5\uff0c\u8fde\u5411\u5176\u4ed6API\u65b9\u6cd5\uff0c\u4f7f\u5f97\u7528\u6237\u4e0d\u67e5\u6587\u6863\uff0c\u4e5f\u77e5\u9053\u4e0b\u4e00\u6b65\u5e94\u8be5\u505a\u4ec0\u4e48\u3002\u4ee5\u7528\u6237\u7ec4\u4e3a\u4f8b\uff1a class UserInfoSer ( serializers . ModelSerializer ): \"\"\" \u8fd9\u91cc\u7684lookup_url_kwarg\u662f\u6307\u7684\u6211\u53bb\u53cd\u5411\u751f\u6210url\u7684\u65f6\u5019\uff0c\u53c2\u6570\u5199\u7684\u503c\u662f\u4ec0\u4e48\uff0c \u5982\u679c\u662fpk\u90a3\u5c31\u662fpk\uff0c\u5982\u679c\u662fxxx\u90a3\u5339\u914d\u5230\u7684\u5c31\u662fxxx\uff0c\u8fd9\u4e2a\u662f\u9488\u5bf9URL\u4e0a\u6709\u53c2\u6570\u7684\u60c5\u51b5 lookup_field\u7528\u4e8e\u6267\u884c\u5404\u4e2a\u6a21\u578b\u5b9e\u4f8b\u7684\u5bf9\u8c61\u67e5\u627e\u7684\u6a21\u578b\u5b57\u6bb5\u3002\u9ed8\u8ba4\u4e3a 'pk'\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f7f\u7528 hyperlinked API \u65f6\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u81ea\u5b9a\u4e49\u503c\uff0c \u5219\u9700\u8981\u786e\u4fdd API \u89c6\u56fe\u548c\u5e8f\u5217\u5316\u7c7b\u8bbe\u7f6e\u4e86 lookup field\uff0c\u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u6309\u7167pk\u6765\uff0c\u6570\u636e\u53ef\u80fd\u662f\u4e0d\u5bf9\u7684\u3002 \u751f\u6210\u53cd\u5411URL\u5730\u5740\uff0c\u5e2e\u52a9\u63a5\u53e3\u4eba\u8c03\u7528\u7684\u65f6\u5019\u53ef\u4ee5\u4e86\u89e3\u5230\u8fde\u63a5\u7684\u5185\u5bb9\u3002 \"\"\" group = serializers . HyperlinkedIdentityField ( view_name = 'gp' , lookup_url_kwarg = 'pk' , lookup_field = 'group_id' ) class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'group' ] class UserInfo ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def get ( self , request , * args , ** kwargs ): users = models . UserInfo . objects . all () ser = UserInfoSer ( instance = users , many = True ) # \u8fd4\u56de\u7684ser.data\u662f\u4e00\u4e2aOrderedDIct\u662f\u4e00\u4e2a\u6709\u5e8f\u5b57\u5178\uff0c\u5b9e\u8d28\u4e0a\u8fd8\u662f\u4e00\u4e2a\u5b57\u5178 ret = json . dumps ( ser . data , ensure_ascii = False ) return HttpResponse ( ret ) class GroupSer ( serializers . ModelSerializer ): group = serializers . HyperlinkedIdentityField ( view_name = 'gp' , lookup_url_kwarg = 'pk' , lookup_field = 'id' ) class Meta : model = models . UserGroup fields = \"__all__\" class Group ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def get ( self , request , * args , ** kwargs ): pk = kwargs . get ( 'pk' ) obj = models . UserGroup . objects . filter ( id = pk ) . first () # \u4f46\u51e1\u4f60\u8981\u662f\u4f7f\u7528HyperlinkedIdentityField\u4e86\uff0c\u4f60\u5c31\u8981\u52a0\u4e0acontext\u8fd9\u4e2a\u53c2\u6570\uff0c\u8fd9\u6837\u5c31\u80fd\u83b7\u5f97\u53cd\u5411\u7684url # \u5426\u5219\u4f1a\u62a5\u5982\u4e0b\u5f02\u5e38\uff1a # `HyperlinkedIdentityField` requires the request in the serializer context. Add `context={'request': request}` when instantiating the serializer. ser = GroupSer ( instance = obj , many = False , context = { 'request' : request }) ret = json . dumps ( ser . data ) return HttpResponse ( ret ) \u8fd4\u56de\u7684\u7ed3\u679c\u5185\u5bb9\u5982\u4e0b\uff1a [ { \"id\" : 1 , \"username\" : \"lamber\" , \"group\" : \"http://127.0.0.1:8000/group/1\" }, { \"id\" : 2 , \"username\" : \"maxiaoyu\" , \"group\" : \"http://127.0.0.1:8000/group/2\" }, { \"id\" : 3 , \"username\" : \"qimaosen\" , \"group\" : \"http://127.0.0.1:8000/group/1\" } ]","title":"Hypermedia API"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#_2","text":"\u5728\u8bf7\u6c42\u8ba4\u8bc1\u8fd9\u91cc\u5176\u5b9e\u5f88\u7c7b\u4f3c\u4e8eForm\u7ec4\u4ef6\u7684\u8bf7\u6c42\u8ba4\u8bc1\uff0c\u6bd4\u5982\u6211\u8981\u9488\u5bf9username\u505a\u4e00\u4e2a\u8bf7\u6c42\u8ba4\u8bc1 class xxValidator ( object ): def __init__ ( self , base ): self . base = base def __call__ ( self , value , * args , ** kwargs ): if not value . startswith ( self . base ): message = '\u6807\u9898\u5fc5\u987b\u4ee5 %s \u5f00\u5934' % self . base raise serializers . ValidationError ( message ) class UserInfoSer ( serializers . ModelSerializer ): username = serializers . CharField ( # \u8fd9\u91cc\u9762\u5305\u542b\u4e86\u5f88\u591a\u539f\u751f\u7684\u9a8c\u8bc1\u89c4\u5219\uff0c\u6bd4\u5982required\uff0c\u4e0d\u80fd\u4e3a\u7a7a error_messages = { 'required' : '\u4e0d\u80fd\u4e3a\u7a7a' }, # \u4f46\u662f\u6211\u4eec\u8fd8\u53ef\u4ee5\u81ea\u5df1\u53bb\u5b9a\u4e49\u9a8c\u8bc1\u89c4\u5219\uff0c\u65b9\u6cd5\u5c31\u662f\u5b9a\u4e00\u4e2a\u7c7b\u5c31\u53ef\u4ee5\u4e86\uff0c\u6bd4\u5982\u4e0a\u9762\u7684xxValidator\u7c7b # \u5982\u679c\u6ee1\u8db3\u7684\u8bdd\u4e0d\u4f5c\u64cd\u4f5c\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3raise\u4e00\u4e2aValidationError # \u8fd9\u91cc\u8c03\u7528\u4e86__call__\u65b9\u6cd5\uff0c\u56e0\u6b64\u7c7b\u53ef\u4ee5\u76f4\u63a5\u52a0\u62ec\u53f7\u8c03\u7528\uff0c\u9ed8\u8ba4\u5c31\u662f\u8c03\u7528\u7684__call__\u65b9\u6cd5\u3002 validators = [ xxValidator ( '\u5475\u5475\u54d2' ), ], ) group = serializers . HyperlinkedIdentityField ( view_name = 'gp' , lookup_url_kwarg = 'pk' , lookup_field = 'group_id' ) class Meta : model = models . UserInfo fields = [ 'id' , 'username' , 'group' ] class UserInfo ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [] def post ( self , request , * args , ** kwargs ): ser = UserInfoSer ( data = request . data ) if ser . is_valid (): print ( ser . validated_data ) else : print ( ser . errors ) return HttpResponse ( '\u6d4b\u8bd5\u7684post\u8bf7\u6c42' ) \u5982\u679cpost\u8bf7\u6c42\u8fc7\u6765\u7684\u5185\u5bb9\u4e0d\u662f\u4ee5\u201c\u5475\u5475\u54d2\u201d\u5f00\u5934\u7684\u8bdd\uff0cser.errors\u5c31\u4f1a\u6253\u5370\u51fa\u5bf9\u5e94\u7684\u62a5\u9519 { 'username' : [ ErrorDetail ( string = '\u6807\u9898\u5fc5\u987b\u4ee5\u5475\u5475\u54d2\u5f00\u5934' , code = 'invalid' )]} \u5f53\u7136\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u4e0d\u4f1a\u53bb\u8fd9\u4e48\u505a\uff0cForm\u7ec4\u4ef6\u4e2d\u6709\u94a9\u5b50\uff0c\u8fd9\u91cc\u540c\u6837\u4e5f\u6709\u3002 def is_valid ( self , raise_exception = False ): \"\"\"\u7701\u7565\u4e00\u90e8\u5206\u4ee3\u7801\"\"\" # \u5982\u679c\u6ca1\u6709_validated_data\u5c5e\u6027\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u4f1a\u53bb\u8c03\u7528run_validation\u65b9\u6cd5\u3002 if not hasattr ( self , '_validated_data' ): try : self . _validated_data = self . run_validation ( self . initial_data ) except ValidationError as exc : self . _validated_data = {} self . _errors = exc . detail else : self . _errors = {} if self . _errors and raise_exception : raise ValidationError ( self . errors ) return not bool ( self . _errors ) def run_validation ( self , data = empty ): \"\"\" Validate a simple representation and return the internal value. The provided data may be `empty` if no representation was included in the input. May raise `SkipField` if the field should not be included in the validated data. \"\"\" ( is_empty_value , data ) = self . validate_empty_values ( data ) if is_empty_value : return data value = self . to_internal_value ( data ) self . run_validators ( value ) return value def validate_empty_values ( self , data ): \"\"\" Validate empty values, and either: * Raise `ValidationError`, \u6307\u51fa\u65e0\u6548\u7684\u6570\u636e * Raise `SkipField`, \u6307\u51fa\u8fd9\u4e2a\u5b57\u6bb5\u5e94\u8be5\u88ab\u5ffd\u7565 * Return (True, data), indicating an empty value that should be returned without any further validation being applied. * Return (False, data), indicating a non-empty value, that should have validation applied as normal. \"\"\" if self . read_only : return ( True , self . get_default ()) if data is empty : if getattr ( self . root , 'partial' , False ): raise SkipField () if self . required : self . fail ( 'required' ) return ( True , self . get_default ()) if data is None : if not self . allow_null : self . fail ( 'null' ) return ( True , None ) return ( False , data )","title":"\u8bf7\u6c42\u8ba4\u8bc1"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#_3","text":"\u6211\u4eec\u5199\u4e00\u4e2a\u8981\u505a\u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0c\u5047\u5982\u8bf4\u7ee7\u627f\u4e86serializers.Serializer\u7c7b\uff0c\u6211\u4eec\u5728CBV\u4e2d\u8981\u8fdb\u884c\u8c03\u7528\uff1a # \u4e5f\u5c31\u662f\u5b9e\u4f8b\u5316\uff0c\u90a3\u4e48\u6574\u4e2a\u4ee3\u7801\u6d41\u7a0b\u5c31\u4ece\u5b9e\u4f8b\u5316\u5f00\u59cb\u770b ser = UserInfoSer ( instance = users , many = True ) \u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u4f1a\u4f18\u5148\u6307\u5b9a\u7684\u4e24\u4e2a\u65b9\u6cd5\u4e00\u4e2a\u662f __new__ \u53e6\u5916\u4e00\u4e2a\u5c31\u662f\u6784\u9020\u65b9\u6cd5 __init__ \u3002\u4f46\u662f\u6211\u4eec\u5728Serializer\u4e2d\u5e76\u6ca1\u6709\u53d1\u73b0\uff0c\u6240\u4ee5\u5230\u5b83\u96c6\u6210\u7684\u7236\u7c7bBaseSerializer\u4e2d\u53bb\u627e\u3002 def __init__ ( self , instance = None , data = empty , ** kwargs ): # \u8fd9\u4e2a\u5c31\u662f\u6211\u4eec\u4f20\u9012\u7684instance\uff0c\u53ef\u80fd\u662f\u4e00\u4e2a\uff0c\u4e5f\u53ef\u80fd\u662f\u591a\u4e2a\u3002 self . instance = instance if data is not empty : self . initial_data = data self . partial = kwargs . pop ( 'partial' , False ) self . _context = kwargs . pop ( 'context' , {}) kwargs . pop ( 'many' , None ) super ( BaseSerializer , self ) . __init__ ( ** kwargs ) def __new__ ( cls , * args , ** kwargs ): # \u91cd\u5199\u8fd9\u4e2a\u7c7b\u6765\u81ea\u52a8\u6784\u5efaListSerializer\u7c7b\u4ee3\u66ff\uff0c\u5f53\u8bbe\u7f6e\u4e86many=True\u65f6\u5019 # \u6211\u4eec\u4f1a\u53bb\u628amany\u8fd9\u4e2a\u9009\u9879pop\u51fa\u6765\uff0c\u5982\u679c\u6ca1\u6709\u90a3\u5c31\u662fFalse\uff0c\u4e0d\u8d70\u8fd9\u91cc\u7684\u6761\u4ef6 # \u76f4\u63a5\u53bb\u8c03\u7528\u7236\u7c7b\u7684__new__\u65b9\u6cd5. if kwargs . pop ( 'many' , False ): # \u5982\u679c\u8bf4\u6709many\uff0c\u90a3\u4e48\u8c03\u7528\u7c7b\u65b9\u6cd5many_init return cls . many_init ( * args , ** kwargs ) return super ( BaseSerializer , cls ) . __new__ ( cls , * args , ** kwargs ) \u5728Serializer\uff0c\u5982\u679c\u6ca1\u6709\u7ed9meta\u8bbe\u7f6elist_serializer_class\u5c5e\u6027\uff0c\u90a3\u4e48list_serializer_class\u5c5e\u6027\u5c31\u662fListSerializer\uff0c\u6700\u540e\u8fd4\u56de\u7684\u4e5f\u5c31\u662fListSerializer\u7684\u5bf9\u8c61\uff0c\u63a5\u4e0b\u6765\u6267\u884cListSerializer\u5bf9\u8c61\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5426\u5219\u6267\u884cBaseSerializer\u91cc\u9762\u7684\u6784\u9020\u65b9\u6cd5\uff08\u5982\u679c\u6211\u4eec\u91cd\u5199\u4e86\u8fd9\u4e2a\u5c31\u4f1a\u8c03\u7528\u6211\u4eec\u81ea\u5df1\u7684\u6784\u9020\u65b9\u6cd5\uff09\u3002 @classmethod def many_init ( cls , * args , ** kwargs ): \"\"\" This method implements the creation of a `ListSerializer` parent class when `many=True` is used. You can customize it if you need to control which keyword arguments are passed to the parent, and which are passed to the child. Note that we're over-cautious in passing most arguments to both parent and child classes in order to try to cover the general case. If you're overriding this method you'll probably want something much simpler, eg: @classmethod def many_init(cls, *args, **kwargs): kwargs['child'] = cls() return CustomListSerializer(*args, **kwargs) \"\"\" allow_empty = kwargs . pop ( 'allow_empty' , None ) child_serializer = cls ( * args , ** kwargs ) list_kwargs = { 'child' : child_serializer , } if allow_empty is not None : list_kwargs [ 'allow_empty' ] = allow_empty list_kwargs . update ({ key : value for key , value in kwargs . items () if key in LIST_SERIALIZER_KWARGS }) meta = getattr ( cls , 'Meta' , None ) list_serializer_class = getattr ( meta , 'list_serializer_class' , ListSerializer ) return list_serializer_class ( * args , ** list_kwargs ) \u7136\u540e\u6211\u4eec\u8c03\u7528\u4e86\u8fd9\u4e2a\u8fd9\u4e2a\u5bf9\u8c61\u7684data\u5c5e\u6027\uff1a ret = json . dumps ( ser . data , ensure_ascii = False ) \u6765\u770b\u4e00\u4e0b\u8fd9\u4e2adata\u65b9\u6cd5\u7684\u5b9e\u73b0 @property def data ( self ): ret = super ( Serializer , self ) . data return ReturnDict ( ret , serializer = self ) @property def data ( self ): if hasattr ( self , 'initial_data' ) and not hasattr ( self , '_validated_data' ): msg = ( 'When a serializer is passed a `data` keyword argument you ' 'must call `.is_valid()` before attempting to access the ' 'serialized `.data` representation. \\n ' 'You should either call `.is_valid()` first, ' 'or access `.initial_data` instead.' ) raise AssertionError ( msg ) if not hasattr ( self , '_data' ): if self . instance is not None and not getattr ( self , '_errors' , None ): self . _data = self . to_representation ( self . instance ) elif hasattr ( self , '_validated_data' ) and not getattr ( self , '_errors' , None ): self . _data = self . to_representation ( self . validated_data ) else : self . _data = self . get_initial () return self . _data def to_representation ( self , instance ): raise NotImplementedError ( '`to_representation()` must be implemented.' ) # Serializer\u7c7b\u7684\u7c7b\u65b9\u6cd5 def to_representation ( self , instance ): \"\"\" Object instance -> Dict of primitive datatypes. \"\"\" ret = OrderedDict () fields = self . _readable_fields # fields\u5176\u5b9e\u5c31\u662f\u54b1\u4eec\u5b9a\u4e49\u7684\u8fd9\u4e9b\u5b57\u6bb5 for field in fields : try : # \u8c03\u7528\u5b57\u6bb5\u7684get_attribute\u65b9\u6cd5\uff0c\u5e76\u628ainstance\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u8fdb\u53bb\u3002 attribute = field . get_attribute ( instance ) except SkipField : continue # We skip `to_representation` for `None` values so that fields do # not have to explicitly deal with that case. # # For related fields with `use_pk_only_optimization` we need to # resolve the pk value. check_for_none = attribute . pk if isinstance ( attribute , PKOnlyObject ) else attribute if check_for_none is None : ret [ field . field_name ] = None else : ret [ field . field_name ] = field . to_representation ( attribute ) return ret \u627e\u4e00\u4e2aCharfield\u770b\u770b # from rest_framework.serializers import CharField\uff0c\u53d1\u73b0CharField\u4e2d\u5e76\u6ca1\u6709get_attribute\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6240\u4ee5\u7ee7\u7eed\u627e\uff0c\u5b83\u7684\u7236\u7c7bField\u53d1\u73b0\u4e86\u8fd9\u4e2a\u65b9\u6cd5 def get_attribute ( self , instance ): \"\"\" Given the *outgoing* object instance, return the primitive value that should be used for this field. \"\"\" try : return get_attribute ( instance , self . source_attrs ) except ( KeyError , AttributeError ) as exc : if self . default is not empty : return self . get_default () if self . allow_null : return None if not self . required : raise SkipField () msg = ( 'Got {exc_type} when attempting to get a value for field ' '`{field}` on serializer `{serializer}`. \\n The serializer ' 'field might be named incorrectly and not match ' 'any attribute or key on the `{instance}` instance. \\n ' 'Original exception text was: {exc}.' . format ( exc_type = type ( exc ) . __name__ , field = self . field_name , serializer = self . parent . __class__ . __name__ , instance = instance . __class__ . __name__ , exc = exc ) ) raise type ( exc )( msg ) # source if self . source == '*' : self . source_attrs = [] else : # \u6bd4\u5982group.title\uff0c\u5206\u9694\u540e\u5c31\u662fgroup\uff0ctitle self . source_attrs = self . source . split ( '.' ) def get_attribute ( instance , attrs ): \"\"\" Similar to Python's built in `getattr(instance, attr)`, but takes a list of nested attributes, instead of a single attribute. Also accepts either attribute lookup on objects or dictionary lookups. \"\"\" for attr in attrs : try : if isinstance ( instance , collections . Mapping ): instance = instance [ attr ] else : instance = getattr ( instance , attr ) except ObjectDoesNotExist : return None if is_simple_callable ( instance ): try : instance = instance () except ( AttributeError , KeyError ) as exc : # If we raised an Attribute or KeyError here it'd get treated # as an omitted field in `Field.get_attribute()`. Instead we # raise a ValueError to ensure the exception is not masked. raise ValueError ( 'Exception raised in callable attribute \"{0}\"; original exception was: {1}' . format ( attr , exc )) return instance def is_simple_callable ( obj ): \"\"\" True if the object is a callable that takes no arguments. \"\"\" if not ( inspect . isfunction ( obj ) or inspect . ismethod ( obj ) or isinstance ( obj , functools . partial )): return False sig = inspect . signature ( obj ) params = sig . parameters . values () return all ( param . kind == param . VAR_POSITIONAL or param . kind == param . VAR_KEYWORD or param . default != param . empty for param in params ) def isfunction ( object ): \"\"\"Return true if the object is a user-defined function. Function objects provide these attributes: __doc__ documentation string __name__ name with which this function was defined __code__ code object containing compiled function bytecode __defaults__ tuple of any default values for arguments __globals__ global namespace in which this function was defined __annotations__ dict of parameter annotations __kwdefaults__ dict of keyword only parameters with defaults\"\"\" # \u548ccallable\u662f\u7b49\u4ef7\u7684 return isinstance ( object , types . FunctionType ) def ismethod ( object ): \"\"\"Return true if the object is an instance method. Instance method objects provide these attributes: __doc__ documentation string __name__ name with which this method was defined __func__ function object containing implementation of method __self__ instance to which this method is bound\"\"\" return isinstance ( object , types . MethodType )","title":"\u6e90\u7801\u6d41\u7a0b"},{"location":"django/DRF/07-DRF\u5e8f\u5217\u5316/#_4","text":"","title":"\u8bf7\u6c42\u6570\u636e\u6821\u9a8c"},{"location":"django/DRF/08-DRF\u5206\u9875/","text":"\u5206\u9875 \u00b6 \u7b80\u5355\u5206\u9875\uff1a\u770b\u7b2cn\u9875\uff0c\u6bcf\u9875\u663e\u793am\u6761\u6570\u636e \u6307\u5b9a\u5206\u9875\uff1a\u5728\u7b2cn\u4e2a\u4f4d\u7f6e\uff0c\u5411\u540e\u67e5\u770bn\u6761\u6570\u636e\u3002 \u52a0\u5bc6\u5206\u9875\uff1a\u53ea\u80fd\u770b\u4e0a\u4e00\u9875\u4e0b\u4e00\u9875 class GenericViewSet ( ViewSetMixin , generics . GenericAPIView ): \"\"\" The GenericViewSet class does not provide any actions by default, but does include the base set of generic view behavior, such as the `get_object` and `get_queryset` methods. \"\"\" pass","title":"\u5206\u9875"},{"location":"django/DRF/08-DRF\u5206\u9875/#_1","text":"\u7b80\u5355\u5206\u9875\uff1a\u770b\u7b2cn\u9875\uff0c\u6bcf\u9875\u663e\u793am\u6761\u6570\u636e \u6307\u5b9a\u5206\u9875\uff1a\u5728\u7b2cn\u4e2a\u4f4d\u7f6e\uff0c\u5411\u540e\u67e5\u770bn\u6761\u6570\u636e\u3002 \u52a0\u5bc6\u5206\u9875\uff1a\u53ea\u80fd\u770b\u4e0a\u4e00\u9875\u4e0b\u4e00\u9875 class GenericViewSet ( ViewSetMixin , generics . GenericAPIView ): \"\"\" The GenericViewSet class does not provide any actions by default, but does include the base set of generic view behavior, such as the `get_object` and `get_queryset` methods. \"\"\" pass","title":"\u5206\u9875"},{"location":"django/DRF/09-DRF\u89c6\u56fe/","text":"\u53ef\u4ee5\u5355\u72ec\u7ee7\u627fmixin\u4e2d\u7684create\uff0cretrieve\uff0cdestroy\u7b49\u7c7b\uff0c\u5982\u679c\u5199\u7684\u662f\u7279\u522b\u590d\u6742\u7684\u5c31\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u4e9b\u4e86\uff0c\u63a8\u8350\u4f7f\u7528APIVIEW\u6216\u8005\u4f7f\u7528ModelViewSet\uff0cModelViewSet\u6bd4\u8f83APIVIEW\u6709\u4e00\u4e2a\u597d\u5904\u5c31\u662f \u5982\u679c\u53ea\u60f3\u5b8c\u6210\u7b80\u5355\u7684CURD\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528ModelViewSet\uff0c\u5982\u679c\u8981\u5b8c\u6210\u590d\u6742\u7684\u903b\u8f91\uff0c\u5c31\u76f4\u63a5\u7528Generic\u6216\u8005\u76f4\u63a5\u4f7f\u7528APIView\u3002 has_object_permission Gerneric_api_view .API_VIEW.get_object,check_object_perssion Route \u00b6 \u6e32\u67d3\u5668 \u00b6 format=json/admin/form\uff0c\u4e3b\u8981\u5c31\u7528json\u8fd8\u6709\u4e00\u4e2abrowser\u7684\u3002 \u5141\u8bb8\u533f\u540d\u7528\u6237\u4e24\u5206\u949f\u8bbf\u95ee10\u6b21\uff0c\u6ce8\u518c\u7528\u6237\u4e24\u5206\u949f\u8bbf\u95ee20\u6b21\u3002CORS\u8de8\u57df","title":"09 DRF\u89c6\u56fe"},{"location":"django/DRF/09-DRF\u89c6\u56fe/#route","text":"","title":"Route"},{"location":"django/DRF/09-DRF\u89c6\u56fe/#_1","text":"format=json/admin/form\uff0c\u4e3b\u8981\u5c31\u7528json\u8fd8\u6709\u4e00\u4e2abrowser\u7684\u3002 \u5141\u8bb8\u533f\u540d\u7528\u6237\u4e24\u5206\u949f\u8bbf\u95ee10\u6b21\uff0c\u6ce8\u518c\u7528\u6237\u4e24\u5206\u949f\u8bbf\u95ee20\u6b21\u3002CORS\u8de8\u57df","title":"\u6e32\u67d3\u5668"},{"location":"django/DRF/10-DRF\u6e32\u67d3\u5668/","text":"","title":"10 DRF\u6e32\u67d3\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/","text":"Docker \u00b6 Docker\u662fDocker.Inc\u516c\u53f8\u5f00\u6e90\u7684\u4e00\u4e2a\u57fa\u4e8eLXC\u6280\u672f\u4e4b\u4e0a\u6784\u5efa\u7684Container\u5bb9\u5668\u5f15\u64ce\uff0c\u6e90\u4ee3\u7801\u6258\u7ba1\u5728github\u4e0a\uff0c\u57fa\u4e8eGo\u8bed\u8a00\u5e76\u9075\u5faaApache2.0\u534f\u8bae\u5f00\u6e90\u3002 Docker\u662f\u901a\u8fc7\u5185\u6838\u865a\u62df\u5316\u6280\u672f\uff08namespaces\u4ee5\u53cacgroups\u7b49\uff09\u6765\u63d0\u4f9b\u5bb9\u5668\u7684\u8d44\u6e90\u9694\u79bb\u4e0e\u5b89\u5168\u4fdd\u8bc1\u7b49\u3002\u7531\u4e8eDocker\u901a\u8fc7\u7cfb\u7edf\u5c42\u7684\u865a\u62df\u5316\u5b9e\u73b0\u9694\u79bb\uff0c\u6240\u4ee5Docker\u5bb9\u5668\u5728\u8fd0\u884c\u7684\u65f6\u5019\u4e0d\u9700\u8981\u7c7b\u4f3c\u865a\u62df\u673a\u989d\u5916\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f00\u9500\uff08\u7ecf\u9a8c\u6765\u770b\u4e00\u822c\u4e00\u4e2a\u5b8c\u6574\u7684\u7cfb\u7edf\u5927\u6982\u4f1a\u6d88\u8017\u4e00\u4e2a\u7269\u7406\u4e3b\u673a6%\u5de6\u53f3\u7684\u6027\u80fd\uff09\uff0c\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u3002 docker\u7684\u6838\u5fc3\u7406\u5ff5 \u6784\u5efa\uff08Build\uff09 \u8fd0\u8f93\uff08Ship\uff09 \u8fd0\u884c\uff08Run\uff09 Docker\u4ecb\u7ecd \u00b6 \u5bb9\u5668VS\u865a\u62df\u5316 \u00b6 \u865a\u62df\u673a\u662f\u5b8c\u6574\u7684\u8d44\u6e90\u9694\u79bb\u3002\u5bb9\u5668\u662f\u9694\u79bb\u4e0d\u662f\u865a\u62df\uff0c\u5b83\u4e0d\u9700\u8981\u865a\u62df\u51fa\u6765\u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u3002 Docker\u53ef\u4ee5\u505a\u4ec0\u4e48 \u00b6 \u7b80\u5316\u914d\u7f6e \u4ee3\u7801\u6d41\u6c34\u7ebf\u7684\u7ba1\u7406\uff0c\u8ba9\u5f00\u53d1\uff0c\u6d4b\u8bd5\u751f\u4ea7\u90fd\u8dd1\u5728\u540c\u6837\u4e00\u4e2a\u73af\u5883\uff0c\u4fdd\u8bc1\u5f00\u53d1\u73af\u5883\u7684\u4e00\u81f4\u6027\u3002 \u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u5e94\u7528\u7684\u9694\u79bb\uff08\u865a\u62df\u673a\u4e5f\u53ef\u4ee5\u505a\u5230\uff09 \u6574\u5408\u670d\u52a1\u5668\uff0c\u901a\u8fc7docker\u7684\u9694\u79bb\u80fd\u529b\u6574\u5408\u591a\u4e2a\u670d\u52a1\u5668\u964d\u4f4e\u6210\u672c\u3002 \u8c03\u8bd5\u80fd\u529b \u591a\u79df\u6237\u73af\u5883 \u5feb\u901f\u90e8\u7f72 Docker\u6539\u53d8\u4e86\u4ec0\u4e48\uff1f \u00b6 \u9762\u5411\u4ea7\u54c1\uff1a\u4ea7\u54c1\u4ea4\u4ed8 \u9762\u5411\u5f00\u53d1\uff1a\u7b80\u5316\u73af\u5883\u914d\u7f6e \u9762\u5411\u6d4b\u8bd5\uff1a\u591a\u7248\u672c\u6d4b\u8bd5 \u9762\u5411\u8fd0\u7ef4\uff1a\u73af\u5883\u4e00\u81f4\u6027\uff0c\u53ef\u4ee5\u73af\u5883\u548c\u4ee3\u7801\u4e00\u8d77\u53d1\u5e03\uff0c\u56de\u6eda\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u505a\u5230\u4e00\u8d77\u56de\u6eda\u3002 \u9762\u5411\u67b6\u6784\uff1a\u81ea\u52a8\u5316\u6269\u5bb9\uff08\u5fae\u670d\u52a1\uff09 Docker\u7684\u5b89\u88c5 \u00b6 \u6700\u65b0\u7684\u5b89\u88c5\u4fe1\u606f\u8bf7\u4ee5\u5b98\u65b9\u6587\u6863\u7684\u5b89\u88c5\u4fe1\u606f\u4e3a\u51c6\uff0c \u5b98\u65b9Doc\u6587\u6863\u5730\u5740 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b89\u88c5\u6b65\u9aa4\uff1a yum install -y yum-utils device-mapper-persistent-data lvm2 yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo yum install docker-ce systemctl start docker \u67e5\u770bdocker\u542f\u52a8\u72b6\u6001\uff1a [ root@localhost ~ ] # ps -ef | grep docker root 31551 1 2 00 :43 ? 00 :00:00 /usr/bin/dockerd root 31555 31551 0 00 :43 ? 00 :00:00 docker-containerd --config /var/run/docker/containerd/containerd.toml root 31667 31082 0 00 :43 pts/0 00 :00:00 grep --color = auto docker \u62c9\u53d6docker\u955c\u50cf\uff0c\u8fd9\u91cc\u5982\u679c\u76f4\u63a5\u62c9\u7684\u8bdd\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7f51\u901f\u6162\u5bfc\u81f4\u62c9\u4e0d\u4e0b\u6765\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e0b\u56fd\u5185\u7684docker\u955c\u50cf\u6e90 \u914d\u7f6e\u56fd\u5185docker\u955c\u50cf\u6e90 \u00b6 \u56fd\u5185\u7684Docker\u955c\u50cf\u6e90\u6709\u5f88\u591a\u53ef\u4ee5\u9009\u62e9\uff0c \u53c2\u8003\u539f\u6587 DaoCloud - Docker\u52a0\u901f\u5668 \u963f\u91cc\u4e91 - \u5f00\u53d1\u8005\u5e73\u53f0 \u5fae\u955c\u50cf - \u5e0c\u4e91cSphere \u955c\u50cf\u5e7f\u573a - \u65f6\u901f\u4e91 \u7075\u96c0\u4e91 \u7f51\u6613\u8702\u5de2 \u8fd9\u91cc\u4ee5\u963f\u91cc\u4e91\u7684Docker\u52a0\u901f\u5668\u4e3a\u4f8b\uff0c\u6ce8\u518c\u5e76\u767b\u9646 \u963f\u91cc\u4e91 - \u5f00\u53d1\u8005\u5e73\u53f0 \u4e4b\u540e\uff0c\u5728\u9996\u9875\u70b9\u51fb\u201c\u521b\u5efa\u6211\u7684\u5bb9\u5668\u955c\u50cf\u201d\uff0c\u7136\u540e\u5c31\u4f1a\u6765\u5230\u963f\u91cc\u4e91\u7684\u670d\u52a1\u9762\u677f\u3002\u70b9\u51fb\u52a0\u901f\u5668\u6807\u7b7e\u3002\u6839\u636e\u63d0\u793a\u8f93\u5165Docker\u767b\u5f55\u65f6\u9700\u8981\u4f7f\u7528\u7684\u5bc6\u7801\uff08\u540e\u671f\u53ef\u66f4\u6539\uff09\uff0c\u7528\u6237\u540d\u5c31\u662f\u767b\u5f55\u963f\u91cc\u4e91\u7684\u7528\u6237\u540d\u3002\u5728\u51fa\u73b0\u7684\u9875\u9762\u4e2d\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e13\u5c5e\u7684\u955c\u50cf\u52a0\u901f\u5730\u5740\uff0c\u7c7b\u4f3c\u4e8e\u201c https://1234abcd.mirror.aliyuncs.com \u201d\u3002\u6839\u636e\u9875\u9762\u4e2d\u7684\u201c\u64cd\u4f5c\u6587\u6863\u201d\u4fe1\u606f\uff0c\u914d\u7f6e\u81ea\u5df1\u7684Docker\u52a0\u901f\u5668\u3002 \u6216\u8005\uff0c\u767b\u5f55 \u963f\u91cc\u4e91 - \u5bb9\u5668Hub\u670d\u52a1\u63a7\u5236\u53f0 \u4e4b\u540e\uff0c\u70b9\u51fb\u52a0\u901f\u5668\u6807\u7b7e\uff0c\u4e5f\u4f1a\u51fa\u73b0\u76f8\u5e94\u4fe1\u606f\u3002 \u5176\u4ed6\u56fd\u5185Docker\u955c\u50cf\u7684\u914d\u7f6e\u65b9\u6cd5 \u56fd\u5185\u5176\u4ed6Docker\u52a0\u901f\u5668\u914d\u7f6e\u65b9\u6cd5\u548c\u963f\u91cc\u4e91\u7684\u5dee\u4e0d\u591a\uff1a \u6ce8\u518c\u8d26\u53f7\uff0c\u83b7\u53d6\u4e13\u5c5e\u7684\u955c\u50cf\u52a0\u901f\u5730\u5740 \u6839\u636e\u63d0\u793a\u548c\u7cfb\u7edf\u7c7b\u578b\uff0c\u5347\u7ea7\uff0c\u5e76\u914d\u7f6eDocker\uff0c\u7136\u540e\u91cd\u542f\u3002 \u9a8c\u8bc1\u64cd\u4f5c\u7ed3\u679c \u624b\u52a8\u914d\u7f6eDocker\u52a0\u901f\u5668 \u914d\u7f6eDocker\u52a0\u901f\u5668\u7684\u672c\u8d28\u5c31\u662f\u628aDocker\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u955c\u50cf\u4e0b\u8f7d\u5730\u5740\u7531\u9ed8\u8ba4\u7684Docker Hub\u5730\u5740\u53d8\u4e3a\u56fd\u5185\u955c\u50cf\u7684\u52a0\u901f\u5730\u5740\u3002 /lib/systemd/system/docker.service /etc/systemd/system/docker.service # \u6bd4\u5982centos7\u4e2d \u5c06 OPTIONS = --registry-mirror = http://abcd1234.m.daocloud.io\u52a0\u5165\u5230docker\u7684\u914d\u7f6e\u6587\u4ef6/etc/sysconfig/docker\u4e2d\uff0c\u7136\u540e\u91cd\u542fDocker Docker\u955c\u50cf \u00b6 \u955c\u50cf\u641c\u7d22 \u00b6 # docker\u6709\u4e00\u4e2adocker hub\u4ed3\u5e93\uff0c\u8fd9\u4e2a\u5176\u5b9e\u548cgithub\u5f88\u76f8\u4f3c\u3002\u4ed3\u5e93\u4e2d\u5b58\u4e86\u5f88\u591a\u5df2\u7ecf\u6784\u5efa\u597d\u7684\u955c\u50cf\u3002 # \u5927\u591a\u6570\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u4e00\u4e2a\u73b0\u6210\u7684\u955c\u50cf\u800c\u4e0d\u9700\u8981\u6211\u4eec\u81ea\u5df1\u6784\u5efa COMAND: $ sudo docker search TERM OPTIONS: --automated = false \u662f\u5426\u4ec5\u663e\u793a\u81ea\u52a8\u521b\u5efa\u7684\u955c\u50cf --no-trunc = false \u662f\u5426\u622a\u65ad\u8f93\u51fa -s, --stars = 0 \u4ec5\u663e\u793a\u81f3\u5c11\u6709x\u9897\u661f\u7684\u955c\u50cf \u793a\u4f8b: [ root@maxiaoyu ~ ] # docker search nginx INDEX NAME DESCRIPTION STARS OFFICIAL AUTOMATED docker.io docker.io/nginx Official build of Nginx. 7127 [ OK ] \u6211\u8fd9\u91cc\u622a\u53d6\u4e86\u641c\u7d22\u51fa\u7ed3\u679c\u7684\u7b2c\u4e00\u884c\uff0c\u5f53\u7136\u5982\u679c\u4f60\u5b9e\u9645\u641c\u7d22\u7684\u8bdd\u4f1a\u6709\u5f88\u591a\u884c\u7684\u5185\u5bb9\u7684\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5b98\u65b9\u7684\u4ee5\u53ca\u5404\u79cd\u81ea\u5236\u7684\u3002 NAME\uff1a\u955c\u50cf\u540d\u79f0 DESCRIPTION\uff1a\u4e5f\u5c31\u662f\u955c\u50cf\u7684\u63cf\u8ff0\uff0c STARS\u7c7b\u4f3c\u4e8egithub\u91cc\u9762\u7684stars\uff0c\u8868\u793a\u70b9\u8d5e\u548c\u70ed\u5ea6\u3002 OFFICIAL\uff1a\u6307docker\u6807\u51c6\u5e93, \u7531docker \u5b98\u65b9\u5efa\u7acb. \u7528\u6237\u5efa\u7acb\u7684image\u5219\u4f1a\u6709userid\u7684prefix. automated builds \uff1a\u5219\u662f\u901a\u8fc7\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u7f51\u7ad9\u7ed3\u5408docker hub\u63d0\u4f9b\u7684\u63a5\u53e3\u751f\u6210\u7684, \u4f8b\u5982github, bitbucket, \u4f60\u9700\u8981\u6ce8\u518cdocker hub, \u7136\u540e\u4f7f\u7528github\u6216bitbucket\u7684\u5728\u8d26\u6237\u94fe\u63a5\u5230docker hub, \u7136\u540e\u5c31\u53ef\u4ee5\u9009\u62e9\u5728github\u6216bitbucket\u91cc\u9762\u7684\u9879\u76ee\u81ea\u52a8build docker image, \u8fd9\u6837\u7684\u8bdd\u53ea\u8981\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u7f51\u7ad9\u7684\u9879\u76ee\u6709\u66f4\u65b0, \u5c31\u4f1a\u89e6\u53d1\u81ea\u52a8\u521b\u5efaimage.\u5bf9\u4e8e\u7684image\u5c5e\u4e8e\u4ec0\u4e48\u7248\u672c\uff0c\u4e0b\u9762\u7684\u201c[OK]\u201d\u5c31\u4f1a\u6253\u5728\u4ec0\u4e48\u5730\u65b9 \u83b7\u53d6\u955c\u50cf \u00b6 \u83b7\u53d6\u955c\u50cf\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u76f4\u63a5\u53bbpull\u6211\u4eec\u521a\u624d\u7528docker search\u641c\u7d22\u5230\u7684\u955c\u50cf\uff1a [ root@maxiaoyu ~ ] # docker pull docker.io/nginx Using default tag: latest Trying to pull repository docker.io/library/nginx ... latest: Pulling from docker.io/library/nginx bc95e04b23c0: Pull complete 110767c6efff: Pull complete f081e0c4df75: Pull complete Digest: sha256:004ac1d5e791e705f12a17c80d7bb1e8f7f01aa7dca7deee6e65a03465392072 [ root@maxiaoyu ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/nginx latest 1e5ab59102ce 2 weeks ago 108 .3 MB docker.io/centos latest 328edcd84f1b 12 weeks ago 192 .5 MB \u5bfc\u5165\u672c\u5730\u7684docker\u5305\uff1a docker load --input centos.tar \u6216\u8005 docker load < nginx.tar \u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7docker\u7684\u5bfc\u51fa\u529f\u80fd\u5c06\u6211\u4eecpull\u4e0b\u6765\u7684image\u5bfc\u51fa\u6210\u4e00\u4e2atar\u5305\uff0c\u751f\u6210\u7684tar\u5305\u4f1a\u4fdd\u5b58\u5728\u5f53\u524d\u7684\u76ee\u5f55\uff1a docker save -o centos.tar centos \u4f7f\u7528docker inspect\u53bb\u67e5\u770bimage\u7684\u5185\u5bb9\uff1a docker inspect docker.io/nginx:latest \u5217\u51fa\u5f53\u524d\u4e0b\u8f7d\u7684\u6240\u6709\u7684\u955c\u50cf\uff1a [ root@localhost ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE nginx latest ae513a47849c 10 days ago 109MB centos latest e934aafc2206 4 weeks ago 199MB \u5982\u679c\u6211\u4eec\u5728docker pull\u7684\u65f6\u5019\u4e0d\u52a0\u989d\u5916\u7684\u53c2\u6570\uff0c\u90a3\u4e48\u4e0b\u8f7d\u7684\u5c31\u662f\u6700\u65b0\u7684\uff0c\u53ef\u4ee5\u5728tag\u4e2d\u770b\u5230\u662flatest\u7684\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u7248\u672c\uff0c\u6bd4\u5982\uff1a # \u53c2\u8003\u793a\u4f8b docker pull centos:v1.0 \u5220\u9664\u955c\u50cf \u00b6 docker rmi \u955c\u50cfID\uff0c\u6bd4\u5982\uff1a [ root@maxiaoyu ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/nginx latest 1e5ab59102ce 2 weeks ago 108 .3 MB docker.io/centos latest 328edcd84f1b 12 weeks ago 192 .5 MB [ root@maxiaoyu ~ ] # docker rmi 1e5ab59102ce Untagged: docker.io/nginx:latest Untagged: docker.io/nginx@sha256:004ac1d5e791e705f12a17c80d7bb1e8f7f01aa7dca7deee6e65a03465392072 Deleted: sha256:1e5ab59102ce46c277eda5ed77affaa4e3b06a59fe209fe0b05200606db3aa7a Deleted: sha256:182a54bd28aa918a440f7edd3066ea838825c3d6a08cc73858ba070dc4f27211 Deleted: sha256:a527b2a06e67cab4b15e0fd831882f9e6a6485c24f3c56f870ac550b81938771 Deleted: sha256:cec7521cdf36a6d4ad8f2e92e41e3ac1b6fa6e05be07fa53cc84a63503bc5700 \u5b9e\u9645\u4e0a\u662f\u6309\u7167image\u7684id\u53bb\u5220\u9664\u7684\uff0c\u5f53\u7136\u5982\u679c\u4f60\u7684image\u5c5e\u4e8e\u88ab\u5176\u4ed6\u5bb9\u5668\u5f15\u7528\u7684\u60c5\u51b5\u4e0b\u7684\u8bdd\u662f\u65e0\u6cd5\u5220\u9664\u7684\u3002\u4f1a\u6536\u5230\u5982\u4e0b\u7684\u62a5\u9519\u4fe1\u606f\uff1a [ root@maxiaoyu ~ ] # docker rmi 328edcd84f1b Error response from daemon: conflict: unable to delete 328edcd84f1b ( must be forced ) - image is being used by stopped container 1284da16efeb Docker\u5bb9\u5668 \u00b6 \u521b\u5efa\u4e00\u4e2a\u5bb9\u5668 \u00b6 [ root@maxiaoyu ~ ] # docker run --name myfirstdocker -i -t centos /bin/bash [ root@2ce82d7a275e / ] # uname -a Linux 2ce82d7a275e 3 .10.0-514.26.2.el7.x86_64 #1 SMP Tue Jul 4 15:04:05 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux [ root@2ce82d7a275e / ] # ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0 .0 0 .1 11764 1888 ? Ss 09 :40 0 :00 /bin/bash root 14 0 .0 0 .0 47436 1676 ? R+ 09 :44 0 :00 ps aux \u8fd9\u6837\u5c31\u65b0\u5efa\u4e86\u4e00\u4e2a\u5bb9\u5668\uff0c\u6211\u4eec\u4e5f\u968f\u4e4b\u4f1a\u8fdb\u5165\u5230\u5bb9\u5668\u7684\u754c\u9762\u3002docker\u5bb9\u5668\u7684\u542f\u52a8\uff0c\u5373\u4f7f\u6ca1\u6709\u628a\u955c\u50cfpull\u4e0b\u6765\uff0c\u5728\u6267\u884c\u5982\u4e0a\u7684\u547d\u4ee4\u7684\u65f6\u5019\u4f9d\u7136\u53ef\u4ee5\u6267\u884c\uff0c\u56e0\u4e3adocker\u53d1\u73b0\u4f60\u6ca1\u6709\u8fd9\u4e2a\u955c\u50cf\u7684\u65f6\u5019\u4f1a\u5e2e\u4f60\u628a\u955c\u50cfpull\u4e0b\u6765\u3002\u5bb9\u5668\u7684\u4e3b\u673a\u540d\u5c31\u662f\u5bb9\u5668\u7684container id\u3002\u63a5\u4e0b\u6765\u770b\u770b\u5982\u4e0a\u7684\u51e0\u4e2a\u53c2\u6570\u90fd\u4ee3\u8868\u4ec0\u4e48\u610f\u601d\uff1a --name:\u6307\u5b9a\u8fd9\u4e2a\u751f\u6210\u7684\u5bb9\u5668\u7684\u540d\u5b57\uff0c\u5f53\u7136\u5982\u679c\u4e0d\u6307\u5b9a\u7684\u8bddname\u4e5f\u4f1a\u81ea\u52a8\u751f\u6210\uff0c\u6211\u4eec\u6307\u5b9a\u540d\u5b57\u53ea\u4e0d\u8fc7\u662f\u4e3a\u4e86\u66f4\u65b9\u4fbf\u7684\u53bb\u7ba1\u7406\u6211\u4eec\u7684\u5bb9\u5668\u3002 -i\uff1a\u5141\u8bb8\u6807\u51c6\u8f93\u5165 \uff0c\u5373\u786e\u4fdd\u5bb9\u5668\u7684STDIN\u662f\u5f00\u542f\u7684\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u8fd0\u884c\u547d\u4ee4\u4ee5\u540e\u6211\u4eec\u8fdb\u5165\u5230\u4e86\u5bb9\u5668\u4e2d\uff0c\u8fdb\u7a0b\u4e3aPID\u7684\u662f/bin/bash\uff0c\u4e5f\u5c31\u662f\u521a\u624d\u6211\u4eec\u6307\u5b9a\u8981\u8fd0\u884c\u7684\u547d\u4ee4\u3002\u56e0\u6b64docker\u5176\u5b9e\u662f\u4e3a\u8fdb\u7a0b\u6267\u884c\u9694\u79bb\u4f5c\u7528\u7684\uff0c\u865a\u62df\u673a\u662f\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u505a\u9694\u79bb\u7684\u3002 -t\uff1a\u5f00\u542f\u4e00\u4e2atty\u4f2a\u7ec8\u7aef\u3002 -d\uff1a\u5982\u679c\u9700\u8981\u5bb9\u5668\u5728\u540e\u53f0\u8fd0\u884c\u7684\u8bdd\uff0c\u53ef\u4ee5\u52a0\u4e0a-d\u53c2\u6570\u3002\u8303\u56f4\u503c\u4e3a\u5bb9\u5668\u7684id \u4ee5\u4e0a\u64cd\u4f5c\u5176\u5b9e\u662f\u7ecf\u5386\u4e86\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b\uff1a \u6267\u884c\u4e0a\u9762\u64cd\u4f5c\u9996\u5148\u4f1a\u5728\u7cfb\u7edf\u672c\u5730\u53bb\u627e\u6709\u6ca1\u6709\u5bf9\u5e94\u7684\u8fd9\u6837\u4e00\u4e2aimage\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\u90a3\u4e48\u5c31\u4f1a\u53bbDocker Hub Registry\u53bb\u627e\uff0c\u4e00\u65e6\u627e\u5230\u4ee5\u540e\u5c31\u56de\u53bb\u4e0b\u8f7d\u7136\u540e\u4fdd\u5b58\u5230\u672c\u5730\u5bbf\u4e3b\u673a\u5668\u3002 Docker\u5229\u7528\u8fd9\u4e2aimage\u521b\u5efa\u4e86\u4e00\u4e2a\u5bb9\u5668\uff0c\u8fd9\u4e2a\u5bb9\u5668\u62e5\u6709\u81ea\u5df1\u7684\u7f51\u7edc\uff0cip\uff0c\u4ee5\u53ca\u6865\u63a5\u5916\u90e8\u7f51\u7edc\u7684\u63a5\u53e3\u3002 \u6211\u4eec\u544a\u8bc9\u8fd9\u4e2a\u5bb9\u5668\u8981\u53bb\u6267\u884c\u4ec0\u4e48\u547d\u4ee4\uff08/bin/bash\uff09\uff0c\u5f53\u7136\u8fd9\u4e2a\u547d\u4ee4\u662f\u53ef\u4ee5\u5728\u5bb9\u5668\u4e2d\u6307\u5b9a\u7684\uff0c\u6307\u5b9a\u5bb9\u5668\u8d77\u6765\u7684\u65f6\u5019\u81ea\u52a8\u6267\u884c\u67d0\u4e2a\u547d\u4ee4\uff0c\u90a3\u8fd9\u91cc\u5c31\u53ef\u4ee5\u4e0d\u5199\u4e86\u3002 \u5f53\u524d\u6211\u4eec\u662f\u5728\u5bb9\u5668\u7684\u5185\u90e8\uff0c\u901a\u8fc7 ps aux \u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\uff0cpid\u7684\u5927\u6811\u6839\u5e76\u4e0d\u662finit\uff08centos7\u7684\u6811\u6839\u5e76\u4e0d\u662finit\uff09\uff0c\u800c\u662f\u6211\u4eec\u8fd0\u884c\u7684/bin/bash\uff0c\u5982\u679c\u6b64\u65f6\u6211\u4eec\u4f7f\u7528exit\u9000\u51fa\u5bb9\u5668\u7684\u8bdd\uff0c\u90a3\u4e48\u6b64\u65f6\u7684\u5bb9\u5668\u5c31\u4f1a\u88ab\u5173\u6389\uff0c\u5b83\u5c31\u5b8c\u6210\u4e86\u5b83\u7684\u4f7f\u547d\u3002 [ root@2ce82d7a275e / ] # exit exit [ root@maxiaoyu ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 2ce82d7a275e centos \"/bin/bash\" 10 minutes ago Exited ( 0 ) 5 seconds ago myfirstdocker Docker\u5176\u5b9e\u662f\u5355\u8fdb\u7a0b\u7684\uff0c\u4ed6\u9700\u8981\u4e00\u4e2a\u8fdb\u7a0b\u5728\u524d\u53f0\u8dd1\u7740\uff0c\u56e0\u6b64\u5982\u679c\u8fd9\u4e2a\u7a0b\u5e8f\u6267\u884c\u5b8c\u4e86\uff0c\u90a3\u4e48\u6574\u4e2a\u5bb9\u5668\u4e5f\u5c31\u9000\u51fa\u4e86\uff0c\u5c31\u50cf\u6211\u4eec\u521a\u624d\u6267\u884c/bin/bash\u540e\u8fdb\u5165\u5230\u5bb9\u5668\uff0c\u5f53exit\u9000\u51fa\u7684\u65f6\u5019\u8fd9\u4e2a\u8fdb\u7a0b\u7ed3\u675f\u4ee5\u540e\u6574\u4e2a\u5bb9\u5668\u4e5f\u5c31\u8ddf\u7740\u4e00\u8d77\u9000\u51fa\u4e86\u3002\u6240\u4ee5\u8bf4\u4e0d\u662f\u6240\u6709\u7684\u5e94\u7528\u90fd\u9002\u5408docker\u3002 \u542f\u52a8\u5e76\u8fdb\u5165\u4e00\u4e2a\u5bb9\u5668 \u00b6 \u90a3\u4e48\u5982\u4f55\u542f\u52a8\u5df2\u7ecf\u5173\u95ed\u7684\u5bb9\u5668\u5462\uff1f \u65b9\u6cd5\u4e00 docker start docker_name \u6bd4\u5982\uff08\u8fd9\u6837\u5c31\u4e00\u76f4\u8dd1\u8d77\u6765\u4e86\uff09\uff1a [root@maxiaoyu ~]# docker start myfirstdocker myfirstdocker \u65b9\u6cd5\u4e8c [root@maxiaoyu ~]# docker attach myfirstdocker [root@2ce82d7a275e /]# # \u8fd9\u6837\u5c31\u662f\u76f4\u63a5\u8fdb\u5230\u5bb9\u5668\u91cc\u9762\u53bb\u4e86\uff0c\u4e0d\u8fc7exit\u4ee5\u540e\u5bb9\u5668\u8fd8\u662f\u4f1a\u505c\u6b62\uff0c\u56e0\u6b64\u4e00\u822c\u4e0d\u4f1a\u53bb\u8fd9\u4e48\u64cd\u4f5c\u7684 # \u800c\u4e14\u591a\u4eba\u540c\u65f6\u8fdb\u5165\u5230\u8fd9\u4e2a\u5bb9\u5668\u8fd9\u4e2a\u547d\u4ee4\u663e\u793a\u662f\u540c\u6b65\u7684\u3002 \u65b9\u6cd5\u4e09 # \u751f\u4ea7\u4e2d\u5efa\u8bae\u4f7f\u7528\u7684\u65b9\u6cd5 [ root@maxiaoyu ~ ] # yum -y install util-linux [ root@maxiaoyu ~ ] # docker start mydocker mydocker # \u83b7\u53d6\u5f53\u524d\u7684docker\u7684pid\uff0c\u5982\u679c\u83b7\u53d6\u5230\u7684pid=0\uff0c\u8bf4\u660e\u4f60\u8fd9\u4e2a\u5bb9\u5668\u6ca1\u8d77\u6765\uff0c\u540e\u9762\u53ef\u4ee5\u63a5\u5bb9\u5668id\u4e5f\u53ef\u4ee5\u63a5\u5bb9\u5668\u540d\u79f0\u3002 [ root@maxiaoyu ~ ] # docker inspect -f \"{{ .State.Pid }}\" mydocker 13500 [ root@maxiaoyu ~ ] # nsenter -t 13500 -m -u -i -n -p # \u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u8fdb\u5165\u5bb9\u5668\uff0c\u5373\u4f7f\u9000\u51fa\u7684\u8bdd\u4ecd\u7136\u53ef\u4ee5\u4fdd\u8bc1\u5bb9\u5668\u662f\u5f00\u542f\u7684\uff0c\u8fdb\u7a0b\u5e76\u4e0d\u4f1a\u7ed3\u675f\uff0cdocker ps\u80fd\u770b\u5230 [ root@1284da16efeb / ] # exit logout # \u90a3\u4e48\u4e3a\u4ec0\u4e48\u5373\u4f7fexit\u51fa\u53bb\u4e5f\u4e0d\u4f1a\u9000\u51fa\u5bb9\u5668\u5462\uff1f [ root@1284da16efeb / ] # ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0 .0 0 .0 11764 1676 ? Ss+ 10 :01 0 :00 /bin/bash root 26 0 .0 0 .1 15192 1996 ? S 10 :05 0 :00 -bash root 39 0 .0 0 .0 50868 1816 ? R+ 10 :05 0 :00 ps aux # \u4e3b\u8981\u539f\u56e0\u662f\u56e0\u4e3a\u591a\u4e86\u4e00\u4e2a-bash\u7684\u8fdb\u7a0b\uff0c\u56e0\u6b64\u9000\u51fa\u5f53\u524d\u7684\u8fdb\u7a0b\u8fd9\u4e2adocker\u4e0d\u4f1a\u9000\u51fa\uff0c\u56e0\u4e3a\u4ecd\u7136\u8fd8\u6709\u4e00\u4e2a/bin/bash\u7684\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\uff0c\u56e0\u6b64\u6574\u4e2a\u5bb9\u5668\u662f\u5e76\u4e0d\u4f1a\u9000\u51fa\u7684\u3002 \u67e5\u770b\u4e00\u4e0bnsenter\u7684\u5e2e\u52a9\u4fe1\u606f\uff1a [root@maxiaoyu ~]# nsenter --help Usage: nsenter [options] <program> [<argument>...] Run a program with namespaces of other processes. Options: -t, --target <pid> target process to get namespaces from -m, --mount[=<file>] enter mount namespace -u, --uts[=<file>] enter UTS namespace (hostname etc) -i, --ipc[=<file>] enter System V IPC namespace -n, --net[=<file>] enter network namespace -p, --pid[=<file>] enter pid namespace -U, --user[=<file>] enter user namespace -S, --setuid <uid> set uid in entered namespace -G, --setgid <gid> set gid in entered namespace --preserve-credentials do not touch uids or gids -r, --root[=<dir>] set the root directory -w, --wd[=<dir>] set the working directory -F, --no-fork do not fork before exec'ing <program> -Z, --follow-context set SELinux context according to --target PID -h, --help display this help and exit -V, --version output version information and exit For more details see nsenter(1). \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u7b2c\u4e09\u79cd\u751f\u4ea7\u4e2d\u4f7f\u7528\u7684\u65b9\u6cd5\u53bb\u5199\u4e00\u4e2a\u5c0f\u811a\u672c\u7136\u540e\u901a\u8fc7\u6279\u91cf\u90e8\u7f72\u5206\u53d1\u540e\u4f7f\u7528\uff1a # $1\u53ef\u4ee5\u662f\u5bb9\u5668\u7684\u540d\u79f0\uff0c\u6216\u8005\u5bb9\u5668\u7684id [ root@maxiaoyu ~ ] # cat docker_in.sh #!/bin/bash # Use nsenter to access docker docker_in (){ NAME_ID = $1 PID = $( docker inspect -f \"{{ .State.Pid }}\" $NAME_ID ) nsenter -t $PID -m -u -i -n -p } docker_in $1 [ root@maxiaoyu ~ ] # chmod +x docker_in.sh \u65b9\u6cd5\u56db [ root@localhost ~ ] # docker exec mydocker uptime 06 :38:47 up 3 :51, 0 users, load average: 0 .00, 0 .03, 0 .05 \u6211\u4e0d\u60f3\u771f\u7684\u8fdb\u5165\u5bb9\u5668\uff0c\u4f46\u662f\u6211\u8fd8\u60f3\u8ba9\u8fd9\u4e2a\u5bb9\u5668\u7ed9\u6211\u6267\u884c\u4e2a\u547d\u4ee4\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528exec\uff0c\u8fd9\u4e2a\u662fexec\u547d\u4ee4\u7684\u7528\u9014\u672c\u610f\u3002\u4e0d\u8fc7\u901a\u8fc7exec\u4e5f\u80fd\u8fdb\u5165\u5bb9\u5668\uff0c\u6bd4\u5982\uff1a [ root@linux-node1 ~ ] # docker exec -it mydocker /bin/bash [ root@e95a62d6770f / ] # ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0 .0 0 .0 11768 1676 ? Ss+ 02 :28 0 :00 /bin/bash root 50 0 .5 0 .0 11768 1884 ? Ss 02 :41 0 :00 /bin/bash root 62 0 .0 0 .0 47440 1676 ? R+ 02 :41 0 :00 ps aux ###\u6709\u4e24\u4e2a/bin/bash\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5bb9\u5668\u6280\u672f\u9000\u51fa\u4e86\u4ecd\u7136\u8fd8\u5728\u8fd0\u884c\uff0c\u4ed6\u9000\u51fa\u7684\u662fpid=50\u7684/bin/bash [ root@e95a62d6770f / ] # exit exit [ root@linux-node1 ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES e95a62d6770f centos \"/bin/bash\" 33 minutes ago Up 12 minutes mydocker 78fc36ba1e5a centos \"/bin/echo xx\" 39 minutes ago Exited ( 0 ) 39 minutes ago compassionate_rosalind \u5220\u9664\u5bb9\u5668 \u00b6 docker rm \u5bb9\u5668id \u5982\u679c\u5bb9\u5668\u5728\u4f7f\u7528\u7684\u8bdd\u90a3\u662f\u4e0d\u5141\u8bb8\u4f60\u5220\u9664\u7684\uff0c\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u4f7f\u7528-f\u5f3a\u5236\u5e72\u6389\u3002\u5f53\u7136\u4e00\u822c\u4e0d\u5efa\u8bae\u8fd9\u4e48\u505a\u3002\u4e00\u822c\u6765\u8bb2\u90fd\u662f\u5148\u628a\u5bb9\u5668\u505c\u6389\u4ee5\u540e\u518d\u628a\u5bb9\u5668\u5e72\u6389\u3002 \u8fd0\u884c\u73a9\u610f\u540e\u76f4\u63a5\u5220\u9664\u5bb9\u5668 ## --rm\u53c2\u6570\u53ef\u4ee5\u4f7f\u5f97\u4e00\u4e2a\u5bb9\u5668\u8fd0\u884c\u5b8c\u6210\u4ee5\u540e\u5c31\u76f4\u63a5\u5220\u9664\u4e86\u3002\u4e0b\u9762\u7684\u5185\u5bb9\u6267\u884c\u5b8c\u6210\u4ee5\u540e\u518ddocker ps\u5c31\u770b\u4e0d\u5230\u4e86 [ root@linux-node1 ~ ] # docker run --rm centos /bin/echo \"hello lamber\" hello lamber \u505c\u6b62\u5bb9\u5668 \u00b6 docker stop \u5bb9\u5668ID","title":"Docker"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker","text":"Docker\u662fDocker.Inc\u516c\u53f8\u5f00\u6e90\u7684\u4e00\u4e2a\u57fa\u4e8eLXC\u6280\u672f\u4e4b\u4e0a\u6784\u5efa\u7684Container\u5bb9\u5668\u5f15\u64ce\uff0c\u6e90\u4ee3\u7801\u6258\u7ba1\u5728github\u4e0a\uff0c\u57fa\u4e8eGo\u8bed\u8a00\u5e76\u9075\u5faaApache2.0\u534f\u8bae\u5f00\u6e90\u3002 Docker\u662f\u901a\u8fc7\u5185\u6838\u865a\u62df\u5316\u6280\u672f\uff08namespaces\u4ee5\u53cacgroups\u7b49\uff09\u6765\u63d0\u4f9b\u5bb9\u5668\u7684\u8d44\u6e90\u9694\u79bb\u4e0e\u5b89\u5168\u4fdd\u8bc1\u7b49\u3002\u7531\u4e8eDocker\u901a\u8fc7\u7cfb\u7edf\u5c42\u7684\u865a\u62df\u5316\u5b9e\u73b0\u9694\u79bb\uff0c\u6240\u4ee5Docker\u5bb9\u5668\u5728\u8fd0\u884c\u7684\u65f6\u5019\u4e0d\u9700\u8981\u7c7b\u4f3c\u865a\u62df\u673a\u989d\u5916\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f00\u9500\uff08\u7ecf\u9a8c\u6765\u770b\u4e00\u822c\u4e00\u4e2a\u5b8c\u6574\u7684\u7cfb\u7edf\u5927\u6982\u4f1a\u6d88\u8017\u4e00\u4e2a\u7269\u7406\u4e3b\u673a6%\u5de6\u53f3\u7684\u6027\u80fd\uff09\uff0c\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u3002 docker\u7684\u6838\u5fc3\u7406\u5ff5 \u6784\u5efa\uff08Build\uff09 \u8fd0\u8f93\uff08Ship\uff09 \u8fd0\u884c\uff08Run\uff09","title":"Docker"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_1","text":"","title":"Docker\u4ecb\u7ecd"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#vs","text":"\u865a\u62df\u673a\u662f\u5b8c\u6574\u7684\u8d44\u6e90\u9694\u79bb\u3002\u5bb9\u5668\u662f\u9694\u79bb\u4e0d\u662f\u865a\u62df\uff0c\u5b83\u4e0d\u9700\u8981\u865a\u62df\u51fa\u6765\u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u3002","title":"\u5bb9\u5668VS\u865a\u62df\u5316"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_2","text":"\u7b80\u5316\u914d\u7f6e \u4ee3\u7801\u6d41\u6c34\u7ebf\u7684\u7ba1\u7406\uff0c\u8ba9\u5f00\u53d1\uff0c\u6d4b\u8bd5\u751f\u4ea7\u90fd\u8dd1\u5728\u540c\u6837\u4e00\u4e2a\u73af\u5883\uff0c\u4fdd\u8bc1\u5f00\u53d1\u73af\u5883\u7684\u4e00\u81f4\u6027\u3002 \u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u5e94\u7528\u7684\u9694\u79bb\uff08\u865a\u62df\u673a\u4e5f\u53ef\u4ee5\u505a\u5230\uff09 \u6574\u5408\u670d\u52a1\u5668\uff0c\u901a\u8fc7docker\u7684\u9694\u79bb\u80fd\u529b\u6574\u5408\u591a\u4e2a\u670d\u52a1\u5668\u964d\u4f4e\u6210\u672c\u3002 \u8c03\u8bd5\u80fd\u529b \u591a\u79df\u6237\u73af\u5883 \u5feb\u901f\u90e8\u7f72","title":"Docker\u53ef\u4ee5\u505a\u4ec0\u4e48"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_3","text":"\u9762\u5411\u4ea7\u54c1\uff1a\u4ea7\u54c1\u4ea4\u4ed8 \u9762\u5411\u5f00\u53d1\uff1a\u7b80\u5316\u73af\u5883\u914d\u7f6e \u9762\u5411\u6d4b\u8bd5\uff1a\u591a\u7248\u672c\u6d4b\u8bd5 \u9762\u5411\u8fd0\u7ef4\uff1a\u73af\u5883\u4e00\u81f4\u6027\uff0c\u53ef\u4ee5\u73af\u5883\u548c\u4ee3\u7801\u4e00\u8d77\u53d1\u5e03\uff0c\u56de\u6eda\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u505a\u5230\u4e00\u8d77\u56de\u6eda\u3002 \u9762\u5411\u67b6\u6784\uff1a\u81ea\u52a8\u5316\u6269\u5bb9\uff08\u5fae\u670d\u52a1\uff09","title":"Docker\u6539\u53d8\u4e86\u4ec0\u4e48\uff1f"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_4","text":"\u6700\u65b0\u7684\u5b89\u88c5\u4fe1\u606f\u8bf7\u4ee5\u5b98\u65b9\u6587\u6863\u7684\u5b89\u88c5\u4fe1\u606f\u4e3a\u51c6\uff0c \u5b98\u65b9Doc\u6587\u6863\u5730\u5740 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b89\u88c5\u6b65\u9aa4\uff1a yum install -y yum-utils device-mapper-persistent-data lvm2 yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo yum install docker-ce systemctl start docker \u67e5\u770bdocker\u542f\u52a8\u72b6\u6001\uff1a [ root@localhost ~ ] # ps -ef | grep docker root 31551 1 2 00 :43 ? 00 :00:00 /usr/bin/dockerd root 31555 31551 0 00 :43 ? 00 :00:00 docker-containerd --config /var/run/docker/containerd/containerd.toml root 31667 31082 0 00 :43 pts/0 00 :00:00 grep --color = auto docker \u62c9\u53d6docker\u955c\u50cf\uff0c\u8fd9\u91cc\u5982\u679c\u76f4\u63a5\u62c9\u7684\u8bdd\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7f51\u901f\u6162\u5bfc\u81f4\u62c9\u4e0d\u4e0b\u6765\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e0b\u56fd\u5185\u7684docker\u955c\u50cf\u6e90","title":"Docker\u7684\u5b89\u88c5"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_5","text":"\u56fd\u5185\u7684Docker\u955c\u50cf\u6e90\u6709\u5f88\u591a\u53ef\u4ee5\u9009\u62e9\uff0c \u53c2\u8003\u539f\u6587 DaoCloud - Docker\u52a0\u901f\u5668 \u963f\u91cc\u4e91 - \u5f00\u53d1\u8005\u5e73\u53f0 \u5fae\u955c\u50cf - \u5e0c\u4e91cSphere \u955c\u50cf\u5e7f\u573a - \u65f6\u901f\u4e91 \u7075\u96c0\u4e91 \u7f51\u6613\u8702\u5de2 \u8fd9\u91cc\u4ee5\u963f\u91cc\u4e91\u7684Docker\u52a0\u901f\u5668\u4e3a\u4f8b\uff0c\u6ce8\u518c\u5e76\u767b\u9646 \u963f\u91cc\u4e91 - \u5f00\u53d1\u8005\u5e73\u53f0 \u4e4b\u540e\uff0c\u5728\u9996\u9875\u70b9\u51fb\u201c\u521b\u5efa\u6211\u7684\u5bb9\u5668\u955c\u50cf\u201d\uff0c\u7136\u540e\u5c31\u4f1a\u6765\u5230\u963f\u91cc\u4e91\u7684\u670d\u52a1\u9762\u677f\u3002\u70b9\u51fb\u52a0\u901f\u5668\u6807\u7b7e\u3002\u6839\u636e\u63d0\u793a\u8f93\u5165Docker\u767b\u5f55\u65f6\u9700\u8981\u4f7f\u7528\u7684\u5bc6\u7801\uff08\u540e\u671f\u53ef\u66f4\u6539\uff09\uff0c\u7528\u6237\u540d\u5c31\u662f\u767b\u5f55\u963f\u91cc\u4e91\u7684\u7528\u6237\u540d\u3002\u5728\u51fa\u73b0\u7684\u9875\u9762\u4e2d\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e13\u5c5e\u7684\u955c\u50cf\u52a0\u901f\u5730\u5740\uff0c\u7c7b\u4f3c\u4e8e\u201c https://1234abcd.mirror.aliyuncs.com \u201d\u3002\u6839\u636e\u9875\u9762\u4e2d\u7684\u201c\u64cd\u4f5c\u6587\u6863\u201d\u4fe1\u606f\uff0c\u914d\u7f6e\u81ea\u5df1\u7684Docker\u52a0\u901f\u5668\u3002 \u6216\u8005\uff0c\u767b\u5f55 \u963f\u91cc\u4e91 - \u5bb9\u5668Hub\u670d\u52a1\u63a7\u5236\u53f0 \u4e4b\u540e\uff0c\u70b9\u51fb\u52a0\u901f\u5668\u6807\u7b7e\uff0c\u4e5f\u4f1a\u51fa\u73b0\u76f8\u5e94\u4fe1\u606f\u3002 \u5176\u4ed6\u56fd\u5185Docker\u955c\u50cf\u7684\u914d\u7f6e\u65b9\u6cd5 \u56fd\u5185\u5176\u4ed6Docker\u52a0\u901f\u5668\u914d\u7f6e\u65b9\u6cd5\u548c\u963f\u91cc\u4e91\u7684\u5dee\u4e0d\u591a\uff1a \u6ce8\u518c\u8d26\u53f7\uff0c\u83b7\u53d6\u4e13\u5c5e\u7684\u955c\u50cf\u52a0\u901f\u5730\u5740 \u6839\u636e\u63d0\u793a\u548c\u7cfb\u7edf\u7c7b\u578b\uff0c\u5347\u7ea7\uff0c\u5e76\u914d\u7f6eDocker\uff0c\u7136\u540e\u91cd\u542f\u3002 \u9a8c\u8bc1\u64cd\u4f5c\u7ed3\u679c \u624b\u52a8\u914d\u7f6eDocker\u52a0\u901f\u5668 \u914d\u7f6eDocker\u52a0\u901f\u5668\u7684\u672c\u8d28\u5c31\u662f\u628aDocker\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u955c\u50cf\u4e0b\u8f7d\u5730\u5740\u7531\u9ed8\u8ba4\u7684Docker Hub\u5730\u5740\u53d8\u4e3a\u56fd\u5185\u955c\u50cf\u7684\u52a0\u901f\u5730\u5740\u3002 /lib/systemd/system/docker.service /etc/systemd/system/docker.service # \u6bd4\u5982centos7\u4e2d \u5c06 OPTIONS = --registry-mirror = http://abcd1234.m.daocloud.io\u52a0\u5165\u5230docker\u7684\u914d\u7f6e\u6587\u4ef6/etc/sysconfig/docker\u4e2d\uff0c\u7136\u540e\u91cd\u542fDocker","title":"\u914d\u7f6e\u56fd\u5185docker\u955c\u50cf\u6e90"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_6","text":"","title":"Docker\u955c\u50cf"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_1","text":"# docker\u6709\u4e00\u4e2adocker hub\u4ed3\u5e93\uff0c\u8fd9\u4e2a\u5176\u5b9e\u548cgithub\u5f88\u76f8\u4f3c\u3002\u4ed3\u5e93\u4e2d\u5b58\u4e86\u5f88\u591a\u5df2\u7ecf\u6784\u5efa\u597d\u7684\u955c\u50cf\u3002 # \u5927\u591a\u6570\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u4e00\u4e2a\u73b0\u6210\u7684\u955c\u50cf\u800c\u4e0d\u9700\u8981\u6211\u4eec\u81ea\u5df1\u6784\u5efa COMAND: $ sudo docker search TERM OPTIONS: --automated = false \u662f\u5426\u4ec5\u663e\u793a\u81ea\u52a8\u521b\u5efa\u7684\u955c\u50cf --no-trunc = false \u662f\u5426\u622a\u65ad\u8f93\u51fa -s, --stars = 0 \u4ec5\u663e\u793a\u81f3\u5c11\u6709x\u9897\u661f\u7684\u955c\u50cf \u793a\u4f8b: [ root@maxiaoyu ~ ] # docker search nginx INDEX NAME DESCRIPTION STARS OFFICIAL AUTOMATED docker.io docker.io/nginx Official build of Nginx. 7127 [ OK ] \u6211\u8fd9\u91cc\u622a\u53d6\u4e86\u641c\u7d22\u51fa\u7ed3\u679c\u7684\u7b2c\u4e00\u884c\uff0c\u5f53\u7136\u5982\u679c\u4f60\u5b9e\u9645\u641c\u7d22\u7684\u8bdd\u4f1a\u6709\u5f88\u591a\u884c\u7684\u5185\u5bb9\u7684\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5b98\u65b9\u7684\u4ee5\u53ca\u5404\u79cd\u81ea\u5236\u7684\u3002 NAME\uff1a\u955c\u50cf\u540d\u79f0 DESCRIPTION\uff1a\u4e5f\u5c31\u662f\u955c\u50cf\u7684\u63cf\u8ff0\uff0c STARS\u7c7b\u4f3c\u4e8egithub\u91cc\u9762\u7684stars\uff0c\u8868\u793a\u70b9\u8d5e\u548c\u70ed\u5ea6\u3002 OFFICIAL\uff1a\u6307docker\u6807\u51c6\u5e93, \u7531docker \u5b98\u65b9\u5efa\u7acb. \u7528\u6237\u5efa\u7acb\u7684image\u5219\u4f1a\u6709userid\u7684prefix. automated builds \uff1a\u5219\u662f\u901a\u8fc7\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u7f51\u7ad9\u7ed3\u5408docker hub\u63d0\u4f9b\u7684\u63a5\u53e3\u751f\u6210\u7684, \u4f8b\u5982github, bitbucket, \u4f60\u9700\u8981\u6ce8\u518cdocker hub, \u7136\u540e\u4f7f\u7528github\u6216bitbucket\u7684\u5728\u8d26\u6237\u94fe\u63a5\u5230docker hub, \u7136\u540e\u5c31\u53ef\u4ee5\u9009\u62e9\u5728github\u6216bitbucket\u91cc\u9762\u7684\u9879\u76ee\u81ea\u52a8build docker image, \u8fd9\u6837\u7684\u8bdd\u53ea\u8981\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u7f51\u7ad9\u7684\u9879\u76ee\u6709\u66f4\u65b0, \u5c31\u4f1a\u89e6\u53d1\u81ea\u52a8\u521b\u5efaimage.\u5bf9\u4e8e\u7684image\u5c5e\u4e8e\u4ec0\u4e48\u7248\u672c\uff0c\u4e0b\u9762\u7684\u201c[OK]\u201d\u5c31\u4f1a\u6253\u5728\u4ec0\u4e48\u5730\u65b9","title":"\u955c\u50cf\u641c\u7d22"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_2","text":"\u83b7\u53d6\u955c\u50cf\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u76f4\u63a5\u53bbpull\u6211\u4eec\u521a\u624d\u7528docker search\u641c\u7d22\u5230\u7684\u955c\u50cf\uff1a [ root@maxiaoyu ~ ] # docker pull docker.io/nginx Using default tag: latest Trying to pull repository docker.io/library/nginx ... latest: Pulling from docker.io/library/nginx bc95e04b23c0: Pull complete 110767c6efff: Pull complete f081e0c4df75: Pull complete Digest: sha256:004ac1d5e791e705f12a17c80d7bb1e8f7f01aa7dca7deee6e65a03465392072 [ root@maxiaoyu ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/nginx latest 1e5ab59102ce 2 weeks ago 108 .3 MB docker.io/centos latest 328edcd84f1b 12 weeks ago 192 .5 MB \u5bfc\u5165\u672c\u5730\u7684docker\u5305\uff1a docker load --input centos.tar \u6216\u8005 docker load < nginx.tar \u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7docker\u7684\u5bfc\u51fa\u529f\u80fd\u5c06\u6211\u4eecpull\u4e0b\u6765\u7684image\u5bfc\u51fa\u6210\u4e00\u4e2atar\u5305\uff0c\u751f\u6210\u7684tar\u5305\u4f1a\u4fdd\u5b58\u5728\u5f53\u524d\u7684\u76ee\u5f55\uff1a docker save -o centos.tar centos \u4f7f\u7528docker inspect\u53bb\u67e5\u770bimage\u7684\u5185\u5bb9\uff1a docker inspect docker.io/nginx:latest \u5217\u51fa\u5f53\u524d\u4e0b\u8f7d\u7684\u6240\u6709\u7684\u955c\u50cf\uff1a [ root@localhost ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE nginx latest ae513a47849c 10 days ago 109MB centos latest e934aafc2206 4 weeks ago 199MB \u5982\u679c\u6211\u4eec\u5728docker pull\u7684\u65f6\u5019\u4e0d\u52a0\u989d\u5916\u7684\u53c2\u6570\uff0c\u90a3\u4e48\u4e0b\u8f7d\u7684\u5c31\u662f\u6700\u65b0\u7684\uff0c\u53ef\u4ee5\u5728tag\u4e2d\u770b\u5230\u662flatest\u7684\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u7248\u672c\uff0c\u6bd4\u5982\uff1a # \u53c2\u8003\u793a\u4f8b docker pull centos:v1.0","title":"\u83b7\u53d6\u955c\u50cf"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_3","text":"docker rmi \u955c\u50cfID\uff0c\u6bd4\u5982\uff1a [ root@maxiaoyu ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/nginx latest 1e5ab59102ce 2 weeks ago 108 .3 MB docker.io/centos latest 328edcd84f1b 12 weeks ago 192 .5 MB [ root@maxiaoyu ~ ] # docker rmi 1e5ab59102ce Untagged: docker.io/nginx:latest Untagged: docker.io/nginx@sha256:004ac1d5e791e705f12a17c80d7bb1e8f7f01aa7dca7deee6e65a03465392072 Deleted: sha256:1e5ab59102ce46c277eda5ed77affaa4e3b06a59fe209fe0b05200606db3aa7a Deleted: sha256:182a54bd28aa918a440f7edd3066ea838825c3d6a08cc73858ba070dc4f27211 Deleted: sha256:a527b2a06e67cab4b15e0fd831882f9e6a6485c24f3c56f870ac550b81938771 Deleted: sha256:cec7521cdf36a6d4ad8f2e92e41e3ac1b6fa6e05be07fa53cc84a63503bc5700 \u5b9e\u9645\u4e0a\u662f\u6309\u7167image\u7684id\u53bb\u5220\u9664\u7684\uff0c\u5f53\u7136\u5982\u679c\u4f60\u7684image\u5c5e\u4e8e\u88ab\u5176\u4ed6\u5bb9\u5668\u5f15\u7528\u7684\u60c5\u51b5\u4e0b\u7684\u8bdd\u662f\u65e0\u6cd5\u5220\u9664\u7684\u3002\u4f1a\u6536\u5230\u5982\u4e0b\u7684\u62a5\u9519\u4fe1\u606f\uff1a [ root@maxiaoyu ~ ] # docker rmi 328edcd84f1b Error response from daemon: conflict: unable to delete 328edcd84f1b ( must be forced ) - image is being used by stopped container 1284da16efeb","title":"\u5220\u9664\u955c\u50cf"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#docker_7","text":"","title":"Docker\u5bb9\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_4","text":"[ root@maxiaoyu ~ ] # docker run --name myfirstdocker -i -t centos /bin/bash [ root@2ce82d7a275e / ] # uname -a Linux 2ce82d7a275e 3 .10.0-514.26.2.el7.x86_64 #1 SMP Tue Jul 4 15:04:05 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux [ root@2ce82d7a275e / ] # ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0 .0 0 .1 11764 1888 ? Ss 09 :40 0 :00 /bin/bash root 14 0 .0 0 .0 47436 1676 ? R+ 09 :44 0 :00 ps aux \u8fd9\u6837\u5c31\u65b0\u5efa\u4e86\u4e00\u4e2a\u5bb9\u5668\uff0c\u6211\u4eec\u4e5f\u968f\u4e4b\u4f1a\u8fdb\u5165\u5230\u5bb9\u5668\u7684\u754c\u9762\u3002docker\u5bb9\u5668\u7684\u542f\u52a8\uff0c\u5373\u4f7f\u6ca1\u6709\u628a\u955c\u50cfpull\u4e0b\u6765\uff0c\u5728\u6267\u884c\u5982\u4e0a\u7684\u547d\u4ee4\u7684\u65f6\u5019\u4f9d\u7136\u53ef\u4ee5\u6267\u884c\uff0c\u56e0\u4e3adocker\u53d1\u73b0\u4f60\u6ca1\u6709\u8fd9\u4e2a\u955c\u50cf\u7684\u65f6\u5019\u4f1a\u5e2e\u4f60\u628a\u955c\u50cfpull\u4e0b\u6765\u3002\u5bb9\u5668\u7684\u4e3b\u673a\u540d\u5c31\u662f\u5bb9\u5668\u7684container id\u3002\u63a5\u4e0b\u6765\u770b\u770b\u5982\u4e0a\u7684\u51e0\u4e2a\u53c2\u6570\u90fd\u4ee3\u8868\u4ec0\u4e48\u610f\u601d\uff1a --name:\u6307\u5b9a\u8fd9\u4e2a\u751f\u6210\u7684\u5bb9\u5668\u7684\u540d\u5b57\uff0c\u5f53\u7136\u5982\u679c\u4e0d\u6307\u5b9a\u7684\u8bddname\u4e5f\u4f1a\u81ea\u52a8\u751f\u6210\uff0c\u6211\u4eec\u6307\u5b9a\u540d\u5b57\u53ea\u4e0d\u8fc7\u662f\u4e3a\u4e86\u66f4\u65b9\u4fbf\u7684\u53bb\u7ba1\u7406\u6211\u4eec\u7684\u5bb9\u5668\u3002 -i\uff1a\u5141\u8bb8\u6807\u51c6\u8f93\u5165 \uff0c\u5373\u786e\u4fdd\u5bb9\u5668\u7684STDIN\u662f\u5f00\u542f\u7684\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u8fd0\u884c\u547d\u4ee4\u4ee5\u540e\u6211\u4eec\u8fdb\u5165\u5230\u4e86\u5bb9\u5668\u4e2d\uff0c\u8fdb\u7a0b\u4e3aPID\u7684\u662f/bin/bash\uff0c\u4e5f\u5c31\u662f\u521a\u624d\u6211\u4eec\u6307\u5b9a\u8981\u8fd0\u884c\u7684\u547d\u4ee4\u3002\u56e0\u6b64docker\u5176\u5b9e\u662f\u4e3a\u8fdb\u7a0b\u6267\u884c\u9694\u79bb\u4f5c\u7528\u7684\uff0c\u865a\u62df\u673a\u662f\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u505a\u9694\u79bb\u7684\u3002 -t\uff1a\u5f00\u542f\u4e00\u4e2atty\u4f2a\u7ec8\u7aef\u3002 -d\uff1a\u5982\u679c\u9700\u8981\u5bb9\u5668\u5728\u540e\u53f0\u8fd0\u884c\u7684\u8bdd\uff0c\u53ef\u4ee5\u52a0\u4e0a-d\u53c2\u6570\u3002\u8303\u56f4\u503c\u4e3a\u5bb9\u5668\u7684id \u4ee5\u4e0a\u64cd\u4f5c\u5176\u5b9e\u662f\u7ecf\u5386\u4e86\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b\uff1a \u6267\u884c\u4e0a\u9762\u64cd\u4f5c\u9996\u5148\u4f1a\u5728\u7cfb\u7edf\u672c\u5730\u53bb\u627e\u6709\u6ca1\u6709\u5bf9\u5e94\u7684\u8fd9\u6837\u4e00\u4e2aimage\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\u90a3\u4e48\u5c31\u4f1a\u53bbDocker Hub Registry\u53bb\u627e\uff0c\u4e00\u65e6\u627e\u5230\u4ee5\u540e\u5c31\u56de\u53bb\u4e0b\u8f7d\u7136\u540e\u4fdd\u5b58\u5230\u672c\u5730\u5bbf\u4e3b\u673a\u5668\u3002 Docker\u5229\u7528\u8fd9\u4e2aimage\u521b\u5efa\u4e86\u4e00\u4e2a\u5bb9\u5668\uff0c\u8fd9\u4e2a\u5bb9\u5668\u62e5\u6709\u81ea\u5df1\u7684\u7f51\u7edc\uff0cip\uff0c\u4ee5\u53ca\u6865\u63a5\u5916\u90e8\u7f51\u7edc\u7684\u63a5\u53e3\u3002 \u6211\u4eec\u544a\u8bc9\u8fd9\u4e2a\u5bb9\u5668\u8981\u53bb\u6267\u884c\u4ec0\u4e48\u547d\u4ee4\uff08/bin/bash\uff09\uff0c\u5f53\u7136\u8fd9\u4e2a\u547d\u4ee4\u662f\u53ef\u4ee5\u5728\u5bb9\u5668\u4e2d\u6307\u5b9a\u7684\uff0c\u6307\u5b9a\u5bb9\u5668\u8d77\u6765\u7684\u65f6\u5019\u81ea\u52a8\u6267\u884c\u67d0\u4e2a\u547d\u4ee4\uff0c\u90a3\u8fd9\u91cc\u5c31\u53ef\u4ee5\u4e0d\u5199\u4e86\u3002 \u5f53\u524d\u6211\u4eec\u662f\u5728\u5bb9\u5668\u7684\u5185\u90e8\uff0c\u901a\u8fc7 ps aux \u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\uff0cpid\u7684\u5927\u6811\u6839\u5e76\u4e0d\u662finit\uff08centos7\u7684\u6811\u6839\u5e76\u4e0d\u662finit\uff09\uff0c\u800c\u662f\u6211\u4eec\u8fd0\u884c\u7684/bin/bash\uff0c\u5982\u679c\u6b64\u65f6\u6211\u4eec\u4f7f\u7528exit\u9000\u51fa\u5bb9\u5668\u7684\u8bdd\uff0c\u90a3\u4e48\u6b64\u65f6\u7684\u5bb9\u5668\u5c31\u4f1a\u88ab\u5173\u6389\uff0c\u5b83\u5c31\u5b8c\u6210\u4e86\u5b83\u7684\u4f7f\u547d\u3002 [ root@2ce82d7a275e / ] # exit exit [ root@maxiaoyu ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 2ce82d7a275e centos \"/bin/bash\" 10 minutes ago Exited ( 0 ) 5 seconds ago myfirstdocker Docker\u5176\u5b9e\u662f\u5355\u8fdb\u7a0b\u7684\uff0c\u4ed6\u9700\u8981\u4e00\u4e2a\u8fdb\u7a0b\u5728\u524d\u53f0\u8dd1\u7740\uff0c\u56e0\u6b64\u5982\u679c\u8fd9\u4e2a\u7a0b\u5e8f\u6267\u884c\u5b8c\u4e86\uff0c\u90a3\u4e48\u6574\u4e2a\u5bb9\u5668\u4e5f\u5c31\u9000\u51fa\u4e86\uff0c\u5c31\u50cf\u6211\u4eec\u521a\u624d\u6267\u884c/bin/bash\u540e\u8fdb\u5165\u5230\u5bb9\u5668\uff0c\u5f53exit\u9000\u51fa\u7684\u65f6\u5019\u8fd9\u4e2a\u8fdb\u7a0b\u7ed3\u675f\u4ee5\u540e\u6574\u4e2a\u5bb9\u5668\u4e5f\u5c31\u8ddf\u7740\u4e00\u8d77\u9000\u51fa\u4e86\u3002\u6240\u4ee5\u8bf4\u4e0d\u662f\u6240\u6709\u7684\u5e94\u7528\u90fd\u9002\u5408docker\u3002","title":"\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_5","text":"\u90a3\u4e48\u5982\u4f55\u542f\u52a8\u5df2\u7ecf\u5173\u95ed\u7684\u5bb9\u5668\u5462\uff1f \u65b9\u6cd5\u4e00 docker start docker_name \u6bd4\u5982\uff08\u8fd9\u6837\u5c31\u4e00\u76f4\u8dd1\u8d77\u6765\u4e86\uff09\uff1a [root@maxiaoyu ~]# docker start myfirstdocker myfirstdocker \u65b9\u6cd5\u4e8c [root@maxiaoyu ~]# docker attach myfirstdocker [root@2ce82d7a275e /]# # \u8fd9\u6837\u5c31\u662f\u76f4\u63a5\u8fdb\u5230\u5bb9\u5668\u91cc\u9762\u53bb\u4e86\uff0c\u4e0d\u8fc7exit\u4ee5\u540e\u5bb9\u5668\u8fd8\u662f\u4f1a\u505c\u6b62\uff0c\u56e0\u6b64\u4e00\u822c\u4e0d\u4f1a\u53bb\u8fd9\u4e48\u64cd\u4f5c\u7684 # \u800c\u4e14\u591a\u4eba\u540c\u65f6\u8fdb\u5165\u5230\u8fd9\u4e2a\u5bb9\u5668\u8fd9\u4e2a\u547d\u4ee4\u663e\u793a\u662f\u540c\u6b65\u7684\u3002 \u65b9\u6cd5\u4e09 # \u751f\u4ea7\u4e2d\u5efa\u8bae\u4f7f\u7528\u7684\u65b9\u6cd5 [ root@maxiaoyu ~ ] # yum -y install util-linux [ root@maxiaoyu ~ ] # docker start mydocker mydocker # \u83b7\u53d6\u5f53\u524d\u7684docker\u7684pid\uff0c\u5982\u679c\u83b7\u53d6\u5230\u7684pid=0\uff0c\u8bf4\u660e\u4f60\u8fd9\u4e2a\u5bb9\u5668\u6ca1\u8d77\u6765\uff0c\u540e\u9762\u53ef\u4ee5\u63a5\u5bb9\u5668id\u4e5f\u53ef\u4ee5\u63a5\u5bb9\u5668\u540d\u79f0\u3002 [ root@maxiaoyu ~ ] # docker inspect -f \"{{ .State.Pid }}\" mydocker 13500 [ root@maxiaoyu ~ ] # nsenter -t 13500 -m -u -i -n -p # \u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u8fdb\u5165\u5bb9\u5668\uff0c\u5373\u4f7f\u9000\u51fa\u7684\u8bdd\u4ecd\u7136\u53ef\u4ee5\u4fdd\u8bc1\u5bb9\u5668\u662f\u5f00\u542f\u7684\uff0c\u8fdb\u7a0b\u5e76\u4e0d\u4f1a\u7ed3\u675f\uff0cdocker ps\u80fd\u770b\u5230 [ root@1284da16efeb / ] # exit logout # \u90a3\u4e48\u4e3a\u4ec0\u4e48\u5373\u4f7fexit\u51fa\u53bb\u4e5f\u4e0d\u4f1a\u9000\u51fa\u5bb9\u5668\u5462\uff1f [ root@1284da16efeb / ] # ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0 .0 0 .0 11764 1676 ? Ss+ 10 :01 0 :00 /bin/bash root 26 0 .0 0 .1 15192 1996 ? S 10 :05 0 :00 -bash root 39 0 .0 0 .0 50868 1816 ? R+ 10 :05 0 :00 ps aux # \u4e3b\u8981\u539f\u56e0\u662f\u56e0\u4e3a\u591a\u4e86\u4e00\u4e2a-bash\u7684\u8fdb\u7a0b\uff0c\u56e0\u6b64\u9000\u51fa\u5f53\u524d\u7684\u8fdb\u7a0b\u8fd9\u4e2adocker\u4e0d\u4f1a\u9000\u51fa\uff0c\u56e0\u4e3a\u4ecd\u7136\u8fd8\u6709\u4e00\u4e2a/bin/bash\u7684\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\uff0c\u56e0\u6b64\u6574\u4e2a\u5bb9\u5668\u662f\u5e76\u4e0d\u4f1a\u9000\u51fa\u7684\u3002 \u67e5\u770b\u4e00\u4e0bnsenter\u7684\u5e2e\u52a9\u4fe1\u606f\uff1a [root@maxiaoyu ~]# nsenter --help Usage: nsenter [options] <program> [<argument>...] Run a program with namespaces of other processes. Options: -t, --target <pid> target process to get namespaces from -m, --mount[=<file>] enter mount namespace -u, --uts[=<file>] enter UTS namespace (hostname etc) -i, --ipc[=<file>] enter System V IPC namespace -n, --net[=<file>] enter network namespace -p, --pid[=<file>] enter pid namespace -U, --user[=<file>] enter user namespace -S, --setuid <uid> set uid in entered namespace -G, --setgid <gid> set gid in entered namespace --preserve-credentials do not touch uids or gids -r, --root[=<dir>] set the root directory -w, --wd[=<dir>] set the working directory -F, --no-fork do not fork before exec'ing <program> -Z, --follow-context set SELinux context according to --target PID -h, --help display this help and exit -V, --version output version information and exit For more details see nsenter(1). \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u7b2c\u4e09\u79cd\u751f\u4ea7\u4e2d\u4f7f\u7528\u7684\u65b9\u6cd5\u53bb\u5199\u4e00\u4e2a\u5c0f\u811a\u672c\u7136\u540e\u901a\u8fc7\u6279\u91cf\u90e8\u7f72\u5206\u53d1\u540e\u4f7f\u7528\uff1a # $1\u53ef\u4ee5\u662f\u5bb9\u5668\u7684\u540d\u79f0\uff0c\u6216\u8005\u5bb9\u5668\u7684id [ root@maxiaoyu ~ ] # cat docker_in.sh #!/bin/bash # Use nsenter to access docker docker_in (){ NAME_ID = $1 PID = $( docker inspect -f \"{{ .State.Pid }}\" $NAME_ID ) nsenter -t $PID -m -u -i -n -p } docker_in $1 [ root@maxiaoyu ~ ] # chmod +x docker_in.sh \u65b9\u6cd5\u56db [ root@localhost ~ ] # docker exec mydocker uptime 06 :38:47 up 3 :51, 0 users, load average: 0 .00, 0 .03, 0 .05 \u6211\u4e0d\u60f3\u771f\u7684\u8fdb\u5165\u5bb9\u5668\uff0c\u4f46\u662f\u6211\u8fd8\u60f3\u8ba9\u8fd9\u4e2a\u5bb9\u5668\u7ed9\u6211\u6267\u884c\u4e2a\u547d\u4ee4\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528exec\uff0c\u8fd9\u4e2a\u662fexec\u547d\u4ee4\u7684\u7528\u9014\u672c\u610f\u3002\u4e0d\u8fc7\u901a\u8fc7exec\u4e5f\u80fd\u8fdb\u5165\u5bb9\u5668\uff0c\u6bd4\u5982\uff1a [ root@linux-node1 ~ ] # docker exec -it mydocker /bin/bash [ root@e95a62d6770f / ] # ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0 .0 0 .0 11768 1676 ? Ss+ 02 :28 0 :00 /bin/bash root 50 0 .5 0 .0 11768 1884 ? Ss 02 :41 0 :00 /bin/bash root 62 0 .0 0 .0 47440 1676 ? R+ 02 :41 0 :00 ps aux ###\u6709\u4e24\u4e2a/bin/bash\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5bb9\u5668\u6280\u672f\u9000\u51fa\u4e86\u4ecd\u7136\u8fd8\u5728\u8fd0\u884c\uff0c\u4ed6\u9000\u51fa\u7684\u662fpid=50\u7684/bin/bash [ root@e95a62d6770f / ] # exit exit [ root@linux-node1 ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES e95a62d6770f centos \"/bin/bash\" 33 minutes ago Up 12 minutes mydocker 78fc36ba1e5a centos \"/bin/echo xx\" 39 minutes ago Exited ( 0 ) 39 minutes ago compassionate_rosalind","title":"\u542f\u52a8\u5e76\u8fdb\u5165\u4e00\u4e2a\u5bb9\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_6","text":"docker rm \u5bb9\u5668id \u5982\u679c\u5bb9\u5668\u5728\u4f7f\u7528\u7684\u8bdd\u90a3\u662f\u4e0d\u5141\u8bb8\u4f60\u5220\u9664\u7684\uff0c\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u4f7f\u7528-f\u5f3a\u5236\u5e72\u6389\u3002\u5f53\u7136\u4e00\u822c\u4e0d\u5efa\u8bae\u8fd9\u4e48\u505a\u3002\u4e00\u822c\u6765\u8bb2\u90fd\u662f\u5148\u628a\u5bb9\u5668\u505c\u6389\u4ee5\u540e\u518d\u628a\u5bb9\u5668\u5e72\u6389\u3002 \u8fd0\u884c\u73a9\u610f\u540e\u76f4\u63a5\u5220\u9664\u5bb9\u5668 ## --rm\u53c2\u6570\u53ef\u4ee5\u4f7f\u5f97\u4e00\u4e2a\u5bb9\u5668\u8fd0\u884c\u5b8c\u6210\u4ee5\u540e\u5c31\u76f4\u63a5\u5220\u9664\u4e86\u3002\u4e0b\u9762\u7684\u5185\u5bb9\u6267\u884c\u5b8c\u6210\u4ee5\u540e\u518ddocker ps\u5c31\u770b\u4e0d\u5230\u4e86 [ root@linux-node1 ~ ] # docker run --rm centos /bin/echo \"hello lamber\" hello lamber","title":"\u5220\u9664\u5bb9\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/01-Docker\u4ecb\u7ecd/#_7","text":"docker stop \u5bb9\u5668ID","title":"\u505c\u6b62\u5bb9\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/","text":"Docker\u6570\u636e\u5b58\u50a8&\u7f51\u7edc\u8bbf\u95ee \u00b6 Docker\u7684\u7f51\u7edc\u5e94\u7528 \u00b6 \u901a\u8fc7\u7aef\u53e3\u6620\u5c04\u7684\u65b9\u5f0f\u8bbf\u95eeDocker \u00b6 \u6211\u4eec\u5b89\u88c5\u4e86docker\u540e\u4f1a\u591a\u4e86\u4e00\u4e2a\u6865\u63a5\u7f51\u5361docker0\uff1a [ root@localhost ~ ] # ifconfig docker0 docker0: flags = 4163 <UP,BROADCAST,RUNNING,MULTICAST> mtu 1500 inet 172 .17.0.1 netmask 255 .255.0.0 broadcast 172 .17.255.255 inet6 fe80::42:baff:fea1:dfa8 prefixlen 64 scopeid 0x20<link> ether 02 :42:ba:a1:df:a8 txqueuelen 0 ( Ethernet ) RX packets 0 bytes 0 ( 0 .0 B ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 10 bytes 1876 ( 1 .8 KiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 [ root@localhost ~ ] # yum install bridge-utils [ root@localhost ~ ] # brctl show bridge name bridge id STP enabled interfaces docker0 8000 .0242baa1dfa8 no veth92ad03f \u90a3\u4e48\u73b0\u5728\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\u5e76\u6620\u5c04\u7aef\u53e3\uff0c\u7aef\u53e3\u7684\u6620\u5c04\u5206\u4e3a\u968f\u673a\u6620\u5c04\u548c\u6307\u5b9a\u6620\u5c04\uff1a \u968f\u673a\u6620\u5c04 docker run -P \u6307\u5b9a\u6620\u5c04 -p hostPort:containerPort # \u6620\u5c04\u6240\u6709ip\u7684\u6307\u5b9a\u7aef\u53e3\u5230\u5bb9\u5668ip\u7684\u6307\u5b9a\u7aef\u53e3 -p ip:hostPort:containerPort # \u5982\u679c\u7269\u7406\u673a\u6709\u591a\u4e2aip\u5730\u5740\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2aip -p ip::containerPort # \u6620\u5c04\u5230\u6307\u5b9a\u5730\u5740\u7684\u4efb\u610f\u7aef\u53e3 -p hostPort:containerPort:udp # \u9ed8\u8ba4\u662ftcp\u7684\uff0c\u53ef\u4ee5\u6307\u5b9a\u534f\u8bae\u4e3audp -p 80:81 -p 443:443 ##\u540c\u65f6\u6620\u5c04\u591a\u4e2a\u7aef\u53e3 \u968f\u673a\u7aef\u53e3\u6620\u5c04 \u00b6 \u7531\u4e8e\u4e4b\u524d\u4e0b\u8f7d\u4e86\u4e00\u4e2anginx\u7684\u955c\u50cf\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u5148\u6765\u542f\u7528\u4e00\u4e2anginx\u5bb9\u5668\uff1a [ root@localhost ~ ] # docker run -d -P --name nginx-test1 nginx WARNING: IPv4 forwarding is disabled. Networking will not work. 0b3299999a96eb216b05f2a5c68f32a2775751a49d240034a2f89305bb7bd236 # \u53ef\u4ee5\u770b\u5230\u5bb9\u5668\u542f\u52a8\uff0c\u8fd4\u56de\u4e86\u5bb9\u5668\u7684id\u7684\uff0c\u4f46\u662f\u62a5\u4e86\u4e00\u4e2a\u8b66\u62a5\u8bf4\u5982\u679c\u4e0d\u6253\u5f00ipv4\u8f6c\u53d1\u7684\u8bdd\u90a3\u4e48\u7f51\u7edc\u5c06\u4e0d\u4f1a\u6709\u6548\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u5148\u628a\u7cfb\u7edf\u7684\u7f51\u7edc\u8f6c\u53d1\u6253\u5f00 echo 1 > /proc/sys/net/ipv4/ip_forward # \u67e5\u770b\u5bb9\u5668\u7684\u72b6\u6001 [ root@localhost ~ ] # docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 0b3299999a96 nginx \"nginx -g 'daemon of\u2026\" 3 minutes ago Up 3 minutes 0 .0.0.0:32768->80/tcp nginx-test1 \u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\u5c06nginx\u5bb9\u5668\u768480\u7aef\u53e3\u6620\u5c04\u5230\u4e86\u5bbf\u4e3b\u673a\u768432768\u7aef\u53e3\u3002\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u5bbf\u4e3b\u673a\u768432768\u7aef\u53e3\u6765\u8bbf\u95eedocker\u4e86\uff0c\u5177\u4f53\u6211\u8fd8\u53ef\u4ee5\u901a\u8fc7iptables\u6765\u67e5\u770b\uff0c iptables -t nat nvL \u3002\u53ef\u4ee5\u901a\u8fc7docker logs\u67e5\u770b\u65e5\u5fd7\uff1a [ root@localhost ~ ] # docker logs nginx-test1 192 .168.56.1 - - [ 11 /May/2018:07:32:23 +0000 ] \"GET / HTTP/1.1\" 200 612 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36\" \"-\" 2018 /05/11 07 :32:24 [ error ] 5 #5: *1 open() \"/usr/share/nginx/html/favicon.ico\" failed (2: No such file or directory), client: 192.168.56.1, server: localhost, request: \"GET /favicon.ico HTTP/1.1\", host: \"192.168.56.101:32768\", referrer: \"http://192.168.56.101:32768/\" 192 .168.56.1 - - [ 11 /May/2018:07:32:24 +0000 ] \"GET /favicon.ico HTTP/1.1\" 404 572 \"http://192.168.56.101:32768/\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36\" \"-\" \u968f\u673a\u6620\u5c04\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u4f46\u662f\u7ba1\u7406\u8d77\u6765\u4e5f\u4e0d\u662f\u5f88\u65b9\u4fbf\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u5bb9\u5668\u7684\u7aef\u53e3\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u597d\u5904\u5c31\u662f\u7aef\u53e3\u4e0d\u4f1a\u91cd\u590d\uff0c\u542f\u7528\u5f88\u65b9\u4fbf\u3002 \u6307\u5b9a\u6620\u5c04 \u00b6 [ root@localhost ~ ] # docker run -d -p 192.168.56.101:88:80 --name nginx-test2 nginx f2eccbad48a94111e7844562ce8750584bced374894cd4dad0af7b201eef8ffc [ root@localhost ~ ] # curl 192.168.56.101:88 -I HTTP/1.1 200 OK Server: nginx/1.13.12 Date: Fri, 11 May 2018 07 :45:34 GMT Content-Type: text/html Content-Length: 612 Last-Modified: Mon, 09 Apr 2018 16 :01:09 GMT Connection: keep-alive ETag: \"5acb8e45-264\" Accept-Ranges: bytes \u67e5\u770b\u5bb9\u5668\u6620\u5c04\uff1a # -l\u53c2\u6570\u6307\u7684\u662f\u67e5\u770b\u6700\u540e\u4e00\u4e2a\u6700\u65b0\u521b\u5efa\u7684\u5bb9\u5668 [ root@localhost ~ ] # docker ps -l CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES f2eccbad48a9 nginx \"nginx -g 'daemon of\u2026\" 2 minutes ago Up 2 minutes 192 .168.56.101:88->80/tcp nginx-test2 \u67e5\u770b\u4e00\u4e0biptables\u7684nat\u89c4\u5219\uff1a Chain DOCKER ( 2 references ) pkts bytes target prot opt in out source destination 0 0 RETURN all -- docker0 * 0 .0.0.0/0 0 .0.0.0/0 2 128 DNAT tcp -- !docker0 * 0 .0.0.0/0 0 .0.0.0/0 tcp dpt:32768 to:172.17.0.3:80 1 60 DNAT tcp -- !docker0 * 0 .0.0.0/0 192 .168.56.101 tcp dpt:88 to:172.17.0.4:80 \u7ecf\u8fc7NAT\u8f6c\u6362\u6240\u4ee5\u5bf9\u4e8e\u541e\u5410\u91cf\u6bd4\u8f83\u5927\u7684\u4e1a\u52a1\u8fd8\u662f\u591a\u5c11\u6709\u4e00\u4e9b\u5f71\u54cd\u7684\u3002 Docker\u6570\u636e\u5b58\u50a8 \u00b6 \u751f\u4ea7\u4e2d\u4e0d\u5efa\u8bae\u76f4\u63a5\u5728docker\u5bb9\u5668\u4e2d\u53bb\u5199\u6570\u636e\uff0c\u5efa\u8bae\u4f7f\u7528\u6570\u636e\u5377\u6216\u8005\u6570\u636e\u5377\u5bb9\u5668\u5199\u5165 \u6570\u636e\u5377 \u00b6 Docker\u955c\u50cf\u7531\u591a\u4e2a\u53ea\u8bfb\u5c42\u53e0\u52a0\u800c\u6210\uff0c\u5f53\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\uff0cDocker\u4f1a\u52a0\u8f7d\u53ea\u8bfb\u955c\u50cf\u5c42\uff0c\u5e76\u5728\u955c\u50cf\u6808\u9876\u90e8\u6dfb\u52a0\u4e00\u4e2a\u8bfb\u5199\u5c42 \u5982\u679c\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u4fee\u6539\u4e86\u73b0\u6709\u7684\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u8be5\u6587\u4ef6\u5c06\u4f1a\u4ece\u8bfb\u5199\u5c42\u4e0b\u9762\u7684\u53ea\u8bfb\u5c42\u590d\u5236\u5230\u8bfb\u5199\u5c42\uff0c\u8be5\u6587\u4ef6\u7684\u53ea\u8bfb\u7248\u672c\u4ecd\u7136\u5b58\u5728\uff0c\u53ea\u662f\u5df2\u7ecf\u88ab\u8bfb\u5199\u5c42\u4e2d\u8be5\u6587\u4ef6\u7684\u526f\u672c\u6240\u9690\u85cf\uff0c\u6b64\u5373\u201d\u5199\u65f6\u590d\u5236\uff08COW\uff09\u201c\u673a\u5236\uff0c\u9274\u4e8e\u8fd9\u79cd\u95ee\u9898\uff0c\u5c42\u6570\u90a3\u4e48\u591a\uff0c\u5728\u5199\u7684\u65b9\u9762\u6548\u7387\u76f8\u5bf9\u8f83\u4f4e\u3002 \u6570\u636e\u5377\u4f7f\u5f97\u5373\u4f7f\u5bb9\u5668\u8131\u79bb\u5b83\u7684\u751f\u547d\u5468\u671f\uff0c\u6570\u636e\u4ecd\u7136\u5b58\u5728\u3002 \u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u5e76\u628a\u7269\u7406\u673a\u7684\u4e00\u4e2a\u533a\u57df\u7ed9\u5b83mount\u5230\u5bb9\u5668\u4e2d\u7684data\u76ee\u5f55\u4e0b\uff0c\u4f7f\u7528-v\u53c2\u6570\uff1a [ root@localhost ~ ] # docker run -d --name nginx-volume-test1 -v /data nginx 7cb33525f1027208402a86c95d0deedc4bf592264d113ddb47901d46797daa94 \u4e3a\u4e86\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u6211\u4eec\u76f4\u63a5\u53bb\u5bb9\u5668\u5185\u7684data\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e86\u4e00\u4e2ahehe\u6587\u4ef6\u3002\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u88ab\u6620\u5c04\u5230\u7269\u7406\u673a\u7684\u4ec0\u4e48\u5730\u65b9\u5462\uff1f [ root@localhost ~ ] # docker inspect -f {{.Mounts}} nginx-volume-test1 [{ volume c2316666b28d0875aa66ec90ef511e61c0e044e531d56a54e835789ac9792229 /var/lib/docker/volumes/c2316666b28d0875aa66ec90ef511e61c0e044e531d56a54e835789ac9792229/_data /data local true }] [ root@localhost ~ ] # cd /var/lib/docker/volumes/c2316666b28d0875aa66ec90ef511e61c0e044e531d56a54e835789ac9792229/_data [ root@localhost _data ] # ll \u603b\u7528\u91cf 0 -rw-r--r--. 1 root root 0 5\u6708 11 04 :14 hehe \u53e6\u5916\u4e00\u79cd\u6302\u8f7d\u65b9\u5f0f\uff0c\u6307\u5b9a\u6211\u4eec\u7684\u6620\u5c04\u76ee\u5f55\uff0c\u4e00\u4e2a\u6e90\u4e00\u4e2a\u76ee\u7684\uff1a # \u6e90\u662f\u7269\u7406\u673a\u7684\uff0c\u76ee\u7684\u662fdocker\u5bb9\u5668\u7684\u3002\u6ce8\u610f\u5bf9\u5e94\u5173\u7cfb mkdir /data/docker-volume-nginx -p docker run -d --name nginx-volume-test2 -v /data/docker-volume-nginx/:/data nginx 6b739fc4d20f1064abf5c2fb619a394772f445f15636b303b0527bb148bd2818 touch /data/docker-volume-nginx/hehehe docker_in.sh nginx-volume-test2 # \u8fdb\u5165\u5bb9\u5668 root@6b739fc4d20f:/# ls -l /data/ total 0 -rw-r--r-- 1 root root 0 Mar 31 08 :20 hehehe \u4f46\u662f\u4e0a\u9762\u7684\u8fd9\u79cd\u65b9\u6cd5\u5728dockerfile\u4e2d\u5c31\u662f\u4e0d\u652f\u6301\u7684\uff0c\u8bd5\u60f3\u5982\u679c\u8fd9\u6837\u64cd\u4f5c\u4e86\uff0c\u90a3\u4e48\u53ef\u79fb\u690d\u6027\u5c31\u4e0b\u964d\u4e86\uff0c\u4f60\u8981\u786e\u4fdd\u79fb\u690d\u7684\u4f4d\u7f6e\u4e5f\u6709\u4f60\u8fd9\u4e2a\u7269\u7406\u673a\u7684\u76ee\u5f55\u548c\u6570\u636e\u3002 \u5176\u4ed6\u7684\u51e0\u4e2a\u9009\u9879\uff1a docker run -d --name nginx-volume-test2 -v /data/docker-volume-nginx/:/data:ro \u53ea\u8bfb \u6302\u8f7d\u6587\u4ef6\uff1a [ root@linux-node1 ~ ] # docker run --rm -it -v /root/docker_in.sh:/root/ nginx /bin/bash root@239820f3e6bd:/# ls /root/ -l --color total 4 -rwxr-xr-x 1 root root 179 Mar 31 07 :48 docker_in.sh ###\u8bb0\u5f97\u524d\u540e\u6587\u4ef6\u540d\u8981\u5bf9\u5e94 \u6570\u636e\u5377\u5bb9\u5668 \u00b6 \u5b9e\u73b0\u6570\u636e\u5728\u591a\u4e2a\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab [ root@linux-node1 ~ ] # docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6b739fc4d20f nginx \"nginx -g 'daemon off\" 11 minutes ago Up 11 minutes 80 /tcp, 443 /tcp nginx-volume-test2 925564d95872 nginx \"nginx -g 'daemon off\" 20 minutes ago Up 20 minutes 80 /tcp, 443 /tcp nginx-volumn-test1 dce2e78b22be nginx \"nginx -g 'daemon off\" 36 minutes ago Up 36 minutes 443 /tcp, 192 .168.56.11:81->80/tcp nginx2 [ root@linux-node1 ~ ] # docker run -it --name volume-test3 --volumes-from nginx-volume-test2 centos /bin/bash [ root@034018de2dc4 / ] # ls /data/ hehehe \u5373\u4f7f\u628anginx-volume-test2\u7ed9\u505c\u6389\u4e86\u4ecd\u7136\u4e0d\u5f71\u54cdvolume-test3\u7684\u8bbf\u95ee\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6570\u636e\u5377\u662fmount\u4e0a\u53bb\u7684\u3002\u800c\u4e14\u6211\u4eec\u8fd9\u4e2a\u65f6\u5019\u5360\u7528\u7684\u8fd9\u4e2a\u5171\u4eab\u5377\u7684\u65f6\u5019\uff0c\u8fd9\u4e2anginx-volume-test2\u4f60\u662f\u5220\u9664\u4e0d\u6389\u7684\u3002 \u5b9e\u9645\u5e94\u7528 \u6bd4\u5982\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\u6302\u8f7d\u6570\u636e\u5377\uff0c\u7136\u540e\u5176\u4ed6\u5bb9\u5668\u90fd\u5171\u4eab\u5b83\u7684\u3002\u6bd4\u5982\u53ef\u4ee5\u7528\u5230\u65e5\u5fd7\u7edf\u4e00\u7ba1\u7406\uff0c\u591a\u4e2a\u5bb9\u5668\u6302\u8f7d\u4e00\u4e2a\u65e5\u5fd7\u6570\u636e\u5377\uff0c\u7136\u540e\u7528logstash\u7edf\u4e00\u6536\u96c6\u7ba1\u7406\u3002 [ root@linux-node1 ~ ] # docker run -d --name nfs-test -v /data/nfs-data/:/data nginx [ root@linux-node1 ~ ] # docker run --rm -it --volumes-from nfs-test centos /bin/bash [ root@ac637a64910f / ] # cd /data/ [ root@ac637a64910f data ] # ls -l total 0 -rw-r--r-- 1 root root 0 Mar 31 08 :41 iamatest \u6b64\u65f6\u6211\u4eec\u5728\u7269\u7406\u673a\u4e0a\u521b\u5efa\u7684\u6d4b\u8bd5\u6587\u4ef6\u5c31\u663e\u793a\u51fa\u6765\u4e86\u3002","title":"Docker\u6570\u636e\u5b58\u50a8&\u7f51\u7edc\u8bbf\u95ee"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#docker","text":"","title":"Docker\u6570\u636e\u5b58\u50a8&amp;\u7f51\u7edc\u8bbf\u95ee"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#docker_1","text":"","title":"Docker\u7684\u7f51\u7edc\u5e94\u7528"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#docker_2","text":"\u6211\u4eec\u5b89\u88c5\u4e86docker\u540e\u4f1a\u591a\u4e86\u4e00\u4e2a\u6865\u63a5\u7f51\u5361docker0\uff1a [ root@localhost ~ ] # ifconfig docker0 docker0: flags = 4163 <UP,BROADCAST,RUNNING,MULTICAST> mtu 1500 inet 172 .17.0.1 netmask 255 .255.0.0 broadcast 172 .17.255.255 inet6 fe80::42:baff:fea1:dfa8 prefixlen 64 scopeid 0x20<link> ether 02 :42:ba:a1:df:a8 txqueuelen 0 ( Ethernet ) RX packets 0 bytes 0 ( 0 .0 B ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 10 bytes 1876 ( 1 .8 KiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 [ root@localhost ~ ] # yum install bridge-utils [ root@localhost ~ ] # brctl show bridge name bridge id STP enabled interfaces docker0 8000 .0242baa1dfa8 no veth92ad03f \u90a3\u4e48\u73b0\u5728\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\u5e76\u6620\u5c04\u7aef\u53e3\uff0c\u7aef\u53e3\u7684\u6620\u5c04\u5206\u4e3a\u968f\u673a\u6620\u5c04\u548c\u6307\u5b9a\u6620\u5c04\uff1a \u968f\u673a\u6620\u5c04 docker run -P \u6307\u5b9a\u6620\u5c04 -p hostPort:containerPort # \u6620\u5c04\u6240\u6709ip\u7684\u6307\u5b9a\u7aef\u53e3\u5230\u5bb9\u5668ip\u7684\u6307\u5b9a\u7aef\u53e3 -p ip:hostPort:containerPort # \u5982\u679c\u7269\u7406\u673a\u6709\u591a\u4e2aip\u5730\u5740\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2aip -p ip::containerPort # \u6620\u5c04\u5230\u6307\u5b9a\u5730\u5740\u7684\u4efb\u610f\u7aef\u53e3 -p hostPort:containerPort:udp # \u9ed8\u8ba4\u662ftcp\u7684\uff0c\u53ef\u4ee5\u6307\u5b9a\u534f\u8bae\u4e3audp -p 80:81 -p 443:443 ##\u540c\u65f6\u6620\u5c04\u591a\u4e2a\u7aef\u53e3","title":"\u901a\u8fc7\u7aef\u53e3\u6620\u5c04\u7684\u65b9\u5f0f\u8bbf\u95eeDocker"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#_1","text":"\u7531\u4e8e\u4e4b\u524d\u4e0b\u8f7d\u4e86\u4e00\u4e2anginx\u7684\u955c\u50cf\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u5148\u6765\u542f\u7528\u4e00\u4e2anginx\u5bb9\u5668\uff1a [ root@localhost ~ ] # docker run -d -P --name nginx-test1 nginx WARNING: IPv4 forwarding is disabled. Networking will not work. 0b3299999a96eb216b05f2a5c68f32a2775751a49d240034a2f89305bb7bd236 # \u53ef\u4ee5\u770b\u5230\u5bb9\u5668\u542f\u52a8\uff0c\u8fd4\u56de\u4e86\u5bb9\u5668\u7684id\u7684\uff0c\u4f46\u662f\u62a5\u4e86\u4e00\u4e2a\u8b66\u62a5\u8bf4\u5982\u679c\u4e0d\u6253\u5f00ipv4\u8f6c\u53d1\u7684\u8bdd\u90a3\u4e48\u7f51\u7edc\u5c06\u4e0d\u4f1a\u6709\u6548\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u5148\u628a\u7cfb\u7edf\u7684\u7f51\u7edc\u8f6c\u53d1\u6253\u5f00 echo 1 > /proc/sys/net/ipv4/ip_forward # \u67e5\u770b\u5bb9\u5668\u7684\u72b6\u6001 [ root@localhost ~ ] # docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 0b3299999a96 nginx \"nginx -g 'daemon of\u2026\" 3 minutes ago Up 3 minutes 0 .0.0.0:32768->80/tcp nginx-test1 \u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\u5c06nginx\u5bb9\u5668\u768480\u7aef\u53e3\u6620\u5c04\u5230\u4e86\u5bbf\u4e3b\u673a\u768432768\u7aef\u53e3\u3002\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u5bbf\u4e3b\u673a\u768432768\u7aef\u53e3\u6765\u8bbf\u95eedocker\u4e86\uff0c\u5177\u4f53\u6211\u8fd8\u53ef\u4ee5\u901a\u8fc7iptables\u6765\u67e5\u770b\uff0c iptables -t nat nvL \u3002\u53ef\u4ee5\u901a\u8fc7docker logs\u67e5\u770b\u65e5\u5fd7\uff1a [ root@localhost ~ ] # docker logs nginx-test1 192 .168.56.1 - - [ 11 /May/2018:07:32:23 +0000 ] \"GET / HTTP/1.1\" 200 612 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36\" \"-\" 2018 /05/11 07 :32:24 [ error ] 5 #5: *1 open() \"/usr/share/nginx/html/favicon.ico\" failed (2: No such file or directory), client: 192.168.56.1, server: localhost, request: \"GET /favicon.ico HTTP/1.1\", host: \"192.168.56.101:32768\", referrer: \"http://192.168.56.101:32768/\" 192 .168.56.1 - - [ 11 /May/2018:07:32:24 +0000 ] \"GET /favicon.ico HTTP/1.1\" 404 572 \"http://192.168.56.101:32768/\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36\" \"-\" \u968f\u673a\u6620\u5c04\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u4f46\u662f\u7ba1\u7406\u8d77\u6765\u4e5f\u4e0d\u662f\u5f88\u65b9\u4fbf\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u5bb9\u5668\u7684\u7aef\u53e3\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u597d\u5904\u5c31\u662f\u7aef\u53e3\u4e0d\u4f1a\u91cd\u590d\uff0c\u542f\u7528\u5f88\u65b9\u4fbf\u3002","title":"\u968f\u673a\u7aef\u53e3\u6620\u5c04"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#_2","text":"[ root@localhost ~ ] # docker run -d -p 192.168.56.101:88:80 --name nginx-test2 nginx f2eccbad48a94111e7844562ce8750584bced374894cd4dad0af7b201eef8ffc [ root@localhost ~ ] # curl 192.168.56.101:88 -I HTTP/1.1 200 OK Server: nginx/1.13.12 Date: Fri, 11 May 2018 07 :45:34 GMT Content-Type: text/html Content-Length: 612 Last-Modified: Mon, 09 Apr 2018 16 :01:09 GMT Connection: keep-alive ETag: \"5acb8e45-264\" Accept-Ranges: bytes \u67e5\u770b\u5bb9\u5668\u6620\u5c04\uff1a # -l\u53c2\u6570\u6307\u7684\u662f\u67e5\u770b\u6700\u540e\u4e00\u4e2a\u6700\u65b0\u521b\u5efa\u7684\u5bb9\u5668 [ root@localhost ~ ] # docker ps -l CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES f2eccbad48a9 nginx \"nginx -g 'daemon of\u2026\" 2 minutes ago Up 2 minutes 192 .168.56.101:88->80/tcp nginx-test2 \u67e5\u770b\u4e00\u4e0biptables\u7684nat\u89c4\u5219\uff1a Chain DOCKER ( 2 references ) pkts bytes target prot opt in out source destination 0 0 RETURN all -- docker0 * 0 .0.0.0/0 0 .0.0.0/0 2 128 DNAT tcp -- !docker0 * 0 .0.0.0/0 0 .0.0.0/0 tcp dpt:32768 to:172.17.0.3:80 1 60 DNAT tcp -- !docker0 * 0 .0.0.0/0 192 .168.56.101 tcp dpt:88 to:172.17.0.4:80 \u7ecf\u8fc7NAT\u8f6c\u6362\u6240\u4ee5\u5bf9\u4e8e\u541e\u5410\u91cf\u6bd4\u8f83\u5927\u7684\u4e1a\u52a1\u8fd8\u662f\u591a\u5c11\u6709\u4e00\u4e9b\u5f71\u54cd\u7684\u3002","title":"\u6307\u5b9a\u6620\u5c04"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#docker_3","text":"\u751f\u4ea7\u4e2d\u4e0d\u5efa\u8bae\u76f4\u63a5\u5728docker\u5bb9\u5668\u4e2d\u53bb\u5199\u6570\u636e\uff0c\u5efa\u8bae\u4f7f\u7528\u6570\u636e\u5377\u6216\u8005\u6570\u636e\u5377\u5bb9\u5668\u5199\u5165","title":"Docker\u6570\u636e\u5b58\u50a8"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#_3","text":"Docker\u955c\u50cf\u7531\u591a\u4e2a\u53ea\u8bfb\u5c42\u53e0\u52a0\u800c\u6210\uff0c\u5f53\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\uff0cDocker\u4f1a\u52a0\u8f7d\u53ea\u8bfb\u955c\u50cf\u5c42\uff0c\u5e76\u5728\u955c\u50cf\u6808\u9876\u90e8\u6dfb\u52a0\u4e00\u4e2a\u8bfb\u5199\u5c42 \u5982\u679c\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u4fee\u6539\u4e86\u73b0\u6709\u7684\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u8be5\u6587\u4ef6\u5c06\u4f1a\u4ece\u8bfb\u5199\u5c42\u4e0b\u9762\u7684\u53ea\u8bfb\u5c42\u590d\u5236\u5230\u8bfb\u5199\u5c42\uff0c\u8be5\u6587\u4ef6\u7684\u53ea\u8bfb\u7248\u672c\u4ecd\u7136\u5b58\u5728\uff0c\u53ea\u662f\u5df2\u7ecf\u88ab\u8bfb\u5199\u5c42\u4e2d\u8be5\u6587\u4ef6\u7684\u526f\u672c\u6240\u9690\u85cf\uff0c\u6b64\u5373\u201d\u5199\u65f6\u590d\u5236\uff08COW\uff09\u201c\u673a\u5236\uff0c\u9274\u4e8e\u8fd9\u79cd\u95ee\u9898\uff0c\u5c42\u6570\u90a3\u4e48\u591a\uff0c\u5728\u5199\u7684\u65b9\u9762\u6548\u7387\u76f8\u5bf9\u8f83\u4f4e\u3002 \u6570\u636e\u5377\u4f7f\u5f97\u5373\u4f7f\u5bb9\u5668\u8131\u79bb\u5b83\u7684\u751f\u547d\u5468\u671f\uff0c\u6570\u636e\u4ecd\u7136\u5b58\u5728\u3002 \u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u5e76\u628a\u7269\u7406\u673a\u7684\u4e00\u4e2a\u533a\u57df\u7ed9\u5b83mount\u5230\u5bb9\u5668\u4e2d\u7684data\u76ee\u5f55\u4e0b\uff0c\u4f7f\u7528-v\u53c2\u6570\uff1a [ root@localhost ~ ] # docker run -d --name nginx-volume-test1 -v /data nginx 7cb33525f1027208402a86c95d0deedc4bf592264d113ddb47901d46797daa94 \u4e3a\u4e86\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u6211\u4eec\u76f4\u63a5\u53bb\u5bb9\u5668\u5185\u7684data\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e86\u4e00\u4e2ahehe\u6587\u4ef6\u3002\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u88ab\u6620\u5c04\u5230\u7269\u7406\u673a\u7684\u4ec0\u4e48\u5730\u65b9\u5462\uff1f [ root@localhost ~ ] # docker inspect -f {{.Mounts}} nginx-volume-test1 [{ volume c2316666b28d0875aa66ec90ef511e61c0e044e531d56a54e835789ac9792229 /var/lib/docker/volumes/c2316666b28d0875aa66ec90ef511e61c0e044e531d56a54e835789ac9792229/_data /data local true }] [ root@localhost ~ ] # cd /var/lib/docker/volumes/c2316666b28d0875aa66ec90ef511e61c0e044e531d56a54e835789ac9792229/_data [ root@localhost _data ] # ll \u603b\u7528\u91cf 0 -rw-r--r--. 1 root root 0 5\u6708 11 04 :14 hehe \u53e6\u5916\u4e00\u79cd\u6302\u8f7d\u65b9\u5f0f\uff0c\u6307\u5b9a\u6211\u4eec\u7684\u6620\u5c04\u76ee\u5f55\uff0c\u4e00\u4e2a\u6e90\u4e00\u4e2a\u76ee\u7684\uff1a # \u6e90\u662f\u7269\u7406\u673a\u7684\uff0c\u76ee\u7684\u662fdocker\u5bb9\u5668\u7684\u3002\u6ce8\u610f\u5bf9\u5e94\u5173\u7cfb mkdir /data/docker-volume-nginx -p docker run -d --name nginx-volume-test2 -v /data/docker-volume-nginx/:/data nginx 6b739fc4d20f1064abf5c2fb619a394772f445f15636b303b0527bb148bd2818 touch /data/docker-volume-nginx/hehehe docker_in.sh nginx-volume-test2 # \u8fdb\u5165\u5bb9\u5668 root@6b739fc4d20f:/# ls -l /data/ total 0 -rw-r--r-- 1 root root 0 Mar 31 08 :20 hehehe \u4f46\u662f\u4e0a\u9762\u7684\u8fd9\u79cd\u65b9\u6cd5\u5728dockerfile\u4e2d\u5c31\u662f\u4e0d\u652f\u6301\u7684\uff0c\u8bd5\u60f3\u5982\u679c\u8fd9\u6837\u64cd\u4f5c\u4e86\uff0c\u90a3\u4e48\u53ef\u79fb\u690d\u6027\u5c31\u4e0b\u964d\u4e86\uff0c\u4f60\u8981\u786e\u4fdd\u79fb\u690d\u7684\u4f4d\u7f6e\u4e5f\u6709\u4f60\u8fd9\u4e2a\u7269\u7406\u673a\u7684\u76ee\u5f55\u548c\u6570\u636e\u3002 \u5176\u4ed6\u7684\u51e0\u4e2a\u9009\u9879\uff1a docker run -d --name nginx-volume-test2 -v /data/docker-volume-nginx/:/data:ro \u53ea\u8bfb \u6302\u8f7d\u6587\u4ef6\uff1a [ root@linux-node1 ~ ] # docker run --rm -it -v /root/docker_in.sh:/root/ nginx /bin/bash root@239820f3e6bd:/# ls /root/ -l --color total 4 -rwxr-xr-x 1 root root 179 Mar 31 07 :48 docker_in.sh ###\u8bb0\u5f97\u524d\u540e\u6587\u4ef6\u540d\u8981\u5bf9\u5e94","title":"\u6570\u636e\u5377"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/02-Docker\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u8bbf\u95ee/#_4","text":"\u5b9e\u73b0\u6570\u636e\u5728\u591a\u4e2a\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab [ root@linux-node1 ~ ] # docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6b739fc4d20f nginx \"nginx -g 'daemon off\" 11 minutes ago Up 11 minutes 80 /tcp, 443 /tcp nginx-volume-test2 925564d95872 nginx \"nginx -g 'daemon off\" 20 minutes ago Up 20 minutes 80 /tcp, 443 /tcp nginx-volumn-test1 dce2e78b22be nginx \"nginx -g 'daemon off\" 36 minutes ago Up 36 minutes 443 /tcp, 192 .168.56.11:81->80/tcp nginx2 [ root@linux-node1 ~ ] # docker run -it --name volume-test3 --volumes-from nginx-volume-test2 centos /bin/bash [ root@034018de2dc4 / ] # ls /data/ hehehe \u5373\u4f7f\u628anginx-volume-test2\u7ed9\u505c\u6389\u4e86\u4ecd\u7136\u4e0d\u5f71\u54cdvolume-test3\u7684\u8bbf\u95ee\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6570\u636e\u5377\u662fmount\u4e0a\u53bb\u7684\u3002\u800c\u4e14\u6211\u4eec\u8fd9\u4e2a\u65f6\u5019\u5360\u7528\u7684\u8fd9\u4e2a\u5171\u4eab\u5377\u7684\u65f6\u5019\uff0c\u8fd9\u4e2anginx-volume-test2\u4f60\u662f\u5220\u9664\u4e0d\u6389\u7684\u3002 \u5b9e\u9645\u5e94\u7528 \u6bd4\u5982\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\u6302\u8f7d\u6570\u636e\u5377\uff0c\u7136\u540e\u5176\u4ed6\u5bb9\u5668\u90fd\u5171\u4eab\u5b83\u7684\u3002\u6bd4\u5982\u53ef\u4ee5\u7528\u5230\u65e5\u5fd7\u7edf\u4e00\u7ba1\u7406\uff0c\u591a\u4e2a\u5bb9\u5668\u6302\u8f7d\u4e00\u4e2a\u65e5\u5fd7\u6570\u636e\u5377\uff0c\u7136\u540e\u7528logstash\u7edf\u4e00\u6536\u96c6\u7ba1\u7406\u3002 [ root@linux-node1 ~ ] # docker run -d --name nfs-test -v /data/nfs-data/:/data nginx [ root@linux-node1 ~ ] # docker run --rm -it --volumes-from nfs-test centos /bin/bash [ root@ac637a64910f / ] # cd /data/ [ root@ac637a64910f data ] # ls -l total 0 -rw-r--r-- 1 root root 0 Mar 31 08 :41 iamatest \u6b64\u65f6\u6211\u4eec\u5728\u7269\u7406\u673a\u4e0a\u521b\u5efa\u7684\u6d4b\u8bd5\u6587\u4ef6\u5c31\u663e\u793a\u51fa\u6765\u4e86\u3002","title":"\u6570\u636e\u5377\u5bb9\u5668"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/03-\u624b\u52a8\u6784\u5efa\u955c\u50cf/","text":"Docker\u624b\u52a8\u6784\u5efa \u00b6 \u6740\u6b7b\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u5e76\u5220\u9664\u5b83 [ root@linux-node1 ~ ] # docker ps -a -q 319cc917e421 00c801224fed 9af1e1593e1c 034018de2dc4 6b739fc4d20f 925564d95872 dce2e78b22be 35e9b3386c8a dfff10104bae e95a62d6770f 78fc36ba1e5a [ root@linux-node1 ~ ] # docker kill $(docker ps -a -q) [ root@linux-node1 ~ ] # docker rm $(docker ps -a -q) \u7136\u540e\u6211\u4eec\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u65b0\u7684centos\u7684\u5bb9\u5668\uff0c\u5b89\u88c5nginx\uff1a [ root@linux-node1 ~ ] # docker run --name mynginx -it centos # \u8fdb\u5165\u5bb9\u5668\uff0c\u5b89\u88c5\u6269\u5c55\u6e90 [ root@c7426bc61497 / ] # rpm -ivh https://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm # \u5b89\u88c5nginx\uff0c\u8fd9\u91cc\u6d4b\u8bd5\u7528\u5c31\u76f4\u63a5yum\u4e86\uff0c\u751f\u4ea7\u4e2d\u4e00\u822c\u90fd\u662f\u7f16\u8bd1\u5b89\u88c5\uff1a [ root@c7426bc61497 / ] # yum install -y nginx # \u524d\u9762\u8bf4\u5230\u5bb9\u5668\u7684\u8fd0\u884c\u9700\u8981\u524d\u53f0\u8fdb\u7a0b\u7684\u652f\u6491\uff0c\u56e0\u6b64\u5982\u679cnginx\u5728\u540e\u53f0\u8dd1\u7684\u8bdd\u8fd9\u4e2adocker\u5bb9\u5668\u662f\u8d77\u4e0d\u6765\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5bf9nginx\u505a\u4e00\u4e9b\u4fee\u6539\uff0c\u8ba9\u5b83\u5728\u524d\u53f0\u8fd0\u884c. [ root@c7426bc61497 / ] # grep -v '^#' /etc/nginx/nginx.conf | head -1 daemon off ; \u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e00\u884cdeamon off\uff0c\u7136\u540e\u9000\u51fa\u5bb9\u5668 [ root@linux-node1 ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES c7426bc61497 centos \"/bin/bash\" 12 minutes ago Exited ( 0 ) 4 seconds ago mynginx \u5bf9\u5bb9\u5668\u4fee\u6539\u5b8c\u4ee5\u540e\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u63d0\u4ea4\uff0c\u5176\u5b9e\u8fd9\u4e2a\u64cd\u4f5c\u5f88\u7c7b\u4f3c\u4e8eGit\uff0c\u5176\u4e2d-m\u6307\u7684\u662fcomment\uff0c\u5c31\u662f\u4e00\u4e2a\u63cf\u8ff0\uff0c\u540e\u9762\u8ddfcontainer id\uff0c\u7136\u540enginx\u662f\u5e93\u540d\u79f0\u3002 [ root@linux-node1 ~ ] # docker commit -m \"My nginx\" c7426bc61497 nginx/mynginx:v1 sha256:81f1607bb8a07d4874a68e1cffa369707f243e935f381373d8482cde6ee6a6ed [ root@linux-node1 ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE nginx/mynginx v1 81f1607bb8a0 About a minute ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182 .5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192 .5 MB \u8fd0\u884c\u6d4b\u8bd5\uff1a [ root@linux-node1 ~ ] # docker run --name mynginxv1 -d -p 81:80 nginx/mynginx:v1 nginx \u8fd9\u4e2a\u540d\u79f0\u8981\u5199\u5168\u4e86\uff0c\u5982\u679c\u4e0d\u5199\u5168\u7684\u8bdd\uff0c\u5b83\u4f1a\u4f7f\u7528\u522b\u7684\u7248\u672c\u7684\u6700\u540e\u8fd9\u4e00\u4e2anginx\u662f\u6267\u884c\u7684\u547d\u4ee4\u3002","title":"Docker\u624b\u52a8\u6784\u5efa"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/03-\u624b\u52a8\u6784\u5efa\u955c\u50cf/#docker","text":"\u6740\u6b7b\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u5e76\u5220\u9664\u5b83 [ root@linux-node1 ~ ] # docker ps -a -q 319cc917e421 00c801224fed 9af1e1593e1c 034018de2dc4 6b739fc4d20f 925564d95872 dce2e78b22be 35e9b3386c8a dfff10104bae e95a62d6770f 78fc36ba1e5a [ root@linux-node1 ~ ] # docker kill $(docker ps -a -q) [ root@linux-node1 ~ ] # docker rm $(docker ps -a -q) \u7136\u540e\u6211\u4eec\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u65b0\u7684centos\u7684\u5bb9\u5668\uff0c\u5b89\u88c5nginx\uff1a [ root@linux-node1 ~ ] # docker run --name mynginx -it centos # \u8fdb\u5165\u5bb9\u5668\uff0c\u5b89\u88c5\u6269\u5c55\u6e90 [ root@c7426bc61497 / ] # rpm -ivh https://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm # \u5b89\u88c5nginx\uff0c\u8fd9\u91cc\u6d4b\u8bd5\u7528\u5c31\u76f4\u63a5yum\u4e86\uff0c\u751f\u4ea7\u4e2d\u4e00\u822c\u90fd\u662f\u7f16\u8bd1\u5b89\u88c5\uff1a [ root@c7426bc61497 / ] # yum install -y nginx # \u524d\u9762\u8bf4\u5230\u5bb9\u5668\u7684\u8fd0\u884c\u9700\u8981\u524d\u53f0\u8fdb\u7a0b\u7684\u652f\u6491\uff0c\u56e0\u6b64\u5982\u679cnginx\u5728\u540e\u53f0\u8dd1\u7684\u8bdd\u8fd9\u4e2adocker\u5bb9\u5668\u662f\u8d77\u4e0d\u6765\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5bf9nginx\u505a\u4e00\u4e9b\u4fee\u6539\uff0c\u8ba9\u5b83\u5728\u524d\u53f0\u8fd0\u884c. [ root@c7426bc61497 / ] # grep -v '^#' /etc/nginx/nginx.conf | head -1 daemon off ; \u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e00\u884cdeamon off\uff0c\u7136\u540e\u9000\u51fa\u5bb9\u5668 [ root@linux-node1 ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES c7426bc61497 centos \"/bin/bash\" 12 minutes ago Exited ( 0 ) 4 seconds ago mynginx \u5bf9\u5bb9\u5668\u4fee\u6539\u5b8c\u4ee5\u540e\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u63d0\u4ea4\uff0c\u5176\u5b9e\u8fd9\u4e2a\u64cd\u4f5c\u5f88\u7c7b\u4f3c\u4e8eGit\uff0c\u5176\u4e2d-m\u6307\u7684\u662fcomment\uff0c\u5c31\u662f\u4e00\u4e2a\u63cf\u8ff0\uff0c\u540e\u9762\u8ddfcontainer id\uff0c\u7136\u540enginx\u662f\u5e93\u540d\u79f0\u3002 [ root@linux-node1 ~ ] # docker commit -m \"My nginx\" c7426bc61497 nginx/mynginx:v1 sha256:81f1607bb8a07d4874a68e1cffa369707f243e935f381373d8482cde6ee6a6ed [ root@linux-node1 ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE nginx/mynginx v1 81f1607bb8a0 About a minute ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182 .5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192 .5 MB \u8fd0\u884c\u6d4b\u8bd5\uff1a [ root@linux-node1 ~ ] # docker run --name mynginxv1 -d -p 81:80 nginx/mynginx:v1 nginx \u8fd9\u4e2a\u540d\u79f0\u8981\u5199\u5168\u4e86\uff0c\u5982\u679c\u4e0d\u5199\u5168\u7684\u8bdd\uff0c\u5b83\u4f1a\u4f7f\u7528\u522b\u7684\u7248\u672c\u7684\u6700\u540e\u8fd9\u4e00\u4e2anginx\u662f\u6267\u884c\u7684\u547d\u4ee4\u3002","title":"Docker\u624b\u52a8\u6784\u5efa"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/","text":"DockerFile \u00b6 Dockerfile\u662f\u4e3a\u5feb\u901f\u6784\u5efadocker image\u800c\u8bbe\u8ba1\u7684\uff0c\u5f53\u4f60\u4f7f\u7528docker build \u547d\u4ee4\u7684\u65f6\u5019\uff0cdocker \u4f1a\u8bfb\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u547d\u540d\u4e3aDockerfile(\u9996\u5b57\u6bcd\u5927\u5199)\u7684\u7eaf\u6587\u672c\u6587\u4ef6\u5e76\u6267\u884c\u91cc\u9762\u7684\u6307\u4ee4\u6784\u5efa\u51fa\u4e00\u4e2adocker image\u3002\u8fd9\u6bd4SaltStack\u7684\u914d\u7f6e\u7ba1\u7406\u8981\u7b80\u5355\u7684\u591a\uff0c\u4e0d\u8fc7\u8fd8\u662f\u8981\u638c\u63e1\u4e00\u4e9b\u7b80\u5355\u7684\u6307\u4ee4\u3002 Dockerfile \u7531\u4e00\u884c\u884c\u547d\u4ee4\u8bed\u53e5\u7ec4\u6210\uff0c\u5e76\u4e14\u652f\u6301\u4ee5#\u5f00\u5934\u7684\u6ce8\u91ca\u884c\u3002\u6307\u4ee4\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u4f46\u662f\u901a\u5e38\u6211\u4eec\u90fd\u5927\u5199\uff0c\u7528\u4e8e\u548c\u540e\u9762\u7684\u5185\u5bb9\u53c2\u6570\u8fdb\u884c\u533a\u5206\u3002 \u7b80\u5355\u793a\u4f8b \u00b6 \u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u6784\u5efa\u4e00\u4e2aNginx\u7684\u955c\u50cf\u6765\u5b66\u4e60Dockerfile. \u9996\u5148\u5b9e\u73b0\u521b\u5efa\u597d\u76ee\u5f55\uff0c\u6211\u8fd9\u5728opt\u4e0b\u521b\u5efa\u76ee\u5f55dockerfile\uff0c\u7136\u540e\u5728dockerfile\u76ee\u5f55\u4e0b\u521b\u5efanginx\u76ee\u5f55\uff0c\u5728nginx\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2aDockerfile\u6587\u4ef6\u3002Dcockerfile\u8fd9\u4e2a\u6587\u4ef6\u7684\u9996\u5b57\u6bcd\u8981\u5927\u5199\uff0c\u4e0d\u7136\u6709\u53ef\u80fd\u4e0d\u4f1a\u88ab\u8bc6\u522b\u3002 [ root@linux-node1 ~ ] # cd /opt/ [ root@linux-node1 opt ] # cd dockerfile/ [ root@linux-node1 dockerfile ] # cd nginx/ [ root@linux-node1 nginx ] # echo \"nginx in Docker ,hahahah\" >index.html [ root@linux-node1 nginx ] # cat Dockerfile # This Dockerfile is used to practice # Version: 1.0 # Author: lamber # Base Image FROM centos # Who will take care of this image MAINTAINER lamber 1020561033 @qq.com # Prepare Epel RUN rpm -ivh https://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm # Install Nginx and deal with the config file RUN yum -y install nginx && yum clean all RUN echo \"daemon off;\" >> /etc/nginx/nginx.conf ADD index.html /usr/share/nginx/html/index.html # Run EXPOSE 80 CMD [ \"nginx\" ] \u8bf4\u660e\uff1a FROM\uff1a\u8fd9\u4e2a\u955c\u50cf\u7684\u5988\u662f\u8c01\uff0c\u6307\u5b9a\u57fa\u7840\u955c\u50cf\uff0c\u9664\u4e86\u6ce8\u91ca\u5916\u7684\u7b2c\u4e00\u884c\u5fc5\u987b\u662f\u4ed6\u3002\u5982\u679c\u672c\u5730\u6ca1\u6709\u8fd9\u4e2a\u955c\u50cf\uff0c\u5b83\u4f1a\u7ed9\u4f60pull\u4e0b\u6765\u3002 MAINTAINER\uff1a\u544a\u8bc9\u522b\u4eba\u8c01\u8d1f\u8d23\u517b\u4ed6\uff0c\u6307\u5b9a\u7ef4\u62a4\u8005\u7684\u4fe1\u606f RUN\uff1a\u4f60\u60f3\u8ba9\u4ed6\u5e72\u5565\uff0c\u5728\u547d\u4ee4\u524d\u9762\u52a0\u4e0aRUN\u5c31\u53ef\u4ee5\u4e86\u3002 ADD\uff1a\u7ed9\u5b83\u70b9\u521b\u4e1a\u8d44\u91d1\uff0ccopy\u6587\u4ef6\u8fdb\u53bb\uff0c\u4f1a\u81ea\u52a8\u89e3\u538b WORKDIR\uff1a\u6211\u662fcd\uff0c\u4eca\u5929\u521a\u5316\u4e86\u5986\uff08\u8bbe\u7f6e\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\uff09 VOLUME\uff1a\u7ed9\u5b83\u4e00\u4e2a\u5b58\u653e\u884c\u674e\u7684\u5730\u65b9\uff0c\u8bbe\u7f6e\u5377\uff0c\u6302\u8f7d\u4e3b\u673a\u76ee\u5f55 EXPOSE\uff1a\u5b83\u8981\u6253\u5f00\u7684\u95e8\u662f\u5565\uff0c\u6307\u5b9a\u5bf9\u5916\u7684\u7aef\u53e3 CMD\uff1a\u5954\u8dd1\u5427\uff0c\u5144\u5f1f\uff0c\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u540e\u8981\u5e72\u7684\u4e8b\u60c5\uff0c\u8fd9\u91cc\u53cc\u5f15\u4e00\u4e0b\uff0c\u5355\u5f15\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\u3002\u3002\u3002\u3002 \u6784\u5efadocker\u955c\u50cf\uff08\u540e\u9762\u90a3\u4e2a\u70b9\u5c31\u662f\u5728\u5f53\u524d\u76ee\u5f55\uff0c\u610f\u601d\u662f\u544a\u8bc9docker\u53bb\u54ea\u91cc\u627e\u8fd9\u4e2adockerfile\uff0c\u4e00\u4e2a\u70b9\u5c31\u662f\u5728\u5f53\u524d\u76ee\u5f55\u627edockerfile\uff0c\u8fd9\u4e2a\u4f60\u4e5f\u53ef\u4ee5\u5199\u7edd\u5bf9\u8def\u5f84\u4e5f\u662fok\u7684\uff09\uff0c\u7136\u540e\u521b\u5efa\u5bb9\u5668\uff1a [ root@linux-node1 nginx ] # docker build -t mynginx:v2 . [ root@linux-node1 nginx ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE mynginx v2 5104f2ed9887 5 seconds ago 280 .7 MB nginx/mynginx v1 81f1607bb8a0 32 minutes ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182 .5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192 .5 MB [ root@linux-node1 nginx ] # docker run --name mynginxv2 -d -p 82:80 mynginx:v2 nginx a1efc632ba6d2412c3bc9fded592ca289c0f6c14dd1832118fc52539a2c1123f \u8d77\u6765\u4ee5\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7f51\u9875\u7aef\u8fdb\u884c\u6d4b\u8bd5\u4e86\uff01 Docker Build \u00b6 Docker build from Local \u00b6 \u4e0a\u9762\u7684\u547d\u4ee4\u4f7f\u7528docker build\u7684\u540c\u65f6\u4e3a\u6211\u4eec\u7684\u65b0\u955c\u50cf\u6253\u4e86tag\uff0c\u4f46\u662f\u540e\u9762\u8ddf\u4e86\u4e00\u4e2a . \u3002\u8fd9\u4e2a\u70b9\u5176\u5b9e\u5c31\u662f\u5f53\u524d\u76ee\u5f55\u7684\u610f\u601d\uff0c\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u8ba9docker build\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627eDockerfile\uff0c\u4f46\u662f\u8fd9\u4e2a\u8def\u5f84\u5e76\u4e0d\u662f\u6307\u5b9aDockerfile\u7684\u8def\u5f84\uff0c\u800c\u662f\u6307\u5b9a\u4e0a\u4e0b\u6587\u7684\u8def\u5f84\u3002 \u9996\u5148\u6211\u4eec\u8981\u7406\u89e3 docker build \u7684\u5de5\u4f5c\u539f\u7406\u3002Docker \u5728\u8fd0\u884c\u65f6\u5206\u4e3aDocker\u5f15\u64ce \uff08\u4e5f\u5c31\u662f\u670d\u52a1\u7aef\u5b88\u62a4\u8fdb\u7a0b\uff09\u548c\u5ba2\u6237\u7aef\u5de5\u5177\u3002Docker \u7684\u5f15\u64ce\u63d0\u4f9b\u4e86\u4e00\u7ec4 REST API\uff0c \u88ab\u79f0\u4e3a Docker Remote API\uff0c\u800c\u5982 docker \u547d\u4ee4\u8fd9\u6837\u7684\u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u5219\u662f\u901a\u8fc7\u8fd9\u7ec4 API \u4e0e Docker \u5f15\u64ce\u4ea4\u4e92\uff0c\u4ece\u800c\u5b8c\u6210\u5404\u79cd\u529f\u80fd\u3002\u56e0\u6b64\uff0c\u867d\u7136\u8868\u9762\u4e0a\u6211\u4eec\u597d\u50cf\u662f\u5728 \u672c\u673a\u6267\u884c\u5404\u79cd docker \u529f\u80fd\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u4e00\u5207\u90fd\u662f\u4f7f\u7528\u7684\u8fdc\u7a0b\u8c03\u7528\u5f62\u5f0f\u5728\u670d\u52a1\u7aef \uff08Docker \u5f15\u64ce\uff09\u5b8c\u6210\u3002\u4e5f\u56e0\u4e3a\u8fd9\u79cd C/S \u8bbe\u8ba1\uff0c\u8ba9\u6211\u4eec\u64cd\u4f5c\u8fdc\u7a0b\u670d\u52a1\u5668\u7684 Docker \u5f15 \u64ce\u53d8\u5f97\u8f7b\u800c\u6613\u4e3e\u3002 \u5f53\u6211\u4eec\u8fdb\u884c\u955c\u50cf\u6784\u5efa\u7684\u65f6\u5019\uff0c\u5e76\u975e\u6240\u6709\u5b9a\u5236\u90fd\u4f1a\u901a\u8fc7 RUN \u6307\u4ee4\u5b8c\u6210\uff0c\u7ecf\u5e38\u4f1a\u9700\u8981 \u5c06\u4e00\u4e9b\u672c\u5730\u6587\u4ef6\u590d\u5236\u8fdb\u955c\u50cf\uff0c\u6bd4\u5982\u901a\u8fc7 COPY \u6307\u4ee4\u3001 ADD \u6307\u4ee4\u7b49\u3002\u800c docker build \u547d\u4ee4\u6784\u5efa\u955c\u50cf\uff0c\u5176\u5b9e\u5e76\u975e\u5728\u672c\u5730\u6784\u5efa\uff0c\u800c\u662f\u5728\u670d\u52a1\u7aef\uff0c\u4e5f\u5c31\u662f Docker \u5f15\u64ce\u4e2d\u6784\u5efa\u7684\u3002\u90a3\u4e48\u5728\u8fd9\u79cd\u5ba2\u6237\u7aef/\u670d\u52a1\u7aef\u7684\u67b6\u6784\u4e2d\uff0c\u5982\u4f55\u624d\u80fd\u8ba9\u670d\u52a1\u7aef\u83b7\u5f97\u672c\u5730\u6587\u4ef6\u5462\uff1f \u8fd9\u5c31\u5f15\u5165\u4e86\u4e0a\u4e0b\u6587\u7684\u6982\u5ff5\u3002\u5f53\u6784\u5efa\u7684\u65f6\u5019\uff0c\u7528\u6237\u4f1a\u6307\u5b9a\u6784\u5efa\u955c\u50cf\u4e0a\u4e0b\u6587\u7684\u8def\u5f84\uff0c docker build \u547d\u4ee4\u5f97\u77e5\u8fd9\u4e2a\u8def\u5f84\u540e\uff0c\u4f1a\u5c06\u8def\u5f84\u4e0b\u7684\u6240\u6709\u5185\u5bb9\u6253\u5305\uff0c\u7136\u540e\u4e0a\u4f20\u7ed9Docker\u5f15\u64ce\u3002\u8fd9\u6837 Docker\u5f15\u64ce\u6536\u5230\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u5305\u540e\uff0c\u5c55\u5f00\u5c31\u4f1a\u83b7\u5f97\u6784\u5efa\u955c\u50cf\u6240\u9700\u7684\u4e00\u5207\u6587\u4ef6\uff0c\u6bd4\u5982\uff1a COPY ./package.json /app/ \u8fd9\u5e76\u4e0d\u662f\u8981\u590d\u5236\u6267\u884cdocker build\u547d\u4ee4\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u7684 package.json\uff0c\u4e5f\u4e0d\u662f\u590d\u5236 Dockerfile \u6240\u5728\u76ee\u5f55\u4e0b\u7684 package.json ,\u800c\u662f\u590d\u5236\u4e0a\u4e0b\u6587\uff08context\uff09 \u76ee\u5f55\u4e0b\u7684package.json\u3002 \u56e0\u6b64\uff0c COPY \u8fd9\u7c7b\u6307\u4ee4\u4e2d\u7684\u6e90\u6587\u4ef6\u7684\u8def\u5f84\u90fd\u662f\u76f8\u5bf9\u8def\u5f84\u3002\u8fd9\u4e5f\u662f\u521d\u5b66\u8005\u7ecf\u5e38\u4f1a\u95ee \u7684\u4e3a\u4ec0\u4e48 COPY ../package.json /app \u6216\u8005 COPY /opt/xxxx /app \u65e0\u6cd5\u5de5\u4f5c\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u8def\u5f84\u5df2\u7ecf\u8d85\u51fa\u4e86\u4e0a\u4e0b\u6587\u7684\u8303\u56f4\uff0cDocker \u5f15\u64ce\u65e0\u6cd5\u83b7\u5f97\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u6587\u4ef6\u3002\u5982\u679c\u771f\u7684\u9700\u8981\u90a3\u4e9b\u6587\u4ef6\uff0c\u5e94\u8be5\u5c06\u5b83\u4eec\u590d\u5236\u5230\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d\u53bb\u3002 \u73b0\u5728\u5c31\u53ef\u4ee5\u7406\u89e3\u5982\u4e0a\u6784\u5efa\u547d\u4ee4 \u4e2d\u7684\u8fd9\u4e2a . \uff0c\u5b9e\u9645 \u4e0a\u662f\u5728\u6307\u5b9a\u4e0a\u4e0b\u6587\u7684\u76ee\u5f55\uff0c docker build \u547d\u4ee4\u4f1a\u5c06\u8be5\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\u6253\u5305\u4ea4\u7ed9 Docker \u5f15\u64ce\u4ee5\u5e2e\u52a9\u6784\u5efa\u955c\u50cf\u3002\uff08\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u6211\u4eec\u662f\u53ef\u4ee5\u770b\u5230\u53d1\u5f80Docker daemon\u7684\u65e5\u5fd7\u7684\uff09 \u4e00\u822c\u7684\u4f7f\u7528\u65b9\u6cd5\u662f\uff0c\u5bf9\u5e94\u7684\u9879\u76ee\u6709\u5bf9\u5e94\u7684\u76ee\u5f55\u5b58\u653e\uff0cDockerfile\u653e\u5230\u5bf9\u5e94\u7684\u9879\u76ee\u91cc\u9762\u53bb\uff0c\u5982\u679c\u6709\u6587\u4ef6\u9700\u8981\u4f20\u5230\u955c\u50cf\u91cc\u9762\u53bb\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u628a\u5bf9\u5e94\u7684\u6587\u4ef6\u4e5f\u590d\u5236\u4e00\u4efd\u653e\u5230\u8fd9\u91cc\u3002\u5982\u679c\u76ee\u5f55\u4e0b\u6709\u4e9b\u4e1c\u897f\u786e\u5b9e\u4e0d\u5e0c\u671b\u6784\u5efa\u7684\u65f6\u5019\u4f20\u7ed9Docker\u5f15\u64ce\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528.gitignore\u4e00\u6837\u7684\u8bed\u6cd5\u6765\u5199\u4e00\u4e2a.dockerignore\uff0c\u8be5\u6587\u4ef6\u662f\u7528\u6765\u5254\u9664\u4e0d\u9700\u8981\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u4f20\u9012\u7ed9Docker Engine\u7684\u6587\u4ef6\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e0d\u6307\u5b9aDockerfile\u7684\u8bdd\uff0c\u4f1a\u5c06\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e0b\u7684\u540d\u4e3aDockerfile\u7684\u6587\u4ef6\u4f5c\u4e3aDockerfile\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6587\u4ef6\u540d\u4e0d\u4e00\u5b9a\u5fc5\u987b\u5f97\u662fDockerfile\uff0c\u4e5f\u4e0d\u662f\u8981\u6c42Dockerfile\u5fc5\u987b\u4f4d\u4e8e\u4e0a\u4e0b\u6587\u76ee\u5f55\uff0c\u53ef\u4ee5\u901a\u8fc7-f\u53c2\u6570\u53bb\u6307\u5b9a\u67d0\u4e00\u4e2a\u6587\u4ef6\u6765\u4f5c\u4e3aDockerfile\uff0c\u4f46\u662f\u4e60\u60ef\u6027\u7684\u90fd\u662f\u9ed8\u8ba4\u4f7f\u7528Dockerfile\u4e3a\u540d\u79f0\uff0c\u800c\u4e14\u653e\u5230\u4e0a\u4e0b\u5348\u76ee\u5f55\u73af\u5883\u91cc\u3002 Docker build from Remote \u00b6 \u8fd9\u4e2a\u547d\u4ee4\u6307\u5b9a\u4e86\u6784\u5efa\u6240\u9700\u8981\u7684Git Repo\uff0c\u5e76\u4e14\u9ed8\u8ba4\u6267\u884cmaster\u5206\u652f\uff0c\u6784\u5efa\u76ee\u5f55\u4e3a8.14\uff0c\u7136\u540eDocker\u4f1a\u81ea\u5df1\u53bbclone\u8fd9\u4e2a\u9879\u76ee\uff0c\u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\uff0c\u5e76\u8fdb\u5165\u5230\u6307\u5b9a\u76ee\u5f55\u540e\u5f00\u59cb\u521b\u5efa\u3002 $ docker build https://github.com/twang2218/gitlab-ce-zh.git #:8.14 docker build https://github.com/twang2218/gitlab-ce-zh.git \\# :8.14 Sending build context to Docker daemon 2 .048 kB Step 1 : FROM gitlab/gitlab-ce:8.14.0-ce.0 8 .14.0-ce.0: Pulling from gitlab/gitlab-ce aed15891ba52: Already exists 773ae8583d14: Already exists \u2026\u2026 Docker build from tar \u00b6 \u5982\u679c\u6240\u7ed9\u51fa\u7684URL\u4e0d\u662fGit repo\uff0c\u800c\u662f\u4e2atar\u538b\u7f29\u5305\uff0c\u90a3\u4e48Docker\u5f15\u64ce\u4f1a\u4e0b\u8f7d\u8fd9\u4e2a\u5305\uff0c\u5e76\u81ea\u52a8\u89e3\u538b\u7f29\uff0c\u4ee5\u5176\u4f5c\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5f00\u59cb\u6784\u5efa\u3002 docker build http://server/context.tar.gz Docker build from stdin \u00b6 docker build - < Dockerfile \u6216\u8005 cat Dockerfile | docker build - \u5982\u679c\u6807\u51c6\u8f93\u5165\u4f20\u5165\u7684\u662f\u6587\u672c\u6587\u4ef6\uff0c\u5219\u5c06\u5176\u89c6\u4e3a Dockerfile \uff0c\u5e76\u5f00\u59cb\u6784\u5efa\u3002\u8fd9\u79cd \u5f62\u5f0f\u7531\u4e8e\u76f4\u63a5\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6 Dockerfile \u7684\u5185\u5bb9\uff0c\u5b83\u6ca1\u6709\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u50cf \u5176\u4ed6\u65b9\u6cd5\u90a3\u6837\u53ef\u4ee5\u5c06\u672c\u5730\u6587\u4ef6 COPY \u8fdb\u955c\u50cf\u4e4b\u7c7b\u7684\u4e8b\u60c5\u3002 docker build - < context.tar.gz \u5982\u679c\u53d1\u73b0\u6807\u51c6\u8f93\u5165\u7684\u6587\u4ef6\u683c\u5f0f\u662f gzip \u3001 bzip2 \u4ee5\u53ca xz \u7684\u8bdd\uff0c\u5c06\u4f1a\u4f7f\u5176\u4e3a\u4e0a \u4e0b\u6587\u538b\u7f29\u5305\uff0c\u76f4\u63a5\u5c06\u5176\u5c55\u5f00\uff0c\u5c06\u91cc\u9762\u89c6\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5e76\u5f00\u59cb\u6784\u5efa\u3002 Dockerfile\u6307\u4ee4\u8be6\u89e3 \u00b6 FROM \u00b6 \u5728 Docker Store \u4e0a\u6709\u975e\u5e38\u591a\u7684\u9ad8\u8d28\u91cf\u7684\u5b98\u65b9\u955c\u50cf\uff0c\u6709\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u4f7f\u7528\u7684\u670d\u52a1\u7c7b\u7684 \u955c\u50cf\uff0c\u5982 nginx \u3001 redis \u3001 mongo \u3001 mysql \u3001 httpd \u3001 php \u3001 tomcat\u7b49\uff1b\u4e5f\u6709\u4e00\u4e9b\u65b9\u4fbf\u5f00\u53d1\u3001\u6784\u5efa\u3001\u8fd0\u884c\u5404\u79cd\u8bed\u8a00\u5e94\u7528\u7684\u955c\u50cf\uff0c\u5982 node \u3001 openjdk \u3001 python \u3001 ruby \u3001 golang \u7b49\u3002\u53ef\u4ee5\u5728\u5176\u4e2d\u5bfb\u627e\u4e00\u4e2a\u6700\u7b26\u5408\u6211\u4eec\u6700\u7ec8\u76ee\u6807\u7684\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\u8fdb\u884c\u5b9a\u5236\u3002 \u5982\u679c\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u670d\u52a1\u7684\u955c\u50cf\uff0c\u5b98\u65b9\u955c\u50cf\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u66f4\u4e3a\u57fa\u7840\u7684\u64cd\u4f5c\u7cfb\u7edf\u955c \u50cf\uff0c\u5982 ubuntu \u3001 debian \u3001 centos \u3001 fedora \u3001 alpine \u7b49\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u7684\u8f6f\u4ef6\u5e93\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u66f4\u5e7f\u9614\u7684\u6269\u5c55\u7a7a\u95f4\u3002 \u9664\u4e86\u9009\u62e9\u73b0\u6709\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\u5916\uff0cDocker \u8fd8\u5b58\u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u955c\u50cf\uff0c\u540d\u4e3a scratch \u3002\u8fd9\u4e2a\u955c\u50cf\u662f\u865a\u62df\u7684\u6982\u5ff5\uff0c\u5e76\u4e0d\u5b9e\u9645\u5b58\u5728\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u7a7a\u767d\u7684\u955c\u50cf\u3002 FROM scratch ... \u5982\u679c\u4f60\u4ee5 scratch \u4e3a\u57fa\u7840\u955c\u50cf\u7684\u8bdd\uff0c\u610f\u5473\u7740\u4f60\u4e0d\u4ee5\u4efb\u4f55\u955c\u50cf\u4e3a\u57fa\u7840\uff0c\u63a5\u4e0b\u6765\u6240\u5199 \u7684\u6307\u4ee4\u5c06\u4f5c\u4e3a\u955c\u50cf\u7b2c\u4e00\u5c42\u5f00\u59cb\u5b58\u5728\u3002\u4e0d\u4ee5\u4efb\u4f55\u7cfb\u7edf\u4e3a\u57fa\u7840\uff0c\u76f4\u63a5\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u8fdb\u955c\u50cf\u7684\u505a\u6cd5\u5e76\u4e0d\u7f55\u89c1\uff0c\u6bd4\u5982 swarm \u3001 coreos/etcd \u3002\u5bf9\u4e8e Linux \u4e0b\u9759\u6001\u7f16\u8bd1\u7684\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5e76\u4e0d\u9700\u8981\u6709\u64cd\u4f5c \u7cfb\u7edf\u63d0\u4f9b\u8fd0\u884c\u65f6\u652f\u6301\uff0c\u6240\u9700\u7684\u4e00\u5207\u5e93\u90fd\u5df2\u7ecf\u5728\u53ef\u6267\u884c\u6587\u4ef6\u91cc\u4e86\uff0c\u56e0\u6b64\u76f4\u63a5 FROM scratch \u4f1a\u8ba9\u955c\u50cf\u4f53\u79ef\u66f4\u52a0\u5c0f\u5de7\u3002\u4f7f\u7528 Go \u8bed\u8a00 \u5f00\u53d1\u7684\u5e94\u7528\u5f88\u591a\u4f1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f \u6765\u5236\u4f5c\u955c\u50cf\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6709\u4eba\u8ba4\u4e3a Go \u662f\u7279\u522b\u9002\u5408\u5bb9\u5668\u5fae\u670d\u52a1\u67b6\u6784\u7684\u8bed\u8a00\u7684\u539f\u56e0\u4e4b\u4e00\u3002 \u683c\u5f0f\uff1aFROM <image> \u6216FROM <image>:<tag> \u3002 \u89e3\u91ca\uff1aFROM\u662fDockerfile\u91cc\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\uff08\u5fc5\u987b\u662f\uff09\uff0c\u540e\u9762\u8ddf\u6709\u6548\u7684\u955c\u50cf\u540d\uff08\u5982\u679c\u8be5\u955c\u50cf\u4f60\u7684\u672c\u5730\u4ed3\u5e93\u6ca1\u6709\u5219\u4f1a\u4ece\u8fdc\u7a0b\u4ed3\u5e93Pull\u53d6\uff09\u3002\u7136\u540e\u540e\u9762\u7684\u5176\u5b83\u6307\u4ee4FROM\u7684\u955c\u50cf\u4e2d\u6267\u884c\u3002\u4e00\u822c\u5728FROM\u7684\u65f6\u5019\u5efa\u8bae\u5e26\u4e0aimage\u7684tag\uff0c\u9ed8\u8ba4\u5982\u679c\u4e0d\u5e26tag\u7684\u8bdd\uff0ctag\u5c31\u662flatest\u3002 MAINTAINER \u00b6 \u683c\u5f0f\uff1aMAINTAINER <name> \u89e3\u91ca\uff1a\u6307\u5b9a\u7ef4\u62a4\u8005\u4fe1\u606f\u3002 RUN \u00b6 RUN\u547d\u4ee4\u4f1a\u5728\u524d\u4e00\u6761\u547d\u4ee4\u521b\u5efa\u51fa\u7684\u955c\u50cf\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u5e76\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u547d\u4ee4\uff0c\u5728\u547d\u4ee4\u8fd0\u884c\u7ed3\u675f\u540ecommit\u5bb9\u5668\u4e3a\u65b0\u7684\u955c\u50cf\u3002\u65b0\u7684\u955c\u50cf\u4f1a\u88abDockerfile\u4e2d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u6240\u4f7f\u7528\u3002\u56e0\u6b64\u8981\u5408\u7406\u4f7f\u7528RUN\uff0c\u907f\u514d\u5efa\u7acb\u4e0d\u5fc5\u8981\u7684\u5c42\uff0cUnion FS \u662f\u6709\u6700\u5927\u5c42\u6570\u9650\u5236\u7684\uff0c\u6bd4\u5982 AUFS\uff0c\u66fe\u7ecf\u662f\u6700\u5927\u4e0d\u5f97\u8d85\u8fc7 42 \u5c42\uff0c\u73b0\u5728\u662f \u4e0d\u5f97\u8d85\u8fc7 127 \u5c42\u3002\u8fd9\u91cc\u8981\u76f8\u5bf9\u5408\u7406\u4f7f\u7528\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u5c42\u6570\u4e0d\u610f\u5473\u7740\u5c06\u6240\u6709\u7684\u547d\u4ee4\u90fd\u5199\u5728\u4e00\u4e2aRUN\u6307\u4ee4\u4e2d\uff0c\u63d0\u4ea4\u955c\u50cf\u672c\u8eab\u662f\u5ec9\u4ef7\u7684\uff0c\u5408\u7406\u7684\u5206\u5c42\u662f\u7b26\u5408Docker\u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u8fd9\u5f88\u50cf\u6e90\u7801\u7248\u672c\u63a7\u5236\u3002 \u8fd9\u91cc\u5408\u7406\u7684\u5206\u5c42\u6307\u7684\u662f\u4e00\u5c42\u5c31\u5e72\u4e00\u4ef6\u4e8b\u60c5\uff0c\u6bd4\u5982\u7f16\u8bd1/\u5b89\u88c5redis\uff0c\u5408\u6210\u4e00\u5c42\u5c31\u53ef\u4ee5\u4e86\u3002\u7f16\u8bd1\u5b89\u88c5\u8fc7\u7a0b\u6d89\u53ca\u5230\u7684\u547d\u4ee4\u4f7f\u7528\\\u548c\\&\\&\u5408\u5e76\u8d77\u6765\u3002 \u6700\u540e\u8fdb\u884c\u65e0\u7528\u6570\u636e\u5f97\u6e05\u7406\u662f\u4e00\u4e2a\u597d\u7684\u4e60\u60ef\uff0c\u6bd4\u5982\u4f60\u62ff\u4e86\u4e00\u4e2atar.gz\u7684\u6e90\u7801\u5305\u8fdb\u53bb\uff0c\u90a3\u4e48\u5b89\u88c5\u4e00\u5207\u5c31\u7eea\u4ee5\u540e\u5728\u6700\u540e\u5e94\u8be5\u505a\u6e05\u7406\u7684\u5de5\u4f5c\uff0c\u5220\u6389\u65e0\u7528\u7684\u5185\u5bb9\uff0c\u6bd4\u5982\u4e3a\u4e86\u7f16\u8bd1\u6784\u5efa\u6240\u9700\u8981\u7684\u8f6f\u4ef6\uff0c\u4e0b\u8f7d\u7684\u538b\u7f29\u5305\uff0cyum\u6216\u8005\u662fapt-get\u7684\u7f13\u5b58\u6587\u4ef6\uff0c\u907f\u514d\u9010\u5c42\u6784\u5efa\u8d77\u6765\u7684\u955c\u50cf\u6587\u4ef6\u662f\u4e00\u4e2a\u81c3\u80bf\u7684\u955c\u50cf\u3002 RUN\u652f\u6301\u4e24\u79cd\u6a21\u5f0f\uff0cRUN command\u7684\u6a21\u5f0f\u79f0\u4e3ashell\u6a21\u5f0f\uff0c\u8c03\u7528\u7684\u662f/bin/sh -c\u6765\u8fd0\u884c\uff1b\u7b2c\u4e8c\u79cd\u6a21\u5f0f\u4e3aexec\u6a21\u5f0f\uff0c\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u547d\u4ee4\u662f\u76f4\u63a5\u8fd0\u884c\u7684\uff0c\u800c\u4e0d\u8c03\u7528shell\u7a0b\u5e8f\uff0cexec\u683c\u5f0f\u4e2d\u7684\u53c2\u6570\u4f1a\u88ab\u5f53\u6210JSON\u6570\u7ec4\u88abDocker\u89e3\u6790\uff0c\u56e0\u6b64\u8fd9\u91cc\u9762\u7684\u53c2\u6570\u90fd\u8981\u88ab\u53cc\u5f15\u53f7\uff08\u53cc\u5f15\u53f7\u5fc5\u987b\uff09\u5f15\u8d77\u6765\uff0c\u5355\u5f15\u53f7\u4e0d\u662f\u6807\u51c6\u7684JSON\u683c\u5f0f\u3002 exec\u6a21\u5f0f\u4e0b\u73af\u5883\u53d8\u91cf\u7684\u53c2\u6570\u4e0d\u4f1a\u88ab\u66ff\u6362\uff0c\u56e0\u4e3aexec\u6a21\u5f0f\u5e76\u4e0d\u8c03\u7528shell\uff0c\u56e0\u6b64\u6bd4\u5982\u4f60 CMD [\"echo\",\"$HOME\"] \u7684\u65f6\u5019$HOME\u5e76\u4e0d\u4f1a\u88ab\u53d8\u91cf\u66ff\u6362\u6389\u3002\u5982\u679c\u5e0c\u671b\u88ab\u53d8\u91cf\u66ff\u6362\u6389\u53ef\u4ee5\u8c03\u7528shell\uff0c\u6bd4\u5982 CMD [\"sh\",\"-c\",\"echo\",\"$HOME\"] \u683c\u5f0f\uff1a RUN <command> RUN [\"executable\", \"param1\", \"param2\"]\u3002 \u89e3\u91ca\uff1a\u8fd0\u884c\u547d\u4ee4\uff0c\u547d\u4ee4\u8f83\u957f\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u907f\u514dRUN\u591a\u6b21\uff0c\u5efa\u7acb\u591a\u4e2a\u4e0d\u5fc5\u8981\u7684\u5c42\uff08 \u5f88\u591a\u8fd0\u884c\u65f6\u4e0d\u9700\u8981\u7684\u4e1c\u897f\uff0c\u90fd\u88ab\u88c5\u8fdb\u4e86\u955c\u50cf\u91cc\uff0c\u6bd4\u5982\u7f16\u8bd1\u73af\u5883\u3001\u66f4\u65b0\u7684\u8f6f\u4ef6\u5305\u7b49\u7b49\u3002\u7ed3\u679c\u5c31\u662f\u4ea7\u751f \u975e\u5e38\u81c3\u80bf\u3001\u975e\u5e38\u591a\u5c42\u7684\u955c\u50cf\uff0c\u4e0d\u4ec5\u4ec5\u589e\u52a0\u4e86\u6784\u5efa\u90e8\u7f72\u7684\u65f6\u95f4\uff0c\u4e5f\u5f88\u5bb9\u6613\u51fa\u9519 \uff09\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\\\u6765\u6362\u884c\uff0c\u7efc\u5408\u6210\u4e00\u884c\u6765\u5904\u7406\uff0c\u53c2\u8003\u5982\u4e0b\uff1a(\u63a8\u8350\u4f7f\u7528exec\u683c\u5f0f) FROM debian:jessie RUN buildDeps = 'gcc libc6-dev make' \\ && apt-get update \\ && apt-get install -y $buildDeps \\ && wget -O redis.tar.gz \"http://download.redis.io/releases/redis-3.2.5.tar.gz\" \\ && mkdir -p /usr/src/redis \\ && tar -xzf redis.tar.gz -C /usr/src/redis --strip-components = 1 \\ && make -C /usr/src/redis \\ && make -C /usr/src/redis install \\ && rm -rf /var/lib/apt/lists/* \\ && rm redis.tar.gz \\ && rm -r /usr/src/redis \\ && apt-get purge -y --auto-remove $buildDeps CMD \u00b6 \u683c\u5f0f\uff1a CMD [\"executable\",\"param1\",\"param2\"] \u4f7f\u7528 exec \u6267\u884c\uff0c\u63a8\u8350\u65b9\u5f0f\uff1b CMD command param1 param2 \u5728 /bin/sh \u4e2d\u6267\u884c\uff0c\u63d0\u4f9b\u7ed9\u9700\u8981\u4ea4\u4e92\u7684\u5e94\u7528\uff1b CMD [\"param1\",\"param2\"] \u63d0\u4f9b\u7ed9ENTRYPOINT\u7684\u9ed8\u8ba4\u53c2\u6570\uff1b \u89e3\u91ca\uff1a CMD\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u662f\u6267\u884c\u7684\u547d\u4ee4\uff0c\u6bcf\u4e2aDockerfile\u53ea\u80fd\u6709\u4e00\u6761CMD\u547d\u4ee4\uff0c\u5982\u679c\u6307\u5b9a\u4e86\u591a\u6761\uff0c\u53ea\u6709\u6700\u540e\u4e00\u6761\u4f1a\u88ab\u6267\u884c\u3002\u5982\u679c\u4f60\u5728\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\u4e5f\u6307\u5b9a\u7684\u547d\u4ee4\uff0c\u90a3\u4e48\u4f1a\u8986\u76d6Dockerfile\u6784\u5efa\u7684\u955c\u50cf\u91cc\u9762\u7684CMD\u547d\u4ee4\u3002 ENTRYPOINT \u00b6 \u683c\u5f0f\uff1a ENTRYPOINT [\"executable\", \"param1\",\"param2\"] ENTRYPOINT command param1 param2\uff08shell\u4e2d\u6267\u884c\uff09\u3002 \u89e3\u91ca\uff1a\u548cCMD\u7c7b\u4f3c\u90fd\u662f\u914d\u7f6e\u5bb9\u5668\u542f\u52a8\u540e\u6267\u884c\u7684\u547d\u4ee4\uff0c\u5e76\u4e14\u4e0d\u53ef\u88ab docker run \u63d0\u4f9b\u7684\u53c2\u6570\u8986\u76d6\u3002 \u6bcf\u4e2a Dockerfile \u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aENTRYPOINT\uff0c\u5f53\u6307\u5b9a\u591a\u4e2a\u65f6\uff0c\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u8d77\u6548\u3002ENTRYPOINT\u6ca1\u6709CMD\u7684\u53ef\u66ff\u6362\u7279\u6027\uff0c\u4e5f\u5c31\u662f\u4f60\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\u589e\u52a0\u8fd0\u884c\u7684\u547d\u4ee4\u4e0d\u4f1a\u8986\u76d6ENTRYPOINT\u6307\u5b9a\u7684\u547d\u4ee4\u3002 \u6240\u4ee5\u751f\u4ea7\u5b9e\u8df5\u4e2d\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528ENTRYPOINT\u548cCMD\uff0c\u4f8b\u5982\uff1a ENTRYPOINT [\"/usr/bin/rethinkdb\"] CMD [\"--help\"] USER \u00b6 \u683c\u5f0f\uff1aUSER daemon \u89e3\u91ca\uff1a\u6307\u5b9a\u8fd0\u884c\u5bb9\u5668\u65f6\u7684\u7528\u6237\u540d\u548cUID\uff0c\u540e\u7eed\u7684RUN\u6307\u4ee4\u4e5f\u4f1a\u4f7f\u7528\u8fd9\u91cc\u6307\u5b9a\u7684\u7528\u6237\u3002 EXPOSE \u00b6 \u683c\u5f0f\uff1aEXPOSE <port> [<port>\u2026] \u89e3\u91ca\uff1a\u8bbe\u7f6eDocker\u5bb9\u5668\u5185\u90e8\u66b4\u9732\u7684\u7aef\u53e3\u53f7\uff0c\u5982\u679c\u9700\u8981\u5916\u90e8\u8bbf\u95ee\uff0c\u8fd8\u9700\u8981\u542f\u52a8\u5bb9\u5668\u65f6\u589e\u52a0-p\u6216\u8005-P\u53c2\u6570\u8fdb\u884c\u5206\u914d\u3002 ENV \u00b6 \u683c\u5f0f\uff1a ENV <key> <value> ENV <key>=<value> ... \u89e3\u91ca\uff1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4ee5\u5728RUN\u4e4b\u524d\u4f7f\u7528\uff0c\u7136\u540eRUN\u547d\u4ee4\u65f6\u8c03\u7528\uff0c\u5bb9\u5668\u542f\u52a8\u65f6\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\u90fd\u4f1a\u88ab\u6307\u5b9a ADD \u00b6 \u683c\u5f0f\uff1a ADD <src>... <dest> ADD [\"<src>\",... \"<dest>\"] \u89e3\u91ca\uff1a\u5c06\u6307\u5b9a\u7684\\<src>\u590d\u5236\u5230\u5bb9\u5668\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\\<dest> \u6240\u6709\u62f7\u8d1d\u5230container\u4e2d\u7684\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u6743\u9650\u4e3a0755,uid\u548cgid\u4e3a0 \u5982\u679c\u6587\u4ef6\u662f\u53ef\u8bc6\u522b\u7684\u538b\u7f29\u683c\u5f0f\uff0c\u5219docker\u4f1a\u5e2e\u5fd9\u89e3\u538b\u7f29 VOLUME \u00b6 \u683c\u5f0f\uff1aVOLUME [\"/data\"] \u89e3\u91ca\uff1a\u53ef\u4ee5\u5c06\u672c\u5730\u6587\u4ef6\u5939\u6216\u8005\u5176\u4ed6container\u7684\u6587\u4ef6\u5939\u6302\u8f7d\u5230container\u4e2d\u3002 WORKDIR \u00b6 \u683c\u5f0f\uff1aWORKDIR/path/to/workdir \u89e3\u91ca\uff1a\u5207\u6362\u76ee\u5f55\uff0c\u4e3a\u540e\u7eed\u7684RUN\u3001CMD\u3001ENTRYPOINT \u6307\u4ee4\u914d\u7f6e\u5de5\u4f5c\u76ee\u5f55\u3002 \u53ef\u4ee5\u591a\u6b21\u5207\u6362(\u76f8\u5f53\u4e8ecd\u547d\u4ee4)\uff0c \u4e5f\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2aWORKDIR \u6307\u4ee4\uff0c\u540e\u7eed\u547d\u4ee4\u5982\u679c\u53c2\u6570\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u5219\u4f1a\u57fa\u4e8e\u4e4b\u524d\u547d\u4ee4\u6307\u5b9a\u7684\u8def\u5f84\u3002 \u4f8b\u5982 WORKDIR /a WORKDIR b WORKDIR c RUN pwd \u5219\u6700\u7ec8\u8def\u5f84\u4e3a /a/b/c\u3002 ONBUILD \u00b6 ONBUILD \u6307\u5b9a\u7684\u547d\u4ee4\u5728\u6784\u5efa\u955c\u50cf\u65f6\u5e76\u4e0d\u6267\u884c\uff0c\u800c\u662f\u5728\u5b83\u7684\u5b50\u955c\u50cf\u4e2d\u6267\u884c ARG \u00b6 \u683c\u5f0f\uff1aARG <name>[=<default value>] \u89e3\u91ca\uff1aARG\u6307\u5b9a\u4e86\u4e00\u4e2a\u53d8\u91cf\u5728docker build\u7684\u65f6\u5019\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528--build-arg <varname>=<value> \u6765\u6307\u5b9a\u53c2\u6570\u7684\u503c\uff0c\u4e0d\u8fc7\u5982\u679c\u6784\u5efa\u7684\u65f6\u5019\u4e0d\u6307\u5b9a\u5c31\u4f1a\u62a5\u9519\u3002 \u53c2\u8003\u81ea\u8fd0\u7ef4\u793e\u533a\uff1a https://mp.weixin.qq.com/s/A8KSp3zmpL_u9a2aYv8WYw","title":"DockerFile"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#dockerfile","text":"Dockerfile\u662f\u4e3a\u5feb\u901f\u6784\u5efadocker image\u800c\u8bbe\u8ba1\u7684\uff0c\u5f53\u4f60\u4f7f\u7528docker build \u547d\u4ee4\u7684\u65f6\u5019\uff0cdocker \u4f1a\u8bfb\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u547d\u540d\u4e3aDockerfile(\u9996\u5b57\u6bcd\u5927\u5199)\u7684\u7eaf\u6587\u672c\u6587\u4ef6\u5e76\u6267\u884c\u91cc\u9762\u7684\u6307\u4ee4\u6784\u5efa\u51fa\u4e00\u4e2adocker image\u3002\u8fd9\u6bd4SaltStack\u7684\u914d\u7f6e\u7ba1\u7406\u8981\u7b80\u5355\u7684\u591a\uff0c\u4e0d\u8fc7\u8fd8\u662f\u8981\u638c\u63e1\u4e00\u4e9b\u7b80\u5355\u7684\u6307\u4ee4\u3002 Dockerfile \u7531\u4e00\u884c\u884c\u547d\u4ee4\u8bed\u53e5\u7ec4\u6210\uff0c\u5e76\u4e14\u652f\u6301\u4ee5#\u5f00\u5934\u7684\u6ce8\u91ca\u884c\u3002\u6307\u4ee4\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u4f46\u662f\u901a\u5e38\u6211\u4eec\u90fd\u5927\u5199\uff0c\u7528\u4e8e\u548c\u540e\u9762\u7684\u5185\u5bb9\u53c2\u6570\u8fdb\u884c\u533a\u5206\u3002","title":"DockerFile"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#_1","text":"\u4e0b\u9762\u6211\u4eec\u901a\u8fc7\u6784\u5efa\u4e00\u4e2aNginx\u7684\u955c\u50cf\u6765\u5b66\u4e60Dockerfile. \u9996\u5148\u5b9e\u73b0\u521b\u5efa\u597d\u76ee\u5f55\uff0c\u6211\u8fd9\u5728opt\u4e0b\u521b\u5efa\u76ee\u5f55dockerfile\uff0c\u7136\u540e\u5728dockerfile\u76ee\u5f55\u4e0b\u521b\u5efanginx\u76ee\u5f55\uff0c\u5728nginx\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2aDockerfile\u6587\u4ef6\u3002Dcockerfile\u8fd9\u4e2a\u6587\u4ef6\u7684\u9996\u5b57\u6bcd\u8981\u5927\u5199\uff0c\u4e0d\u7136\u6709\u53ef\u80fd\u4e0d\u4f1a\u88ab\u8bc6\u522b\u3002 [ root@linux-node1 ~ ] # cd /opt/ [ root@linux-node1 opt ] # cd dockerfile/ [ root@linux-node1 dockerfile ] # cd nginx/ [ root@linux-node1 nginx ] # echo \"nginx in Docker ,hahahah\" >index.html [ root@linux-node1 nginx ] # cat Dockerfile # This Dockerfile is used to practice # Version: 1.0 # Author: lamber # Base Image FROM centos # Who will take care of this image MAINTAINER lamber 1020561033 @qq.com # Prepare Epel RUN rpm -ivh https://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm # Install Nginx and deal with the config file RUN yum -y install nginx && yum clean all RUN echo \"daemon off;\" >> /etc/nginx/nginx.conf ADD index.html /usr/share/nginx/html/index.html # Run EXPOSE 80 CMD [ \"nginx\" ] \u8bf4\u660e\uff1a FROM\uff1a\u8fd9\u4e2a\u955c\u50cf\u7684\u5988\u662f\u8c01\uff0c\u6307\u5b9a\u57fa\u7840\u955c\u50cf\uff0c\u9664\u4e86\u6ce8\u91ca\u5916\u7684\u7b2c\u4e00\u884c\u5fc5\u987b\u662f\u4ed6\u3002\u5982\u679c\u672c\u5730\u6ca1\u6709\u8fd9\u4e2a\u955c\u50cf\uff0c\u5b83\u4f1a\u7ed9\u4f60pull\u4e0b\u6765\u3002 MAINTAINER\uff1a\u544a\u8bc9\u522b\u4eba\u8c01\u8d1f\u8d23\u517b\u4ed6\uff0c\u6307\u5b9a\u7ef4\u62a4\u8005\u7684\u4fe1\u606f RUN\uff1a\u4f60\u60f3\u8ba9\u4ed6\u5e72\u5565\uff0c\u5728\u547d\u4ee4\u524d\u9762\u52a0\u4e0aRUN\u5c31\u53ef\u4ee5\u4e86\u3002 ADD\uff1a\u7ed9\u5b83\u70b9\u521b\u4e1a\u8d44\u91d1\uff0ccopy\u6587\u4ef6\u8fdb\u53bb\uff0c\u4f1a\u81ea\u52a8\u89e3\u538b WORKDIR\uff1a\u6211\u662fcd\uff0c\u4eca\u5929\u521a\u5316\u4e86\u5986\uff08\u8bbe\u7f6e\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\uff09 VOLUME\uff1a\u7ed9\u5b83\u4e00\u4e2a\u5b58\u653e\u884c\u674e\u7684\u5730\u65b9\uff0c\u8bbe\u7f6e\u5377\uff0c\u6302\u8f7d\u4e3b\u673a\u76ee\u5f55 EXPOSE\uff1a\u5b83\u8981\u6253\u5f00\u7684\u95e8\u662f\u5565\uff0c\u6307\u5b9a\u5bf9\u5916\u7684\u7aef\u53e3 CMD\uff1a\u5954\u8dd1\u5427\uff0c\u5144\u5f1f\uff0c\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u540e\u8981\u5e72\u7684\u4e8b\u60c5\uff0c\u8fd9\u91cc\u53cc\u5f15\u4e00\u4e0b\uff0c\u5355\u5f15\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\u3002\u3002\u3002\u3002 \u6784\u5efadocker\u955c\u50cf\uff08\u540e\u9762\u90a3\u4e2a\u70b9\u5c31\u662f\u5728\u5f53\u524d\u76ee\u5f55\uff0c\u610f\u601d\u662f\u544a\u8bc9docker\u53bb\u54ea\u91cc\u627e\u8fd9\u4e2adockerfile\uff0c\u4e00\u4e2a\u70b9\u5c31\u662f\u5728\u5f53\u524d\u76ee\u5f55\u627edockerfile\uff0c\u8fd9\u4e2a\u4f60\u4e5f\u53ef\u4ee5\u5199\u7edd\u5bf9\u8def\u5f84\u4e5f\u662fok\u7684\uff09\uff0c\u7136\u540e\u521b\u5efa\u5bb9\u5668\uff1a [ root@linux-node1 nginx ] # docker build -t mynginx:v2 . [ root@linux-node1 nginx ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE mynginx v2 5104f2ed9887 5 seconds ago 280 .7 MB nginx/mynginx v1 81f1607bb8a0 32 minutes ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182 .5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192 .5 MB [ root@linux-node1 nginx ] # docker run --name mynginxv2 -d -p 82:80 mynginx:v2 nginx a1efc632ba6d2412c3bc9fded592ca289c0f6c14dd1832118fc52539a2c1123f \u8d77\u6765\u4ee5\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7f51\u9875\u7aef\u8fdb\u884c\u6d4b\u8bd5\u4e86\uff01","title":"\u7b80\u5355\u793a\u4f8b"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#docker-build","text":"","title":"Docker Build"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#docker-build-from-local","text":"\u4e0a\u9762\u7684\u547d\u4ee4\u4f7f\u7528docker build\u7684\u540c\u65f6\u4e3a\u6211\u4eec\u7684\u65b0\u955c\u50cf\u6253\u4e86tag\uff0c\u4f46\u662f\u540e\u9762\u8ddf\u4e86\u4e00\u4e2a . \u3002\u8fd9\u4e2a\u70b9\u5176\u5b9e\u5c31\u662f\u5f53\u524d\u76ee\u5f55\u7684\u610f\u601d\uff0c\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u8ba9docker build\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627eDockerfile\uff0c\u4f46\u662f\u8fd9\u4e2a\u8def\u5f84\u5e76\u4e0d\u662f\u6307\u5b9aDockerfile\u7684\u8def\u5f84\uff0c\u800c\u662f\u6307\u5b9a\u4e0a\u4e0b\u6587\u7684\u8def\u5f84\u3002 \u9996\u5148\u6211\u4eec\u8981\u7406\u89e3 docker build \u7684\u5de5\u4f5c\u539f\u7406\u3002Docker \u5728\u8fd0\u884c\u65f6\u5206\u4e3aDocker\u5f15\u64ce \uff08\u4e5f\u5c31\u662f\u670d\u52a1\u7aef\u5b88\u62a4\u8fdb\u7a0b\uff09\u548c\u5ba2\u6237\u7aef\u5de5\u5177\u3002Docker \u7684\u5f15\u64ce\u63d0\u4f9b\u4e86\u4e00\u7ec4 REST API\uff0c \u88ab\u79f0\u4e3a Docker Remote API\uff0c\u800c\u5982 docker \u547d\u4ee4\u8fd9\u6837\u7684\u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u5219\u662f\u901a\u8fc7\u8fd9\u7ec4 API \u4e0e Docker \u5f15\u64ce\u4ea4\u4e92\uff0c\u4ece\u800c\u5b8c\u6210\u5404\u79cd\u529f\u80fd\u3002\u56e0\u6b64\uff0c\u867d\u7136\u8868\u9762\u4e0a\u6211\u4eec\u597d\u50cf\u662f\u5728 \u672c\u673a\u6267\u884c\u5404\u79cd docker \u529f\u80fd\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u4e00\u5207\u90fd\u662f\u4f7f\u7528\u7684\u8fdc\u7a0b\u8c03\u7528\u5f62\u5f0f\u5728\u670d\u52a1\u7aef \uff08Docker \u5f15\u64ce\uff09\u5b8c\u6210\u3002\u4e5f\u56e0\u4e3a\u8fd9\u79cd C/S \u8bbe\u8ba1\uff0c\u8ba9\u6211\u4eec\u64cd\u4f5c\u8fdc\u7a0b\u670d\u52a1\u5668\u7684 Docker \u5f15 \u64ce\u53d8\u5f97\u8f7b\u800c\u6613\u4e3e\u3002 \u5f53\u6211\u4eec\u8fdb\u884c\u955c\u50cf\u6784\u5efa\u7684\u65f6\u5019\uff0c\u5e76\u975e\u6240\u6709\u5b9a\u5236\u90fd\u4f1a\u901a\u8fc7 RUN \u6307\u4ee4\u5b8c\u6210\uff0c\u7ecf\u5e38\u4f1a\u9700\u8981 \u5c06\u4e00\u4e9b\u672c\u5730\u6587\u4ef6\u590d\u5236\u8fdb\u955c\u50cf\uff0c\u6bd4\u5982\u901a\u8fc7 COPY \u6307\u4ee4\u3001 ADD \u6307\u4ee4\u7b49\u3002\u800c docker build \u547d\u4ee4\u6784\u5efa\u955c\u50cf\uff0c\u5176\u5b9e\u5e76\u975e\u5728\u672c\u5730\u6784\u5efa\uff0c\u800c\u662f\u5728\u670d\u52a1\u7aef\uff0c\u4e5f\u5c31\u662f Docker \u5f15\u64ce\u4e2d\u6784\u5efa\u7684\u3002\u90a3\u4e48\u5728\u8fd9\u79cd\u5ba2\u6237\u7aef/\u670d\u52a1\u7aef\u7684\u67b6\u6784\u4e2d\uff0c\u5982\u4f55\u624d\u80fd\u8ba9\u670d\u52a1\u7aef\u83b7\u5f97\u672c\u5730\u6587\u4ef6\u5462\uff1f \u8fd9\u5c31\u5f15\u5165\u4e86\u4e0a\u4e0b\u6587\u7684\u6982\u5ff5\u3002\u5f53\u6784\u5efa\u7684\u65f6\u5019\uff0c\u7528\u6237\u4f1a\u6307\u5b9a\u6784\u5efa\u955c\u50cf\u4e0a\u4e0b\u6587\u7684\u8def\u5f84\uff0c docker build \u547d\u4ee4\u5f97\u77e5\u8fd9\u4e2a\u8def\u5f84\u540e\uff0c\u4f1a\u5c06\u8def\u5f84\u4e0b\u7684\u6240\u6709\u5185\u5bb9\u6253\u5305\uff0c\u7136\u540e\u4e0a\u4f20\u7ed9Docker\u5f15\u64ce\u3002\u8fd9\u6837 Docker\u5f15\u64ce\u6536\u5230\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u5305\u540e\uff0c\u5c55\u5f00\u5c31\u4f1a\u83b7\u5f97\u6784\u5efa\u955c\u50cf\u6240\u9700\u7684\u4e00\u5207\u6587\u4ef6\uff0c\u6bd4\u5982\uff1a COPY ./package.json /app/ \u8fd9\u5e76\u4e0d\u662f\u8981\u590d\u5236\u6267\u884cdocker build\u547d\u4ee4\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u7684 package.json\uff0c\u4e5f\u4e0d\u662f\u590d\u5236 Dockerfile \u6240\u5728\u76ee\u5f55\u4e0b\u7684 package.json ,\u800c\u662f\u590d\u5236\u4e0a\u4e0b\u6587\uff08context\uff09 \u76ee\u5f55\u4e0b\u7684package.json\u3002 \u56e0\u6b64\uff0c COPY \u8fd9\u7c7b\u6307\u4ee4\u4e2d\u7684\u6e90\u6587\u4ef6\u7684\u8def\u5f84\u90fd\u662f\u76f8\u5bf9\u8def\u5f84\u3002\u8fd9\u4e5f\u662f\u521d\u5b66\u8005\u7ecf\u5e38\u4f1a\u95ee \u7684\u4e3a\u4ec0\u4e48 COPY ../package.json /app \u6216\u8005 COPY /opt/xxxx /app \u65e0\u6cd5\u5de5\u4f5c\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u8def\u5f84\u5df2\u7ecf\u8d85\u51fa\u4e86\u4e0a\u4e0b\u6587\u7684\u8303\u56f4\uff0cDocker \u5f15\u64ce\u65e0\u6cd5\u83b7\u5f97\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u6587\u4ef6\u3002\u5982\u679c\u771f\u7684\u9700\u8981\u90a3\u4e9b\u6587\u4ef6\uff0c\u5e94\u8be5\u5c06\u5b83\u4eec\u590d\u5236\u5230\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d\u53bb\u3002 \u73b0\u5728\u5c31\u53ef\u4ee5\u7406\u89e3\u5982\u4e0a\u6784\u5efa\u547d\u4ee4 \u4e2d\u7684\u8fd9\u4e2a . \uff0c\u5b9e\u9645 \u4e0a\u662f\u5728\u6307\u5b9a\u4e0a\u4e0b\u6587\u7684\u76ee\u5f55\uff0c docker build \u547d\u4ee4\u4f1a\u5c06\u8be5\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\u6253\u5305\u4ea4\u7ed9 Docker \u5f15\u64ce\u4ee5\u5e2e\u52a9\u6784\u5efa\u955c\u50cf\u3002\uff08\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u6211\u4eec\u662f\u53ef\u4ee5\u770b\u5230\u53d1\u5f80Docker daemon\u7684\u65e5\u5fd7\u7684\uff09 \u4e00\u822c\u7684\u4f7f\u7528\u65b9\u6cd5\u662f\uff0c\u5bf9\u5e94\u7684\u9879\u76ee\u6709\u5bf9\u5e94\u7684\u76ee\u5f55\u5b58\u653e\uff0cDockerfile\u653e\u5230\u5bf9\u5e94\u7684\u9879\u76ee\u91cc\u9762\u53bb\uff0c\u5982\u679c\u6709\u6587\u4ef6\u9700\u8981\u4f20\u5230\u955c\u50cf\u91cc\u9762\u53bb\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u5e94\u8be5\u628a\u5bf9\u5e94\u7684\u6587\u4ef6\u4e5f\u590d\u5236\u4e00\u4efd\u653e\u5230\u8fd9\u91cc\u3002\u5982\u679c\u76ee\u5f55\u4e0b\u6709\u4e9b\u4e1c\u897f\u786e\u5b9e\u4e0d\u5e0c\u671b\u6784\u5efa\u7684\u65f6\u5019\u4f20\u7ed9Docker\u5f15\u64ce\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528.gitignore\u4e00\u6837\u7684\u8bed\u6cd5\u6765\u5199\u4e00\u4e2a.dockerignore\uff0c\u8be5\u6587\u4ef6\u662f\u7528\u6765\u5254\u9664\u4e0d\u9700\u8981\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u4f20\u9012\u7ed9Docker Engine\u7684\u6587\u4ef6\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e0d\u6307\u5b9aDockerfile\u7684\u8bdd\uff0c\u4f1a\u5c06\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e0b\u7684\u540d\u4e3aDockerfile\u7684\u6587\u4ef6\u4f5c\u4e3aDockerfile\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6587\u4ef6\u540d\u4e0d\u4e00\u5b9a\u5fc5\u987b\u5f97\u662fDockerfile\uff0c\u4e5f\u4e0d\u662f\u8981\u6c42Dockerfile\u5fc5\u987b\u4f4d\u4e8e\u4e0a\u4e0b\u6587\u76ee\u5f55\uff0c\u53ef\u4ee5\u901a\u8fc7-f\u53c2\u6570\u53bb\u6307\u5b9a\u67d0\u4e00\u4e2a\u6587\u4ef6\u6765\u4f5c\u4e3aDockerfile\uff0c\u4f46\u662f\u4e60\u60ef\u6027\u7684\u90fd\u662f\u9ed8\u8ba4\u4f7f\u7528Dockerfile\u4e3a\u540d\u79f0\uff0c\u800c\u4e14\u653e\u5230\u4e0a\u4e0b\u5348\u76ee\u5f55\u73af\u5883\u91cc\u3002","title":"Docker build from Local"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#docker-build-from-remote","text":"\u8fd9\u4e2a\u547d\u4ee4\u6307\u5b9a\u4e86\u6784\u5efa\u6240\u9700\u8981\u7684Git Repo\uff0c\u5e76\u4e14\u9ed8\u8ba4\u6267\u884cmaster\u5206\u652f\uff0c\u6784\u5efa\u76ee\u5f55\u4e3a8.14\uff0c\u7136\u540eDocker\u4f1a\u81ea\u5df1\u53bbclone\u8fd9\u4e2a\u9879\u76ee\uff0c\u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\uff0c\u5e76\u8fdb\u5165\u5230\u6307\u5b9a\u76ee\u5f55\u540e\u5f00\u59cb\u521b\u5efa\u3002 $ docker build https://github.com/twang2218/gitlab-ce-zh.git #:8.14 docker build https://github.com/twang2218/gitlab-ce-zh.git \\# :8.14 Sending build context to Docker daemon 2 .048 kB Step 1 : FROM gitlab/gitlab-ce:8.14.0-ce.0 8 .14.0-ce.0: Pulling from gitlab/gitlab-ce aed15891ba52: Already exists 773ae8583d14: Already exists \u2026\u2026","title":"Docker build from Remote"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#docker-build-from-tar","text":"\u5982\u679c\u6240\u7ed9\u51fa\u7684URL\u4e0d\u662fGit repo\uff0c\u800c\u662f\u4e2atar\u538b\u7f29\u5305\uff0c\u90a3\u4e48Docker\u5f15\u64ce\u4f1a\u4e0b\u8f7d\u8fd9\u4e2a\u5305\uff0c\u5e76\u81ea\u52a8\u89e3\u538b\u7f29\uff0c\u4ee5\u5176\u4f5c\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5f00\u59cb\u6784\u5efa\u3002 docker build http://server/context.tar.gz","title":"Docker build from tar"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#docker-build-from-stdin","text":"docker build - < Dockerfile \u6216\u8005 cat Dockerfile | docker build - \u5982\u679c\u6807\u51c6\u8f93\u5165\u4f20\u5165\u7684\u662f\u6587\u672c\u6587\u4ef6\uff0c\u5219\u5c06\u5176\u89c6\u4e3a Dockerfile \uff0c\u5e76\u5f00\u59cb\u6784\u5efa\u3002\u8fd9\u79cd \u5f62\u5f0f\u7531\u4e8e\u76f4\u63a5\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6 Dockerfile \u7684\u5185\u5bb9\uff0c\u5b83\u6ca1\u6709\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u50cf \u5176\u4ed6\u65b9\u6cd5\u90a3\u6837\u53ef\u4ee5\u5c06\u672c\u5730\u6587\u4ef6 COPY \u8fdb\u955c\u50cf\u4e4b\u7c7b\u7684\u4e8b\u60c5\u3002 docker build - < context.tar.gz \u5982\u679c\u53d1\u73b0\u6807\u51c6\u8f93\u5165\u7684\u6587\u4ef6\u683c\u5f0f\u662f gzip \u3001 bzip2 \u4ee5\u53ca xz \u7684\u8bdd\uff0c\u5c06\u4f1a\u4f7f\u5176\u4e3a\u4e0a \u4e0b\u6587\u538b\u7f29\u5305\uff0c\u76f4\u63a5\u5c06\u5176\u5c55\u5f00\uff0c\u5c06\u91cc\u9762\u89c6\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5e76\u5f00\u59cb\u6784\u5efa\u3002","title":"Docker build from stdin"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#dockerfile_1","text":"","title":"Dockerfile\u6307\u4ee4\u8be6\u89e3"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#from","text":"\u5728 Docker Store \u4e0a\u6709\u975e\u5e38\u591a\u7684\u9ad8\u8d28\u91cf\u7684\u5b98\u65b9\u955c\u50cf\uff0c\u6709\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u4f7f\u7528\u7684\u670d\u52a1\u7c7b\u7684 \u955c\u50cf\uff0c\u5982 nginx \u3001 redis \u3001 mongo \u3001 mysql \u3001 httpd \u3001 php \u3001 tomcat\u7b49\uff1b\u4e5f\u6709\u4e00\u4e9b\u65b9\u4fbf\u5f00\u53d1\u3001\u6784\u5efa\u3001\u8fd0\u884c\u5404\u79cd\u8bed\u8a00\u5e94\u7528\u7684\u955c\u50cf\uff0c\u5982 node \u3001 openjdk \u3001 python \u3001 ruby \u3001 golang \u7b49\u3002\u53ef\u4ee5\u5728\u5176\u4e2d\u5bfb\u627e\u4e00\u4e2a\u6700\u7b26\u5408\u6211\u4eec\u6700\u7ec8\u76ee\u6807\u7684\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\u8fdb\u884c\u5b9a\u5236\u3002 \u5982\u679c\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u670d\u52a1\u7684\u955c\u50cf\uff0c\u5b98\u65b9\u955c\u50cf\u4e2d\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u66f4\u4e3a\u57fa\u7840\u7684\u64cd\u4f5c\u7cfb\u7edf\u955c \u50cf\uff0c\u5982 ubuntu \u3001 debian \u3001 centos \u3001 fedora \u3001 alpine \u7b49\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u7684\u8f6f\u4ef6\u5e93\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u66f4\u5e7f\u9614\u7684\u6269\u5c55\u7a7a\u95f4\u3002 \u9664\u4e86\u9009\u62e9\u73b0\u6709\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\u5916\uff0cDocker \u8fd8\u5b58\u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u955c\u50cf\uff0c\u540d\u4e3a scratch \u3002\u8fd9\u4e2a\u955c\u50cf\u662f\u865a\u62df\u7684\u6982\u5ff5\uff0c\u5e76\u4e0d\u5b9e\u9645\u5b58\u5728\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u7a7a\u767d\u7684\u955c\u50cf\u3002 FROM scratch ... \u5982\u679c\u4f60\u4ee5 scratch \u4e3a\u57fa\u7840\u955c\u50cf\u7684\u8bdd\uff0c\u610f\u5473\u7740\u4f60\u4e0d\u4ee5\u4efb\u4f55\u955c\u50cf\u4e3a\u57fa\u7840\uff0c\u63a5\u4e0b\u6765\u6240\u5199 \u7684\u6307\u4ee4\u5c06\u4f5c\u4e3a\u955c\u50cf\u7b2c\u4e00\u5c42\u5f00\u59cb\u5b58\u5728\u3002\u4e0d\u4ee5\u4efb\u4f55\u7cfb\u7edf\u4e3a\u57fa\u7840\uff0c\u76f4\u63a5\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u8fdb\u955c\u50cf\u7684\u505a\u6cd5\u5e76\u4e0d\u7f55\u89c1\uff0c\u6bd4\u5982 swarm \u3001 coreos/etcd \u3002\u5bf9\u4e8e Linux \u4e0b\u9759\u6001\u7f16\u8bd1\u7684\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5e76\u4e0d\u9700\u8981\u6709\u64cd\u4f5c \u7cfb\u7edf\u63d0\u4f9b\u8fd0\u884c\u65f6\u652f\u6301\uff0c\u6240\u9700\u7684\u4e00\u5207\u5e93\u90fd\u5df2\u7ecf\u5728\u53ef\u6267\u884c\u6587\u4ef6\u91cc\u4e86\uff0c\u56e0\u6b64\u76f4\u63a5 FROM scratch \u4f1a\u8ba9\u955c\u50cf\u4f53\u79ef\u66f4\u52a0\u5c0f\u5de7\u3002\u4f7f\u7528 Go \u8bed\u8a00 \u5f00\u53d1\u7684\u5e94\u7528\u5f88\u591a\u4f1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f \u6765\u5236\u4f5c\u955c\u50cf\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6709\u4eba\u8ba4\u4e3a Go \u662f\u7279\u522b\u9002\u5408\u5bb9\u5668\u5fae\u670d\u52a1\u67b6\u6784\u7684\u8bed\u8a00\u7684\u539f\u56e0\u4e4b\u4e00\u3002 \u683c\u5f0f\uff1aFROM <image> \u6216FROM <image>:<tag> \u3002 \u89e3\u91ca\uff1aFROM\u662fDockerfile\u91cc\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\uff08\u5fc5\u987b\u662f\uff09\uff0c\u540e\u9762\u8ddf\u6709\u6548\u7684\u955c\u50cf\u540d\uff08\u5982\u679c\u8be5\u955c\u50cf\u4f60\u7684\u672c\u5730\u4ed3\u5e93\u6ca1\u6709\u5219\u4f1a\u4ece\u8fdc\u7a0b\u4ed3\u5e93Pull\u53d6\uff09\u3002\u7136\u540e\u540e\u9762\u7684\u5176\u5b83\u6307\u4ee4FROM\u7684\u955c\u50cf\u4e2d\u6267\u884c\u3002\u4e00\u822c\u5728FROM\u7684\u65f6\u5019\u5efa\u8bae\u5e26\u4e0aimage\u7684tag\uff0c\u9ed8\u8ba4\u5982\u679c\u4e0d\u5e26tag\u7684\u8bdd\uff0ctag\u5c31\u662flatest\u3002","title":"FROM"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#maintainer","text":"\u683c\u5f0f\uff1aMAINTAINER <name> \u89e3\u91ca\uff1a\u6307\u5b9a\u7ef4\u62a4\u8005\u4fe1\u606f\u3002","title":"MAINTAINER"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#run","text":"RUN\u547d\u4ee4\u4f1a\u5728\u524d\u4e00\u6761\u547d\u4ee4\u521b\u5efa\u51fa\u7684\u955c\u50cf\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u5e76\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u547d\u4ee4\uff0c\u5728\u547d\u4ee4\u8fd0\u884c\u7ed3\u675f\u540ecommit\u5bb9\u5668\u4e3a\u65b0\u7684\u955c\u50cf\u3002\u65b0\u7684\u955c\u50cf\u4f1a\u88abDockerfile\u4e2d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u6240\u4f7f\u7528\u3002\u56e0\u6b64\u8981\u5408\u7406\u4f7f\u7528RUN\uff0c\u907f\u514d\u5efa\u7acb\u4e0d\u5fc5\u8981\u7684\u5c42\uff0cUnion FS \u662f\u6709\u6700\u5927\u5c42\u6570\u9650\u5236\u7684\uff0c\u6bd4\u5982 AUFS\uff0c\u66fe\u7ecf\u662f\u6700\u5927\u4e0d\u5f97\u8d85\u8fc7 42 \u5c42\uff0c\u73b0\u5728\u662f \u4e0d\u5f97\u8d85\u8fc7 127 \u5c42\u3002\u8fd9\u91cc\u8981\u76f8\u5bf9\u5408\u7406\u4f7f\u7528\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u5c42\u6570\u4e0d\u610f\u5473\u7740\u5c06\u6240\u6709\u7684\u547d\u4ee4\u90fd\u5199\u5728\u4e00\u4e2aRUN\u6307\u4ee4\u4e2d\uff0c\u63d0\u4ea4\u955c\u50cf\u672c\u8eab\u662f\u5ec9\u4ef7\u7684\uff0c\u5408\u7406\u7684\u5206\u5c42\u662f\u7b26\u5408Docker\u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u8fd9\u5f88\u50cf\u6e90\u7801\u7248\u672c\u63a7\u5236\u3002 \u8fd9\u91cc\u5408\u7406\u7684\u5206\u5c42\u6307\u7684\u662f\u4e00\u5c42\u5c31\u5e72\u4e00\u4ef6\u4e8b\u60c5\uff0c\u6bd4\u5982\u7f16\u8bd1/\u5b89\u88c5redis\uff0c\u5408\u6210\u4e00\u5c42\u5c31\u53ef\u4ee5\u4e86\u3002\u7f16\u8bd1\u5b89\u88c5\u8fc7\u7a0b\u6d89\u53ca\u5230\u7684\u547d\u4ee4\u4f7f\u7528\\\u548c\\&\\&\u5408\u5e76\u8d77\u6765\u3002 \u6700\u540e\u8fdb\u884c\u65e0\u7528\u6570\u636e\u5f97\u6e05\u7406\u662f\u4e00\u4e2a\u597d\u7684\u4e60\u60ef\uff0c\u6bd4\u5982\u4f60\u62ff\u4e86\u4e00\u4e2atar.gz\u7684\u6e90\u7801\u5305\u8fdb\u53bb\uff0c\u90a3\u4e48\u5b89\u88c5\u4e00\u5207\u5c31\u7eea\u4ee5\u540e\u5728\u6700\u540e\u5e94\u8be5\u505a\u6e05\u7406\u7684\u5de5\u4f5c\uff0c\u5220\u6389\u65e0\u7528\u7684\u5185\u5bb9\uff0c\u6bd4\u5982\u4e3a\u4e86\u7f16\u8bd1\u6784\u5efa\u6240\u9700\u8981\u7684\u8f6f\u4ef6\uff0c\u4e0b\u8f7d\u7684\u538b\u7f29\u5305\uff0cyum\u6216\u8005\u662fapt-get\u7684\u7f13\u5b58\u6587\u4ef6\uff0c\u907f\u514d\u9010\u5c42\u6784\u5efa\u8d77\u6765\u7684\u955c\u50cf\u6587\u4ef6\u662f\u4e00\u4e2a\u81c3\u80bf\u7684\u955c\u50cf\u3002 RUN\u652f\u6301\u4e24\u79cd\u6a21\u5f0f\uff0cRUN command\u7684\u6a21\u5f0f\u79f0\u4e3ashell\u6a21\u5f0f\uff0c\u8c03\u7528\u7684\u662f/bin/sh -c\u6765\u8fd0\u884c\uff1b\u7b2c\u4e8c\u79cd\u6a21\u5f0f\u4e3aexec\u6a21\u5f0f\uff0c\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u547d\u4ee4\u662f\u76f4\u63a5\u8fd0\u884c\u7684\uff0c\u800c\u4e0d\u8c03\u7528shell\u7a0b\u5e8f\uff0cexec\u683c\u5f0f\u4e2d\u7684\u53c2\u6570\u4f1a\u88ab\u5f53\u6210JSON\u6570\u7ec4\u88abDocker\u89e3\u6790\uff0c\u56e0\u6b64\u8fd9\u91cc\u9762\u7684\u53c2\u6570\u90fd\u8981\u88ab\u53cc\u5f15\u53f7\uff08\u53cc\u5f15\u53f7\u5fc5\u987b\uff09\u5f15\u8d77\u6765\uff0c\u5355\u5f15\u53f7\u4e0d\u662f\u6807\u51c6\u7684JSON\u683c\u5f0f\u3002 exec\u6a21\u5f0f\u4e0b\u73af\u5883\u53d8\u91cf\u7684\u53c2\u6570\u4e0d\u4f1a\u88ab\u66ff\u6362\uff0c\u56e0\u4e3aexec\u6a21\u5f0f\u5e76\u4e0d\u8c03\u7528shell\uff0c\u56e0\u6b64\u6bd4\u5982\u4f60 CMD [\"echo\",\"$HOME\"] \u7684\u65f6\u5019$HOME\u5e76\u4e0d\u4f1a\u88ab\u53d8\u91cf\u66ff\u6362\u6389\u3002\u5982\u679c\u5e0c\u671b\u88ab\u53d8\u91cf\u66ff\u6362\u6389\u53ef\u4ee5\u8c03\u7528shell\uff0c\u6bd4\u5982 CMD [\"sh\",\"-c\",\"echo\",\"$HOME\"] \u683c\u5f0f\uff1a RUN <command> RUN [\"executable\", \"param1\", \"param2\"]\u3002 \u89e3\u91ca\uff1a\u8fd0\u884c\u547d\u4ee4\uff0c\u547d\u4ee4\u8f83\u957f\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u907f\u514dRUN\u591a\u6b21\uff0c\u5efa\u7acb\u591a\u4e2a\u4e0d\u5fc5\u8981\u7684\u5c42\uff08 \u5f88\u591a\u8fd0\u884c\u65f6\u4e0d\u9700\u8981\u7684\u4e1c\u897f\uff0c\u90fd\u88ab\u88c5\u8fdb\u4e86\u955c\u50cf\u91cc\uff0c\u6bd4\u5982\u7f16\u8bd1\u73af\u5883\u3001\u66f4\u65b0\u7684\u8f6f\u4ef6\u5305\u7b49\u7b49\u3002\u7ed3\u679c\u5c31\u662f\u4ea7\u751f \u975e\u5e38\u81c3\u80bf\u3001\u975e\u5e38\u591a\u5c42\u7684\u955c\u50cf\uff0c\u4e0d\u4ec5\u4ec5\u589e\u52a0\u4e86\u6784\u5efa\u90e8\u7f72\u7684\u65f6\u95f4\uff0c\u4e5f\u5f88\u5bb9\u6613\u51fa\u9519 \uff09\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\\\u6765\u6362\u884c\uff0c\u7efc\u5408\u6210\u4e00\u884c\u6765\u5904\u7406\uff0c\u53c2\u8003\u5982\u4e0b\uff1a(\u63a8\u8350\u4f7f\u7528exec\u683c\u5f0f) FROM debian:jessie RUN buildDeps = 'gcc libc6-dev make' \\ && apt-get update \\ && apt-get install -y $buildDeps \\ && wget -O redis.tar.gz \"http://download.redis.io/releases/redis-3.2.5.tar.gz\" \\ && mkdir -p /usr/src/redis \\ && tar -xzf redis.tar.gz -C /usr/src/redis --strip-components = 1 \\ && make -C /usr/src/redis \\ && make -C /usr/src/redis install \\ && rm -rf /var/lib/apt/lists/* \\ && rm redis.tar.gz \\ && rm -r /usr/src/redis \\ && apt-get purge -y --auto-remove $buildDeps","title":"RUN"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#cmd","text":"\u683c\u5f0f\uff1a CMD [\"executable\",\"param1\",\"param2\"] \u4f7f\u7528 exec \u6267\u884c\uff0c\u63a8\u8350\u65b9\u5f0f\uff1b CMD command param1 param2 \u5728 /bin/sh \u4e2d\u6267\u884c\uff0c\u63d0\u4f9b\u7ed9\u9700\u8981\u4ea4\u4e92\u7684\u5e94\u7528\uff1b CMD [\"param1\",\"param2\"] \u63d0\u4f9b\u7ed9ENTRYPOINT\u7684\u9ed8\u8ba4\u53c2\u6570\uff1b \u89e3\u91ca\uff1a CMD\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u662f\u6267\u884c\u7684\u547d\u4ee4\uff0c\u6bcf\u4e2aDockerfile\u53ea\u80fd\u6709\u4e00\u6761CMD\u547d\u4ee4\uff0c\u5982\u679c\u6307\u5b9a\u4e86\u591a\u6761\uff0c\u53ea\u6709\u6700\u540e\u4e00\u6761\u4f1a\u88ab\u6267\u884c\u3002\u5982\u679c\u4f60\u5728\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\u4e5f\u6307\u5b9a\u7684\u547d\u4ee4\uff0c\u90a3\u4e48\u4f1a\u8986\u76d6Dockerfile\u6784\u5efa\u7684\u955c\u50cf\u91cc\u9762\u7684CMD\u547d\u4ee4\u3002","title":"CMD"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#entrypoint","text":"\u683c\u5f0f\uff1a ENTRYPOINT [\"executable\", \"param1\",\"param2\"] ENTRYPOINT command param1 param2\uff08shell\u4e2d\u6267\u884c\uff09\u3002 \u89e3\u91ca\uff1a\u548cCMD\u7c7b\u4f3c\u90fd\u662f\u914d\u7f6e\u5bb9\u5668\u542f\u52a8\u540e\u6267\u884c\u7684\u547d\u4ee4\uff0c\u5e76\u4e14\u4e0d\u53ef\u88ab docker run \u63d0\u4f9b\u7684\u53c2\u6570\u8986\u76d6\u3002 \u6bcf\u4e2a Dockerfile \u4e2d\u53ea\u80fd\u6709\u4e00\u4e2aENTRYPOINT\uff0c\u5f53\u6307\u5b9a\u591a\u4e2a\u65f6\uff0c\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u8d77\u6548\u3002ENTRYPOINT\u6ca1\u6709CMD\u7684\u53ef\u66ff\u6362\u7279\u6027\uff0c\u4e5f\u5c31\u662f\u4f60\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\u589e\u52a0\u8fd0\u884c\u7684\u547d\u4ee4\u4e0d\u4f1a\u8986\u76d6ENTRYPOINT\u6307\u5b9a\u7684\u547d\u4ee4\u3002 \u6240\u4ee5\u751f\u4ea7\u5b9e\u8df5\u4e2d\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528ENTRYPOINT\u548cCMD\uff0c\u4f8b\u5982\uff1a ENTRYPOINT [\"/usr/bin/rethinkdb\"] CMD [\"--help\"]","title":"ENTRYPOINT"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#user","text":"\u683c\u5f0f\uff1aUSER daemon \u89e3\u91ca\uff1a\u6307\u5b9a\u8fd0\u884c\u5bb9\u5668\u65f6\u7684\u7528\u6237\u540d\u548cUID\uff0c\u540e\u7eed\u7684RUN\u6307\u4ee4\u4e5f\u4f1a\u4f7f\u7528\u8fd9\u91cc\u6307\u5b9a\u7684\u7528\u6237\u3002","title":"USER"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#expose","text":"\u683c\u5f0f\uff1aEXPOSE <port> [<port>\u2026] \u89e3\u91ca\uff1a\u8bbe\u7f6eDocker\u5bb9\u5668\u5185\u90e8\u66b4\u9732\u7684\u7aef\u53e3\u53f7\uff0c\u5982\u679c\u9700\u8981\u5916\u90e8\u8bbf\u95ee\uff0c\u8fd8\u9700\u8981\u542f\u52a8\u5bb9\u5668\u65f6\u589e\u52a0-p\u6216\u8005-P\u53c2\u6570\u8fdb\u884c\u5206\u914d\u3002","title":"EXPOSE"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#env","text":"\u683c\u5f0f\uff1a ENV <key> <value> ENV <key>=<value> ... \u89e3\u91ca\uff1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4ee5\u5728RUN\u4e4b\u524d\u4f7f\u7528\uff0c\u7136\u540eRUN\u547d\u4ee4\u65f6\u8c03\u7528\uff0c\u5bb9\u5668\u542f\u52a8\u65f6\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\u90fd\u4f1a\u88ab\u6307\u5b9a","title":"ENV"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#add","text":"\u683c\u5f0f\uff1a ADD <src>... <dest> ADD [\"<src>\",... \"<dest>\"] \u89e3\u91ca\uff1a\u5c06\u6307\u5b9a\u7684\\<src>\u590d\u5236\u5230\u5bb9\u5668\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\\<dest> \u6240\u6709\u62f7\u8d1d\u5230container\u4e2d\u7684\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u6743\u9650\u4e3a0755,uid\u548cgid\u4e3a0 \u5982\u679c\u6587\u4ef6\u662f\u53ef\u8bc6\u522b\u7684\u538b\u7f29\u683c\u5f0f\uff0c\u5219docker\u4f1a\u5e2e\u5fd9\u89e3\u538b\u7f29","title":"ADD"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#volume","text":"\u683c\u5f0f\uff1aVOLUME [\"/data\"] \u89e3\u91ca\uff1a\u53ef\u4ee5\u5c06\u672c\u5730\u6587\u4ef6\u5939\u6216\u8005\u5176\u4ed6container\u7684\u6587\u4ef6\u5939\u6302\u8f7d\u5230container\u4e2d\u3002","title":"VOLUME"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#workdir","text":"\u683c\u5f0f\uff1aWORKDIR/path/to/workdir \u89e3\u91ca\uff1a\u5207\u6362\u76ee\u5f55\uff0c\u4e3a\u540e\u7eed\u7684RUN\u3001CMD\u3001ENTRYPOINT \u6307\u4ee4\u914d\u7f6e\u5de5\u4f5c\u76ee\u5f55\u3002 \u53ef\u4ee5\u591a\u6b21\u5207\u6362(\u76f8\u5f53\u4e8ecd\u547d\u4ee4)\uff0c \u4e5f\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2aWORKDIR \u6307\u4ee4\uff0c\u540e\u7eed\u547d\u4ee4\u5982\u679c\u53c2\u6570\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u5219\u4f1a\u57fa\u4e8e\u4e4b\u524d\u547d\u4ee4\u6307\u5b9a\u7684\u8def\u5f84\u3002 \u4f8b\u5982 WORKDIR /a WORKDIR b WORKDIR c RUN pwd \u5219\u6700\u7ec8\u8def\u5f84\u4e3a /a/b/c\u3002","title":"WORKDIR"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#onbuild","text":"ONBUILD \u6307\u5b9a\u7684\u547d\u4ee4\u5728\u6784\u5efa\u955c\u50cf\u65f6\u5e76\u4e0d\u6267\u884c\uff0c\u800c\u662f\u5728\u5b83\u7684\u5b50\u955c\u50cf\u4e2d\u6267\u884c","title":"ONBUILD"},{"location":"docker/01-Docker\u57fa\u7840\u4f7f\u7528/04-DockerFile/#arg","text":"\u683c\u5f0f\uff1aARG <name>[=<default value>] \u89e3\u91ca\uff1aARG\u6307\u5b9a\u4e86\u4e00\u4e2a\u53d8\u91cf\u5728docker build\u7684\u65f6\u5019\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528--build-arg <varname>=<value> \u6765\u6307\u5b9a\u53c2\u6570\u7684\u503c\uff0c\u4e0d\u8fc7\u5982\u679c\u6784\u5efa\u7684\u65f6\u5019\u4e0d\u6307\u5b9a\u5c31\u4f1a\u62a5\u9519\u3002 \u53c2\u8003\u81ea\u8fd0\u7ef4\u793e\u533a\uff1a https://mp.weixin.qq.com/s/A8KSp3zmpL_u9a2aYv8WYw","title":"ARG"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/","text":"Docker\u955c\u50cf\u751f\u4ea7\u89c4\u5212\u4e0e\u5b9e\u6218 \u00b6 \u516c\u5f00\u7684dockerfile\uff1a https://github.com/dockerfile \u5206\u5c42\u7684\u8bbe\u8ba1 \u00b6 A(\u7cfb\u7edf\u5c42)-->B(\u8fd0\u884c\u73af\u5883\u5c42)-->C(\u5e94\u7528\u670d\u52a1\u5c42) [root@linux-node1 ~]# mkdir docker [root@linux-node1 ~]# cd docker/ [root@linux-node1 docker]# mkdir system [root@linux-node1 docker]# mkdir runtime [root@linux-node1 docker]# mkdir app [root@linux-node1 docker]# cd system/ [root@linux-node1 system]# mkdir centos [root@linux-node1 system]# mkdir ubuntu [root@linux-node1 system]# mkdir centos-ssh [root@linux-node1 system]# cd ../runtime/ [root@linux-node1 runtime]# mkdir php [root@linux-node1 runtime]# mkdir java [root@linux-node1 runtime]# mkdir python [root@linux-node1 runtime]# cd ../app/ [root@linux-node1 app]# mkdir xxx.api [root@linux-node1 app]# mkdir xxx.admin [root@linux-node1 docker]# tree . . \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 xxx.admin \u2502 \u2514\u2500\u2500 xxx.api \u251c\u2500\u2500 runtime \u2502 \u251c\u2500\u2500 java \u2502 \u251c\u2500\u2500 php \u2502 \u2514\u2500\u2500 python \u2514\u2500\u2500 system \u251c\u2500\u2500 centos \u251c\u2500\u2500 centos-ssh \u2514\u2500\u2500 ubuntu \u6a21\u62df\u6848\u4f8b \u00b6 \u89c4\u5212\uff1a \u00b6 requirement.txt pip install -r requirement.txt \u521b\u5efadockerfile\u7136\u540ebuild\u955c\u50cf \u6784\u5efa\u4e00\u4e2a\u57fa\u7840\u7684centos\u955c\u50cf \u00b6 [root@linux-node1 docker]# cd system/centos [root@linux-node1 centos]# pwd /root/docker/system/centos [root@linux-node1 centos]# wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo --2017-03-31 18:13:42-- http://mirrors.aliyun.com/repo/epel-7.repo \u6b63\u5728\u89e3\u6790\u4e3b\u673a mirrors.aliyun.com (mirrors.aliyun.com)... 115.28.122.210, 112.124.140.210 \u6b63\u5728\u8fde\u63a5 mirrors.aliyun.com (mirrors.aliyun.com)|115.28.122.210|:80... \u5df2\u8fde\u63a5\u3002 \u5df2\u53d1\u51fa HTTP \u8bf7\u6c42\uff0c\u6b63\u5728\u7b49\u5f85\u56de\u5e94... 200 OK \u957f\u5ea6\uff1a1084 (1.1K) [application/octet-stream] \u6b63\u5728\u4fdd\u5b58\u81f3: \u201c/etc/yum.repos.d/epel.repo\u201d 100%[====================================================================================>] 1,084 --.-K/s \u7528\u65f6 0s 2017-03-31 18:13:42 (16.7 MB/s) - \u5df2\u4fdd\u5b58 \u201c/etc/yum.repos.d/epel.repo\u201d [1084/1084]) [root@linux-node1 centos]# cp /etc/yum.repos.d/epel.repo . [root@linux-node1 centos]# vim Dockerfile # Docker for CentOS FROM centos MAINTAINER lamber 1020561033@qq.com # EPEL ADD epel.repo /etc/yum.repos.d/ # Base pkg RUN yum install -y wget mysql-devel supervisor git redis tree net-tools sudo psmisc && yum clean all [root@linux-node1 centos]# docker build -t lamber/centos:base . [root@linux-node1 centos]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/centos base 6a427d784875 6 seconds ago 283.1 MB mynginx v2 5104f2ed9887 42 minutes ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 About an hour ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u518d\u521b\u5efa\u8fd0\u884c\u73af\u5883\u7684\u65f6\u5019\u5c31\u5e94\u8be5from\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u7684\u955c\u50cf\u4e86\uff1a [root@linux-node1 python]# cat Dockerfile FROM lamber/centos:base MAINTAINER lamber 1020561033@qq.com # Python env RUN yum install -y python-devel python-pip supervisor # Upgrade pip RUN pip install --upgrade pip \u8fd9\u91cc\u5f15\u7528\u7684\u5c31\u662f\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u597d\u7684\u955c\u50cf\u3002 \u6784\u5efadocker\u955c\u50cf [root@linux-node1 python]# docker build -t lamber/python . [root@linux-node1 app]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/python latest 94747e30d7b4 2 minutes ago 413.3 MB lamber/centos base 6a427d784875 About an hour ago 283.1 MB mynginx v2 5104f2ed9887 2 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 2 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u6784\u5efa\u4e00\u4e2a\u5e26ssh\u7684centos docker\u955c\u50cf \u00b6 [root@linux-node1 centos-ssh]# pwd /root/docker/system/centos-ssh [root@linux-node1 centos-ssh]# cat Dockerfile # Docker for CentOS FROM centos MAINTAINER lamber 1020561033@qq.com # EPEL ADD epel.repo /etc/yum.repos.d/ # Base pkg RUN yum install -y openssh-clients openssl-devel openssh-server wget mysql-devel supervisor git redis tree net-tools sudo psmisc && yum clean all # For SSHD RUN ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key RUN ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key RUN echo \"root:redhat\" | chpasswd [root@linux-node1 centos-ssh]# docker build -t lamber/centos-ssh . [root@linux-node1 centos-ssh]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/centos-ssh latest 41db0593e915 2 minutes ago 284.1 MB lamber/python latest 94747e30d7b4 16 minutes ago 413.3 MB lamber/centos base 6a427d784875 About an hour ago 283.1 MB mynginx v2 5104f2ed9887 2 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 3 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u90e8\u7f72\u73af\u5883\u5c42\uff1a [root@linux-node1 runtime]# cp -r python/ python-ssh [root@linux-node1 runtime]# ll \u603b\u7528\u91cf 0 drwxr-xr-x 2 root root 6 3\u6708 31 18:08 java drwxr-xr-x 2 root root 6 3\u6708 31 18:08 php drwxr-xr-x 2 root root 24 3\u6708 31 19:52 python drwxr-xr-x 2 root root 24 3\u6708 31 22:39 python-ssh [root@linux-node1 runtime]# cd python [root@linux-node1 python]# cat Dockerfile FROM lamber/centos-ssh MAINTAINER lamber 1020561033@qq.com # Python env RUN yum install -y python-devel python-pip supervisor # Upgrade pip RUN pip install --upgrade pip [root@linux-node1 python]# docker build -t lamber/python-ssh . [root@linux-node1 python]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/python-ssh latest 657b57f25bdd 24 seconds ago 414.3 MB lamber/centos-ssh latest 41db0593e915 2 hours ago 284.1 MB lamber/python latest 94747e30d7b4 2 hours ago 413.3 MB lamber/centos base 6a427d784875 4 hours ago 283.1 MB mynginx v2 5104f2ed9887 5 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 5 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u90e8\u7f72\u5e94\u7528\u5c42\uff1a \u6d4b\u8bd5\u811a\u672c\uff1a [root@linux-node1 shop-api]# pwd /root/docker/app/shop-api [root@linux-node1 shop-api]# cat app.py from flask import Flask app = Flask(__name__) @app.route('/') def hello(): return 'Hello World!' if __name__ == \"__main__\": app.run(host=\"0.0.0.0\", debug=True) \u6d4b\u8bd5\u811a\u672c\u5728\u672c\u673a\u8fdb\u884c\u6d4b\u8bd5\uff08\u8981\u9996\u5148\u786e\u4fdd\u672c\u5730\u8dd1\u6ca1\u95ee\u9898\uff0c\u7136\u540e\u518d\u5c01\u88c5\u8fdbdocker\u955c\u50cf\u91cc\u9762\u53bb\uff09\uff1a [root@linux-node1 shop-api]# yum -y install python-pip [root@linux-node1 python-ssh]# pip install flask [root@linux-node1 shop-api]# python app.py * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit) * Restarting with stat * Debugger is active! * Debugger PIN: 248-731-527 \u8d77\u5230\u4e865000\u7aef\u53e3\uff0c\u8bbf\u95ee\u6d4b\u8bd5 [root@linux-node1 shop-api]# curl 127.0.0.1:5000 Hello World! \u521b\u5efaDockerfile\uff1a [root@linux-node1 shop-api]# cat Dockerfile #Base image FROM lamber/python-ssh #Maintainer MAINTAINER lamber 1020561033@qq.com # Add www user RUN useradd -s /sbin/nologin -M www # ADD file ADD app.py /opt/app.py ADD requirements.txt /opt/ ADD supervisord.conf /etc/supervisord.conf ADD app-supervisor.ini /etc/supervisord.d/ # pip RUN /usr/bin/pip2.7 install -r /opt/requirements.txt # Port EXPOSE 22 5000 #CMD CMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisord.conf\"] ##\u6709\u53c2\u6570\u662f\u4e0a\u9762\u8fd9\u79cd\u5199\u6cd5 \u521b\u5efasupervisor\u7684\u914d\u7f6e\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# cat app-supervisor.ini [program:shop-api] command=/usr/bin/python2.7 /opt/app.py process_name=%(program_name)s autostart=true user=www stdout_logfile=/tmp/app.log stderr_logfile=/tmp/app.error [program:sshd] command=/usr/sbin/sshd -D process_name=%(program_name)s autostart=true \u521b\u5efa\u4f9d\u8d56\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# cat requirements.txt flask \u4fee\u6539supervisor.conf\u7684\u914d\u7f6e\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# cat supervisord.conf | grep nodaemon nodaemon=true ; (start in foreground if true;default false) \u5c06nodaemon\u6539\u4e3atrue\uff0c\u8fd9\u6837supervisor\u5c31\u5728\u524d\u53f0\u8fd0\u884c\u4e86\uff0c\u5982\u6b64\u521b\u5efa\u5bb9\u5668\u4ee5\u540e\u5c31\u80fd\u8d77\u6765\u4e86\u3002 \u8865\u5168\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# ll \u603b\u7528\u91cf 24 -rw-r--r-- 1 root root 172 9\u6708 10 2016 app.py -rw-r--r-- 1 root root 257 9\u6708 10 2016 app-supervisor.ini -rw-r--r-- 1 root root 433 9\u6708 10 2016 Dockerfile -rw-r--r-- 1 root root 6 9\u6708 10 2016 requirements.txt -rw-r--r-- 1 root root 7952 9\u6708 10 2016 supervisord.conf \u751f\u6210docker\u955c\u50cf\uff1a [root@linux-node1 shop-api]# docker build -t lamber/shop-api . [root@linux-node1 shop-api]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/shop-api latest 9a9470aa92eb 32 seconds ago 420.3 MB lamber/python-ssh latest f1c4bcf54bad 19 minutes ago 414.3 MB lamber/python latest 570e81c8e8bf 23 minutes ago 413.3 MB lamber/centos-ssh latest 41db0593e915 3 hours ago 284.1 MB lamber/centos base 6a427d784875 4 hours ago 283.1 MB mynginx v2 5104f2ed9887 5 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 6 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u542f\u52a8\u955c\u50cf\u5bb9\u5668\uff1a [root@linux-node1 shop-api]# docker run --name shop-api -d -p 88:5000 -p 8022:22 lamber/shop-api f38807176f44970632f0156bd02a614c102343749a627a1eb945a6e745c2e95b [root@linux-node1 shop-api]# docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES f38807176f44 lamber/shop-api \"/usr/bin/supervisord\" 7 seconds ago Up 6 seconds 0.0.0.0:8022->22/tcp, 0.0.0.0:88->5000/tcp shop-api a1efc632ba6d mynginx:v2 \"nginx\" 5 hours ago Up 5 hours 0.0.0.0:82->80/tcp mynginxv2 604ac1c6443a nginx/mynginx:v1 \"nginx\" 6 hours ago Up 6 hours 0.0.0.0:81->80/tcp mynginxv1 \u6d4b\u8bd5\u7ed3\u679c\uff1a [root@linux-node1 shop-api]# curl 127.0.0.1:88 Hello World! [root@linux-node1 shop-api]# /root/docker_in.sh shop-api [root@f38807176f44 /]# ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0.0 0.5 117256 14796 ? Ss 15:21 0:00 /usr/bin/python /usr/bin/supervisord -c /etc/supervisord.con root 7 0.0 0.1 82524 3592 ? S 15:21 0:00 /usr/sbin/sshd -D www 8 0.0 0.6 119760 17328 ? S 15:21 0:00 /usr/bin/python2.7 /opt/app.py www 13 0.6 0.6 196036 18052 ? Sl 15:21 0:02 /usr/bin/python2.7 /opt/app.py root 19 0.0 0.0 15172 1896 ? S 15:27 0:00 -bash root 32 0.0 0.0 50844 1700 ? R+ 15:27 0:00 ps aux \u8bbf\u95ee\u5bb9\u5668\u768422\u7aef\u53e3\uff1a \u5bc6\u7801\u5c31\u662f\u6211\u4eec\u5728\u521b\u5efacentos-ssh\u65f6\u5019\u6307\u5b9a\u7684root\uff1aredhat \u603b\u7ed3 \u00b6 \u8fd9\u5c31\u662f\u5206\u5c42\u7684\u4fbf\u5229\u6027\uff0c\u751f\u4ea7\u60c5\u51b5\u4e0b\u90fd\u662f\u4f7f\u7528supervisor\u6765\u542f\u52a8\uff0c\u5373\u4f7f\u662f\u4e00\u4e2a\u4e5f\u8981\u7528supervisor\u6765\u542f\u52a8\uff0cpython\u7684\u4f9d\u8d56\u6587\u4ef6\u8981\u5199\u597d\u3002\u5b9e\u9645\u751f\u4ea7\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5728\u771f\u673a\u4e0a\u6d4b\u8bd5\u597d\u4e86\u7136\u540e\u518d\u8fdb\u884c\u955c\u50cf\u7684\u5c01\u88c5\u3002 [root@linux-node1 docker]# tree . \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 shop-api \u2502 \u2502 \u251c\u2500\u2500 app.py \u2502 \u2502 \u251c\u2500\u2500 app-supervisor.ini \u2502 \u2502 \u251c\u2500\u2500 Dockerfile \u2502 \u2502 \u251c\u2500\u2500 requirements.txt \u2502 \u2502 \u2514\u2500\u2500 supervisord.conf \u2502 \u251c\u2500\u2500 xxx.admin \u2502 \u2514\u2500\u2500 xxx.api \u251c\u2500\u2500 runtime \u2502 \u251c\u2500\u2500 java \u2502 \u251c\u2500\u2500 php \u2502 \u251c\u2500\u2500 python \u2502 \u2502 \u2514\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 python-ssh \u2502 \u2514\u2500\u2500 Dockerfile \u2514\u2500\u2500 system \u251c\u2500\u2500 centos \u2502 \u251c\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 epel.repo \u251c\u2500\u2500 centos-ssh \u2502 \u251c\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 epel.repo \u2514\u2500\u2500 ubuntu \u4f7f\u7528supervisor\u7ba1\u7406\u8fdb\u7a0b \u00b6 \u53c2\u8003\u6587\u6863 \u00b6 http://supervisord.org/ http://liyangliang.me/posts/2015/06/using-supervisor/ \u5b89\u88c5supervisor [root@linux-node1 ~]# yum install supervisor -y [root@linux-node1 ~]# rpm -ql supervisor | head -2 /etc/logrotate.d/supervisor /etc/supervisord.conf [root@linux-node1 ~]# tail -2 /etc/supervisord.conf [include] files = supervisord.d/*.ini [program:sshd] command=/usr/sbin/sshd -D process_name=%(program_name)s autostart=true # docker\u5bb9\u5668\u7edf\u4e00\u4f7f\u7528supervisor\u8fdb\u884c\u7ba1\u7406\uff0c\u662f\u7ba1\u7406\u64cd\u4f5c\u6807\u51c6\u5316\u8d77\u6765\u3002 [root@6dd90ccf92d0 ~]# ps -ef UID PID PPID C STIME TTY TIME CMD root 1 0 0 18:01 ? 00:00:00 /usr/bin/python /usr/bin/supervisord -c / root 7 1 0 18:01 ? 00:00:00 /usr/sbin/sshd -D root 8 7 0 18:02 ? 00:00:00 sshd: root@pts/0 root 10 8 0 18:02 pts/0 00:00:00 -bash root 23 10 0 18:03 pts/0 00:00:00 ps -ef [root@6dd90ccf92d0 ~]# supervisorctl status sshd RUNNING pid 7, uptime 0:01:28","title":"Docker\u955c\u50cf\u751f\u4ea7\u89c4\u5212\u4e0e\u5b9e\u6218"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#docker","text":"\u516c\u5f00\u7684dockerfile\uff1a https://github.com/dockerfile","title":"Docker\u955c\u50cf\u751f\u4ea7\u89c4\u5212\u4e0e\u5b9e\u6218"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#_1","text":"A(\u7cfb\u7edf\u5c42)-->B(\u8fd0\u884c\u73af\u5883\u5c42)-->C(\u5e94\u7528\u670d\u52a1\u5c42) [root@linux-node1 ~]# mkdir docker [root@linux-node1 ~]# cd docker/ [root@linux-node1 docker]# mkdir system [root@linux-node1 docker]# mkdir runtime [root@linux-node1 docker]# mkdir app [root@linux-node1 docker]# cd system/ [root@linux-node1 system]# mkdir centos [root@linux-node1 system]# mkdir ubuntu [root@linux-node1 system]# mkdir centos-ssh [root@linux-node1 system]# cd ../runtime/ [root@linux-node1 runtime]# mkdir php [root@linux-node1 runtime]# mkdir java [root@linux-node1 runtime]# mkdir python [root@linux-node1 runtime]# cd ../app/ [root@linux-node1 app]# mkdir xxx.api [root@linux-node1 app]# mkdir xxx.admin [root@linux-node1 docker]# tree . . \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 xxx.admin \u2502 \u2514\u2500\u2500 xxx.api \u251c\u2500\u2500 runtime \u2502 \u251c\u2500\u2500 java \u2502 \u251c\u2500\u2500 php \u2502 \u2514\u2500\u2500 python \u2514\u2500\u2500 system \u251c\u2500\u2500 centos \u251c\u2500\u2500 centos-ssh \u2514\u2500\u2500 ubuntu","title":"\u5206\u5c42\u7684\u8bbe\u8ba1"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#_2","text":"","title":"\u6a21\u62df\u6848\u4f8b"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#_3","text":"requirement.txt pip install -r requirement.txt \u521b\u5efadockerfile\u7136\u540ebuild\u955c\u50cf","title":"\u89c4\u5212\uff1a"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#centos","text":"[root@linux-node1 docker]# cd system/centos [root@linux-node1 centos]# pwd /root/docker/system/centos [root@linux-node1 centos]# wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo --2017-03-31 18:13:42-- http://mirrors.aliyun.com/repo/epel-7.repo \u6b63\u5728\u89e3\u6790\u4e3b\u673a mirrors.aliyun.com (mirrors.aliyun.com)... 115.28.122.210, 112.124.140.210 \u6b63\u5728\u8fde\u63a5 mirrors.aliyun.com (mirrors.aliyun.com)|115.28.122.210|:80... \u5df2\u8fde\u63a5\u3002 \u5df2\u53d1\u51fa HTTP \u8bf7\u6c42\uff0c\u6b63\u5728\u7b49\u5f85\u56de\u5e94... 200 OK \u957f\u5ea6\uff1a1084 (1.1K) [application/octet-stream] \u6b63\u5728\u4fdd\u5b58\u81f3: \u201c/etc/yum.repos.d/epel.repo\u201d 100%[====================================================================================>] 1,084 --.-K/s \u7528\u65f6 0s 2017-03-31 18:13:42 (16.7 MB/s) - \u5df2\u4fdd\u5b58 \u201c/etc/yum.repos.d/epel.repo\u201d [1084/1084]) [root@linux-node1 centos]# cp /etc/yum.repos.d/epel.repo . [root@linux-node1 centos]# vim Dockerfile # Docker for CentOS FROM centos MAINTAINER lamber 1020561033@qq.com # EPEL ADD epel.repo /etc/yum.repos.d/ # Base pkg RUN yum install -y wget mysql-devel supervisor git redis tree net-tools sudo psmisc && yum clean all [root@linux-node1 centos]# docker build -t lamber/centos:base . [root@linux-node1 centos]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/centos base 6a427d784875 6 seconds ago 283.1 MB mynginx v2 5104f2ed9887 42 minutes ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 About an hour ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u518d\u521b\u5efa\u8fd0\u884c\u73af\u5883\u7684\u65f6\u5019\u5c31\u5e94\u8be5from\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u7684\u955c\u50cf\u4e86\uff1a [root@linux-node1 python]# cat Dockerfile FROM lamber/centos:base MAINTAINER lamber 1020561033@qq.com # Python env RUN yum install -y python-devel python-pip supervisor # Upgrade pip RUN pip install --upgrade pip \u8fd9\u91cc\u5f15\u7528\u7684\u5c31\u662f\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u597d\u7684\u955c\u50cf\u3002 \u6784\u5efadocker\u955c\u50cf [root@linux-node1 python]# docker build -t lamber/python . [root@linux-node1 app]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/python latest 94747e30d7b4 2 minutes ago 413.3 MB lamber/centos base 6a427d784875 About an hour ago 283.1 MB mynginx v2 5104f2ed9887 2 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 2 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB","title":"\u6784\u5efa\u4e00\u4e2a\u57fa\u7840\u7684centos\u955c\u50cf"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#sshcentos-docker","text":"[root@linux-node1 centos-ssh]# pwd /root/docker/system/centos-ssh [root@linux-node1 centos-ssh]# cat Dockerfile # Docker for CentOS FROM centos MAINTAINER lamber 1020561033@qq.com # EPEL ADD epel.repo /etc/yum.repos.d/ # Base pkg RUN yum install -y openssh-clients openssl-devel openssh-server wget mysql-devel supervisor git redis tree net-tools sudo psmisc && yum clean all # For SSHD RUN ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key RUN ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key RUN echo \"root:redhat\" | chpasswd [root@linux-node1 centos-ssh]# docker build -t lamber/centos-ssh . [root@linux-node1 centos-ssh]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/centos-ssh latest 41db0593e915 2 minutes ago 284.1 MB lamber/python latest 94747e30d7b4 16 minutes ago 413.3 MB lamber/centos base 6a427d784875 About an hour ago 283.1 MB mynginx v2 5104f2ed9887 2 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 3 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u90e8\u7f72\u73af\u5883\u5c42\uff1a [root@linux-node1 runtime]# cp -r python/ python-ssh [root@linux-node1 runtime]# ll \u603b\u7528\u91cf 0 drwxr-xr-x 2 root root 6 3\u6708 31 18:08 java drwxr-xr-x 2 root root 6 3\u6708 31 18:08 php drwxr-xr-x 2 root root 24 3\u6708 31 19:52 python drwxr-xr-x 2 root root 24 3\u6708 31 22:39 python-ssh [root@linux-node1 runtime]# cd python [root@linux-node1 python]# cat Dockerfile FROM lamber/centos-ssh MAINTAINER lamber 1020561033@qq.com # Python env RUN yum install -y python-devel python-pip supervisor # Upgrade pip RUN pip install --upgrade pip [root@linux-node1 python]# docker build -t lamber/python-ssh . [root@linux-node1 python]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/python-ssh latest 657b57f25bdd 24 seconds ago 414.3 MB lamber/centos-ssh latest 41db0593e915 2 hours ago 284.1 MB lamber/python latest 94747e30d7b4 2 hours ago 413.3 MB lamber/centos base 6a427d784875 4 hours ago 283.1 MB mynginx v2 5104f2ed9887 5 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 5 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u90e8\u7f72\u5e94\u7528\u5c42\uff1a \u6d4b\u8bd5\u811a\u672c\uff1a [root@linux-node1 shop-api]# pwd /root/docker/app/shop-api [root@linux-node1 shop-api]# cat app.py from flask import Flask app = Flask(__name__) @app.route('/') def hello(): return 'Hello World!' if __name__ == \"__main__\": app.run(host=\"0.0.0.0\", debug=True) \u6d4b\u8bd5\u811a\u672c\u5728\u672c\u673a\u8fdb\u884c\u6d4b\u8bd5\uff08\u8981\u9996\u5148\u786e\u4fdd\u672c\u5730\u8dd1\u6ca1\u95ee\u9898\uff0c\u7136\u540e\u518d\u5c01\u88c5\u8fdbdocker\u955c\u50cf\u91cc\u9762\u53bb\uff09\uff1a [root@linux-node1 shop-api]# yum -y install python-pip [root@linux-node1 python-ssh]# pip install flask [root@linux-node1 shop-api]# python app.py * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit) * Restarting with stat * Debugger is active! * Debugger PIN: 248-731-527 \u8d77\u5230\u4e865000\u7aef\u53e3\uff0c\u8bbf\u95ee\u6d4b\u8bd5 [root@linux-node1 shop-api]# curl 127.0.0.1:5000 Hello World! \u521b\u5efaDockerfile\uff1a [root@linux-node1 shop-api]# cat Dockerfile #Base image FROM lamber/python-ssh #Maintainer MAINTAINER lamber 1020561033@qq.com # Add www user RUN useradd -s /sbin/nologin -M www # ADD file ADD app.py /opt/app.py ADD requirements.txt /opt/ ADD supervisord.conf /etc/supervisord.conf ADD app-supervisor.ini /etc/supervisord.d/ # pip RUN /usr/bin/pip2.7 install -r /opt/requirements.txt # Port EXPOSE 22 5000 #CMD CMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisord.conf\"] ##\u6709\u53c2\u6570\u662f\u4e0a\u9762\u8fd9\u79cd\u5199\u6cd5 \u521b\u5efasupervisor\u7684\u914d\u7f6e\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# cat app-supervisor.ini [program:shop-api] command=/usr/bin/python2.7 /opt/app.py process_name=%(program_name)s autostart=true user=www stdout_logfile=/tmp/app.log stderr_logfile=/tmp/app.error [program:sshd] command=/usr/sbin/sshd -D process_name=%(program_name)s autostart=true \u521b\u5efa\u4f9d\u8d56\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# cat requirements.txt flask \u4fee\u6539supervisor.conf\u7684\u914d\u7f6e\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# cat supervisord.conf | grep nodaemon nodaemon=true ; (start in foreground if true;default false) \u5c06nodaemon\u6539\u4e3atrue\uff0c\u8fd9\u6837supervisor\u5c31\u5728\u524d\u53f0\u8fd0\u884c\u4e86\uff0c\u5982\u6b64\u521b\u5efa\u5bb9\u5668\u4ee5\u540e\u5c31\u80fd\u8d77\u6765\u4e86\u3002 \u8865\u5168\u6587\u4ef6\uff1a [root@linux-node1 shop-api]# ll \u603b\u7528\u91cf 24 -rw-r--r-- 1 root root 172 9\u6708 10 2016 app.py -rw-r--r-- 1 root root 257 9\u6708 10 2016 app-supervisor.ini -rw-r--r-- 1 root root 433 9\u6708 10 2016 Dockerfile -rw-r--r-- 1 root root 6 9\u6708 10 2016 requirements.txt -rw-r--r-- 1 root root 7952 9\u6708 10 2016 supervisord.conf \u751f\u6210docker\u955c\u50cf\uff1a [root@linux-node1 shop-api]# docker build -t lamber/shop-api . [root@linux-node1 shop-api]# docker images REPOSITORY TAG IMAGE ID CREATED SIZE lamber/shop-api latest 9a9470aa92eb 32 seconds ago 420.3 MB lamber/python-ssh latest f1c4bcf54bad 19 minutes ago 414.3 MB lamber/python latest 570e81c8e8bf 23 minutes ago 413.3 MB lamber/centos-ssh latest 41db0593e915 3 hours ago 284.1 MB lamber/centos base 6a427d784875 4 hours ago 283.1 MB mynginx v2 5104f2ed9887 5 hours ago 280.7 MB nginx/mynginx v1 81f1607bb8a0 6 hours ago 355 MB docker.io/nginx latest 5e69fe4b3c31 3 days ago 182.5 MB docker.io/centos latest 98d35105a391 2 weeks ago 192.5 MB \u542f\u52a8\u955c\u50cf\u5bb9\u5668\uff1a [root@linux-node1 shop-api]# docker run --name shop-api -d -p 88:5000 -p 8022:22 lamber/shop-api f38807176f44970632f0156bd02a614c102343749a627a1eb945a6e745c2e95b [root@linux-node1 shop-api]# docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES f38807176f44 lamber/shop-api \"/usr/bin/supervisord\" 7 seconds ago Up 6 seconds 0.0.0.0:8022->22/tcp, 0.0.0.0:88->5000/tcp shop-api a1efc632ba6d mynginx:v2 \"nginx\" 5 hours ago Up 5 hours 0.0.0.0:82->80/tcp mynginxv2 604ac1c6443a nginx/mynginx:v1 \"nginx\" 6 hours ago Up 6 hours 0.0.0.0:81->80/tcp mynginxv1 \u6d4b\u8bd5\u7ed3\u679c\uff1a [root@linux-node1 shop-api]# curl 127.0.0.1:88 Hello World! [root@linux-node1 shop-api]# /root/docker_in.sh shop-api [root@f38807176f44 /]# ps aux USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 1 0.0 0.5 117256 14796 ? Ss 15:21 0:00 /usr/bin/python /usr/bin/supervisord -c /etc/supervisord.con root 7 0.0 0.1 82524 3592 ? S 15:21 0:00 /usr/sbin/sshd -D www 8 0.0 0.6 119760 17328 ? S 15:21 0:00 /usr/bin/python2.7 /opt/app.py www 13 0.6 0.6 196036 18052 ? Sl 15:21 0:02 /usr/bin/python2.7 /opt/app.py root 19 0.0 0.0 15172 1896 ? S 15:27 0:00 -bash root 32 0.0 0.0 50844 1700 ? R+ 15:27 0:00 ps aux \u8bbf\u95ee\u5bb9\u5668\u768422\u7aef\u53e3\uff1a \u5bc6\u7801\u5c31\u662f\u6211\u4eec\u5728\u521b\u5efacentos-ssh\u65f6\u5019\u6307\u5b9a\u7684root\uff1aredhat","title":"\u6784\u5efa\u4e00\u4e2a\u5e26ssh\u7684centos docker\u955c\u50cf"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#_4","text":"\u8fd9\u5c31\u662f\u5206\u5c42\u7684\u4fbf\u5229\u6027\uff0c\u751f\u4ea7\u60c5\u51b5\u4e0b\u90fd\u662f\u4f7f\u7528supervisor\u6765\u542f\u52a8\uff0c\u5373\u4f7f\u662f\u4e00\u4e2a\u4e5f\u8981\u7528supervisor\u6765\u542f\u52a8\uff0cpython\u7684\u4f9d\u8d56\u6587\u4ef6\u8981\u5199\u597d\u3002\u5b9e\u9645\u751f\u4ea7\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5728\u771f\u673a\u4e0a\u6d4b\u8bd5\u597d\u4e86\u7136\u540e\u518d\u8fdb\u884c\u955c\u50cf\u7684\u5c01\u88c5\u3002 [root@linux-node1 docker]# tree . \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 shop-api \u2502 \u2502 \u251c\u2500\u2500 app.py \u2502 \u2502 \u251c\u2500\u2500 app-supervisor.ini \u2502 \u2502 \u251c\u2500\u2500 Dockerfile \u2502 \u2502 \u251c\u2500\u2500 requirements.txt \u2502 \u2502 \u2514\u2500\u2500 supervisord.conf \u2502 \u251c\u2500\u2500 xxx.admin \u2502 \u2514\u2500\u2500 xxx.api \u251c\u2500\u2500 runtime \u2502 \u251c\u2500\u2500 java \u2502 \u251c\u2500\u2500 php \u2502 \u251c\u2500\u2500 python \u2502 \u2502 \u2514\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 python-ssh \u2502 \u2514\u2500\u2500 Dockerfile \u2514\u2500\u2500 system \u251c\u2500\u2500 centos \u2502 \u251c\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 epel.repo \u251c\u2500\u2500 centos-ssh \u2502 \u251c\u2500\u2500 Dockerfile \u2502 \u2514\u2500\u2500 epel.repo \u2514\u2500\u2500 ubuntu","title":"\u603b\u7ed3"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#supervisor","text":"","title":"\u4f7f\u7528supervisor\u7ba1\u7406\u8fdb\u7a0b"},{"location":"docker/02-Docker\u8fdb\u9636/01-Docker\u955c\u50cf\u751f\u4ea7\u5b9e\u6218/#_5","text":"http://supervisord.org/ http://liyangliang.me/posts/2015/06/using-supervisor/ \u5b89\u88c5supervisor [root@linux-node1 ~]# yum install supervisor -y [root@linux-node1 ~]# rpm -ql supervisor | head -2 /etc/logrotate.d/supervisor /etc/supervisord.conf [root@linux-node1 ~]# tail -2 /etc/supervisord.conf [include] files = supervisord.d/*.ini [program:sshd] command=/usr/sbin/sshd -D process_name=%(program_name)s autostart=true # docker\u5bb9\u5668\u7edf\u4e00\u4f7f\u7528supervisor\u8fdb\u884c\u7ba1\u7406\uff0c\u662f\u7ba1\u7406\u64cd\u4f5c\u6807\u51c6\u5316\u8d77\u6765\u3002 [root@6dd90ccf92d0 ~]# ps -ef UID PID PPID C STIME TTY TIME CMD root 1 0 0 18:01 ? 00:00:00 /usr/bin/python /usr/bin/supervisord -c / root 7 1 0 18:01 ? 00:00:00 /usr/sbin/sshd -D root 8 7 0 18:02 ? 00:00:00 sshd: root@pts/0 root 10 8 0 18:02 pts/0 00:00:00 -bash root 23 10 0 18:03 pts/0 00:00:00 ps -ef [root@6dd90ccf92d0 ~]# supervisorctl status sshd RUNNING pid 7, uptime 0:01:28","title":"\u53c2\u8003\u6587\u6863"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/","text":"Docker-Registry \u00b6 DockerFile\u5efa\u8bae\u901a\u8fc7git\u6765\u4fdd\u5b58\uff0c \u5b9e\u9a8c\u73af\u5883\u53ef\u4ee5\u64cd\u4f5c\u7684\uff0c\u751f\u4ea7\u4e0d\u5efa\u8bae\u8fd9\u6837\u53bb\u64cd\u4f5c\u7684\u5185\u5bb9\uff1a \u5bb9\u5668\u505c\u6b62\u540e\u5c31\u81ea\u52a8\u5220\u9664\uff1adocker run \u2014rm centos /bin/echo \"hello world\" \u6740\u6b7b\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u670d\u52a1\u5668\uff1adocker kill $(docker ps -a -q) \u5220\u9664\u6240\u6709\u5df2\u7ecf\u505c\u6b62\u7684\u5bb9\u5668\uff1adocker rm $(docker ps -a -q) \u5220\u9664\u6240\u6709\u672a\u6253\u6807\u7b7e\u7684\u955c\u50cf\uff1adocker rmi $(docker images -q -f dangling=true) Docker registry\u529f\u80fd\u6bd4\u8f83\u5355\u4e00\uff0c\u6ca1\u6709web\u754c\u9762\u3002 Nginx + Docker registry \u9a8c\u8bc1https\uff08\u81ea\u7b7e\u540d\u8bc1\u4e66\uff09\uff1a \u624b\u52a8\u521b\u5efa\u8bc1\u4e66 [ root@localhost registry ] # openssl req -x509 -days 3650 -nodes -newkey rsa:2048 -keyout ./docker-registry.key -out ./docker-registry.crt Generating a 2048 bit RSA private key ...............................................................+++ ...+++ writing new private key to './docker-registry.key' ----- You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter '.' , the field will be left blank. ----- Country Name ( 2 letter code ) [ XX ] : State or Province Name ( full name ) [] : Locality Name ( eg, city ) [ Default City ] : Organization Name ( eg, company ) [ Default Company Ltd ] : Organizational Unit Name ( eg, section ) [] : Common Name ( eg, your name or your server ' s hostname ) [] :reg.unixhot.com Email Address [] : [ root@localhost registry ] # ll \u603b\u7528\u91cf 8 -rw-r--r--. 1 root root 1289 5\u6708 11 20 :39 docker-registry.crt -rw-r--r--. 1 root root 1708 5\u6708 11 20 :39 docker-registry.key \u5b89\u88c5httpd-tools htpasswd\u5b9e\u73b0\u9a8c\u8bc1\u529f\u80fd # htpasswd\u662fhttpd-tools\u5de5\u5177\u96c6\u4e2d\u7684\u5de5\u5177\uff0c\u56e0\u6b64\u9996\u5148\u8981\u5b89\u88c5httpd-tools yum install -y httpd-tools # \u521b\u5efa\u4f7f\u7528-c\u53c2\u6570\uff0c\u52a0\u5bc6\u7801\u4e0d\u8981\u4f7f\u7528-c\uff0c\u6307\u5b9a\u7528\u6237\u4e3ademo [ root@localhost registry ] # htpasswd -c /opt/registry/docker-registry.htpasswd demo New password: Re-type new password: Adding password for user demo nginx proxy https \uff08\u6709\u4e00\u4e2a\u73b0\u6210\u7684\u955c\u50cf\uff09\uff0c\u542f\u52a8\u4e00\u4e2adocker-registry\u7684\u5bb9\u5668\uff0cproxy\u5230\u8fd9\u91cc\u3002 # --link\u53ef\u4ee5\u8ba9\u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u4e92\u8bbf docker run -d -p 443 :443 \\ --name docker-registry-proxy \\ -e REGISTRY_HOST = \"docker-registry\" \\ -e REGISTRY_PORT = \"5000\" \\ -e SERVER_NAME = \"reg.unixhot.com\" \\ --link docker-registry:docker-registry \\ -v /opt/registry/docker-registry.htpasswd:/etc/nginx/.htpasswd:ro \\ -v /opt/registry:/etc/nginx/ssl:ro \\ containersol/docker-registry-proxy docker \u914d\u7f6e\u4f7f\u7528\u8bc1\u4e66 # \u5728/etc/hosts\u4e2d\u9488\u5bf9reg.unixhot.com\u505a\u57df\u540d\u7684\u6620\u5c04 192 .168.56.101 reg.unixhot.com # \u914d\u7f6edocker\u4f7f\u7528\u8bc1\u4e66\uff0c\u5982\u679c\u8bf4\u4e0d\u4e70\u8bc1\u4e66\u7684\u8bdd\u90a3\u4e48\u6240\u6709\u7684\u9700\u8981\u8fde\u63a5\u7684\u670d\u52a1\u5668\u90fd\u8981\u914d\u7f6e\u8fd9\u4e00\u90e8\u5206 # \u5c06\u81ea\u7b7e\u540d\u8bc1\u4e66\u653e\u5230/etc/docker\u4e0b\u9762 cd /etc/docker mkdir -p certs.d/reg.unixhot.com cd certs.d/reg.unixhot.com cp /opt/registry/docker-registry.crt ca.crt # \u68c0\u6d4bdocker\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u767b\u5f55 [ root@localhost ~ ] # docker login reg.unixhot.com Username: demo Password: Login Succeeded \u767b\u5f55\uff0cpush\u955c\u50cf # Push\u955c\u50cf\u7b2c\u4e00\u4ef6\u9700\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u6253\u6807\u7b7e\uff0c\u8fd9\u4e2a\u6807\u7b7e\u662f\u7ed9docker\u5165\u5e93\u6211\u4eec\u521b\u5efa\u8fd9\u4e2aregistry\u7684\u65f6\u5019\u6253\u7684\u6807\u7b7e [ root@localhost ~ ] # docker tag unixhot/centos reg.unixhot.com/unixhot/centos # push\u955c\u50cf\u5230\u4ed3\u5e93 [ root@localhost ~ ] # docker push reg.unixhot.com/unixhot/centos The push refers to repository [ reg.unixhot.com/unixhot/centos ] 1e11f9cfa6aa: Pushed 43e653f84b79: Pushed latest: digest: sha256:e0bf9b8009fdea481f4546d7139aa3beeabbe799d489843f1c6a61339ef11271 size: 3768 \u67e5\u770b\uff0c\u4f20\u4e0a\u53bb\u4e86\u4ee5\u540e\u53ea\u80fd\u901a\u8fc7\u63d0\u4f9b\u7684api\u8fdb\u884c\u67e5\u770b\u3002 # \u4f7f\u7528docker images\u4e5f\u80fd\u67e5\u770b\u5230 [ root@localhost ~ ] # curl -X GET https://demo:demo@reg.unixhot.com/v2/_catalog -k { \"repositories\" : [ \"unixhot/centos\" ]} \u5982\u679c\u662f\u8d2d\u4e70\u7684\u8bc1\u4e66\u7684\u8bdd\u53ea\u9700\u8981\u4e0a\u8ff0\u7684\u7b2c\u4e8c\u6b65\u548c\u7b2c\u4e09\u6b65\u4ee5\u53ca\u7b2c\u4e94\u6b65\u5373\u53ef\u3002\u624b\u52a8\u521b\u5efa\u548c\u914d\u7f6edocker\u4f7f\u7528\u8bc1\u4e66\u5c31\u8fc7\u4e86\u3002 [ root@localhost opt ] # mkdir registry [ root@localhost opt ] # cd registry/ [ root@localhost registry ] # docker run -d --name docker-registry -v /opt/registry/:/tmp/registry-dev registry:2.2.1 Unable to find image 'registry:2.2.1' locally 2 .2.1: Pulling from library/registry 8387d9ff0016: Pull complete 3b52deaaf0ed: Pull complete 4bd501fad6de: Pull complete a3ed95caeb02: Pull complete b1f99b5938be: Pull complete 82c34c0ec017: Pull complete 5426c0c1c293: Pull complete Digest: sha256:30adb707d1b4d2ad694c38da3ea1e7d303fdbdce2538ab0372afe6f1523ae3c8 Status: Downloaded newer image for registry:2.2.1 4b19999b188ce8ed1a0ea7eab52c36a9a3e17ce78147f24a99d04d39624d9d87 \u4f7f\u7528Habor\u6784\u5efa\u4f01\u4e1a\u7ea7Docker Registry \u00b6 Harbor\u662f\u4e00\u4e2a\u4f01\u4e1a\u7ea7Registry\u670d\u52a1\u3002\u5b83\u5bf9\u5f00\u6e90\u7684Docker Registry\u670d\u52a1\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u6dfb\u52a0\u4e86\u66f4\u591a\u4f01\u4e1a\u7528\u6237\u9700\u8981\u7684\u529f\u80fd\u3002Harbor\u88ab\u8bbe\u8ba1\u7528\u4e8e\u90e8\u7f72\u4e00\u5957\u7ec4\u7ec7\u5185\u90e8\u4f7f\u7528\u7684\u79c1\u6709\u73af\u5883\uff0c\u8fd9\u4e2a\u79c1\u6709Registry\u670d\u52a1\u5bf9\u4e8e\u975e\u5e38\u5173\u5fc3\u5b89\u5168 \u7684\u7ec4\u7ec7\u6765\u8bf4\u662f\u5341\u5206\u91cd\u8981\u7684\u3002\u53e6\u5916\uff0c\u79c1\u6709Registry\u670d\u52a1\u53ef\u4ee5\u901a\u8fc7\u907f\u514d\u4ece\u516c\u57df\u7f51\u4e0b\u8f7d\u955c\u50cf\u800c\u63d0\u9ad8\u4f01\u4e1a\u751f\u4ea7\u529b\u3002\u8fd9\u5bf9\u4e8e\u6ca1\u6709\u826f\u597d\u7684Internet\u8fde\u63a5\u72b6\u6001\uff0c\u4f7f\u7528Docker Container\u7684\u7528\u6237\u662f\u4e00\u4e2a\u798f\u97f3\u3002 Harbor\u662fVMware\u516c\u53f8\u6700\u8fd1\u5f00\u6e90\u7684\u4f01\u4e1a\u7ea7Docker Registry\u9879\u76ee( https://github.com/vmware/harbor ) \u3002\u5176\u76ee\u6807\u662f\u5e2e\u52a9\u7528\u6237\u8fc5\u901f\u642d\u5efa\u4e00\u4e2a\u4f01\u4e1a\u7ea7\u7684Docker registry\u670d\u52a1\u3002\u5b83\u63d0\u4f9b\u4e86\u7ba1\u7406UI, \u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236(Role Based Access Control)\uff0cAD/LDAP\u96c6\u6210\u3001\u4ee5\u53ca\u5ba1\u8ba1\u65e5\u5fd7(Audit logging) \u7b49\u4f01\u4e1a\u7528\u6237\u9700\u6c42\u7684\u529f\u80fd\uff0c\u540c\u65f6\u8fd8\u539f\u751f\u652f\u6301\u4e2d\u6587\u3002Harbor\u7684\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u662f\u4ee5Docker\u5bb9\u5668\u7684\u5f62\u5f0f\u6784\u5efa\u7684\uff0c\u4f7f\u7528Docker Compose\u6765\u5bf9\u5b83\u8fdb\u884c\u90e8\u7f72\u3002 Harbor\u9879\u76ee\u4f7f\u7528\u4e86go\u8bed\u8a00\u5f00\u53d1\uff0cWEB\u6846\u67b6\u91c7\u7528beego\u3002\u5bb9\u5668\u5e94\u7528\u7684\u5f00\u53d1\u548c\u8fd0\u884c\u79bb\u4e0d\u5f00\u53ef\u9760\u7684\u955c\u50cf\u7ba1\u7406\u3002\u4ece\u5b89\u5168\u548c\u6548\u7387\u7b49\u65b9\u9762\u8003\u8651\uff0c\u5728\u4f01\u4e1a\u79c1\u6709\u73af\u5883\u5185\u90e8\u7f72\u7684Registry\u670d\u52a1\u662f\u975e\u5e38\u5fc5\u8981\u7684\u3002 Harbor( https://github.com/vmware/harbor)\u7531VMware\u4e2d\u56fd\u7814\u53d1\u56e2\u961f\u4e3a\u4f01\u4e1a\u7528\u6237\u8bbe\u8ba1\u7684Registry Server\u5f00\u6e90\u9879\u76ee\uff0c\u5305\u62ec\u4e86\u6743\u9650\u7ba1\u7406(RBAC)\u3001\u56fe\u5f62\u7ba1\u7406\u754c\u9762\u3001LDAP/AD\u96c6\u6210\u3001\u5ba1\u8ba1\u3001\u81ea\u6211\u6ce8\u518c\u3001HA\u7b49\u4f01\u4e1a\u5fc5\u9700\u7684\u529f\u80fd\uff0c\u540c\u65f6\u9488\u5bf9\u4e2d\u56fd\u7528\u6237\u7684\u7279\u70b9\uff0c\u539f\u751f\u652f\u6301\u4e2d\u6587\uff0c\u5e76\u8ba1\u5212\u5b9e\u73b0\u955c\u50cf\u590d\u5236(roadmap)\u7b49\u529f\u80fd\u3002 \u53ef\u53c2\u8003\u5185\u5bb9\uff1a http://www.jiagoumi.com/work/1221.html \u5b89\u88c5Docker-compose \u00b6 # \u5b89\u88c5\u8fc7\u7a0b\u4e2d\u8981\u7528\u5230docker-compose\uff0c\u8fd9\u4e2a\u73a9\u610f\u662f\u7528python\u5199\u7684\uff0c\u6240\u4ee5\u7528pip\u6765\u5b89\u88c5 yum -y install python-pip pip install docker-compose \u7531\u4e8e\u56fd\u5185\u7f51\u901f\u7684\u95ee\u9898\u8fd9\u91cc\u6211\u4e0b\u8f7d\u4e86harbor\u7684\u79bb\u7ebf\u5305\uff0c\u79bb\u7ebf\u5305\u5305\u542b\u4e86\u6240\u9700\u7684\u6240\u6709\u9700\u8981\u5728\u7ebf\u4e0b\u8f7d\u7684\u955c\u50cf\u5305\uff0c\u7701\u53bb\u4e86\u5f88\u591a\u9ebb\u70e6\u7684\u4e8b\u60c5\u3002 \u5b98\u65b9\u4e0b\u8f7d\u70b9 & \u767e\u5ea6\u4e91\u4e0b\u8f7d\u70b9 \u3010\u63d0\u53d6\u7801\uff1a5n52\u3011 \u5b89\u88c5\u8fc7\u7a0b\u5c31\u5f02\u5e38\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u7167\u7740 \u5b98\u65b9\u6587\u6863 \u76f4\u63a5\u53bb\u64cd\u4f5c\uff0c\u5b98\u65b9\u6587\u6863\u8be6\u7ec6\u7684\u4ecb\u7ecd\u4e86\uff0c\u6211\u4eec\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9700\u8981\u8c03\u6574\u7684\u5185\u5bb9\u3002\u8fd9\u91cc\u5176\u5b9e\u5c31\u662f\u7b80\u5355\u7684\u8bbe\u7f6e\u4e00\u4e0b \u4fee\u6539harbor.cfg \u00b6 \u8fd9\u91cc\u6211\u53ea\u7b80\u5355\u7684\u4fee\u6539\u4e863\u4e2a\u914d\u7f6e\uff0c\u5177\u4f53\u7684\u914d\u7f6e\u5728\u5b98\u65b9\u6587\u6863\u4e2d\uff0c\u6709\u975e\u5e38\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u8be6\u7ec6\u5230\u4ecb\u7ecd\u6bcf\u4e00\u4e2a\u914d\u7f6e\u9879\uff0c\u5927\u5bb6\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u53bb\u4ed4\u7ec6\u67e5\u770b # \u4fee\u6539harbor\u7ba1\u7406\u53f0UI\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u4e0d\u8981\u7528localhost\u6216\u8005127.0.0.1\u8fd9\u79cd\u672c\u5730\u7684\u5730\u5740\uff0c\u56e0\u4e3a\u8981\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1 hostname = reg.unixhot.com # \u914d\u7f6e\u8bbf\u95ee\u7684\u65b9\u5f0f\u4e3ahttps\uff0c\u5982\u679c\u662f\u81ea\u5df1\u5728\u6d4b\u8bd5\u673a\u4e0a\u641e\u7684\u8bdd\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528http\uff0c\u4f46\u662f\u751f\u4ea7\u5efa\u8bae\u52a1\u5fc5\u4f7f\u7528https ui_url_protocol = https # \u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\u4fee\u6539\u4e00\u4e0bharbor\u7684admin\u767b\u5f55\u5bc6\u7801 harbor_admin_password = Harbor12345 \u521d\u59cb\u5316\u76f8\u5173\u914d\u7f6e\u6587\u4ef6\uff1a ./prepare \u8fd0\u884cinstall\u811a\u672c\u8fdb\u884c\u5b89\u88c5\u90e8\u7f72harbor\uff1a # \u5728\u7ebf\u5b89\u88c5\u7684\u8fc7\u7a0b\u592a\u75db\u82e6\u4e86\uff0c\u76f4\u63a5clone\u4e0b\u6765\u7684\u5305docker-compose.yml\u4e2d\u4e0d\u77e5\u9053\u4e3a\u5565\uff0c\u6240\u6709registry\u91cc\u9762\u7684\u955c\u50cf\u7684tag\u90fd\u662f__version__\u5bfc\u81f4\u4e0b\u8f7d\u7684\u65f6\u5019\u76f4\u63a5\u627e\u4e0d\u5230\u5bf9\u5e94\u7684version\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u53ea\u80fd\u624b\u52a8\u6539\u624d\u884c\u3002 ./install.sh \u81f3\u6b64\u4e3a\u6b62\u5b89\u88c5\u8fc7\u7a0b\u5c31\u7ed3\u675f\u4e86\uff0c\u79bb\u7ebf\u7248\u672c\u5305\u7684\u5b89\u88c5\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u4e00\u6b65\u4e00\u6b65\u7684\u64cd\u4f5c\u5373\u53ef\uff0c\u7ba1\u7406\u7684\u8bdd\u9700\u8981\u4f7f\u7528docker-compose\u6765\u8fdb\u884c\u7ba1\u7406\u3002 \u914d\u7f6eSSL \u00b6 \u8fd9\u91cc\u6a21\u62df\u4f7f\u7528https\u6765\u8fdb\u884c\u8bbf\u95ee\uff0c\u76ee\u524d\u5e76\u6ca1\u6709\u8d2d\u4e70\u8bc1\u4e66\uff0c\u56e0\u6b64\u6211\u4eec\u81ea\u5df1\u53ea\u80fd\u521b\u5efa\u81ea\u7b7e\u540d\u8bc1\u4e66\u6765\u6a21\u62df\u8fd9\u4e2a\u73af\u5883\u3002\u5173\u4e8e\u81ea\u7b7e\u540d\u8bc1\u4e66\u7684\u914d\u7f6e\u5b98\u65b9\u4e5f\u662f\u6709\u6559\u7a0b\u7684\uff0c\u76f4\u63a5\u6309\u7167\u6559\u7a0b\u53bb\u505a\u5c31\u53ef\u4ee5\u4e86\u3002 \u8df3\u8f6c\u94fe\u63a5 \u5177\u4f53\u7684\u8bf4\u660e\u5c31\u4e0d\u5728\u8fd9\u91cc\u8d58\u8ff0\u4e86\uff0c\u8981\u770b\u8bf4\u660e\u53ef\u4ee5\u770b\u5b98\u65b9\u6587\u6863\uff0c\u8fd9\u91cc\u53ea\u662f\u4f53\u73b0\u547d\u4ee4 openssl req -newkey rsa:4096 -nodes -sha256 -keyout ca.key -x509 -days 365 -out ca.crt openssl req -newkey rsa:4096 -nodes -sha256 -keyout yourdomain.com.key -out reg.unixhot.com.csr openssl x509 -req -days 365 -in reg.unixhot.com.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out reg.unixhot.com.crt \u67e5\u770bharbor.cfg\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684ssl\u8bc1\u4e66\u7684\u4f4d\u7f6e\uff1a #The path of cert and key files for nginx, they are applied only the protocol is set to https ssl_cert = /data/cert/server.crt ssl_cert_key = /data/cert/server.key \u7531\u4e8e\u662f\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6211\u4e5f\u5c31\u6ca1\u6539\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u628a\u6211\u4eec\u751f\u6210\u7684key\u653e\u5230/data/cert/\u4e0b\u5e76\u4e14\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u91cd\u547d\u540d\u4e3aserver\uff0c\u6ce8\u610f\u8fd9\u91cc\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u6211\u56fe\u7701\u4e8b\u6ca1\u6709\u53bb\u52a8\u914d\u7f6e\u6587\u4ef6\u3002 [ root@localhost ~ ] # ll /data/cert/ total 8 -rw-r--r--. 1 root root 1866 May 12 13 :22 server.crt -rw-r--r--. 1 root root 3272 May 12 13 :22 server.key \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a ./prepare docker-compose down # \u542f\u52a8harbor docker-compose up -d \u6d4b\u8bd5\u4e00\u4e0b\uff1a # \u8fd9\u91cc\u6d4b\u8bd5\u6210\u529f\u4ee5\u540e\u6211\u4eec\u4e5f\u5c31\u53ef\u4ee5\u5728\u7f51\u9875\u7aef\u8bbf\u95ee\u6d4b\u8bd5\u4e86\u3002 [ root@localhost harbor ] # docker login reg.unixhot.com Username ( admin ) : admin Password: Login Succeeded Push\u955c\u50cf\u6d4b\u8bd5 \u00b6 \u5c06server.crt\u590d\u5236\u5230/etc/docker/cert.d/reg.unixhot.com\u76ee\u5f55\u4e0b\uff0c\u76ee\u5f55\u6ca1\u6709\u81ea\u5df1\u65b0\u5efa\u4e00\u4e2a\uff1a [ root@localhost reg.unixhot.com ] # pwd /etc/docker/certs.d/reg.unixhot.com [ root@localhost reg.unixhot.com ] # ll total 4 -rw-r--r--. 1 root root 1866 May 12 14 :25 server.crt \u5728web\u7aefHarbor\u4e2d\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\u660e\u4e3aexercise push\u955c\u50cf\uff1a [ root@localhost reg.unixhot.com ] # docker login reg.unixhot.com -uadmin -pHarbor12345 WARNING! Using --password via the CLI is insecure. Use --password-stdin. Login Succeeded # \u9996\u5148\u8bb0\u5f97\u6253\u6807\u7b7e\uff0cdocker tag src dst # dockerhub\u57df\u540d/\u9879\u76ee\u540d/\u955c\u50cf\u540d:TAG [ root@localhost reg.unixhot.com ] # docker tag unixhot/centos reg.unixhot.com/exercise/centos [ root@localhost reg.unixhot.com ] # docker push reg.unixhot.com/exercise/centos The push refers to repository [ reg.unixhot.com/exercise/centos ] 1e11f9cfa6aa: Pushed 43e653f84b79: Pushed latest: digest: sha256:792ead7dcec256fc00102cd0dd505c11b54a906ff2df2c090be972a92976ebc7 size: 741 \u5728\u7f51\u9875\u7aef\u67e5\u770b\uff0c\u5c31\u80fd\u770b\u5230\u6211\u4eec\u7684\u955c\u50cf\u4e86\u3002 \u4eceHarbor\u628a\u955c\u50cf\u7ed9Pull\u4e0b\u6765\u6d4b\u8bd5\uff1a [ root@localhost ~ ] # docker pull reg.unixhot.com/exercise/centos:latest latest: Pulling from exercise/centos 469cfcc7a4b3: Already exists 6863d4929975: Pull complete Digest: sha256:792ead7dcec256fc00102cd0dd505c11b54a906ff2df2c090be972a92976ebc7 Status: Downloaded newer image for reg.unixhot.com/exercise/centos:latest \u6d4b\u8bd5\u6210\u529f\u3002","title":"Docker-Registry"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/#docker-registry","text":"DockerFile\u5efa\u8bae\u901a\u8fc7git\u6765\u4fdd\u5b58\uff0c \u5b9e\u9a8c\u73af\u5883\u53ef\u4ee5\u64cd\u4f5c\u7684\uff0c\u751f\u4ea7\u4e0d\u5efa\u8bae\u8fd9\u6837\u53bb\u64cd\u4f5c\u7684\u5185\u5bb9\uff1a \u5bb9\u5668\u505c\u6b62\u540e\u5c31\u81ea\u52a8\u5220\u9664\uff1adocker run \u2014rm centos /bin/echo \"hello world\" \u6740\u6b7b\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u670d\u52a1\u5668\uff1adocker kill $(docker ps -a -q) \u5220\u9664\u6240\u6709\u5df2\u7ecf\u505c\u6b62\u7684\u5bb9\u5668\uff1adocker rm $(docker ps -a -q) \u5220\u9664\u6240\u6709\u672a\u6253\u6807\u7b7e\u7684\u955c\u50cf\uff1adocker rmi $(docker images -q -f dangling=true) Docker registry\u529f\u80fd\u6bd4\u8f83\u5355\u4e00\uff0c\u6ca1\u6709web\u754c\u9762\u3002 Nginx + Docker registry \u9a8c\u8bc1https\uff08\u81ea\u7b7e\u540d\u8bc1\u4e66\uff09\uff1a \u624b\u52a8\u521b\u5efa\u8bc1\u4e66 [ root@localhost registry ] # openssl req -x509 -days 3650 -nodes -newkey rsa:2048 -keyout ./docker-registry.key -out ./docker-registry.crt Generating a 2048 bit RSA private key ...............................................................+++ ...+++ writing new private key to './docker-registry.key' ----- You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter '.' , the field will be left blank. ----- Country Name ( 2 letter code ) [ XX ] : State or Province Name ( full name ) [] : Locality Name ( eg, city ) [ Default City ] : Organization Name ( eg, company ) [ Default Company Ltd ] : Organizational Unit Name ( eg, section ) [] : Common Name ( eg, your name or your server ' s hostname ) [] :reg.unixhot.com Email Address [] : [ root@localhost registry ] # ll \u603b\u7528\u91cf 8 -rw-r--r--. 1 root root 1289 5\u6708 11 20 :39 docker-registry.crt -rw-r--r--. 1 root root 1708 5\u6708 11 20 :39 docker-registry.key \u5b89\u88c5httpd-tools htpasswd\u5b9e\u73b0\u9a8c\u8bc1\u529f\u80fd # htpasswd\u662fhttpd-tools\u5de5\u5177\u96c6\u4e2d\u7684\u5de5\u5177\uff0c\u56e0\u6b64\u9996\u5148\u8981\u5b89\u88c5httpd-tools yum install -y httpd-tools # \u521b\u5efa\u4f7f\u7528-c\u53c2\u6570\uff0c\u52a0\u5bc6\u7801\u4e0d\u8981\u4f7f\u7528-c\uff0c\u6307\u5b9a\u7528\u6237\u4e3ademo [ root@localhost registry ] # htpasswd -c /opt/registry/docker-registry.htpasswd demo New password: Re-type new password: Adding password for user demo nginx proxy https \uff08\u6709\u4e00\u4e2a\u73b0\u6210\u7684\u955c\u50cf\uff09\uff0c\u542f\u52a8\u4e00\u4e2adocker-registry\u7684\u5bb9\u5668\uff0cproxy\u5230\u8fd9\u91cc\u3002 # --link\u53ef\u4ee5\u8ba9\u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u4e92\u8bbf docker run -d -p 443 :443 \\ --name docker-registry-proxy \\ -e REGISTRY_HOST = \"docker-registry\" \\ -e REGISTRY_PORT = \"5000\" \\ -e SERVER_NAME = \"reg.unixhot.com\" \\ --link docker-registry:docker-registry \\ -v /opt/registry/docker-registry.htpasswd:/etc/nginx/.htpasswd:ro \\ -v /opt/registry:/etc/nginx/ssl:ro \\ containersol/docker-registry-proxy docker \u914d\u7f6e\u4f7f\u7528\u8bc1\u4e66 # \u5728/etc/hosts\u4e2d\u9488\u5bf9reg.unixhot.com\u505a\u57df\u540d\u7684\u6620\u5c04 192 .168.56.101 reg.unixhot.com # \u914d\u7f6edocker\u4f7f\u7528\u8bc1\u4e66\uff0c\u5982\u679c\u8bf4\u4e0d\u4e70\u8bc1\u4e66\u7684\u8bdd\u90a3\u4e48\u6240\u6709\u7684\u9700\u8981\u8fde\u63a5\u7684\u670d\u52a1\u5668\u90fd\u8981\u914d\u7f6e\u8fd9\u4e00\u90e8\u5206 # \u5c06\u81ea\u7b7e\u540d\u8bc1\u4e66\u653e\u5230/etc/docker\u4e0b\u9762 cd /etc/docker mkdir -p certs.d/reg.unixhot.com cd certs.d/reg.unixhot.com cp /opt/registry/docker-registry.crt ca.crt # \u68c0\u6d4bdocker\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u767b\u5f55 [ root@localhost ~ ] # docker login reg.unixhot.com Username: demo Password: Login Succeeded \u767b\u5f55\uff0cpush\u955c\u50cf # Push\u955c\u50cf\u7b2c\u4e00\u4ef6\u9700\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u6253\u6807\u7b7e\uff0c\u8fd9\u4e2a\u6807\u7b7e\u662f\u7ed9docker\u5165\u5e93\u6211\u4eec\u521b\u5efa\u8fd9\u4e2aregistry\u7684\u65f6\u5019\u6253\u7684\u6807\u7b7e [ root@localhost ~ ] # docker tag unixhot/centos reg.unixhot.com/unixhot/centos # push\u955c\u50cf\u5230\u4ed3\u5e93 [ root@localhost ~ ] # docker push reg.unixhot.com/unixhot/centos The push refers to repository [ reg.unixhot.com/unixhot/centos ] 1e11f9cfa6aa: Pushed 43e653f84b79: Pushed latest: digest: sha256:e0bf9b8009fdea481f4546d7139aa3beeabbe799d489843f1c6a61339ef11271 size: 3768 \u67e5\u770b\uff0c\u4f20\u4e0a\u53bb\u4e86\u4ee5\u540e\u53ea\u80fd\u901a\u8fc7\u63d0\u4f9b\u7684api\u8fdb\u884c\u67e5\u770b\u3002 # \u4f7f\u7528docker images\u4e5f\u80fd\u67e5\u770b\u5230 [ root@localhost ~ ] # curl -X GET https://demo:demo@reg.unixhot.com/v2/_catalog -k { \"repositories\" : [ \"unixhot/centos\" ]} \u5982\u679c\u662f\u8d2d\u4e70\u7684\u8bc1\u4e66\u7684\u8bdd\u53ea\u9700\u8981\u4e0a\u8ff0\u7684\u7b2c\u4e8c\u6b65\u548c\u7b2c\u4e09\u6b65\u4ee5\u53ca\u7b2c\u4e94\u6b65\u5373\u53ef\u3002\u624b\u52a8\u521b\u5efa\u548c\u914d\u7f6edocker\u4f7f\u7528\u8bc1\u4e66\u5c31\u8fc7\u4e86\u3002 [ root@localhost opt ] # mkdir registry [ root@localhost opt ] # cd registry/ [ root@localhost registry ] # docker run -d --name docker-registry -v /opt/registry/:/tmp/registry-dev registry:2.2.1 Unable to find image 'registry:2.2.1' locally 2 .2.1: Pulling from library/registry 8387d9ff0016: Pull complete 3b52deaaf0ed: Pull complete 4bd501fad6de: Pull complete a3ed95caeb02: Pull complete b1f99b5938be: Pull complete 82c34c0ec017: Pull complete 5426c0c1c293: Pull complete Digest: sha256:30adb707d1b4d2ad694c38da3ea1e7d303fdbdce2538ab0372afe6f1523ae3c8 Status: Downloaded newer image for registry:2.2.1 4b19999b188ce8ed1a0ea7eab52c36a9a3e17ce78147f24a99d04d39624d9d87","title":"Docker-Registry"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/#habordocker-registry","text":"Harbor\u662f\u4e00\u4e2a\u4f01\u4e1a\u7ea7Registry\u670d\u52a1\u3002\u5b83\u5bf9\u5f00\u6e90\u7684Docker Registry\u670d\u52a1\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u6dfb\u52a0\u4e86\u66f4\u591a\u4f01\u4e1a\u7528\u6237\u9700\u8981\u7684\u529f\u80fd\u3002Harbor\u88ab\u8bbe\u8ba1\u7528\u4e8e\u90e8\u7f72\u4e00\u5957\u7ec4\u7ec7\u5185\u90e8\u4f7f\u7528\u7684\u79c1\u6709\u73af\u5883\uff0c\u8fd9\u4e2a\u79c1\u6709Registry\u670d\u52a1\u5bf9\u4e8e\u975e\u5e38\u5173\u5fc3\u5b89\u5168 \u7684\u7ec4\u7ec7\u6765\u8bf4\u662f\u5341\u5206\u91cd\u8981\u7684\u3002\u53e6\u5916\uff0c\u79c1\u6709Registry\u670d\u52a1\u53ef\u4ee5\u901a\u8fc7\u907f\u514d\u4ece\u516c\u57df\u7f51\u4e0b\u8f7d\u955c\u50cf\u800c\u63d0\u9ad8\u4f01\u4e1a\u751f\u4ea7\u529b\u3002\u8fd9\u5bf9\u4e8e\u6ca1\u6709\u826f\u597d\u7684Internet\u8fde\u63a5\u72b6\u6001\uff0c\u4f7f\u7528Docker Container\u7684\u7528\u6237\u662f\u4e00\u4e2a\u798f\u97f3\u3002 Harbor\u662fVMware\u516c\u53f8\u6700\u8fd1\u5f00\u6e90\u7684\u4f01\u4e1a\u7ea7Docker Registry\u9879\u76ee( https://github.com/vmware/harbor ) \u3002\u5176\u76ee\u6807\u662f\u5e2e\u52a9\u7528\u6237\u8fc5\u901f\u642d\u5efa\u4e00\u4e2a\u4f01\u4e1a\u7ea7\u7684Docker registry\u670d\u52a1\u3002\u5b83\u63d0\u4f9b\u4e86\u7ba1\u7406UI, \u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236(Role Based Access Control)\uff0cAD/LDAP\u96c6\u6210\u3001\u4ee5\u53ca\u5ba1\u8ba1\u65e5\u5fd7(Audit logging) \u7b49\u4f01\u4e1a\u7528\u6237\u9700\u6c42\u7684\u529f\u80fd\uff0c\u540c\u65f6\u8fd8\u539f\u751f\u652f\u6301\u4e2d\u6587\u3002Harbor\u7684\u6bcf\u4e2a\u7ec4\u4ef6\u90fd\u662f\u4ee5Docker\u5bb9\u5668\u7684\u5f62\u5f0f\u6784\u5efa\u7684\uff0c\u4f7f\u7528Docker Compose\u6765\u5bf9\u5b83\u8fdb\u884c\u90e8\u7f72\u3002 Harbor\u9879\u76ee\u4f7f\u7528\u4e86go\u8bed\u8a00\u5f00\u53d1\uff0cWEB\u6846\u67b6\u91c7\u7528beego\u3002\u5bb9\u5668\u5e94\u7528\u7684\u5f00\u53d1\u548c\u8fd0\u884c\u79bb\u4e0d\u5f00\u53ef\u9760\u7684\u955c\u50cf\u7ba1\u7406\u3002\u4ece\u5b89\u5168\u548c\u6548\u7387\u7b49\u65b9\u9762\u8003\u8651\uff0c\u5728\u4f01\u4e1a\u79c1\u6709\u73af\u5883\u5185\u90e8\u7f72\u7684Registry\u670d\u52a1\u662f\u975e\u5e38\u5fc5\u8981\u7684\u3002 Harbor( https://github.com/vmware/harbor)\u7531VMware\u4e2d\u56fd\u7814\u53d1\u56e2\u961f\u4e3a\u4f01\u4e1a\u7528\u6237\u8bbe\u8ba1\u7684Registry Server\u5f00\u6e90\u9879\u76ee\uff0c\u5305\u62ec\u4e86\u6743\u9650\u7ba1\u7406(RBAC)\u3001\u56fe\u5f62\u7ba1\u7406\u754c\u9762\u3001LDAP/AD\u96c6\u6210\u3001\u5ba1\u8ba1\u3001\u81ea\u6211\u6ce8\u518c\u3001HA\u7b49\u4f01\u4e1a\u5fc5\u9700\u7684\u529f\u80fd\uff0c\u540c\u65f6\u9488\u5bf9\u4e2d\u56fd\u7528\u6237\u7684\u7279\u70b9\uff0c\u539f\u751f\u652f\u6301\u4e2d\u6587\uff0c\u5e76\u8ba1\u5212\u5b9e\u73b0\u955c\u50cf\u590d\u5236(roadmap)\u7b49\u529f\u80fd\u3002 \u53ef\u53c2\u8003\u5185\u5bb9\uff1a http://www.jiagoumi.com/work/1221.html","title":"\u4f7f\u7528Habor\u6784\u5efa\u4f01\u4e1a\u7ea7Docker Registry"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/#docker-compose","text":"# \u5b89\u88c5\u8fc7\u7a0b\u4e2d\u8981\u7528\u5230docker-compose\uff0c\u8fd9\u4e2a\u73a9\u610f\u662f\u7528python\u5199\u7684\uff0c\u6240\u4ee5\u7528pip\u6765\u5b89\u88c5 yum -y install python-pip pip install docker-compose \u7531\u4e8e\u56fd\u5185\u7f51\u901f\u7684\u95ee\u9898\u8fd9\u91cc\u6211\u4e0b\u8f7d\u4e86harbor\u7684\u79bb\u7ebf\u5305\uff0c\u79bb\u7ebf\u5305\u5305\u542b\u4e86\u6240\u9700\u7684\u6240\u6709\u9700\u8981\u5728\u7ebf\u4e0b\u8f7d\u7684\u955c\u50cf\u5305\uff0c\u7701\u53bb\u4e86\u5f88\u591a\u9ebb\u70e6\u7684\u4e8b\u60c5\u3002 \u5b98\u65b9\u4e0b\u8f7d\u70b9 & \u767e\u5ea6\u4e91\u4e0b\u8f7d\u70b9 \u3010\u63d0\u53d6\u7801\uff1a5n52\u3011 \u5b89\u88c5\u8fc7\u7a0b\u5c31\u5f02\u5e38\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u7167\u7740 \u5b98\u65b9\u6587\u6863 \u76f4\u63a5\u53bb\u64cd\u4f5c\uff0c\u5b98\u65b9\u6587\u6863\u8be6\u7ec6\u7684\u4ecb\u7ecd\u4e86\uff0c\u6211\u4eec\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9700\u8981\u8c03\u6574\u7684\u5185\u5bb9\u3002\u8fd9\u91cc\u5176\u5b9e\u5c31\u662f\u7b80\u5355\u7684\u8bbe\u7f6e\u4e00\u4e0b","title":"\u5b89\u88c5Docker-compose"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/#harborcfg","text":"\u8fd9\u91cc\u6211\u53ea\u7b80\u5355\u7684\u4fee\u6539\u4e863\u4e2a\u914d\u7f6e\uff0c\u5177\u4f53\u7684\u914d\u7f6e\u5728\u5b98\u65b9\u6587\u6863\u4e2d\uff0c\u6709\u975e\u5e38\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u8be6\u7ec6\u5230\u4ecb\u7ecd\u6bcf\u4e00\u4e2a\u914d\u7f6e\u9879\uff0c\u5927\u5bb6\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u53bb\u4ed4\u7ec6\u67e5\u770b # \u4fee\u6539harbor\u7ba1\u7406\u53f0UI\u7684\u8bbf\u95ee\u5730\u5740\uff0c\u4e0d\u8981\u7528localhost\u6216\u8005127.0.0.1\u8fd9\u79cd\u672c\u5730\u7684\u5730\u5740\uff0c\u56e0\u4e3a\u8981\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1 hostname = reg.unixhot.com # \u914d\u7f6e\u8bbf\u95ee\u7684\u65b9\u5f0f\u4e3ahttps\uff0c\u5982\u679c\u662f\u81ea\u5df1\u5728\u6d4b\u8bd5\u673a\u4e0a\u641e\u7684\u8bdd\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528http\uff0c\u4f46\u662f\u751f\u4ea7\u5efa\u8bae\u52a1\u5fc5\u4f7f\u7528https ui_url_protocol = https # \u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\u4fee\u6539\u4e00\u4e0bharbor\u7684admin\u767b\u5f55\u5bc6\u7801 harbor_admin_password = Harbor12345 \u521d\u59cb\u5316\u76f8\u5173\u914d\u7f6e\u6587\u4ef6\uff1a ./prepare \u8fd0\u884cinstall\u811a\u672c\u8fdb\u884c\u5b89\u88c5\u90e8\u7f72harbor\uff1a # \u5728\u7ebf\u5b89\u88c5\u7684\u8fc7\u7a0b\u592a\u75db\u82e6\u4e86\uff0c\u76f4\u63a5clone\u4e0b\u6765\u7684\u5305docker-compose.yml\u4e2d\u4e0d\u77e5\u9053\u4e3a\u5565\uff0c\u6240\u6709registry\u91cc\u9762\u7684\u955c\u50cf\u7684tag\u90fd\u662f__version__\u5bfc\u81f4\u4e0b\u8f7d\u7684\u65f6\u5019\u76f4\u63a5\u627e\u4e0d\u5230\u5bf9\u5e94\u7684version\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u53ea\u80fd\u624b\u52a8\u6539\u624d\u884c\u3002 ./install.sh \u81f3\u6b64\u4e3a\u6b62\u5b89\u88c5\u8fc7\u7a0b\u5c31\u7ed3\u675f\u4e86\uff0c\u79bb\u7ebf\u7248\u672c\u5305\u7684\u5b89\u88c5\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u4e00\u6b65\u4e00\u6b65\u7684\u64cd\u4f5c\u5373\u53ef\uff0c\u7ba1\u7406\u7684\u8bdd\u9700\u8981\u4f7f\u7528docker-compose\u6765\u8fdb\u884c\u7ba1\u7406\u3002","title":"\u4fee\u6539harbor.cfg"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/#ssl","text":"\u8fd9\u91cc\u6a21\u62df\u4f7f\u7528https\u6765\u8fdb\u884c\u8bbf\u95ee\uff0c\u76ee\u524d\u5e76\u6ca1\u6709\u8d2d\u4e70\u8bc1\u4e66\uff0c\u56e0\u6b64\u6211\u4eec\u81ea\u5df1\u53ea\u80fd\u521b\u5efa\u81ea\u7b7e\u540d\u8bc1\u4e66\u6765\u6a21\u62df\u8fd9\u4e2a\u73af\u5883\u3002\u5173\u4e8e\u81ea\u7b7e\u540d\u8bc1\u4e66\u7684\u914d\u7f6e\u5b98\u65b9\u4e5f\u662f\u6709\u6559\u7a0b\u7684\uff0c\u76f4\u63a5\u6309\u7167\u6559\u7a0b\u53bb\u505a\u5c31\u53ef\u4ee5\u4e86\u3002 \u8df3\u8f6c\u94fe\u63a5 \u5177\u4f53\u7684\u8bf4\u660e\u5c31\u4e0d\u5728\u8fd9\u91cc\u8d58\u8ff0\u4e86\uff0c\u8981\u770b\u8bf4\u660e\u53ef\u4ee5\u770b\u5b98\u65b9\u6587\u6863\uff0c\u8fd9\u91cc\u53ea\u662f\u4f53\u73b0\u547d\u4ee4 openssl req -newkey rsa:4096 -nodes -sha256 -keyout ca.key -x509 -days 365 -out ca.crt openssl req -newkey rsa:4096 -nodes -sha256 -keyout yourdomain.com.key -out reg.unixhot.com.csr openssl x509 -req -days 365 -in reg.unixhot.com.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out reg.unixhot.com.crt \u67e5\u770bharbor.cfg\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684ssl\u8bc1\u4e66\u7684\u4f4d\u7f6e\uff1a #The path of cert and key files for nginx, they are applied only the protocol is set to https ssl_cert = /data/cert/server.crt ssl_cert_key = /data/cert/server.key \u7531\u4e8e\u662f\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6211\u4e5f\u5c31\u6ca1\u6539\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u628a\u6211\u4eec\u751f\u6210\u7684key\u653e\u5230/data/cert/\u4e0b\u5e76\u4e14\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u91cd\u547d\u540d\u4e3aserver\uff0c\u6ce8\u610f\u8fd9\u91cc\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u6211\u56fe\u7701\u4e8b\u6ca1\u6709\u53bb\u52a8\u914d\u7f6e\u6587\u4ef6\u3002 [ root@localhost ~ ] # ll /data/cert/ total 8 -rw-r--r--. 1 root root 1866 May 12 13 :22 server.crt -rw-r--r--. 1 root root 3272 May 12 13 :22 server.key \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a ./prepare docker-compose down # \u542f\u52a8harbor docker-compose up -d \u6d4b\u8bd5\u4e00\u4e0b\uff1a # \u8fd9\u91cc\u6d4b\u8bd5\u6210\u529f\u4ee5\u540e\u6211\u4eec\u4e5f\u5c31\u53ef\u4ee5\u5728\u7f51\u9875\u7aef\u8bbf\u95ee\u6d4b\u8bd5\u4e86\u3002 [ root@localhost harbor ] # docker login reg.unixhot.com Username ( admin ) : admin Password: Login Succeeded","title":"\u914d\u7f6eSSL"},{"location":"docker/02-Docker\u8fdb\u9636/02-Docker-registetry/#push","text":"\u5c06server.crt\u590d\u5236\u5230/etc/docker/cert.d/reg.unixhot.com\u76ee\u5f55\u4e0b\uff0c\u76ee\u5f55\u6ca1\u6709\u81ea\u5df1\u65b0\u5efa\u4e00\u4e2a\uff1a [ root@localhost reg.unixhot.com ] # pwd /etc/docker/certs.d/reg.unixhot.com [ root@localhost reg.unixhot.com ] # ll total 4 -rw-r--r--. 1 root root 1866 May 12 14 :25 server.crt \u5728web\u7aefHarbor\u4e2d\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\u660e\u4e3aexercise push\u955c\u50cf\uff1a [ root@localhost reg.unixhot.com ] # docker login reg.unixhot.com -uadmin -pHarbor12345 WARNING! Using --password via the CLI is insecure. Use --password-stdin. Login Succeeded # \u9996\u5148\u8bb0\u5f97\u6253\u6807\u7b7e\uff0cdocker tag src dst # dockerhub\u57df\u540d/\u9879\u76ee\u540d/\u955c\u50cf\u540d:TAG [ root@localhost reg.unixhot.com ] # docker tag unixhot/centos reg.unixhot.com/exercise/centos [ root@localhost reg.unixhot.com ] # docker push reg.unixhot.com/exercise/centos The push refers to repository [ reg.unixhot.com/exercise/centos ] 1e11f9cfa6aa: Pushed 43e653f84b79: Pushed latest: digest: sha256:792ead7dcec256fc00102cd0dd505c11b54a906ff2df2c090be972a92976ebc7 size: 741 \u5728\u7f51\u9875\u7aef\u67e5\u770b\uff0c\u5c31\u80fd\u770b\u5230\u6211\u4eec\u7684\u955c\u50cf\u4e86\u3002 \u4eceHarbor\u628a\u955c\u50cf\u7ed9Pull\u4e0b\u6765\u6d4b\u8bd5\uff1a [ root@localhost ~ ] # docker pull reg.unixhot.com/exercise/centos:latest latest: Pulling from exercise/centos 469cfcc7a4b3: Already exists 6863d4929975: Pull complete Digest: sha256:792ead7dcec256fc00102cd0dd505c11b54a906ff2df2c090be972a92976ebc7 Status: Downloaded newer image for reg.unixhot.com/exercise/centos:latest \u6d4b\u8bd5\u6210\u529f\u3002","title":"Push\u955c\u50cf\u6d4b\u8bd5"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/","text":"Kubernetes\u4e8c\u8fdb\u5236\u90e8\u7f72 \u00b6 \u6587\u6863\u65e5\u671f\uff1a2018\u5e7412\u670825\u65e5 \u8bb0\u5f55\u4eba\u5458\uff1alamber \u73af\u5883\u8bf4\u660e\uff1amaster\u8282\u70b9*3\uff0cnode\u8282\u70b9*2\uff0c\u4e09\u53f0master\u8282\u70b9\u505a\u8d1f\u8f7d\u5747\u8861\uff0c\u901a\u8fc7\u963f\u91cc\u4e91\u7684\u5185\u7f51SLB\u505a\u8d1f\u8f7d\uff0c\u6839\u636e\u9700\u8981\uff0cnode\u8282\u70b9\u53ef\u4ee5\u52a8\u6001\u7684\u8fdb\u884c\u6dfb\u52a0\u3002\u5f53\u524d\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\u56fe\uff1a IP\u5730\u5740\u5206\u914d \u00b6 Name IP Description Kubernetes Master HA 172.16.16.124\uff08VIP\uff09 master HA\u5730\u5740 Pro-k8s-master1 172.16.16.119 master-1 Pro-k8s-master2 172.16.16.120 master-2 Pro-k8s-master3 172.16.16.121 master-3 Pro-k8s-node1 172.16.16.122 node-1 Pro-k8s-node2 172.16.16.123 node-2 ETCD_NODE1 172.16.16.119 etcd cluster ETCD_NODE2 172.16.16.120 etcd cluster ETCD_NODE3 172.16.16.121 etcd cluster \u7cfb\u7edf\u521d\u59cb\u5316 \u00b6 \u5b89\u88c5\u90e8\u7f72Docker \u6307\u5b9a\u7248\u672c\u4e3a18.06.0-ce \uff0c\u5e76\u4fee\u6539Docker\u7684\u6570\u636e\u5b58\u653e\u4f4d\u7f6e\u4e3a /alidata/docker/ \u3002\uff08\u7565\uff09 \u51c6\u5907Kubernetes\u76841.12.3\u7684\u76f8\u5173\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5177\u4f53\u53ef\u53c2\u8003 CHANGELOG-1.12 \u3002\uff08\u7565\uff09 \u7cfb\u7edf\u4e3b\u673a\u540d\u521d\u59cb\u5316\uff0c\u4e3b\u673aSSH\u6388\u4fe1\u514d\u5bc6\u767b\u5f55\u3002\uff08\u7565\uff09 \u5173\u95edselinux\uff0c\u5173\u95ediptables\uff08firewalld\uff09\u3002 \u51c6\u5907\u90e8\u7f72\u76ee\u5f55\uff0c\u5e76\u628a/alidata/kubernetes/bin\u52a0\u5165\u5230\u73af\u5883\u53d8\u91cfPATH\u4e2d\u3002 mkdir -p /alidata/kubernetes/ { cfg,bin,ssl,log } \u624b\u52a8\u5236\u4f5cCA\u8bc1\u4e66 \u00b6 \u672c\u6b21\u751f\u6210\u8bc1\u4e66\u7684\u5de5\u5177\u91c7\u7528CFSSL\uff0cCFSSL\u662fCloudFlare\u5f00\u6e90\u7684\u4e00\u6b3ePKI/TLS\u5de5\u5177\u3002 CFSSL \u5305\u542b\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\u548c\u4e00\u4e2a\u7528\u4e8e\u7b7e\u540d\u7684\u5de5\u5177\uff0c\u9a8c\u8bc1\u5e76\u4e14\u6346\u7ed1TLS\u8bc1\u4e66\u7684 HTTP API \u670d\u52a1\u3002 \u4f7f\u7528Go\u8bed\u8a00\u7f16\u5199\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528json\u53bb\u5b9a\u4e49\u8bc1\u4e66\u76f8\u5173\u5185\u5bb9\uff0c\u770b\u8d77\u6765\u66f4\u52a0\u76f4\u89c2\u3002 CFSSL\u5305\u62ec\uff1a \u4e00\u7ec4\u7528\u4e8e\u751f\u6210\u81ea\u5b9a\u4e49 TLS PKI \u7684\u5de5\u5177 cfssl \u7a0b\u5e8f\uff0c\u662fCFSSL\u7684\u547d\u4ee4\u884c\u5de5\u5177 multirootca \u7a0b\u5e8f\u662f\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u7b7e\u540d\u5bc6\u94a5\u7684\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u670d\u52a1\u5668 mkbundle \u7a0b\u5e8f\u7528\u4e8e\u6784\u5efa\u8bc1\u4e66\u6c60 cfssljson \u7a0b\u5e8f\uff0c\u4ece cfssl \u548c multirootca \u7a0b\u5e8f\u83b7\u53d6JSON\u8f93\u51fa\uff0c\u5e76\u5c06\u8bc1\u4e66\uff0c\u5bc6\u94a5\uff0cCSR\u548cbundle\u5199\u5165\u78c1\u76d8 \u51c6\u5907cfssl\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 \u00b6 # \u4e0b\u8f7dcfssl\u4e8c\u8fdb\u5236\u6587\u4ef6 wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 chmod +x cfssl* mv cfssl-certinfo_linux-amd64 /alidata/kubernetes/bin/cfssl-certinfo mv cfssljson_linux-amd64 /alidata/kubernetes/bin/cfssljson mv cfssl_linux-amd64 /alidata/kubernetes/bin/cfssl # \u5206\u53d1\u5230\u6240\u6709\u7684k8s\u8282\u70b9\uff0c\u56e0\u4e3a\u8bbe\u7f6e\u4e86\u514d\u5bc6\u56e0\u6b64\u65e0\u9700\u8f93\u5165\u5bc6\u7801\uff0c\u5176\u4f59\u51e0\u4e2a\u8282\u70b9\u7684\u5206\u53d1\u7701\u7565\uff0c\u53ea\u5199\u4e00\u4e2a\u3002 scp /alidata/kubernetes/bin/cfssl* root@172.16.16.120:/alidata/kubernetes/bin/ \u521d\u59cb\u5316cfssl \u00b6 mkdir /alidata/src && cd /alidata/src cfssl print-defaults config > config.json cfssl print-defaults csr > csr.json \u521b\u5efa\u7528\u6765\u751f\u6210CA\u6587\u4ef6\u7684JSON\u914d\u7f6e\u6587\u4ef6 \u00b6 # \u8bc1\u4e66\u6709\u6548\u671f\u7ea6\u4e3a 10 \u5e74 [ root@Pro-k 8 s-master 1 /alidata/src/ssl ] # cat ca-config.json { \"signing\" : { \"default\" : { \"expiry\" : \"87600h\" }, \"profiles\" : { \"kubernetes\" : { \"usages\" : [ \"signing\" , \"key encipherment\" , \"server auth\" , \"client auth\" ], \"expiry\" : \"87600h\" } } } } \u521b\u5efa\u7528\u6765\u751f\u6210CA\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42\uff08CSR\uff09\u7684JSON\u914d\u7f6e\u6587\u4ef6 \u00b6 [ root@Pro-k 8 s-master 1 /alidata/src/ssl ] # cat ca-csr.json { \"CN\" : \"kubernetes\" , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 }, \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210CA\u8bc1\u4e66\uff08ca.pem\uff09\u548c\u5bc6\u94a5\uff08ca-key.pem\uff09 \u00b6 cfssl gencert -initca ca-csr.json | cfssljson -bare ca \u5206\u53d1\u8bc1\u4e66 \u00b6 cp ca.csr ca.pem ca-key.pem ca-config.json /alidata/kubernetes/ssl # \u5206\u53d1\u5230\u5176\u4ed6\u7684\u8282\u70b9 scp -P 5203 ca.csr ca.pem ca-key.pem ca-config.json 172 .16.16.120:/alidata/kubernetes/ssl ETCD\u96c6\u7fa4\u90e8\u7f72 \u00b6 \u672c\u6b21etcd\u96c6\u7fa4\u4e3b\u8981\u90e8\u7f72\u5728\u4e09\u4e2amaster\u8282\u70b9\uff0c\u540c\u65f6\u4e3a\u4e86\u65b9\u4fbf\u6269\u5c55\u56e0\u6b64\u5728\u5236\u4f5c\u8bc1\u4e66\u7684\u65f6\u5019\u5c31\u628a\u96c6\u7fa4\u6240\u6709\u7684ip\u90fd\u505a\u8fdb\u53bb\uff0c\u7136\u540e\u5206\u53d1\u5b9e\u73b0\u8bc1\u4e66\u53ef\u4ee5\u901a\u7528\u3002 \u51c6\u5907ETCD\u7684\u4e8c\u8fdb\u5236\u8f6f\u4ef6 \u00b6 # etcd\u7248\u672c\u4e3a3.2.18\uff0c wget https://github.com/coreos/etcd/releases/download/v3.2.18/etcd-v3.2.18-linux-amd64.tar.gz tar zxf etcd-v3.2.18-linux-amd64.tar.gz cd etcd-v3.2.18-linux-amd64 # \u5206\u53d1\u8f6f\u4ef6 chmod +x etcd* cp etcd etcdctl /alidata/kubernetes/bin/ scp -P 5203 etcd etcdctl 172 .16.16.120:/alidata/kubernetes/bin/ scp -P 5203 etcd etcdctl 172 .16.16.121:/alidata/kubernetes/bin/ \u521b\u5efaETCD\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42 \u00b6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat etcd-csr.json { \"CN\" : \"etcd\" , \"hosts\" : [ \"127.0.0.1\" , \"172.16.16.119\" , \"172.16.16.120\" , \"172.16.16.121\" , \"172.16.16.122\" , \"172.16.16.123\" , \"172.16.16.124\" ] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210\u8bc1\u4e66\u548c\u79c1\u94a5 \u00b6 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes etcd-csr.json | cfssljson -bare etcd \u5206\u53d1\u8bc1\u4e66\u548c\u79c1\u94a5 \u00b6 cp etcd*.pem /alidata/kubernetes/ssl scp -P 5203 etcd*.pem 172 .16.16.120:/alidata/kubernetes/ssl scp -P 5203 etcd*.pem 172 .16.16.121:/alidata/kubernetes/ssl \u8bbe\u7f6eETCD\u914d\u7f6e\u6587\u4ef6 \u00b6 etcd\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u8981\u6709\uff0c\u8bb0\u5f97\u8981\u6539etcd\u7684name\uff0c\u4ee5\u53ca\u76d1\u542c\u7684\u5730\u5740\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/cfg/etcd.conf #[member] ETCD_NAME = \"etcd-node1\" ETCD_DATA_DIR = \"/var/lib/etcd/default.etcd\" #ETCD_SNAPSHOT_COUNTER=\"10000\" #ETCD_HEARTBEAT_INTERVAL=\"100\" #ETCD_ELECTION_TIMEOUT=\"1000\" ETCD_LISTEN_PEER_URLS = \"https://172.16.16.119:2380\" ETCD_LISTEN_CLIENT_URLS = \"https://172.16.16.119:2379,https://127.0.0.1:2379\" #ETCD_MAX_SNAPSHOTS=\"5\" #ETCD_MAX_WALS=\"5\" #ETCD_CORS=\"\" #[cluster] ETCD_INITIAL_ADVERTISE_PEER_URLS = \"https://172.16.16.119:2380\" # if you use different ETCD_NAME (e.g. test), # set ETCD_INITIAL_CLUSTER value for this name, i.e. \"test=http://...\" ETCD_INITIAL_CLUSTER = \"etcd-node1=https://172.16.16.119:2380,etcd-node2=https://172.16.16.120:2380,etcd-node3=https://172.16.16.121:2380\" ETCD_INITIAL_CLUSTER_STATE = \"new\" ETCD_INITIAL_CLUSTER_TOKEN = \"k8s-etcd-cluster\" ETCD_ADVERTISE_CLIENT_URLS = \"https://172.16.16.119:2379\" #[security] CLIENT_CERT_AUTH = \"true\" ETCD_CA_FILE = \"/alidata/kubernetes/ssl/ca.pem\" ETCD_CERT_FILE = \"/alidata/kubernetes/ssl/etcd.pem\" ETCD_KEY_FILE = \"/alidata/kubernetes/ssl/etcd-key.pem\" PEER_CLIENT_CERT_AUTH = \"true\" ETCD_PEER_CA_FILE = \"/alidata/kubernetes/ssl/ca.pem\" ETCD_PEER_CERT_FILE = \"/alidata/kubernetes/ssl/etcd.pem\" ETCD_PEER_KEY_FILE = \"/alidata/kubernetes/ssl/etcd-key.pem\" \u521b\u5efaETCD\u7684\u7cfb\u7edf\u670d\u52a1 \u00b6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /etc/systemd/system/etcd.service [ Unit ] Description = Etcd Server After = network.target [ Service ] Type = simple WorkingDirectory = /var/lib/etcd EnvironmentFile = -/alidata/kubernetes/cfg/etcd.conf # set GOMAXPROCS to number of processors ExecStart = /bin/bash -c \"GOMAXPROCS= $( nproc ) /alidata/kubernetes/bin/etcd\" Type = notify [ Install ] WantedBy = multi-user.target \u91cd\u8f7d\u7cfb\u7edf\u670d\u52a1 \u00b6 systemctl daemon-reload systemctl enable etcd # \u5206\u53d1\u914d\u7f6e\u6587\u4ef6\uff0c\u5206\u53d1\u540e\u5728\u53e6\u5916\u4e24\u53f0\u673a\u5668\u91cd\u8f7d\u914d\u7f6e\u6587\u4ef6 scp -P 5203 /etc/systemd/system/etcd.service 172 .16.16.120:/etc/systemd/system/ scp -P 5203 /etc/systemd/system/etcd.service 172 .16.16.121:/etc/systemd/system/ # \u540c\u6b65\u542f\u52a8\u6240\u6709\u7684etcd\u8282\u70b9 mkdir /var/lib/etcd systemctl start etcd systemctl status etcd \u9a8c\u8bc1\u96c6\u7fa4 \u00b6 [ root@Pro-k8s-master1 ~ ] # etcdctl --endpoints=https://172.16.16.119:2379 \\ --ca-file = /alidata/kubernetes/ssl/ca.pem \\ --cert-file = /alidata/kubernetes/ssl/etcd.pem \\ --key-file = /alidata/kubernetes/ssl/etcd-key.pem cluster-health member 140dd484abeb416a is healthy: got healthy result from https://172.16.16.119:2379 member 97de764ba7fa74f2 is healthy: got healthy result from https://172.16.16.121:2379 member f2ab1be129de49b0 is healthy: got healthy result from https://172.16.16.120:2379 cluster is healthy K8S Master \u8282\u70b9\u90e8\u7f72 \u00b6 \u51c6\u5907\u8f6f\u4ef6\u5305 \u00b6 \u51c6\u5907\u4e0b\u8f7d\u597d\u76841.12.3\u7248\u672c\u7684\u8f6f\u4ef6\u5305\uff0c\u89e3\u538b\u540e\u5c06kube-apiserver\uff0ckube-controller-manager\uff0ckube-scheduler\u62f7\u8d1d\u5230\u6240\u6709\u7684master\u8282\u70b9\u7684 /alidata/kubernetes/bin \u76ee\u5f55\u4e0b\u3002 \u521b\u5efa\u751f\u6210CSR\u7684JSON\u914d\u7f6e\u6587\u4ef6 \u00b6 \u8fd9\u91cc\u6211\u9664\u4e86\u628ak8s\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u52a0\u8fdb\u53bb\u4e86\uff0c\u4ee5\u53cakubernetes\u7684ip 10.1.0.1\u548c\u963f\u91cc\u4e91\u7684\u79c1\u7f51\u8d1f\u8f7d\u5747\u8861\u7684\u5730\u5740\u6211\u4e5f\u52a0\u8fdb\u53bb\u4e86\uff0c\u907f\u514d\u540e\u7eedcontroller\u548cscheduler\u8bbf\u95ee\u5f02\u5e38\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat kubernetes-csr.json { \"CN\" : \"kubernetes\" , \"hosts\" : [ \"127.0.0.1\" , \"172.16.16.119\" , \"172.16.16.120\" , \"172.16.16.121\" , \"172.16.16.122\" , \"172.16.16.123\" , \"172.16.16.124\" , \"10.1.0.1\" , \"kubernetes\" , \"kubernetes.default\" , \"kubernetes.default.svc\" , \"kubernetes.default.svc.cluster\" , \"kubernetes.default.svc.cluster.local\" ] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210Kubernetes\u7684\u8bc1\u4e66\u548c\u79c1\u94a5 \u00b6 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes kubernetes-csr.json | cfssljson -bare kubernetes # \u5206\u53d1\u8bc1\u4e66 cp kubernetes*.pem /alidata/kubernetes/ssl/ # \u6ce8\u610f\u5206\u53d1\u5230\u6240\u6709\u8282\u70b9\uff0c\u5176\u4ed6\u8282\u70b9\u7565 scp -P 5203 kubernetes*.pem 172 .16.16.120:/alidata/kubernetes/ssl/ \u521b\u5efakube-apiserver\u4f7f\u7528\u7684\u5ba2\u6237\u7aeftoken\u6587\u4ef6 \u00b6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # head -c 16 /dev/urandom | od -An -t x | tr -d ' ' ad6d5bb607a186796d8861557df0d17f # master\u8282\u70b9\u5206\u53d1 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/ssl/bootstrap-token.csv ad6d5bb607a186796d8861557df0d17f,kubelet-bootstrap,10001, \"system:kubelet-bootstrap\" scp -P 5203 /alidata/kubernetes/ssl/bootstrap-token.csv 172 .16.16.120:/alidata/kubernetes/ssl/ scp -P 5203 /alidata/kubernetes/ssl/bootstrap-token.csv 172 .16.16.121:/alidata/kubernetes/ssl/ \u521b\u5efa\u57fa\u7840\u7528\u6237\u540d/\u5bc6\u7801\u8ba4\u8bc1\u914d\u7f6e \u00b6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/ssl/basic-auth.csv admin,admin,1 readonly,readonly,2 # master\u8282\u70b9\u5206\u53d1 scp -P 5203 /alidata/kubernetes/ssl/basic-auth.csv 172 .16.16.120:/alidata/kubernetes/ssl/ scp -P 5203 /alidata/kubernetes/ssl/basic-auth.csv 172 .16.16.121:/alidata/kubernetes/ssl/ \u914d\u7f6ekube-apiserver\u7684\u7cfb\u7edf\u914d\u7f6e \u00b6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/kube-apiserver.service [ Unit ] Description = Kubernetes API Server Documentation = https://github.com/GoogleCloudPlatform/kubernetes After = network.target [ Service ] ExecStart = /alidata/kubernetes/bin/kube-apiserver \\ --admission-control = NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,NodeRestriction \\ --bind-address = 0 .0.0.0 \\ --insecure-bind-address = 0 .0.0.0 \\ --authorization-mode = Node,RBAC \\ --runtime-config = rbac.authorization.k8s.io/v1 \\ --kubelet-https = true \\ --anonymous-auth = false \\ --basic-auth-file = /alidata/kubernetes/ssl/basic-auth.csv \\ --enable-bootstrap-token-auth \\ --token-auth-file = /alidata/kubernetes/ssl/bootstrap-token.csv \\ --service-cluster-ip-range = 10 .1.0.0/16 \\ --service-node-port-range = 20000 -40000 \\ --tls-cert-file = /alidata/kubernetes/ssl/kubernetes.pem \\ --tls-private-key-file = /alidata/kubernetes/ssl/kubernetes-key.pem \\ --client-ca-file = /alidata/kubernetes/ssl/ca.pem \\ --service-account-key-file = /alidata/kubernetes/ssl/ca-key.pem \\ --etcd-cafile = /alidata/kubernetes/ssl/ca.pem \\ --etcd-certfile = /alidata/kubernetes/ssl/kubernetes.pem \\ --etcd-keyfile = /alidata/kubernetes/ssl/kubernetes-key.pem \\ --etcd-servers = https://172.16.16.119:2379,https://172.16.16.120:2379,https://172.16.16.121:2379 \\ --enable-swagger-ui = true \\ --allow-privileged = true \\ --audit-log-maxage = 30 \\ --audit-log-maxbackup = 3 \\ --audit-log-maxsize = 100 \\ --audit-log-path = /alidata/kubernetes/log/api-audit.log \\ --event-ttl = 1h \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 Type = notify LimitNOFILE = 65536 [ Install ] WantedBy = multi-user.target \u542f\u52a8api server \u00b6 systemctl daemon-reload systemctl enable kube-apiserver systemctl start kube-apiserver systemctl status kube-apiserver \u4e3aAPI Server\u505a\u8d1f\u8f7d \u00b6 \u56e0\u4e3a\u4f7f\u7528\u7684\u662f\u963f\u91cc\u4e91\u7684ECS\uff0c\u56e0\u6b64\u76f4\u63a5\u8d2d\u4e70\u4e86\u4e00\u4e2a\u963f\u91cc\u4e91\u7684\u5185\u7f51SLB\u5b9e\u73b0\u8d1f\u8f7d\u5206\u53d1\u7684\u529f\u80fd\u4e3aapiserver\u505aha\uff0c\u6ce8\u610f\u8d2d\u4e70\u65f6\u9009\u62e9\u7684\u7f51\u7edc\u7c7b\u578b\u8981\u548c\u73b0\u6709\u7684\u673a\u5668\u662f\u4e00\u81f4\u7684\uff0c\u5426\u5219\u65e0\u6cd5\u6dfb\u52a0\u540e\u7aef\u8282\u70b9\u3002 \u5728\u9009\u62e9\u8f6c\u53d1\u7684\u65f6\u5019\u7528\u4e8e\u63d0\u4f9bhttps\u76846443\u7aef\u53e3\u8f6c\u53d1\u5230\u540e\u7aef\u76848080\uff0chttp\u76848080\u8f6c\u53d1\u5230\u540e\u7aef\u76848080\uff0c\u6ce8\u610fhttps\u8fd9\u91cc\u8981\u6dfb\u52a0\u8bc1\u4e66\u5185\u5bb9\u3002 \u56fe\u5185\u8bc1\u4e66\u5185\u5bb9\u4e3a\u963f\u91cc\u4e91\u63d0\u4f9b\u7684\u8bc1\u4e66\u6837\u4f8b\u5185\u5bb9\uff0c\u9700\u8981\u5c06\u6211\u4eec\u81ea\u5df1\u751f\u6210\u7684kubernetes.pem\u548ckubernetes-key.pem\u7684\u5185\u5bb9\u624b\u52a8\u586b\u5199\u5230\u8fd9\u91cc\uff0c\u5e76\u4e14\u5c06\u8bc1\u4e66\u5e94\u7528\u624d\u53ef\u4ee5\u3002 \u51c6\u5907controller-manager\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 \u00b6 \u6ce8\u610f\u8fd9\u91cc\u6307\u5b9a\u7684master\u5df2\u7ecf\u662fSLB\u7684IP\u4e86\uff0c\u914d\u7f6e\u5b8c\u6210\u4ee5\u540e\u5c06\u914d\u7f6e\u6587\u4ef6\u5206\u53d1\u5230\u6240\u6709\u7684master # \u5728\u9ad8\u53ef\u7528\u72b6\u6001\u4e0b\u8981\u5f00\u542fleader-elect=true [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/kube-controller-manager.service [ Unit ] Description = Kubernetes Controller Manager Documentation = https://github.com/GoogleCloudPlatform/kubernetes [ Service ] ExecStart = /alidata/kubernetes/bin/kube-controller-manager \\ --address = 0 .0.0.0 \\ --master = http://172.16.16.124:8080 \\ --allocate-node-cidrs = true \\ --service-cluster-ip-range = 10 .1.0.0/16 \\ --cluster-cidr = 10 .2.0.0/16 \\ --cluster-name = kubernetes \\ --cluster-signing-cert-file = /alidata/kubernetes/ssl/ca.pem \\ --cluster-signing-key-file = /alidata/kubernetes/ssl/ca-key.pem \\ --service-account-private-key-file = /alidata/kubernetes/ssl/ca-key.pem \\ --root-ca-file = /alidata/kubernetes/ssl/ca.pem \\ --leader-elect = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 [ Install ] WantedBy = multi-user.target \u542f\u52a8Controller-Manager \u00b6 systemctl daemon-reload systemctl enable kube-controller-manager systemctl start kube-controller-manager systemctl status kube-controller-manager \u51c6\u5907kube-scheduler\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 \u00b6 \u8fd9\u91cc\u6307\u5b9a\u7684master\u540c\u6837\u662fSLB\u7684VIP\u5730\u5740\uff0c\u914d\u7f6e\u5b8c\u6210\u4ee5\u540e\u5206\u53d1\u5230\u6240\u6709\u7684master\u8282\u70b9\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/kube-scheduler.service [ Unit ] Description = Kubernetes Scheduler Documentation = https://github.com/GoogleCloudPlatform/kubernetes [ Service ] ExecStart = /alidata/kubernetes/bin/kube-scheduler \\ --address = 0 .0.0.0 \\ --master = http://172.16.16.124:8080 \\ --leader-elect = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 [ Install ] WantedBy = multi-user.target \u542f\u52a8kube-scheduler \u00b6 systemctl daemon-reload systemctl enable kube-scheduler systemctl start kube-scheduler systemctl status kube-scheduler \u90e8\u7f72kubectl \u00b6 \u9996\u5148\u51c6\u5907\u597dkubectl\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5206\u53d1\u5230\u6240\u6709\u7684master\u8282\u70b9\uff0c\u7136\u540e\u521b\u5efaadmin\u7684\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat admin-csr.json { \"CN\" : \"admin\" , \"hosts\" : [] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"system:masters\" , \"OU\" : \"System\" } ] } \u751f\u6210admin\u8bc1\u4e66\u548c\u79c1\u94a5 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes admin-csr.json | cfssljson -bare admin \u8bbe\u7f6e\u96c6\u7fa4\u53c2\u6570\uff0c\u6ce8\u610fmaster\u7684ip\u4e3avip\uff0c\u8bc1\u4e66\u4ee5\u5d4c\u5165\u7684\u5f62\u5f0f\u751f\u6210config\u6587\u4ef6\u3002 kubectl config set-cluster kubernetes \\ --certificate-authority = /alidata/kubernetes/ssl/ca.pem \\ --embed-certs = true \\ --server = https://172.16.16.124:6443 \u8bbe\u7f6e\u5ba2\u6237\u7aef\u8ba4\u8bc1\u53c2\u6570 kubectl config set-credentials admin \\ --client-certificate = /alidata/kubernetes/ssl/admin.pem \\ --embed-certs = true \\ --client-key = /alidata/kubernetes/ssl/admin-key.pem \u8bbe\u7f6e\u4e0a\u4e0b\u6587\u53c2\u6570 kubectl config set-context kubernetes \\ --cluster = kubernetes \\ --user = admin \u8bbe\u7f6e\u9ed8\u8ba4\u4e0a\u4e0b\u6587 kubectl config use-context kubernetes \u67e5\u770b\u5f53\u524dconfig # \u67e5\u770b\u7684\u8fd9\u4e2a\u6587\u4ef6\u5728/root/.kube\u76ee\u5f55\u4e0b\uff0c\u540d\u79f0\u4e3aconfig\uff0c\u4e0a\u8ff0\u64cd\u4f5c\u9700\u8981\u5728\u6240\u6709master\u8282\u70b9\u64cd\u4f5c [ root@Pro-k8s-master1 /alidata/src/ssl ] # kubectl config view apiVersion: v1 clusters: - cluster: certificate-authority-data: DATA+OMITTED server: https://172.16.16.124:6443 name: kubernetes contexts: - context: cluster: kubernetes user: admin name: kubernetes current-context: kubernetes kind: Config preferences: {} users: - name: admin user: client-certificate-data: REDACTED client-key-data: REDACTED \u4f7f\u7528kubectl\u5de5\u5177 [ root@Pro-k8s-master1 /alidata/src/ssl ] # kubectl get cs NAME STATUS MESSAGE ERROR controller-manager Healthy ok scheduler Healthy ok etcd-1 Healthy { \"health\" : \"true\" } etcd-0 Healthy { \"health\" : \"true\" } etcd-2 Healthy { \"health\" : \"true\" } Node\u8282\u70b9\u90e8\u7f72 \u00b6 \u51c6\u5907node\u8282\u70b9\u4e8c\u8fdb\u5236\u5305\uff0c\u5c06kubelet\uff0ckube-proxy\u5206\u53d1\u5230\u6240\u6709node\u8282\u70b9\u7684/alidata/kubernetes/bin\u4e0b\u3002 \u521b\u5efa\u89d2\u8272\u7ed1\u5b9a kubectl create clusterrolebinding kubelet-bootstrap --clusterrole = system:node-bootstrapper --user = kubelet-bootstrap \u521b\u5efa kubelet bootstrapping kubeconfig \u6587\u4ef6 \u8bbe\u7f6e\u96c6\u7fa4\u53c2\u6570 kubectl config set-cluster kubernetes \\ --certificate-authority = /alidata/kubernetes/ssl/ca.pem \\ --embed-certs = true \\ --server = https://172.16.16.124:6443 \\ --kubeconfig = bootstrap.kubeconfig \u8bbe\u7f6e\u5ba2\u6237\u7aef\u8ba4\u8bc1\u53c2\u6570 # \u6ce8\u610f\u8fd9token\u662fkube-apiserver\u4f7f\u7528\u7684\u5ba2\u6237\u7aeftoken\u6587\u4ef6\u4e2d\u7684token\uff0c\u586b\u5199\u5728\u8fd9\u91cc\u3002 kubectl config set-credentials kubelet-bootstrap \\ --token = ad6d5bb607a186796d8861557df0d17f \\ --kubeconfig = bootstrap.kubeconfig \u8bbe\u7f6e\u4e0a\u4e0b\u6587\u53c2\u6570 kubectl config set-context default \\ --cluster = kubernetes \\ --user = kubelet-bootstrap \\ --kubeconfig = bootstrap.kubeconfig \u9009\u62e9\u9ed8\u8ba4\u4e0a\u4e0b\u6587 kubectl config use-context default --kubeconfig = bootstrap.kubeconfig \u56e0\u4e3a\u6307\u5b9a\u4e86 --kubeconfig \uff0c\u56e0\u6b64\u4f1a\u5728\u5f53\u524d\u8def\u5f84\u4e0b\u751f\u6210\u4e00\u4e2abootstarp.kubeconfig\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e2akubeconfig\u6587\u4ef6\u5206\u53d1\u5230\u5176\u4ed6\u8282\u70b9\uff0c\u56e0\u4e3a\u76ee\u524d\u53ea\u6709master\u4e0a\u6709kubectl\u547d\u4ee4\uff0c\u56e0\u6b64\u5728master\u4e0a\u64cd\u4f5c\u73a9\u4e86\u4ee5\u540e\u628a\u8fd9\u4e2a\u6587\u4ef6\u5206\u53d1\u5c31\u53ef\u4ee5 cp bootstrap.kubeconfig /alidata/kubernetes/cfg # \u53ea\u6709node\u8282\u70b9\u9700\u8981 scp -P 5203 bootstrap.kubeconfig 172 .16.16.122:/alidata/kubernetes/cfg scp -P 5203 bootstrap.kubeconfig 172 .16.16.123:/alidata/kubernetes/cfg \u8bbe\u7f6eCNI\u7684\u652f\u6301 mkdir -p /etc/cni/net.d [ root@Pro-k8s-node1 ~ ] # vim /etc/cni/net.d/10-default.conf { \"name\" : \"flannel\" , \"type\" : \"flannel\" , \"delegate\" : { \"bridge\" : \"docker0\" , \"isDefaultGateway\" : true, \"mtu\" : 1400 } } \u521b\u5efakubelet\u76ee\u5f55 mkdir /var/lib/kubelet \u51c6\u5907kubelet\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 [ root@Pro-k8s-node1 ~ ] # cat /usr/lib/systemd/system/kubelet.service [ Unit ] Description = Kubernetes Kubelet Documentation = https://github.com/GoogleCloudPlatform/kubernetes After = docker.service Requires = docker.service [ Service ] WorkingDirectory = /var/lib/kubelet ExecStart = /alidata/kubernetes/bin/kubelet \\ --address = 172 .16.16.122 \\ --hostname-override = 172 .16.16.122 \\ --pod-infra-container-image = mirrorgooglecontainers/pause-amd64:3.0 \\ --experimental-bootstrap-kubeconfig = /alidata/kubernetes/cfg/bootstrap.kubeconfig \\ --kubeconfig = /alidata/kubernetes/cfg/kubelet.kubeconfig \\ --cert-dir = /alidata/kubernetes/ssl \\ --network-plugin = cni \\ --cni-conf-dir = /etc/cni/net.d \\ --cni-bin-dir = /alidata/kubernetes/bin/cni \\ --cluster-dns = 10 .1.0.2 \\ --cluster-domain = cluster.local. \\ --hairpin-mode hairpin-veth \\ --allow-privileged = true \\ --fail-swap-on = false \\ --logtostderr = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 \u542f\u52a8kubelet systemctl daemon-reload systemctl enable kubelet systemctl start kubelet systemctl status kubelet \u67e5\u770b\u8fd9\u4e2a\u65f6\u5019kubelet\u662f\u5426\u542f\u52a8\u6b63\u5e38\uff0c\u5982\u679cnode\u8282\u70b9\u7684kubelet\u542f\u52a8\u662f\u6b63\u5e38\u7684\u8bdd\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728master\u8282\u70b9\u67e5\u770b\u5230\u8bf7\u6c42\u4e86\uff0c\u56de\u5230master\u4e0a\u67e5\u770b\u3002 # master\u8282\u70b9 kubectl get csr \u9ed8\u8ba4\u770b\u5230\u7684CONDITION\u5185\u5bb9\u5e94\u8be5\u662f Pending \u72b6\u6001\u7684\uff0c\u6b64\u65f6\u9700\u8981\u6279\u51c6kubelet\u7684TLS\u8ba4\u8bc1\u8bf7\u6c42\u3002 kubectl get csr | grep 'Pending' | awk 'NR>0{print $1}' | xargs kubectl certificate approve \u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u67e5\u770b\u8282\u70b9\u72b6\u6001\u5df2\u7ecf\u662fReady\u7684\u72b6\u6001\u4e86 [ root@Pro-k8s-master1 /alidata/src/ssl ] # kubectl get node NAME STATUS ROLES AGE VERSION 172 .16.16.122 Ready <none> 5h1m v1.12.3 172 .16.16.123 Ready <none> 5h1m v1.12.3 \u90e8\u7f72kube-proxy \u00b6 kube-proxy\u540c\u6837\u8fd8\u662f\u53ea\u90e8\u7f72\u5728node\u8282\u70b9\u4e0a \u5728\u4e4b\u524d\u7684\u64cd\u4f5c\u4e2d\uff0c\u5df2\u7ecf\u5c06kube-proxy\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5206\u53d1\u5230node\u8282\u70b9\u4e86\uff0c\u56e0\u6b64\u8fd9\u91cc\u5f00\u59cb\u51c6\u5907\u8bc1\u4e66\u7684json\u6587\u4ef6\u3002 [ root@Pro-k 8 s-master 1 /alidata/src/ssl ] # cat kube-proxy-csr.json { \"CN\" : \"system:kube-proxy\" , \"hosts\" : [], \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 }, \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210\u8bc1\u4e66 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy \u5206\u53d1\u8bc1\u4e66\u5230\u6240\u6709\u7684(Node)\u8282\u70b9 cp kube-proxy*.pem /alidata/kubernetes/ssl/ scp -P 5203 kube-proxy*.pem 172 .16.16.122:/alidata/kubernetes/ssl/ scp -P 5203 kube-proxy*.pem 172 .16.16.123:/alidata/kubernetes/ssl/ \u521b\u5efakube-proxy\u7684kubeconfig\u914d\u7f6e\u6587\u4ef6 kubectl config set-cluster kubernetes \\ --certificate-authority = /alidata/kubernetes/ssl/ca.pem \\ --embed-certs = true \\ --server = https://172.16.16.124:6443 \\ --kubeconfig = kube-proxy.kubeconfig kubectl config set-credentials kube-proxy \\ --client-certificate = /alidata/kubernetes/ssl/kube-proxy.pem \\ --client-key = /alidata/kubernetes/ssl/kube-proxy-key.pem \\ --embed-certs = true \\ --kubeconfig = kube-proxy.kubeconfig kubectl config set-context default \\ --cluster = kubernetes \\ --user = kube-proxy \\ --kubeconfig = kube-proxy.kubeconfig kubectl config use-context default --kubeconfig = kube-proxy.kubeconfig \u548ckubelet\u4e00\u6837\uff0c\u628a\u8fd9\u4e2akube-config\u6587\u4ef6\u5206\u53d1\u5230\u6240\u6709\u7684node\u8282\u70b9 cp kube-proxy.kubeconfig /alidata/kubernetes/cfg/ scp -P 5203 kube-proxy.kubeconfig 172 .16.16.122:/alidata/kubernetes/cfg/ scp -P 5203 kube-proxy.kubeconfig 172 .16.16.123:/alidata/kubernetes/cfg/ \u521b\u5efakubeproxy\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 mkdir /var/lib/kube-proxy [ root@Pro-k8s-node2 ~ ] # cat /usr/lib/systemd/system/kube-proxy.service [ Unit ] Description = Kubernetes Kube-Proxy Server Documentation = https://github.com/GoogleCloudPlatform/kubernetes After = network.target [ Service ] WorkingDirectory = /var/lib/kube-proxy ExecStart = /alidata/kubernetes/bin/kube-proxy \\ --bind-address = 172 .16.16.123 \\ --hostname-override = 172 .16.16.123 \\ --kubeconfig = /alidata/kubernetes/cfg/kube-proxy.kubeconfig \\ --masquerade-all \\ --feature-gates = SupportIPVSProxyMode = true \\ --proxy-mode = ipvs \\ --ipvs-min-sync-period = 5s \\ --ipvs-sync-period = 5s \\ --ipvs-scheduler = rr \\ --logtostderr = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 LimitNOFILE = 65536 [ Install ] WantedBy = multi-user.target \u5b89\u88c5kube-proxy\u4f7f\u7528lvs\u7684\u4f9d\u8d56\u3002 yum install -y ipvsadm ipset conntrack \u542f\u52a8kube-proxy systemctl daemon-reload systemctl enable kube-proxy systemctl start kube-proxy systemctl status kube-proxy \u5728node\u8282\u70b9\u68c0\u67e5kube-proxy\u7684\u670d\u52a1\u72b6\u6001 ipvsadm -L -n Flannel\u90e8\u7f72 \u00b6 \u8003\u8651\u5230\u963f\u91cc\u4e91\u7684\u7f51\u7edc\u6682\u65f6\u5e76\u4e0d\u652f\u6301BGP\uff0c\u56e0\u6b64\u65e0\u6cd5\u4f7f\u7528calico-BGP\uff0c\u800ccalico-ipip\u548cflannel-vxlan\u5728\u6027\u80fd\u4e0a\u76f8\u5dee\u65e0\u51e0\uff0c\u4f46\u662fcalico\u7684\u7ef4\u62a4\u96be\u5ea6\u76f8\u8f83\u4e8eflannel\u8981\u9ad8\u5f88\u591a\uff0c\u56e0\u6b64\u8fd9\u91cc\u91c7\u7528flannel\u4f5c\u4e3a\u7f51\u7edc\u7ec4\u4ef6\u3002 \u521b\u5efaflannel\u7684\u8bc1\u4e66json\u6587\u4ef6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat flanneld-csr.json { \"CN\" : \"flanneld\" , \"hosts\" : [] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210\u8bc1\u4e66\u5e76\u5206\u53d1\u8bc1\u4e66 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes flanneld-csr.json | cfssljson -bare flanneld # \u6ce8\u610f\u8fd9\u4e2a\u662f\u5206\u53d1\u5230\u96c6\u7fa4\u91cc\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9 cp flanneld*.pem /alidata/kubernetes/ssl/ scp -P 5203 flanneld*.pem 172 .16.16.120:/alidata/kubernetes/ssl/ \u51c6\u5907flannel\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 cp flanneld mk-docker-opts.sh remove-docker0.sh /alidata/kubernetes/bin/ # \u5206\u53d1\u5230\u5176\u4ed6\u7684\u8282\u70b9\uff0c\u6b64\u5904\u53ea\u5217\u51fa\u4e00\u4e2a\u3002 scp -P 5203 flanneld mk-docker-opts.sh remove-docker0.sh 172 .16.16.120:/alidata/kubernetes/bin/ \u914d\u7f6eflannel\uff0c\u914d\u7f6e\u5b8c\u6210\u4ee5\u540e\u8fdb\u884c\u5206\u53d1\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u4f9bflannel\u4f7f\u7528\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/cfg/flannel FLANNEL_ETCD = \"-etcd-endpoints=https://172.16.16.119:2379,https://172.16.16.120:2379,https://172.16.16.121:2379\" FLANNEL_ETCD_KEY = \"-etcd-prefix=/kubernetes/network\" FLANNEL_ETCD_CAFILE = \"--etcd-cafile=/alidata/kubernetes/ssl/ca.pem\" FLANNEL_ETCD_CERTFILE = \"--etcd-certfile=/alidata/kubernetes/ssl/flanneld.pem\" FLANNEL_ETCD_KEYFILE = \"--etcd-keyfile=/alidata/kubernetes/ssl/flanneld-key.pem\" \u8bbe\u7f6eflannel\u7684\u7cfb\u7edf\u670d\u52a1\u914d\u7f6e [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/flannel.service [ Unit ] Description = Flanneld overlay address etcd agent After = network.target Before = docker.service [ Service ] EnvironmentFile = -/alidata/kubernetes/cfg/flannel ExecStartPre = /alidata/kubernetes/bin/remove-docker0.sh ExecStart = /alidata/kubernetes/bin/flanneld ${ FLANNEL_ETCD } ${ FLANNEL_ETCD_KEY } ${ FLANNEL_ETCD_CAFILE } ${ FLANNEL_ETCD_CERTFILE } ${ FLANNEL_ETCD_KEYFILE } ExecStartPost = /alidata/kubernetes/bin/mk-docker-opts.sh -d /run/flannel/docker Type = notify [ Install ] WantedBy = multi-user.target RequiredBy = docker.service flannel\u96c6\u6210CNI # https://github.com/containernetworking/plugins/releases wget https://github.com/containernetworking/plugins/releases/download/v0.7.1/cni-plugins-amd64-v0.7.1.tgz # \u540c\u6837\u5c06cni\u7ec4\u4ef6\u5206\u53d1\u5230\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0a\u4e00\u4efd mkdir /alidata/kubernetes/bin/cni tar zxf cni-plugins-amd64-v0.7.1.tgz -C /alidata/kubernetes/bin/cni chmod +x /alidata/kubernetes/bin/* scp -P 5203 -r /alidata/kubernetes/bin/cni/* 172 .16.16.120:/alidata/kubernetes/bin/cni/ \u8bbe\u7f6eetcd\u7684key /alidata/kubernetes/bin/etcdctl --ca-file /alidata/kubernetes/ssl/ca.pem --cert-file /alidata/kubernetes/ssl/flanneld.pem --key-file /alidata/kubernetes/ssl/flanneld-key.pem \\ --no-sync -C https://172.16.16.119:2379,https://172.16.16.120:2379,https://172.16.16.121:2379 \\ mk /kubernetes/network/config '{ \"Network\": \"10.2.0.0/16\", \"Backend\": { \"Type\": \"vxlan\", \"VNI\": 1 }}' >/dev/null 2 > & 1 \u67e5\u770b\u8fd9\u4e2akey\u662f\u5426\u8bbe\u7f6e\u6210\u529f\uff0c\u53ea\u5728\u4e00\u4e2a\u8282\u70b9\u64cd\u4f5c\u5c31\u53ef\u4ee5\uff0c\u56e0\u4e3a\u8fd9\u4e2aetcd\u662f\u4e00\u4e2a\u96c6\u7fa4\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # etcdctl --endpoints=https://172.16.16.119:2379 \\ --ca-file = /alidata/kubernetes/ssl/ca.pem \\ --cert-file = /alidata/kubernetes/ssl/etcd.pem \\ --key-file = /alidata/kubernetes/ssl/etcd-key.pem get /kubernetes/network/config { \"Network\" : \"10.2.0.0/16\" , \"Backend\" : { \"Type\" : \"vxlan\" , \"VNI\" : 1 }} \u914d\u7f6eDocker\u4f7f\u7528flannel [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /etc/systemd/system/docker.service [ Unit ] Description = Docker Application Container Engine Documentation = http://docs.docker.io After = network-online.target firewalld.service flannel.service Wants = network-online.target Requires = flannel.service [ Service ] Environment = \"PATH=/usr/local/docker/bin:/bin:/sbin:/usr/bin:/usr/sbin\" EnvironmentFile = -/run/flannel/docker #ExecStart=/usr/local/docker/bin/dockerd --log-level=error $DOCKER_NETWORK_OPTIONS ExecStart = /usr/local/docker/bin/dockerd $DOCKER_OPTS ExecReload = /bin/kill -s HUP $MAINPID Restart = on-failure RestartSec = 5 LimitNOFILE = infinity LimitNPROC = infinity LimitCORE = infinity Delegate = yes KillMode = process [ Install ] WantedBy = multi-user.target \u4e3b\u8981\u6709\u51e0\u4e2a\u70b9\uff0c\u4e00\u4e2a\u662fAfter\u6dfb\u52a0flannel.server\uff0cRequires\u8981\u6dfb\u52a0flannel.service\uff0c\u5982\u679c\u7f51\u7edc\u8d77\u4e0d\u6765\u7684\u8bdd\uff0c\u90a3\u4e48docker\u5c31\u4e0d\u8d77\u6765\u3002\u540c\u65f6\u5728Service\u6bb5\u6dfb\u52a0EnvironmentFile=-/run/flannel/docker\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662f\u7531flannel\u542f\u52a8\u7684\u65f6\u5019\u901a\u8fc7mk-docker-opts.sh\u751f\u6210\u7684\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u901a\u8fc7\u2014bip\u6765\u5212\u5206\u7f51\u6bb5\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /run/flannel/docker DOCKER_OPT_BIP = \"--bip=10.2.26.1/24\" DOCKER_OPT_IPMASQ = \"--ip-masq=true\" DOCKER_OPT_MTU = \"--mtu=1450\" DOCKER_OPTS = \" --bip=10.2.26.1/24 --ip-masq=true --mtu=1450\" \u91cd\u542fdocker systemctl daemon-reload systemctl restart docker \u89c2\u5bdf\u7f51\u5361\u4fe1\u606f [ root@Pro-k8s-master1 /alidata/src/ssl ] # ifconfig docker0: flags = 4099 <UP,BROADCAST,MULTICAST> mtu 1500 inet 10 .2.26.1 netmask 255 .255.255.0 broadcast 10 .2.26.255 ether 02 :42:97:b9:64:bd txqueuelen 0 ( Ethernet ) RX packets 0 bytes 0 ( 0 .0 B ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 ( 0 .0 B ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 eth0: flags = 4163 <UP,BROADCAST,RUNNING,MULTICAST> mtu 1500 inet 172 .16.16.119 netmask 255 .255.255.0 broadcast 172 .16.16.255 ether 00 :16:3e:08:1b:46 txqueuelen 1000 ( Ethernet ) RX packets 8365198 bytes 1280511623 ( 1 .1 GiB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 8723511 bytes 1741235760 ( 1 .6 GiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 flannel.1: flags = 4163 <UP,BROADCAST,RUNNING,MULTICAST> mtu 1450 inet 10 .2.26.0 netmask 255 .255.255.255 broadcast 0 .0.0.0 ether 92 :d2:90:73:57:5c txqueuelen 0 ( Ethernet ) RX packets 2678 bytes 1052685 ( 1 .0 MiB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 2100 bytes 297679 ( 290 .7 KiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 lo: flags = 73 <UP,LOOPBACK,RUNNING> mtu 65536 inet 127 .0.0.1 netmask 255 .0.0.0 loop txqueuelen 1 ( Local Loopback ) RX packets 3848161 bytes 647614198 ( 617 .6 MiB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 3848161 bytes 647614198 ( 617 .6 MiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 \u53ef\u4ee5\u770b\u5230docker0\u548cflannel1.1\u7684\u5730\u5740\u662f\u4e00\u6bb5\u7684\uff0c\u6bcf\u4e2a\u8282\u70b9\u5206\u5230\u7684\u7f51\u6bb5\u662f\u4e0d\u4e00\u6837\u7684\u3002flannel\u90e8\u7f72\u5b8c\u6210 \u4e00\u4e9b\u5fc5\u5907\u7ec4\u4ef6 \u00b6 CoreDns \u00b6 \u7565 Helm \u00b6 \u7565 DashBoard \u00b6 \u7565","title":"Kubernetes\u4e8c\u8fdb\u5236\u90e8\u7f72"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kubernetes","text":"\u6587\u6863\u65e5\u671f\uff1a2018\u5e7412\u670825\u65e5 \u8bb0\u5f55\u4eba\u5458\uff1alamber \u73af\u5883\u8bf4\u660e\uff1amaster\u8282\u70b9*3\uff0cnode\u8282\u70b9*2\uff0c\u4e09\u53f0master\u8282\u70b9\u505a\u8d1f\u8f7d\u5747\u8861\uff0c\u901a\u8fc7\u963f\u91cc\u4e91\u7684\u5185\u7f51SLB\u505a\u8d1f\u8f7d\uff0c\u6839\u636e\u9700\u8981\uff0cnode\u8282\u70b9\u53ef\u4ee5\u52a8\u6001\u7684\u8fdb\u884c\u6dfb\u52a0\u3002\u5f53\u524d\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\u56fe\uff1a","title":"Kubernetes\u4e8c\u8fdb\u5236\u90e8\u7f72"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#ip","text":"Name IP Description Kubernetes Master HA 172.16.16.124\uff08VIP\uff09 master HA\u5730\u5740 Pro-k8s-master1 172.16.16.119 master-1 Pro-k8s-master2 172.16.16.120 master-2 Pro-k8s-master3 172.16.16.121 master-3 Pro-k8s-node1 172.16.16.122 node-1 Pro-k8s-node2 172.16.16.123 node-2 ETCD_NODE1 172.16.16.119 etcd cluster ETCD_NODE2 172.16.16.120 etcd cluster ETCD_NODE3 172.16.16.121 etcd cluster","title":"IP\u5730\u5740\u5206\u914d"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_1","text":"\u5b89\u88c5\u90e8\u7f72Docker \u6307\u5b9a\u7248\u672c\u4e3a18.06.0-ce \uff0c\u5e76\u4fee\u6539Docker\u7684\u6570\u636e\u5b58\u653e\u4f4d\u7f6e\u4e3a /alidata/docker/ \u3002\uff08\u7565\uff09 \u51c6\u5907Kubernetes\u76841.12.3\u7684\u76f8\u5173\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5177\u4f53\u53ef\u53c2\u8003 CHANGELOG-1.12 \u3002\uff08\u7565\uff09 \u7cfb\u7edf\u4e3b\u673a\u540d\u521d\u59cb\u5316\uff0c\u4e3b\u673aSSH\u6388\u4fe1\u514d\u5bc6\u767b\u5f55\u3002\uff08\u7565\uff09 \u5173\u95edselinux\uff0c\u5173\u95ediptables\uff08firewalld\uff09\u3002 \u51c6\u5907\u90e8\u7f72\u76ee\u5f55\uff0c\u5e76\u628a/alidata/kubernetes/bin\u52a0\u5165\u5230\u73af\u5883\u53d8\u91cfPATH\u4e2d\u3002 mkdir -p /alidata/kubernetes/ { cfg,bin,ssl,log }","title":"\u7cfb\u7edf\u521d\u59cb\u5316"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#ca","text":"\u672c\u6b21\u751f\u6210\u8bc1\u4e66\u7684\u5de5\u5177\u91c7\u7528CFSSL\uff0cCFSSL\u662fCloudFlare\u5f00\u6e90\u7684\u4e00\u6b3ePKI/TLS\u5de5\u5177\u3002 CFSSL \u5305\u542b\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\u548c\u4e00\u4e2a\u7528\u4e8e\u7b7e\u540d\u7684\u5de5\u5177\uff0c\u9a8c\u8bc1\u5e76\u4e14\u6346\u7ed1TLS\u8bc1\u4e66\u7684 HTTP API \u670d\u52a1\u3002 \u4f7f\u7528Go\u8bed\u8a00\u7f16\u5199\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528json\u53bb\u5b9a\u4e49\u8bc1\u4e66\u76f8\u5173\u5185\u5bb9\uff0c\u770b\u8d77\u6765\u66f4\u52a0\u76f4\u89c2\u3002 CFSSL\u5305\u62ec\uff1a \u4e00\u7ec4\u7528\u4e8e\u751f\u6210\u81ea\u5b9a\u4e49 TLS PKI \u7684\u5de5\u5177 cfssl \u7a0b\u5e8f\uff0c\u662fCFSSL\u7684\u547d\u4ee4\u884c\u5de5\u5177 multirootca \u7a0b\u5e8f\u662f\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u7b7e\u540d\u5bc6\u94a5\u7684\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u670d\u52a1\u5668 mkbundle \u7a0b\u5e8f\u7528\u4e8e\u6784\u5efa\u8bc1\u4e66\u6c60 cfssljson \u7a0b\u5e8f\uff0c\u4ece cfssl \u548c multirootca \u7a0b\u5e8f\u83b7\u53d6JSON\u8f93\u51fa\uff0c\u5e76\u5c06\u8bc1\u4e66\uff0c\u5bc6\u94a5\uff0cCSR\u548cbundle\u5199\u5165\u78c1\u76d8","title":"\u624b\u52a8\u5236\u4f5cCA\u8bc1\u4e66"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#cfssl","text":"# \u4e0b\u8f7dcfssl\u4e8c\u8fdb\u5236\u6587\u4ef6 wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 chmod +x cfssl* mv cfssl-certinfo_linux-amd64 /alidata/kubernetes/bin/cfssl-certinfo mv cfssljson_linux-amd64 /alidata/kubernetes/bin/cfssljson mv cfssl_linux-amd64 /alidata/kubernetes/bin/cfssl # \u5206\u53d1\u5230\u6240\u6709\u7684k8s\u8282\u70b9\uff0c\u56e0\u4e3a\u8bbe\u7f6e\u4e86\u514d\u5bc6\u56e0\u6b64\u65e0\u9700\u8f93\u5165\u5bc6\u7801\uff0c\u5176\u4f59\u51e0\u4e2a\u8282\u70b9\u7684\u5206\u53d1\u7701\u7565\uff0c\u53ea\u5199\u4e00\u4e2a\u3002 scp /alidata/kubernetes/bin/cfssl* root@172.16.16.120:/alidata/kubernetes/bin/","title":"\u51c6\u5907cfssl\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#cfssl_1","text":"mkdir /alidata/src && cd /alidata/src cfssl print-defaults config > config.json cfssl print-defaults csr > csr.json","title":"\u521d\u59cb\u5316cfssl"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#cajson","text":"# \u8bc1\u4e66\u6709\u6548\u671f\u7ea6\u4e3a 10 \u5e74 [ root@Pro-k 8 s-master 1 /alidata/src/ssl ] # cat ca-config.json { \"signing\" : { \"default\" : { \"expiry\" : \"87600h\" }, \"profiles\" : { \"kubernetes\" : { \"usages\" : [ \"signing\" , \"key encipherment\" , \"server auth\" , \"client auth\" ], \"expiry\" : \"87600h\" } } } }","title":"\u521b\u5efa\u7528\u6765\u751f\u6210CA\u6587\u4ef6\u7684JSON\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#cacsrjson","text":"[ root@Pro-k 8 s-master 1 /alidata/src/ssl ] # cat ca-csr.json { \"CN\" : \"kubernetes\" , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 }, \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] }","title":"\u521b\u5efa\u7528\u6765\u751f\u6210CA\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42\uff08CSR\uff09\u7684JSON\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#cacapemca-keypem","text":"cfssl gencert -initca ca-csr.json | cfssljson -bare ca","title":"\u751f\u6210CA\u8bc1\u4e66\uff08ca.pem\uff09\u548c\u5bc6\u94a5\uff08ca-key.pem\uff09"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_2","text":"cp ca.csr ca.pem ca-key.pem ca-config.json /alidata/kubernetes/ssl # \u5206\u53d1\u5230\u5176\u4ed6\u7684\u8282\u70b9 scp -P 5203 ca.csr ca.pem ca-key.pem ca-config.json 172 .16.16.120:/alidata/kubernetes/ssl","title":"\u5206\u53d1\u8bc1\u4e66"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#etcd","text":"\u672c\u6b21etcd\u96c6\u7fa4\u4e3b\u8981\u90e8\u7f72\u5728\u4e09\u4e2amaster\u8282\u70b9\uff0c\u540c\u65f6\u4e3a\u4e86\u65b9\u4fbf\u6269\u5c55\u56e0\u6b64\u5728\u5236\u4f5c\u8bc1\u4e66\u7684\u65f6\u5019\u5c31\u628a\u96c6\u7fa4\u6240\u6709\u7684ip\u90fd\u505a\u8fdb\u53bb\uff0c\u7136\u540e\u5206\u53d1\u5b9e\u73b0\u8bc1\u4e66\u53ef\u4ee5\u901a\u7528\u3002","title":"ETCD\u96c6\u7fa4\u90e8\u7f72"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#etcd_1","text":"# etcd\u7248\u672c\u4e3a3.2.18\uff0c wget https://github.com/coreos/etcd/releases/download/v3.2.18/etcd-v3.2.18-linux-amd64.tar.gz tar zxf etcd-v3.2.18-linux-amd64.tar.gz cd etcd-v3.2.18-linux-amd64 # \u5206\u53d1\u8f6f\u4ef6 chmod +x etcd* cp etcd etcdctl /alidata/kubernetes/bin/ scp -P 5203 etcd etcdctl 172 .16.16.120:/alidata/kubernetes/bin/ scp -P 5203 etcd etcdctl 172 .16.16.121:/alidata/kubernetes/bin/","title":"\u51c6\u5907ETCD\u7684\u4e8c\u8fdb\u5236\u8f6f\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#etcd_2","text":"[ root@Pro-k8s-master1 /alidata/src/ssl ] # cat etcd-csr.json { \"CN\" : \"etcd\" , \"hosts\" : [ \"127.0.0.1\" , \"172.16.16.119\" , \"172.16.16.120\" , \"172.16.16.121\" , \"172.16.16.122\" , \"172.16.16.123\" , \"172.16.16.124\" ] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] }","title":"\u521b\u5efaETCD\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_3","text":"cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes etcd-csr.json | cfssljson -bare etcd","title":"\u751f\u6210\u8bc1\u4e66\u548c\u79c1\u94a5"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_4","text":"cp etcd*.pem /alidata/kubernetes/ssl scp -P 5203 etcd*.pem 172 .16.16.120:/alidata/kubernetes/ssl scp -P 5203 etcd*.pem 172 .16.16.121:/alidata/kubernetes/ssl","title":"\u5206\u53d1\u8bc1\u4e66\u548c\u79c1\u94a5"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#etcd_3","text":"etcd\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u8981\u6709\uff0c\u8bb0\u5f97\u8981\u6539etcd\u7684name\uff0c\u4ee5\u53ca\u76d1\u542c\u7684\u5730\u5740\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/cfg/etcd.conf #[member] ETCD_NAME = \"etcd-node1\" ETCD_DATA_DIR = \"/var/lib/etcd/default.etcd\" #ETCD_SNAPSHOT_COUNTER=\"10000\" #ETCD_HEARTBEAT_INTERVAL=\"100\" #ETCD_ELECTION_TIMEOUT=\"1000\" ETCD_LISTEN_PEER_URLS = \"https://172.16.16.119:2380\" ETCD_LISTEN_CLIENT_URLS = \"https://172.16.16.119:2379,https://127.0.0.1:2379\" #ETCD_MAX_SNAPSHOTS=\"5\" #ETCD_MAX_WALS=\"5\" #ETCD_CORS=\"\" #[cluster] ETCD_INITIAL_ADVERTISE_PEER_URLS = \"https://172.16.16.119:2380\" # if you use different ETCD_NAME (e.g. test), # set ETCD_INITIAL_CLUSTER value for this name, i.e. \"test=http://...\" ETCD_INITIAL_CLUSTER = \"etcd-node1=https://172.16.16.119:2380,etcd-node2=https://172.16.16.120:2380,etcd-node3=https://172.16.16.121:2380\" ETCD_INITIAL_CLUSTER_STATE = \"new\" ETCD_INITIAL_CLUSTER_TOKEN = \"k8s-etcd-cluster\" ETCD_ADVERTISE_CLIENT_URLS = \"https://172.16.16.119:2379\" #[security] CLIENT_CERT_AUTH = \"true\" ETCD_CA_FILE = \"/alidata/kubernetes/ssl/ca.pem\" ETCD_CERT_FILE = \"/alidata/kubernetes/ssl/etcd.pem\" ETCD_KEY_FILE = \"/alidata/kubernetes/ssl/etcd-key.pem\" PEER_CLIENT_CERT_AUTH = \"true\" ETCD_PEER_CA_FILE = \"/alidata/kubernetes/ssl/ca.pem\" ETCD_PEER_CERT_FILE = \"/alidata/kubernetes/ssl/etcd.pem\" ETCD_PEER_KEY_FILE = \"/alidata/kubernetes/ssl/etcd-key.pem\"","title":"\u8bbe\u7f6eETCD\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#etcd_4","text":"[ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /etc/systemd/system/etcd.service [ Unit ] Description = Etcd Server After = network.target [ Service ] Type = simple WorkingDirectory = /var/lib/etcd EnvironmentFile = -/alidata/kubernetes/cfg/etcd.conf # set GOMAXPROCS to number of processors ExecStart = /bin/bash -c \"GOMAXPROCS= $( nproc ) /alidata/kubernetes/bin/etcd\" Type = notify [ Install ] WantedBy = multi-user.target","title":"\u521b\u5efaETCD\u7684\u7cfb\u7edf\u670d\u52a1"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_5","text":"systemctl daemon-reload systemctl enable etcd # \u5206\u53d1\u914d\u7f6e\u6587\u4ef6\uff0c\u5206\u53d1\u540e\u5728\u53e6\u5916\u4e24\u53f0\u673a\u5668\u91cd\u8f7d\u914d\u7f6e\u6587\u4ef6 scp -P 5203 /etc/systemd/system/etcd.service 172 .16.16.120:/etc/systemd/system/ scp -P 5203 /etc/systemd/system/etcd.service 172 .16.16.121:/etc/systemd/system/ # \u540c\u6b65\u542f\u52a8\u6240\u6709\u7684etcd\u8282\u70b9 mkdir /var/lib/etcd systemctl start etcd systemctl status etcd","title":"\u91cd\u8f7d\u7cfb\u7edf\u670d\u52a1"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_6","text":"[ root@Pro-k8s-master1 ~ ] # etcdctl --endpoints=https://172.16.16.119:2379 \\ --ca-file = /alidata/kubernetes/ssl/ca.pem \\ --cert-file = /alidata/kubernetes/ssl/etcd.pem \\ --key-file = /alidata/kubernetes/ssl/etcd-key.pem cluster-health member 140dd484abeb416a is healthy: got healthy result from https://172.16.16.119:2379 member 97de764ba7fa74f2 is healthy: got healthy result from https://172.16.16.121:2379 member f2ab1be129de49b0 is healthy: got healthy result from https://172.16.16.120:2379 cluster is healthy","title":"\u9a8c\u8bc1\u96c6\u7fa4"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#k8s-master","text":"","title":"K8S Master \u8282\u70b9\u90e8\u7f72"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_7","text":"\u51c6\u5907\u4e0b\u8f7d\u597d\u76841.12.3\u7248\u672c\u7684\u8f6f\u4ef6\u5305\uff0c\u89e3\u538b\u540e\u5c06kube-apiserver\uff0ckube-controller-manager\uff0ckube-scheduler\u62f7\u8d1d\u5230\u6240\u6709\u7684master\u8282\u70b9\u7684 /alidata/kubernetes/bin \u76ee\u5f55\u4e0b\u3002","title":"\u51c6\u5907\u8f6f\u4ef6\u5305"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#csrjson","text":"\u8fd9\u91cc\u6211\u9664\u4e86\u628ak8s\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u52a0\u8fdb\u53bb\u4e86\uff0c\u4ee5\u53cakubernetes\u7684ip 10.1.0.1\u548c\u963f\u91cc\u4e91\u7684\u79c1\u7f51\u8d1f\u8f7d\u5747\u8861\u7684\u5730\u5740\u6211\u4e5f\u52a0\u8fdb\u53bb\u4e86\uff0c\u907f\u514d\u540e\u7eedcontroller\u548cscheduler\u8bbf\u95ee\u5f02\u5e38\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat kubernetes-csr.json { \"CN\" : \"kubernetes\" , \"hosts\" : [ \"127.0.0.1\" , \"172.16.16.119\" , \"172.16.16.120\" , \"172.16.16.121\" , \"172.16.16.122\" , \"172.16.16.123\" , \"172.16.16.124\" , \"10.1.0.1\" , \"kubernetes\" , \"kubernetes.default\" , \"kubernetes.default.svc\" , \"kubernetes.default.svc.cluster\" , \"kubernetes.default.svc.cluster.local\" ] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] }","title":"\u521b\u5efa\u751f\u6210CSR\u7684JSON\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kubernetes_1","text":"cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes kubernetes-csr.json | cfssljson -bare kubernetes # \u5206\u53d1\u8bc1\u4e66 cp kubernetes*.pem /alidata/kubernetes/ssl/ # \u6ce8\u610f\u5206\u53d1\u5230\u6240\u6709\u8282\u70b9\uff0c\u5176\u4ed6\u8282\u70b9\u7565 scp -P 5203 kubernetes*.pem 172 .16.16.120:/alidata/kubernetes/ssl/","title":"\u751f\u6210Kubernetes\u7684\u8bc1\u4e66\u548c\u79c1\u94a5"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kube-apiservertoken","text":"[ root@Pro-k8s-master1 /alidata/src/ssl ] # head -c 16 /dev/urandom | od -An -t x | tr -d ' ' ad6d5bb607a186796d8861557df0d17f # master\u8282\u70b9\u5206\u53d1 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/ssl/bootstrap-token.csv ad6d5bb607a186796d8861557df0d17f,kubelet-bootstrap,10001, \"system:kubelet-bootstrap\" scp -P 5203 /alidata/kubernetes/ssl/bootstrap-token.csv 172 .16.16.120:/alidata/kubernetes/ssl/ scp -P 5203 /alidata/kubernetes/ssl/bootstrap-token.csv 172 .16.16.121:/alidata/kubernetes/ssl/","title":"\u521b\u5efakube-apiserver\u4f7f\u7528\u7684\u5ba2\u6237\u7aeftoken\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_8","text":"[ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/ssl/basic-auth.csv admin,admin,1 readonly,readonly,2 # master\u8282\u70b9\u5206\u53d1 scp -P 5203 /alidata/kubernetes/ssl/basic-auth.csv 172 .16.16.120:/alidata/kubernetes/ssl/ scp -P 5203 /alidata/kubernetes/ssl/basic-auth.csv 172 .16.16.121:/alidata/kubernetes/ssl/","title":"\u521b\u5efa\u57fa\u7840\u7528\u6237\u540d/\u5bc6\u7801\u8ba4\u8bc1\u914d\u7f6e"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kube-apiserver","text":"[ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/kube-apiserver.service [ Unit ] Description = Kubernetes API Server Documentation = https://github.com/GoogleCloudPlatform/kubernetes After = network.target [ Service ] ExecStart = /alidata/kubernetes/bin/kube-apiserver \\ --admission-control = NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,NodeRestriction \\ --bind-address = 0 .0.0.0 \\ --insecure-bind-address = 0 .0.0.0 \\ --authorization-mode = Node,RBAC \\ --runtime-config = rbac.authorization.k8s.io/v1 \\ --kubelet-https = true \\ --anonymous-auth = false \\ --basic-auth-file = /alidata/kubernetes/ssl/basic-auth.csv \\ --enable-bootstrap-token-auth \\ --token-auth-file = /alidata/kubernetes/ssl/bootstrap-token.csv \\ --service-cluster-ip-range = 10 .1.0.0/16 \\ --service-node-port-range = 20000 -40000 \\ --tls-cert-file = /alidata/kubernetes/ssl/kubernetes.pem \\ --tls-private-key-file = /alidata/kubernetes/ssl/kubernetes-key.pem \\ --client-ca-file = /alidata/kubernetes/ssl/ca.pem \\ --service-account-key-file = /alidata/kubernetes/ssl/ca-key.pem \\ --etcd-cafile = /alidata/kubernetes/ssl/ca.pem \\ --etcd-certfile = /alidata/kubernetes/ssl/kubernetes.pem \\ --etcd-keyfile = /alidata/kubernetes/ssl/kubernetes-key.pem \\ --etcd-servers = https://172.16.16.119:2379,https://172.16.16.120:2379,https://172.16.16.121:2379 \\ --enable-swagger-ui = true \\ --allow-privileged = true \\ --audit-log-maxage = 30 \\ --audit-log-maxbackup = 3 \\ --audit-log-maxsize = 100 \\ --audit-log-path = /alidata/kubernetes/log/api-audit.log \\ --event-ttl = 1h \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 Type = notify LimitNOFILE = 65536 [ Install ] WantedBy = multi-user.target","title":"\u914d\u7f6ekube-apiserver\u7684\u7cfb\u7edf\u914d\u7f6e"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#api-server","text":"systemctl daemon-reload systemctl enable kube-apiserver systemctl start kube-apiserver systemctl status kube-apiserver","title":"\u542f\u52a8api server"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#api-server_1","text":"\u56e0\u4e3a\u4f7f\u7528\u7684\u662f\u963f\u91cc\u4e91\u7684ECS\uff0c\u56e0\u6b64\u76f4\u63a5\u8d2d\u4e70\u4e86\u4e00\u4e2a\u963f\u91cc\u4e91\u7684\u5185\u7f51SLB\u5b9e\u73b0\u8d1f\u8f7d\u5206\u53d1\u7684\u529f\u80fd\u4e3aapiserver\u505aha\uff0c\u6ce8\u610f\u8d2d\u4e70\u65f6\u9009\u62e9\u7684\u7f51\u7edc\u7c7b\u578b\u8981\u548c\u73b0\u6709\u7684\u673a\u5668\u662f\u4e00\u81f4\u7684\uff0c\u5426\u5219\u65e0\u6cd5\u6dfb\u52a0\u540e\u7aef\u8282\u70b9\u3002 \u5728\u9009\u62e9\u8f6c\u53d1\u7684\u65f6\u5019\u7528\u4e8e\u63d0\u4f9bhttps\u76846443\u7aef\u53e3\u8f6c\u53d1\u5230\u540e\u7aef\u76848080\uff0chttp\u76848080\u8f6c\u53d1\u5230\u540e\u7aef\u76848080\uff0c\u6ce8\u610fhttps\u8fd9\u91cc\u8981\u6dfb\u52a0\u8bc1\u4e66\u5185\u5bb9\u3002 \u56fe\u5185\u8bc1\u4e66\u5185\u5bb9\u4e3a\u963f\u91cc\u4e91\u63d0\u4f9b\u7684\u8bc1\u4e66\u6837\u4f8b\u5185\u5bb9\uff0c\u9700\u8981\u5c06\u6211\u4eec\u81ea\u5df1\u751f\u6210\u7684kubernetes.pem\u548ckubernetes-key.pem\u7684\u5185\u5bb9\u624b\u52a8\u586b\u5199\u5230\u8fd9\u91cc\uff0c\u5e76\u4e14\u5c06\u8bc1\u4e66\u5e94\u7528\u624d\u53ef\u4ee5\u3002","title":"\u4e3aAPI Server\u505a\u8d1f\u8f7d"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#controller-manager","text":"\u6ce8\u610f\u8fd9\u91cc\u6307\u5b9a\u7684master\u5df2\u7ecf\u662fSLB\u7684IP\u4e86\uff0c\u914d\u7f6e\u5b8c\u6210\u4ee5\u540e\u5c06\u914d\u7f6e\u6587\u4ef6\u5206\u53d1\u5230\u6240\u6709\u7684master # \u5728\u9ad8\u53ef\u7528\u72b6\u6001\u4e0b\u8981\u5f00\u542fleader-elect=true [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/kube-controller-manager.service [ Unit ] Description = Kubernetes Controller Manager Documentation = https://github.com/GoogleCloudPlatform/kubernetes [ Service ] ExecStart = /alidata/kubernetes/bin/kube-controller-manager \\ --address = 0 .0.0.0 \\ --master = http://172.16.16.124:8080 \\ --allocate-node-cidrs = true \\ --service-cluster-ip-range = 10 .1.0.0/16 \\ --cluster-cidr = 10 .2.0.0/16 \\ --cluster-name = kubernetes \\ --cluster-signing-cert-file = /alidata/kubernetes/ssl/ca.pem \\ --cluster-signing-key-file = /alidata/kubernetes/ssl/ca-key.pem \\ --service-account-private-key-file = /alidata/kubernetes/ssl/ca-key.pem \\ --root-ca-file = /alidata/kubernetes/ssl/ca.pem \\ --leader-elect = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 [ Install ] WantedBy = multi-user.target","title":"\u51c6\u5907controller-manager\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#controller-manager_1","text":"systemctl daemon-reload systemctl enable kube-controller-manager systemctl start kube-controller-manager systemctl status kube-controller-manager","title":"\u542f\u52a8Controller-Manager"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kube-scheduler","text":"\u8fd9\u91cc\u6307\u5b9a\u7684master\u540c\u6837\u662fSLB\u7684VIP\u5730\u5740\uff0c\u914d\u7f6e\u5b8c\u6210\u4ee5\u540e\u5206\u53d1\u5230\u6240\u6709\u7684master\u8282\u70b9\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/kube-scheduler.service [ Unit ] Description = Kubernetes Scheduler Documentation = https://github.com/GoogleCloudPlatform/kubernetes [ Service ] ExecStart = /alidata/kubernetes/bin/kube-scheduler \\ --address = 0 .0.0.0 \\ --master = http://172.16.16.124:8080 \\ --leader-elect = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 [ Install ] WantedBy = multi-user.target","title":"\u51c6\u5907kube-scheduler\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kube-scheduler_1","text":"systemctl daemon-reload systemctl enable kube-scheduler systemctl start kube-scheduler systemctl status kube-scheduler","title":"\u542f\u52a8kube-scheduler"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kubectl","text":"\u9996\u5148\u51c6\u5907\u597dkubectl\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5206\u53d1\u5230\u6240\u6709\u7684master\u8282\u70b9\uff0c\u7136\u540e\u521b\u5efaadmin\u7684\u8bc1\u4e66\u7b7e\u540d\u8bf7\u6c42 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat admin-csr.json { \"CN\" : \"admin\" , \"hosts\" : [] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"system:masters\" , \"OU\" : \"System\" } ] } \u751f\u6210admin\u8bc1\u4e66\u548c\u79c1\u94a5 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes admin-csr.json | cfssljson -bare admin \u8bbe\u7f6e\u96c6\u7fa4\u53c2\u6570\uff0c\u6ce8\u610fmaster\u7684ip\u4e3avip\uff0c\u8bc1\u4e66\u4ee5\u5d4c\u5165\u7684\u5f62\u5f0f\u751f\u6210config\u6587\u4ef6\u3002 kubectl config set-cluster kubernetes \\ --certificate-authority = /alidata/kubernetes/ssl/ca.pem \\ --embed-certs = true \\ --server = https://172.16.16.124:6443 \u8bbe\u7f6e\u5ba2\u6237\u7aef\u8ba4\u8bc1\u53c2\u6570 kubectl config set-credentials admin \\ --client-certificate = /alidata/kubernetes/ssl/admin.pem \\ --embed-certs = true \\ --client-key = /alidata/kubernetes/ssl/admin-key.pem \u8bbe\u7f6e\u4e0a\u4e0b\u6587\u53c2\u6570 kubectl config set-context kubernetes \\ --cluster = kubernetes \\ --user = admin \u8bbe\u7f6e\u9ed8\u8ba4\u4e0a\u4e0b\u6587 kubectl config use-context kubernetes \u67e5\u770b\u5f53\u524dconfig # \u67e5\u770b\u7684\u8fd9\u4e2a\u6587\u4ef6\u5728/root/.kube\u76ee\u5f55\u4e0b\uff0c\u540d\u79f0\u4e3aconfig\uff0c\u4e0a\u8ff0\u64cd\u4f5c\u9700\u8981\u5728\u6240\u6709master\u8282\u70b9\u64cd\u4f5c [ root@Pro-k8s-master1 /alidata/src/ssl ] # kubectl config view apiVersion: v1 clusters: - cluster: certificate-authority-data: DATA+OMITTED server: https://172.16.16.124:6443 name: kubernetes contexts: - context: cluster: kubernetes user: admin name: kubernetes current-context: kubernetes kind: Config preferences: {} users: - name: admin user: client-certificate-data: REDACTED client-key-data: REDACTED \u4f7f\u7528kubectl\u5de5\u5177 [ root@Pro-k8s-master1 /alidata/src/ssl ] # kubectl get cs NAME STATUS MESSAGE ERROR controller-manager Healthy ok scheduler Healthy ok etcd-1 Healthy { \"health\" : \"true\" } etcd-0 Healthy { \"health\" : \"true\" } etcd-2 Healthy { \"health\" : \"true\" }","title":"\u90e8\u7f72kubectl"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#node","text":"\u51c6\u5907node\u8282\u70b9\u4e8c\u8fdb\u5236\u5305\uff0c\u5c06kubelet\uff0ckube-proxy\u5206\u53d1\u5230\u6240\u6709node\u8282\u70b9\u7684/alidata/kubernetes/bin\u4e0b\u3002 \u521b\u5efa\u89d2\u8272\u7ed1\u5b9a kubectl create clusterrolebinding kubelet-bootstrap --clusterrole = system:node-bootstrapper --user = kubelet-bootstrap \u521b\u5efa kubelet bootstrapping kubeconfig \u6587\u4ef6 \u8bbe\u7f6e\u96c6\u7fa4\u53c2\u6570 kubectl config set-cluster kubernetes \\ --certificate-authority = /alidata/kubernetes/ssl/ca.pem \\ --embed-certs = true \\ --server = https://172.16.16.124:6443 \\ --kubeconfig = bootstrap.kubeconfig \u8bbe\u7f6e\u5ba2\u6237\u7aef\u8ba4\u8bc1\u53c2\u6570 # \u6ce8\u610f\u8fd9token\u662fkube-apiserver\u4f7f\u7528\u7684\u5ba2\u6237\u7aeftoken\u6587\u4ef6\u4e2d\u7684token\uff0c\u586b\u5199\u5728\u8fd9\u91cc\u3002 kubectl config set-credentials kubelet-bootstrap \\ --token = ad6d5bb607a186796d8861557df0d17f \\ --kubeconfig = bootstrap.kubeconfig \u8bbe\u7f6e\u4e0a\u4e0b\u6587\u53c2\u6570 kubectl config set-context default \\ --cluster = kubernetes \\ --user = kubelet-bootstrap \\ --kubeconfig = bootstrap.kubeconfig \u9009\u62e9\u9ed8\u8ba4\u4e0a\u4e0b\u6587 kubectl config use-context default --kubeconfig = bootstrap.kubeconfig \u56e0\u4e3a\u6307\u5b9a\u4e86 --kubeconfig \uff0c\u56e0\u6b64\u4f1a\u5728\u5f53\u524d\u8def\u5f84\u4e0b\u751f\u6210\u4e00\u4e2abootstarp.kubeconfig\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e2akubeconfig\u6587\u4ef6\u5206\u53d1\u5230\u5176\u4ed6\u8282\u70b9\uff0c\u56e0\u4e3a\u76ee\u524d\u53ea\u6709master\u4e0a\u6709kubectl\u547d\u4ee4\uff0c\u56e0\u6b64\u5728master\u4e0a\u64cd\u4f5c\u73a9\u4e86\u4ee5\u540e\u628a\u8fd9\u4e2a\u6587\u4ef6\u5206\u53d1\u5c31\u53ef\u4ee5 cp bootstrap.kubeconfig /alidata/kubernetes/cfg # \u53ea\u6709node\u8282\u70b9\u9700\u8981 scp -P 5203 bootstrap.kubeconfig 172 .16.16.122:/alidata/kubernetes/cfg scp -P 5203 bootstrap.kubeconfig 172 .16.16.123:/alidata/kubernetes/cfg \u8bbe\u7f6eCNI\u7684\u652f\u6301 mkdir -p /etc/cni/net.d [ root@Pro-k8s-node1 ~ ] # vim /etc/cni/net.d/10-default.conf { \"name\" : \"flannel\" , \"type\" : \"flannel\" , \"delegate\" : { \"bridge\" : \"docker0\" , \"isDefaultGateway\" : true, \"mtu\" : 1400 } } \u521b\u5efakubelet\u76ee\u5f55 mkdir /var/lib/kubelet \u51c6\u5907kubelet\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 [ root@Pro-k8s-node1 ~ ] # cat /usr/lib/systemd/system/kubelet.service [ Unit ] Description = Kubernetes Kubelet Documentation = https://github.com/GoogleCloudPlatform/kubernetes After = docker.service Requires = docker.service [ Service ] WorkingDirectory = /var/lib/kubelet ExecStart = /alidata/kubernetes/bin/kubelet \\ --address = 172 .16.16.122 \\ --hostname-override = 172 .16.16.122 \\ --pod-infra-container-image = mirrorgooglecontainers/pause-amd64:3.0 \\ --experimental-bootstrap-kubeconfig = /alidata/kubernetes/cfg/bootstrap.kubeconfig \\ --kubeconfig = /alidata/kubernetes/cfg/kubelet.kubeconfig \\ --cert-dir = /alidata/kubernetes/ssl \\ --network-plugin = cni \\ --cni-conf-dir = /etc/cni/net.d \\ --cni-bin-dir = /alidata/kubernetes/bin/cni \\ --cluster-dns = 10 .1.0.2 \\ --cluster-domain = cluster.local. \\ --hairpin-mode hairpin-veth \\ --allow-privileged = true \\ --fail-swap-on = false \\ --logtostderr = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 \u542f\u52a8kubelet systemctl daemon-reload systemctl enable kubelet systemctl start kubelet systemctl status kubelet \u67e5\u770b\u8fd9\u4e2a\u65f6\u5019kubelet\u662f\u5426\u542f\u52a8\u6b63\u5e38\uff0c\u5982\u679cnode\u8282\u70b9\u7684kubelet\u542f\u52a8\u662f\u6b63\u5e38\u7684\u8bdd\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728master\u8282\u70b9\u67e5\u770b\u5230\u8bf7\u6c42\u4e86\uff0c\u56de\u5230master\u4e0a\u67e5\u770b\u3002 # master\u8282\u70b9 kubectl get csr \u9ed8\u8ba4\u770b\u5230\u7684CONDITION\u5185\u5bb9\u5e94\u8be5\u662f Pending \u72b6\u6001\u7684\uff0c\u6b64\u65f6\u9700\u8981\u6279\u51c6kubelet\u7684TLS\u8ba4\u8bc1\u8bf7\u6c42\u3002 kubectl get csr | grep 'Pending' | awk 'NR>0{print $1}' | xargs kubectl certificate approve \u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u67e5\u770b\u8282\u70b9\u72b6\u6001\u5df2\u7ecf\u662fReady\u7684\u72b6\u6001\u4e86 [ root@Pro-k8s-master1 /alidata/src/ssl ] # kubectl get node NAME STATUS ROLES AGE VERSION 172 .16.16.122 Ready <none> 5h1m v1.12.3 172 .16.16.123 Ready <none> 5h1m v1.12.3","title":"Node\u8282\u70b9\u90e8\u7f72"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#kube-proxy","text":"kube-proxy\u540c\u6837\u8fd8\u662f\u53ea\u90e8\u7f72\u5728node\u8282\u70b9\u4e0a \u5728\u4e4b\u524d\u7684\u64cd\u4f5c\u4e2d\uff0c\u5df2\u7ecf\u5c06kube-proxy\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5206\u53d1\u5230node\u8282\u70b9\u4e86\uff0c\u56e0\u6b64\u8fd9\u91cc\u5f00\u59cb\u51c6\u5907\u8bc1\u4e66\u7684json\u6587\u4ef6\u3002 [ root@Pro-k 8 s-master 1 /alidata/src/ssl ] # cat kube-proxy-csr.json { \"CN\" : \"system:kube-proxy\" , \"hosts\" : [], \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 }, \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210\u8bc1\u4e66 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy \u5206\u53d1\u8bc1\u4e66\u5230\u6240\u6709\u7684(Node)\u8282\u70b9 cp kube-proxy*.pem /alidata/kubernetes/ssl/ scp -P 5203 kube-proxy*.pem 172 .16.16.122:/alidata/kubernetes/ssl/ scp -P 5203 kube-proxy*.pem 172 .16.16.123:/alidata/kubernetes/ssl/ \u521b\u5efakube-proxy\u7684kubeconfig\u914d\u7f6e\u6587\u4ef6 kubectl config set-cluster kubernetes \\ --certificate-authority = /alidata/kubernetes/ssl/ca.pem \\ --embed-certs = true \\ --server = https://172.16.16.124:6443 \\ --kubeconfig = kube-proxy.kubeconfig kubectl config set-credentials kube-proxy \\ --client-certificate = /alidata/kubernetes/ssl/kube-proxy.pem \\ --client-key = /alidata/kubernetes/ssl/kube-proxy-key.pem \\ --embed-certs = true \\ --kubeconfig = kube-proxy.kubeconfig kubectl config set-context default \\ --cluster = kubernetes \\ --user = kube-proxy \\ --kubeconfig = kube-proxy.kubeconfig kubectl config use-context default --kubeconfig = kube-proxy.kubeconfig \u548ckubelet\u4e00\u6837\uff0c\u628a\u8fd9\u4e2akube-config\u6587\u4ef6\u5206\u53d1\u5230\u6240\u6709\u7684node\u8282\u70b9 cp kube-proxy.kubeconfig /alidata/kubernetes/cfg/ scp -P 5203 kube-proxy.kubeconfig 172 .16.16.122:/alidata/kubernetes/cfg/ scp -P 5203 kube-proxy.kubeconfig 172 .16.16.123:/alidata/kubernetes/cfg/ \u521b\u5efakubeproxy\u7684\u670d\u52a1\u914d\u7f6e\u6587\u4ef6 mkdir /var/lib/kube-proxy [ root@Pro-k8s-node2 ~ ] # cat /usr/lib/systemd/system/kube-proxy.service [ Unit ] Description = Kubernetes Kube-Proxy Server Documentation = https://github.com/GoogleCloudPlatform/kubernetes After = network.target [ Service ] WorkingDirectory = /var/lib/kube-proxy ExecStart = /alidata/kubernetes/bin/kube-proxy \\ --bind-address = 172 .16.16.123 \\ --hostname-override = 172 .16.16.123 \\ --kubeconfig = /alidata/kubernetes/cfg/kube-proxy.kubeconfig \\ --masquerade-all \\ --feature-gates = SupportIPVSProxyMode = true \\ --proxy-mode = ipvs \\ --ipvs-min-sync-period = 5s \\ --ipvs-sync-period = 5s \\ --ipvs-scheduler = rr \\ --logtostderr = true \\ --v = 2 \\ --logtostderr = false \\ --log-dir = /alidata/kubernetes/log Restart = on-failure RestartSec = 5 LimitNOFILE = 65536 [ Install ] WantedBy = multi-user.target \u5b89\u88c5kube-proxy\u4f7f\u7528lvs\u7684\u4f9d\u8d56\u3002 yum install -y ipvsadm ipset conntrack \u542f\u52a8kube-proxy systemctl daemon-reload systemctl enable kube-proxy systemctl start kube-proxy systemctl status kube-proxy \u5728node\u8282\u70b9\u68c0\u67e5kube-proxy\u7684\u670d\u52a1\u72b6\u6001 ipvsadm -L -n","title":"\u90e8\u7f72kube-proxy"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#flannel","text":"\u8003\u8651\u5230\u963f\u91cc\u4e91\u7684\u7f51\u7edc\u6682\u65f6\u5e76\u4e0d\u652f\u6301BGP\uff0c\u56e0\u6b64\u65e0\u6cd5\u4f7f\u7528calico-BGP\uff0c\u800ccalico-ipip\u548cflannel-vxlan\u5728\u6027\u80fd\u4e0a\u76f8\u5dee\u65e0\u51e0\uff0c\u4f46\u662fcalico\u7684\u7ef4\u62a4\u96be\u5ea6\u76f8\u8f83\u4e8eflannel\u8981\u9ad8\u5f88\u591a\uff0c\u56e0\u6b64\u8fd9\u91cc\u91c7\u7528flannel\u4f5c\u4e3a\u7f51\u7edc\u7ec4\u4ef6\u3002 \u521b\u5efaflannel\u7684\u8bc1\u4e66json\u6587\u4ef6 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat flanneld-csr.json { \"CN\" : \"flanneld\" , \"hosts\" : [] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"names\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"BeiJing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } \u751f\u6210\u8bc1\u4e66\u5e76\u5206\u53d1\u8bc1\u4e66 cfssl gencert -ca = /alidata/kubernetes/ssl/ca.pem \\ -ca-key = /alidata/kubernetes/ssl/ca-key.pem \\ -config = /alidata/kubernetes/ssl/ca-config.json \\ -profile = kubernetes flanneld-csr.json | cfssljson -bare flanneld # \u6ce8\u610f\u8fd9\u4e2a\u662f\u5206\u53d1\u5230\u96c6\u7fa4\u91cc\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9 cp flanneld*.pem /alidata/kubernetes/ssl/ scp -P 5203 flanneld*.pem 172 .16.16.120:/alidata/kubernetes/ssl/ \u51c6\u5907flannel\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 cp flanneld mk-docker-opts.sh remove-docker0.sh /alidata/kubernetes/bin/ # \u5206\u53d1\u5230\u5176\u4ed6\u7684\u8282\u70b9\uff0c\u6b64\u5904\u53ea\u5217\u51fa\u4e00\u4e2a\u3002 scp -P 5203 flanneld mk-docker-opts.sh remove-docker0.sh 172 .16.16.120:/alidata/kubernetes/bin/ \u914d\u7f6eflannel\uff0c\u914d\u7f6e\u5b8c\u6210\u4ee5\u540e\u8fdb\u884c\u5206\u53d1\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u4f9bflannel\u4f7f\u7528\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /alidata/kubernetes/cfg/flannel FLANNEL_ETCD = \"-etcd-endpoints=https://172.16.16.119:2379,https://172.16.16.120:2379,https://172.16.16.121:2379\" FLANNEL_ETCD_KEY = \"-etcd-prefix=/kubernetes/network\" FLANNEL_ETCD_CAFILE = \"--etcd-cafile=/alidata/kubernetes/ssl/ca.pem\" FLANNEL_ETCD_CERTFILE = \"--etcd-certfile=/alidata/kubernetes/ssl/flanneld.pem\" FLANNEL_ETCD_KEYFILE = \"--etcd-keyfile=/alidata/kubernetes/ssl/flanneld-key.pem\" \u8bbe\u7f6eflannel\u7684\u7cfb\u7edf\u670d\u52a1\u914d\u7f6e [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /usr/lib/systemd/system/flannel.service [ Unit ] Description = Flanneld overlay address etcd agent After = network.target Before = docker.service [ Service ] EnvironmentFile = -/alidata/kubernetes/cfg/flannel ExecStartPre = /alidata/kubernetes/bin/remove-docker0.sh ExecStart = /alidata/kubernetes/bin/flanneld ${ FLANNEL_ETCD } ${ FLANNEL_ETCD_KEY } ${ FLANNEL_ETCD_CAFILE } ${ FLANNEL_ETCD_CERTFILE } ${ FLANNEL_ETCD_KEYFILE } ExecStartPost = /alidata/kubernetes/bin/mk-docker-opts.sh -d /run/flannel/docker Type = notify [ Install ] WantedBy = multi-user.target RequiredBy = docker.service flannel\u96c6\u6210CNI # https://github.com/containernetworking/plugins/releases wget https://github.com/containernetworking/plugins/releases/download/v0.7.1/cni-plugins-amd64-v0.7.1.tgz # \u540c\u6837\u5c06cni\u7ec4\u4ef6\u5206\u53d1\u5230\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0a\u4e00\u4efd mkdir /alidata/kubernetes/bin/cni tar zxf cni-plugins-amd64-v0.7.1.tgz -C /alidata/kubernetes/bin/cni chmod +x /alidata/kubernetes/bin/* scp -P 5203 -r /alidata/kubernetes/bin/cni/* 172 .16.16.120:/alidata/kubernetes/bin/cni/ \u8bbe\u7f6eetcd\u7684key /alidata/kubernetes/bin/etcdctl --ca-file /alidata/kubernetes/ssl/ca.pem --cert-file /alidata/kubernetes/ssl/flanneld.pem --key-file /alidata/kubernetes/ssl/flanneld-key.pem \\ --no-sync -C https://172.16.16.119:2379,https://172.16.16.120:2379,https://172.16.16.121:2379 \\ mk /kubernetes/network/config '{ \"Network\": \"10.2.0.0/16\", \"Backend\": { \"Type\": \"vxlan\", \"VNI\": 1 }}' >/dev/null 2 > & 1 \u67e5\u770b\u8fd9\u4e2akey\u662f\u5426\u8bbe\u7f6e\u6210\u529f\uff0c\u53ea\u5728\u4e00\u4e2a\u8282\u70b9\u64cd\u4f5c\u5c31\u53ef\u4ee5\uff0c\u56e0\u4e3a\u8fd9\u4e2aetcd\u662f\u4e00\u4e2a\u96c6\u7fa4\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # etcdctl --endpoints=https://172.16.16.119:2379 \\ --ca-file = /alidata/kubernetes/ssl/ca.pem \\ --cert-file = /alidata/kubernetes/ssl/etcd.pem \\ --key-file = /alidata/kubernetes/ssl/etcd-key.pem get /kubernetes/network/config { \"Network\" : \"10.2.0.0/16\" , \"Backend\" : { \"Type\" : \"vxlan\" , \"VNI\" : 1 }} \u914d\u7f6eDocker\u4f7f\u7528flannel [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /etc/systemd/system/docker.service [ Unit ] Description = Docker Application Container Engine Documentation = http://docs.docker.io After = network-online.target firewalld.service flannel.service Wants = network-online.target Requires = flannel.service [ Service ] Environment = \"PATH=/usr/local/docker/bin:/bin:/sbin:/usr/bin:/usr/sbin\" EnvironmentFile = -/run/flannel/docker #ExecStart=/usr/local/docker/bin/dockerd --log-level=error $DOCKER_NETWORK_OPTIONS ExecStart = /usr/local/docker/bin/dockerd $DOCKER_OPTS ExecReload = /bin/kill -s HUP $MAINPID Restart = on-failure RestartSec = 5 LimitNOFILE = infinity LimitNPROC = infinity LimitCORE = infinity Delegate = yes KillMode = process [ Install ] WantedBy = multi-user.target \u4e3b\u8981\u6709\u51e0\u4e2a\u70b9\uff0c\u4e00\u4e2a\u662fAfter\u6dfb\u52a0flannel.server\uff0cRequires\u8981\u6dfb\u52a0flannel.service\uff0c\u5982\u679c\u7f51\u7edc\u8d77\u4e0d\u6765\u7684\u8bdd\uff0c\u90a3\u4e48docker\u5c31\u4e0d\u8d77\u6765\u3002\u540c\u65f6\u5728Service\u6bb5\u6dfb\u52a0EnvironmentFile=-/run/flannel/docker\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662f\u7531flannel\u542f\u52a8\u7684\u65f6\u5019\u901a\u8fc7mk-docker-opts.sh\u751f\u6210\u7684\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u901a\u8fc7\u2014bip\u6765\u5212\u5206\u7f51\u6bb5\u3002 [ root@Pro-k8s-master1 /alidata/src/ssl ] # cat /run/flannel/docker DOCKER_OPT_BIP = \"--bip=10.2.26.1/24\" DOCKER_OPT_IPMASQ = \"--ip-masq=true\" DOCKER_OPT_MTU = \"--mtu=1450\" DOCKER_OPTS = \" --bip=10.2.26.1/24 --ip-masq=true --mtu=1450\" \u91cd\u542fdocker systemctl daemon-reload systemctl restart docker \u89c2\u5bdf\u7f51\u5361\u4fe1\u606f [ root@Pro-k8s-master1 /alidata/src/ssl ] # ifconfig docker0: flags = 4099 <UP,BROADCAST,MULTICAST> mtu 1500 inet 10 .2.26.1 netmask 255 .255.255.0 broadcast 10 .2.26.255 ether 02 :42:97:b9:64:bd txqueuelen 0 ( Ethernet ) RX packets 0 bytes 0 ( 0 .0 B ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 ( 0 .0 B ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 eth0: flags = 4163 <UP,BROADCAST,RUNNING,MULTICAST> mtu 1500 inet 172 .16.16.119 netmask 255 .255.255.0 broadcast 172 .16.16.255 ether 00 :16:3e:08:1b:46 txqueuelen 1000 ( Ethernet ) RX packets 8365198 bytes 1280511623 ( 1 .1 GiB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 8723511 bytes 1741235760 ( 1 .6 GiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 flannel.1: flags = 4163 <UP,BROADCAST,RUNNING,MULTICAST> mtu 1450 inet 10 .2.26.0 netmask 255 .255.255.255 broadcast 0 .0.0.0 ether 92 :d2:90:73:57:5c txqueuelen 0 ( Ethernet ) RX packets 2678 bytes 1052685 ( 1 .0 MiB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 2100 bytes 297679 ( 290 .7 KiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 lo: flags = 73 <UP,LOOPBACK,RUNNING> mtu 65536 inet 127 .0.0.1 netmask 255 .0.0.0 loop txqueuelen 1 ( Local Loopback ) RX packets 3848161 bytes 647614198 ( 617 .6 MiB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 3848161 bytes 647614198 ( 617 .6 MiB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 \u53ef\u4ee5\u770b\u5230docker0\u548cflannel1.1\u7684\u5730\u5740\u662f\u4e00\u6bb5\u7684\uff0c\u6bcf\u4e2a\u8282\u70b9\u5206\u5230\u7684\u7f51\u6bb5\u662f\u4e0d\u4e00\u6837\u7684\u3002flannel\u90e8\u7f72\u5b8c\u6210","title":"Flannel\u90e8\u7f72"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#_9","text":"","title":"\u4e00\u4e9b\u5fc5\u5907\u7ec4\u4ef6"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#coredns","text":"\u7565","title":"CoreDns"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#helm","text":"\u7565","title":"Helm"},{"location":"kubernetes/01-k8s\u7eaf\u624b\u5de5\u90e8\u7f72/#dashboard","text":"\u7565","title":"DashBoard"},{"location":"\u672a\u5206\u7c7b\u9875\u9762/\u672a\u5f52\u6863\u9875\u9762/","text":"\u672a\u5f52\u6863\u9875\u9762 \u00b6 \u5b89\u88c5\u53cc\u7cfb\u7edf \u00b6 windows10+deepin15.9 \u00b6 \u8bf4\u660e\uff1a\u5728windows10\u4e0b\u5b89\u88c5deepin15.9 1\u3001\u51c6\u5907\u6750\u6599\uff1a U\u76d8 \u6df1\u5ea6\u64cd\u4f5c\u7cfb\u7edf15.9\u955c\u50cf\u6587\u4ef6 \u6df1\u5ea6\u542f\u52a8\u76d8\u5236\u4f5c\u5de5\u5177 DiskGenius 2\u3001\u64cd\u4f5c\u6b65\u9aa4\uff1a\u4f7f\u75284\u5c06\u786c\u76d8\u5206\u51fa\u7a7a\u767d\u5206\u533a\uff0c\u5229\u75283\u5c062\u5bfc\u51651\u4e2d\uff0c\u91cd\u542f\u5b89\u88c5\u7cfb\u7edf\u3002 3\u3001\u53ef\u80fd\u6d89\u53ca\u5230\u7684\u64cd\u4f5c\u65b9\u6cd5\uff08\u8bf7\u53e6\u884c\u641c\u7d22\uff09\uff1a Diskgenius\u5206\u533a\u65b9\u6cd5 Bios U\u76d8\u542f\u52a8\u65b9\u6cd5 4\u3001\u5b89\u88c5\u540e\u7eed\u6b65\u9aa4\uff08\u53ef\u9009\uff09\uff1a \u66f4\u6362\u5f00\u673a\u542f\u52a8\u7cfb\u7edf\u987a\u5e8f\uff0c\u4f7fwindows10\u4e3a\u9ed8\u8ba4\u7b2c\u4e00\u9009\u9879 deepin\u547d\u4ee4\u884c\u4e0b cd /etc/grub.d mv 30_os-prober 08_os-prober # \u6539\u4e3a06~09\u90fd\u53ef\u4ee5 update-grub \u76f8\u5173\u7f51\u7ad9\uff1a deepin\u5b98\u65b9\u7f51\u7ad9 DiskGenius\u5b98\u65b9\u7f51\u7ad9","title":"\u672a\u5f52\u6863\u9875\u9762"},{"location":"\u672a\u5206\u7c7b\u9875\u9762/\u672a\u5f52\u6863\u9875\u9762/#_1","text":"","title":"\u672a\u5f52\u6863\u9875\u9762"},{"location":"\u672a\u5206\u7c7b\u9875\u9762/\u672a\u5f52\u6863\u9875\u9762/#_2","text":"","title":"\u5b89\u88c5\u53cc\u7cfb\u7edf"},{"location":"\u672a\u5206\u7c7b\u9875\u9762/\u672a\u5f52\u6863\u9875\u9762/#windows10deepin159","text":"\u8bf4\u660e\uff1a\u5728windows10\u4e0b\u5b89\u88c5deepin15.9 1\u3001\u51c6\u5907\u6750\u6599\uff1a U\u76d8 \u6df1\u5ea6\u64cd\u4f5c\u7cfb\u7edf15.9\u955c\u50cf\u6587\u4ef6 \u6df1\u5ea6\u542f\u52a8\u76d8\u5236\u4f5c\u5de5\u5177 DiskGenius 2\u3001\u64cd\u4f5c\u6b65\u9aa4\uff1a\u4f7f\u75284\u5c06\u786c\u76d8\u5206\u51fa\u7a7a\u767d\u5206\u533a\uff0c\u5229\u75283\u5c062\u5bfc\u51651\u4e2d\uff0c\u91cd\u542f\u5b89\u88c5\u7cfb\u7edf\u3002 3\u3001\u53ef\u80fd\u6d89\u53ca\u5230\u7684\u64cd\u4f5c\u65b9\u6cd5\uff08\u8bf7\u53e6\u884c\u641c\u7d22\uff09\uff1a Diskgenius\u5206\u533a\u65b9\u6cd5 Bios U\u76d8\u542f\u52a8\u65b9\u6cd5 4\u3001\u5b89\u88c5\u540e\u7eed\u6b65\u9aa4\uff08\u53ef\u9009\uff09\uff1a \u66f4\u6362\u5f00\u673a\u542f\u52a8\u7cfb\u7edf\u987a\u5e8f\uff0c\u4f7fwindows10\u4e3a\u9ed8\u8ba4\u7b2c\u4e00\u9009\u9879 deepin\u547d\u4ee4\u884c\u4e0b cd /etc/grub.d mv 30_os-prober 08_os-prober # \u6539\u4e3a06~09\u90fd\u53ef\u4ee5 update-grub \u76f8\u5173\u7f51\u7ad9\uff1a deepin\u5b98\u65b9\u7f51\u7ad9 DiskGenius\u5b98\u65b9\u7f51\u7ad9","title":"windows10+deepin15.9"},{"location":"\u672a\u5206\u7c7b\u9875\u9762/\u8f6f\u4ef6\u5b89\u88c5/","text":"\u8f6f\u4ef6\u5b89\u88c5 \u00b6 openssl\u7f16\u8bd1\u5b89\u88c5 \u6dfb\u52a0\u5f00\u673a\u542f\u52a8\u9879 \u00b6 windows\u4e0b\u6dfb\u52a0\u5f00\u673a\u542f\u52a8\u9879 \u00b6 1.\u5c06\u6587\u4ef6\u5feb\u6377\u65b9\u5f0f\u6dfb\u52a0\u5230\u8fd9\u91cc C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp 2.run shell:startup \u6216 %programdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup","title":"\u8f6f\u4ef6\u5b89\u88c5"},{"location":"\u672a\u5206\u7c7b\u9875\u9762/\u8f6f\u4ef6\u5b89\u88c5/#_1","text":"openssl\u7f16\u8bd1\u5b89\u88c5","title":"\u8f6f\u4ef6\u5b89\u88c5"},{"location":"\u672a\u5206\u7c7b\u9875\u9762/\u8f6f\u4ef6\u5b89\u88c5/#_2","text":"","title":"\u6dfb\u52a0\u5f00\u673a\u542f\u52a8\u9879"},{"location":"\u672a\u5206\u7c7b\u9875\u9762/\u8f6f\u4ef6\u5b89\u88c5/#windows","text":"1.\u5c06\u6587\u4ef6\u5feb\u6377\u65b9\u5f0f\u6dfb\u52a0\u5230\u8fd9\u91cc C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp 2.run shell:startup \u6216 %programdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup","title":"windows\u4e0b\u6dfb\u52a0\u5f00\u673a\u542f\u52a8\u9879"},{"location":"\u672a\u5206\u7c7b\u9875\u9762/\u8f6f\u4ef6\u6536\u85cf/","text":"\u8f6f\u4ef6\u6536\u85cf \u00b6 RStudio-Server:\u636e\u8bf4\u662f\u53ef\u4ee5\u5c06Markdown\u6587\u672c\u8f6c\u6362\u6210PPT\u548cword\u7684\u5de5\u5177 RStudio-Server","title":"\u8f6f\u4ef6\u6536\u85cf"},{"location":"\u672a\u5206\u7c7b\u9875\u9762/\u8f6f\u4ef6\u6536\u85cf/#_1","text":"RStudio-Server:\u636e\u8bf4\u662f\u53ef\u4ee5\u5c06Markdown\u6587\u672c\u8f6c\u6362\u6210PPT\u548cword\u7684\u5de5\u5177 RStudio-Server","title":"\u8f6f\u4ef6\u6536\u85cf"},{"location":"\u8ba1\u7b97\u673a/\u6d4b\u8bd5\u9875\u9762/","text":"\u6d4b\u8bd5\u9875\u9762 \u00b6","title":"\u6d4b\u8bd5\u9875\u9762"},{"location":"\u8ba1\u7b97\u673a/\u6d4b\u8bd5\u9875\u9762/#_1","text":"","title":"\u6d4b\u8bd5\u9875\u9762"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/Domotize/","text":"Domotize \u00b6","title":"Domotize"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/Domotize/#domotize","text":"","title":"Domotize"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/Keil/","text":"Keil \u00b6 stm32\u6a21\u62df\u8bbe\u7f6e \u00b6 Project->Options-> ->Device\u6807\u7b7e\uff1a\u9009\u62e9STM32103ZF\uff08\u5c3d\u91cf\u9009\u5927\u5bb9\u91cf\uff09 ->Debug\u6807\u7b7e\uff1a\u9009\u62e9Use Simulator\uff08\u4f7f\u7528\u6a21\u62df\u5668\uff09 \u586b\u5199 CPU DLL: Parameter: SARMCM3.DLL -REMAP -MPU Dialog DLL: Parameter: DARMSTM.DLL -pSTM32F103ZE \u5728Command\u7a97\u53e3\u8f93\u5165\u7ed1\u5b9a\u4e32\u53e3\u547d\u4ee4 MODE COM7 9600, 0, 8, 1 # \u6253\u5f00com7\uff0c\u6ce2\u7279\u7387\uff0c\u6821\u9a8c\u4f4d\uff0c\u6570\u636e\u4f4d\uff0c\u505c\u6b62\u4f4d ASSIGN COM7 < S2IN > S2OUT # \u914d\u7f6ecom7\u7ed1\u5b9a\u5230<\u5355\u7247\u673a\u4e32\u53e32\u8f93\u5165\u63a5\u53e3>\u5355\u7247\u673a\u4e32\u53e32\u8f93\u51fa\u63a5\u53e3","title":"Keil"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/Keil/#keil","text":"","title":"Keil"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/Keil/#stm32","text":"Project->Options-> ->Device\u6807\u7b7e\uff1a\u9009\u62e9STM32103ZF\uff08\u5c3d\u91cf\u9009\u5927\u5bb9\u91cf\uff09 ->Debug\u6807\u7b7e\uff1a\u9009\u62e9Use Simulator\uff08\u4f7f\u7528\u6a21\u62df\u5668\uff09 \u586b\u5199 CPU DLL: Parameter: SARMCM3.DLL -REMAP -MPU Dialog DLL: Parameter: DARMSTM.DLL -pSTM32F103ZE \u5728Command\u7a97\u53e3\u8f93\u5165\u7ed1\u5b9a\u4e32\u53e3\u547d\u4ee4 MODE COM7 9600, 0, 8, 1 # \u6253\u5f00com7\uff0c\u6ce2\u7279\u7387\uff0c\u6821\u9a8c\u4f4d\uff0c\u6570\u636e\u4f4d\uff0c\u505c\u6b62\u4f4d ASSIGN COM7 < S2IN > S2OUT # \u914d\u7f6ecom7\u7ed1\u5b9a\u5230<\u5355\u7247\u673a\u4e32\u53e32\u8f93\u5165\u63a5\u53e3>\u5355\u7247\u673a\u4e32\u53e32\u8f93\u51fa\u63a5\u53e3","title":"stm32\u6a21\u62df\u8bbe\u7f6e"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/stm32/","text":"stm32 \u00b6","title":"stm32"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/stm32/#stm32","text":"","title":"stm32"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u673a\u667a\u4e91/","text":"\u673a\u667a\u4e91 \u00b6","title":"\u673a\u667a\u4e91"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u673a\u667a\u4e91/#_1","text":"","title":"\u673a\u667a\u4e91"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/","text":"\u6811\u8393\u6d3e \u00b6 \u5b89\u88c5 \u00b6 1\u3001raspbian\u4e0b\u8f7d https://www.raspberrypi.org/ noobs.zip\u6216raspbian.img 2\u3001\u51c6\u5907TF\u5361 \u7528SD Card Formatter\u8f6f\u4ef6\u683c\u5f0f\u5316\uff0c\u7528Win32DiskImager\u5bfc\u5165img\u6587\u4ef6\uff0c\u6216\u76f4\u63a5\u89e3\u538bnoobs.zip\u5230TF\u5361 3\u3001\u4f7f\u80fdSSH \u4f7f\u7528powershell\u5728\u70e7\u5199\u597d\u7684\u76d8\u7b26(\u9ed8\u8ba4\u540d\u5b57\u662fboot)\u4e2d\u952e\u5165new-item ssh -type file\uff0c\u6765\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u7c7b\u578b\u7684ssh\u6587\u4ef6 3\u3001\u63d2\u5361\u4e0a\u7535\u8fde\u63a5\u6709\u7ebf\u7f51\u5b89\u88c5 noob\u5b89\u88c5\u9700\u8981\u7528\u663e\u793a\u5668\uff0craspbian\u88f8\u7cfb\u7edf\u76f4\u63a5SSH\u8fdc\u7a0b\u8fde\u63a5 \u9ed8\u8ba4\u8d26\u53f7pi\uff0c\u5bc6\u7801raspberry\u3002 4\u3001\u5b89\u88c5vim\uff0c\u4e5f\u53ef\u76f4\u63a5\u4f7f\u7528vi sudo apt install vim 5\u3001\u8fde\u63a5\u65e0\u7ebf\u7f51 iwlist wlan0 scan # \u626b\u63cf\u53ef\u7528wifi\uff0c\u6ca1\u5565\u7528 sudo vim /etc/wpa_supplicant/wpa_supplicant.conf # \u6253\u5f00\u6587\u4ef6 \u5728\u672b\u5c3e\u6dfb\u52a0\u4ee5\u4e0b\u5b57\u6bb5 network={ ssid=\"\u4f60\u7684wifi\u540d\" psk=\"wifi\u5bc6\u7801\" key_mgmt=WPA-PSK # \u975e\u5fc5\u9700 priority=1 # \u975e\u5fc5\u9700 } \u4fdd\u5b58\u67e5\u770b\u8fde\u63a5 ifconfig wlan0 \u82e5\u6728\u6709IP\u7b49\u4fe1\u606f\u5219\u8868\u793a\u6ca1\u8fde\u4e0a\uff0c ifconfig wlan0 down ifconfig wlan0 up \u6216 reboot \u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528SSH2\u8fdc\u7a0b\u8fde\u63a5\u4e86 \u66f4\u6362\u8f6f\u4ef6\u6e90 \u00b6 apt\u7684\u8f6f\u4ef6\u6e90\u5730\u5740\u5728/etc/apt/sources.list\u4e2d 1\u3001\u6253\u5f00\u6587\u4ef6 sudo vi /etc/apt/sources.list \u6216 $ sudo apt edit-sources 2\u3001\u7f16\u8f91 \u53d8\u6210\u5982\u4e0b\u683c\u5f0f\u7684\u5185\u5bb9,\u5176\u4ed6\u53ef\u4ee5#\u6ce8\u91ca\u6389 deb http://mirrors.aliyun.com/raspbian/raspbian/ stretch main contrib non-free rpi deb-src http://mirrors.aliyun.com/raspbian/raspbian/ stretcth main contrib non-free rpi \u8bed\u6cd5 deb\uff1a\u6863\u6848\u7c7b\u578b\uff0c\u4e8c\u8fdb\u5236\u9884\u7f16\u8bd1\u8f6f\u4ef6\u5305 deb-src\uff1a\u6863\u6848\u7c7b\u578b\uff0c\u7528\u4e8e\u7f16\u8bd1\u4e8c\u8fdb\u5236\u8f6f\u4ef6\u5305\u7684\u6e90\u4ee3\u7801 http://...\uff1a\u4ed3\u5e93\u5730\u5740\uff0c\u8fd9\u91cc\u4f7f\u7528\u963f\u91cc\u4e91\u5f00\u6e90\u955c\u50cf\u7ad9OPSX\u7684\u6e90\u4ed3\u5e93 stretch\uff1a\u53d1\u884c\u7248\uff0c\u7248\u672c \u8f6f\u4ef6\u5305\u5206\u7c7b\uff1a main \u5b98\u65b9\u652f\u6301\u7684\u81ea\u7531\u8f6f\u4ef6 contrib \u4e0d\u5728main\u4e2d\u7684\u81ea\u7531\u8f6f\u4ef6 non-free \u975e\u81ea\u7531\u8f6f\u4ef6\u5305 rpi \u53ef\u80fd\u662frpi\u4e13\u7528 \u4fdd\u5b58\u5e76\u66f4\u65b0\u6e90 sudo apt update Raspbian \u00b6 /bin \u00b6 \u8be5\u76ee\u5f55\u4e3a\u547d\u4ee4\u6587\u4ef6\u76ee\u5f55\uff0c\u4e5f\u79f0\u4e3a\u4e8c\u8fdb\u5236\u76ee\u5f55\u3002\u5305\u542b\u4e86\u4f9b\u7cfb\u7edf\u7ba1\u7406\u5458\u53ca\u666e\u901a\u7528\u6237\u4f7f\u7528\u7684\u91cd\u8981\u7684linux\u547d\u4ee4\u548c\u4e8c\u8fdb\u5236\uff08\u53ef\u6267\u884c\uff09\u6587\u4ef6\uff0c\u5305\u542bshell\u89e3\u91ca\u5668\u7b49\u3002 \u251c\u2500\u2500 bash # Bourne Again Shell \u251c\u2500\u2500 bunzip2 # .bz2\u6587\u4ef6\u7684\u89e3\u538b\u7f29\u7a0b\u5e8f \u251c\u2500\u2500 bzcat # \u89e3\u538b\u7f29\u6307\u5b9a\u7684.bz2\u6587\u4ef6\uff0c\u5e76\u663e\u793a\u89e3\u538b\u7f29\u540e\u7684\u6587\u4ef6\u5185\u5bb9\u3002\u4fdd\u7559\u539f\u538b\u7f29\u6587\u4ef6\uff0c\u5e76\u4e14\u4e0d\u751f\u6210\u89e3\u538b\u7f29\u540e\u7684\u6587\u4ef6\u3002 \u251c\u2500\u2500 bzcmp -> bzdiff \u251c\u2500\u2500 bzdiff # \u76f4\u63a5\u6bd4\u8f83\u4e24\u4e2a\u201c.bz2\u201d\u538b\u7f29\u5305\u4e2d\u6587\u4ef6\u7684\u4e0d\u540c\uff0c\u7701\u53bb\u4e86\u89e3\u538b\u7f29\u540e\u518d\u8c03\u7528diff\u547d\u4ee4\u7684\u8fc7\u7a0b\u3002 \u251c\u2500\u2500 bzegrep -> bzgrep \u251c\u2500\u2500 bzexe \u251c\u2500\u2500 bzfgrep -> bzgrep \u251c\u2500\u2500 bzgrep # \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u641c\u7d22\u201c.bz2\u201d\u538b\u7f29\u5305\u4e2d\u6587\u4ef6\uff0c\u5c06\u5339\u914d\u7684\u884c\u663e\u793a\u5230\u6807\u6ce8\u8f93\u51fa\u3002 \u251c\u2500\u2500 bzip2 # .bz2\u6587\u4ef6\u7684\u538b\u7f29\u7a0b\u5e8f\u3002 \u251c\u2500\u2500 bzip2recover # \u4fee\u590d\u635f\u574f\u7684.bz2\u6587\u4ef6 \u251c\u2500\u2500 bzless -> bzmore \u251c\u2500\u2500 bzmore # \u7528\u4e8e\u67e5\u770bbzip2\u538b\u7f29\u8fc7\u7684\u6587\u672c\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u5f53\u4e0b\u4e00\u5c4f\u663e\u793a\u4e0d\u4e0b\u65f6\u53ef\u4ee5\u5b9e\u73b0\u5206\u5c4f\u663e\u793a\u3002 \u251c\u2500\u2500 cat # \u7528\u4e8e\u8fde\u63a5\u6587\u4ef6\u5e76\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u8bbe\u5907\u4e0a\u3002 \u251c\u2500\u2500 chgrp # change group\u53d8\u66f4\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6240\u5c5e\u7fa4\u7ec4\u3002 \u251c\u2500\u2500 chmod # change mode\u6539\u53d8\u6587\u4ef6\u7684\u8bfb\u5199\u8fd0\u884c\u6743\u9650\u3002 \u251c\u2500\u2500 chown # \u7cfb\u7edf\u7ba1\u7406\u5458root\u6539\u53d8\u6587\u4ef6\u6240\u6709\u8005 \u251c\u2500\u2500 chvt # \u53ef\u4ee5\u66ff\u4ee3\u7ec4\u5408\u952eCtrl+Alt+Fx\uff0cchvt 5=Ctrl+Alt+F7 \u251c\u2500\u2500 con2fbmap # \u53ef\u80fd\u662f\u7528\u4e8e\u663e\u793a\u7684\u529f\u80fd \u251c\u2500\u2500 cp # \u7528\u4e8e\u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55 \u251c\u2500\u2500 cpio # \u7528\u6765\u5efa\u7acb\uff0c\u8fd8\u539f\u5907\u4efd\u6863\u7684\u5de5\u5177\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u52a0\u5165\uff0c\u89e3\u5f00cpio\u6216tra\u5907\u4efd\u6863\u5185\u7684\u6587\u4ef6\u3002 \u251c\u2500\u2500 dash # Debian Almquist Shell \u811a\u672c\u7b2c\u4e00\u884c#!/bin/sh \u251c\u2500\u2500 date # \u793a\u6216\u8bbe\u5b9a\u7cfb\u7edf\u7684\u65e5\u671f\u4e0e\u65f6\u95f4 \u251c\u2500\u2500 dd # \u7528\u4e8e\u8bfb\u53d6\u3001\u8f6c\u6362\u5e76\u8f93\u51fa\u6570\u636e\u3002 \u251c\u2500\u2500 df # \u663e\u793a\u76ee\u524d\u5728Linux\u7cfb\u7edf\u4e0a\u7684\u6587\u4ef6\u7cfb\u7edf\u7684\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5\u7edf\u8ba1\u3002 \u251c\u2500\u2500 dir # \u6253\u5f00Linux\u76ee\u5f55\u5185\u5bb9\uff0c\u4e0els\u4e00\u6837 \u251c\u2500\u2500 dmesg # \u663e\u793a\u5f00\u673a\u4fe1\u606f\u3002 \u251c\u2500\u2500 dnsdomainname -> hostname \u251c\u2500\u2500 domainname -> hostname \u251c\u2500\u2500 dumpkeys #\u7528\u4e8e\u663e\u793a\u952e\u76d8\u6620\u5c04\u8868\uff0c\u8f93\u51fa\u7684\u5185\u5bb9\u53ef\u4ee5\u88abloadkeys\u547d\u4ee4\u8bc6\u522b,\u6539\u53d8\u6620\u5c04\u5173\u7cfb \u251c\u2500\u2500 echo # \u7528\u4e8e\u5b57\u7b26\u4e32\u7684\u8f93\u51fa\u3002 \u251c\u2500\u2500 ed # \u5355\u884c\u7eaf\u6587\u672c\u7f16\u8f91\u5668 \u251c\u2500\u2500 egrep # \u5728\u6587\u4ef6\u5185\u67e5\u627e\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u3002 \u251c\u2500\u2500 false # \u8fd4\u56de\u975e\u96f6\u9000\u51fa\u503c\u3002 \u251c\u2500\u2500 fbset # \u8bbe\u7f6e\u666f\u6846\u7f13\u51b2\u533a\uff0c\u8fd8\u80fd\u8c03\u6574\u753b\u9762\u4e4b\u5206\u8fa8\u7387\uff0c\u4f4d\u7f6e\uff0c\u9ad8\u4f4e\u5bbd\u7a84\uff0c\u8272\u5f69\u6df1\u5ea6\uff0c\u5e76\u53ef\u51b3\u5b9a\u662f\u5426\u542f\u52a8\u5148\u5361\u4e4b\u5404\u9879\u786c\u4ef6\u7279\u6027\u3002 \u251c\u2500\u2500 fgconsole #\u6253\u5370\u865a\u62df\u7ec8\u7aef\u7684\u6570\u76ee \u251c\u2500\u2500 fgrep # \u67e5\u627e\u6587\u4ef6\u91cc\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u3002 \u251c\u2500\u2500 findmnt # \u7528\u4e8e\u67e5\u627e\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf \u251c\u2500\u2500 fuser # \u4f7f\u7528\u6587\u4ef6\u6216\u6587\u4ef6\u7ed3\u6784\u8bc6\u522b\u8fdb\u7a0b \u251c\u2500\u2500 grep # \u7528\u4e8e\u67e5\u627e\u6587\u4ef6\u91cc\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u3002 \u251c\u2500\u2500 gunzip # \u89e3\u5f00\u88abgzip\u538b\u7f29\u8fc7\u7684\u6587\u4ef6\uff0c\u6269\u5c55\u540d\u4e3a\u201d.gz\u201d \u251c\u2500\u2500 gzexe # \u538b\u7f29\u6267\u884c\u6587\u4ef6\uff0c\u4e00\u8bf4\u7528\u6765\u52a0\u5bc6\u89e3\u5bc6 \u251c\u2500\u2500 gzip # \u4f7f\u7528\u5e7f\u6cdb\u7684\u538b\u7f29\u7a0b\u5e8f\uff0c\u6269\u5c55\u540d\u201d.gz\u201d\u3002 \u251c\u2500\u2500 hciconfig #HCI,\u5373\u4e3b\u673a\u63a7\u5236\u63a5\u53e3,\u5c5e\u4e8e\u84dd\u7259\u534f\u8bae\u6808\u7684\u4e00\u90e8\u5206\u3002\u84dd\u7259\u914d\u7f6e \u251c\u2500\u2500 hostname # \u663e\u793a\u548c\u8bbe\u7f6e\u7cfb\u7edf\u7684\u4e3b\u673a\u540d \u251c\u2500\u2500 ip # \u663e\u793a\u6216\u64cd\u7eb5Linux\u4e3b\u673a\u7684\u8def\u7531\u3001\u7f51\u7edc\u8bbe\u5907\u3001\u7b56\u7565\u8def\u7531\u548c\u96a7\u9053\uff0c\u662fLinux\u4e0b\u8f83\u65b0\u7684\u529f\u80fd\u5f3a\u5927\u7684\u7f51\u7edc\u914d\u7f6e\u5de5\u5177\u3002 \u251c\u2500\u2500 journalctl # \u67e5\u770b\u65e5\u5fd7 \u251c\u2500\u2500 kbd_mode \u251c\u2500\u2500 keyctl # \u5bc6\u94a5\u7ba1\u7406 \u251c\u2500\u2500 kill #\u7528\u4e8e\u5220\u9664\u6267\u884c\u4e2d\u7684\u7a0b\u5e8f\u6216\u5de5\u4f5c\u3002 \u251c\u2500\u2500 kmod # \u251c\u2500\u2500 less # cat\u548cmore\u52a0\u5f3a\u7248 \u251c\u2500\u2500 lessecho \u251c\u2500\u2500 lessfile -> lesspipe \u251c\u2500\u2500 lesskey \u251c\u2500\u2500 lesspipe \u251c\u2500\u2500 ln #\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u547d\u4ee4\uff0c\u5b83\u7684\u529f\u80fd\u662f\u4e3a\u67d0\u4e00\u4e2a\u6587\u4ef6\u5728\u53e6\u5916\u4e00\u4e2a\u4f4d\u7f6e\u5efa\u7acb\u4e00\u4e2a\u540c\u6b65\u7684\u94fe\u63a5\u3002 \u251c\u2500\u2500 loadkeys #\u6839\u636e\u4e00\u4e2a\u952e\u76d8\u5b9a\u4e49\u8868\u6539\u53d8 linux \u952e\u76d8\u9a71\u52a8\u7a0b\u5e8f\u8f6c\u8bd1\u952e\u76d8\u8f93\u5165\u8fc7\u7a0b\u3002\u7c7b\u4f3cdumpkeys \u251c\u2500\u2500 login # \u7528\u4e8e\u767b\u5165\u7cfb\u7edf\u3002/etc\u91cc\u542bnologin\u6587\u4ef6\u65f6\uff0c\u53earoot\u80fd\u767b\u5165 \u251c\u2500\u2500 loginctl # \u63a7\u5236 systemd \u767b\u5f55\u7ba1\u7406\u5668 \u251c\u2500\u2500 ls # \u663e\u793a\u6307\u5b9a\u5de5\u4f5c\u76ee\u5f55\u4e0b\u4e4b\u5185\u5bb9 \u251c\u2500\u2500 lsblk # \u5217\u51fa\u5757\u8bbe\u5907\u4fe1\u606f\uff0c\u5757\u8bbe\u5907\u6709\u786c\u76d8\uff0c\u95ea\u5b58\u76d8\uff0ccd-ROM\u7b49\u7b49 \u251c\u2500\u2500 lsmod -> kmod \u251c\u2500\u2500 mkdir # \u5efa\u7acb\u540d\u79f0\u4e3a dirName \u4e4b\u5b50\u76ee\u5f55\u3002 \u251c\u2500\u2500 mknod # \u521b\u5efa\u5b57\u7b26\u8bbe\u5907\u6587\u4ef6\u548c\u5757\u8bbe\u5907\u6587\u4ef6 \u251c\u2500\u2500 mktemp # \u7528\u4e8e\u5efa\u7acb\u6682\u5b58\u6587\u4ef6\u3002 \u251c\u2500\u2500 modeline2fb \u251c\u2500\u2500 more # cat\u52a0\u5f3a\u7248 \u251c\u2500\u2500 mount # \u7ecf\u5e38\u4f1a\u4f7f\u7528\u5230\u7684\u547d\u4ee4\uff0c\u5b83\u7528\u4e8e\u6302\u8f7dLinux\u7cfb\u7edf\u5916\u7684\u6587\u4ef6\u3002 \u251c\u2500\u2500 mountpoint \u251c\u2500\u2500 mt -> /etc/alternatives/mt \u251c\u2500\u2500 mt-gnu \u251c\u2500\u2500 mv # \u4e3a\u6587\u4ef6\u6216\u76ee\u5f55\u6539\u540d\u3001\u6216\u5c06\u6587\u4ef6\u6216\u76ee\u5f55\u79fb\u5165\u5176\u5b83\u4f4d\u7f6e\u3002 \u251c\u2500\u2500 nano # \u5b57\u7b26\u7ec8\u7aef\u6587\u672c\u7f16\u8f91\u5668 \u251c\u2500\u2500 nc -> /etc/alternatives/nc \u251c\u2500\u2500 nc.openbsd \u251c\u2500\u2500 nc.traditional \u251c\u2500\u2500 netcat -> /etc/alternatives/netcat \u251c\u2500\u2500 netstat #\u663e\u793a\u7f51\u7edc\u72b6\u6001\u3002 \u251c\u2500\u2500 networkctl # \u67e5\u770b\u7f51\u7edc\u8bbe\u5907\u53ca\u5176\u8fde\u63a5\u72b6\u6001\u7684\u6458\u8981\u3002 \u251c\u2500\u2500 nisdomainname -> hostname \u251c\u2500\u2500 open -> openvt \u251c\u2500\u2500 openvt # \u64cd\u4f5c\u7cfb\u7edf\u5206\u533a \u251c\u2500\u2500 pidof -> /sbin/killall5 \u251c\u2500\u2500 ping # \u4f7f\u7528ICMP\u4f20\u8f93\u534f\u8bae\uff0c\u68c0\u6d4b\u4e3b\u673a\u3002 \u251c\u2500\u2500 ping4 -> ping \u251c\u2500\u2500 ping6 -> ping \u251c\u2500\u2500 plymouth \u251c\u2500\u2500 ps # \u663e\u793a\u5f53\u524d\u8fdb\u7a0b (process) \u7684\u72b6\u6001\u3002 \u251c\u2500\u2500 pwd # \u663e\u793a\u5de5\u4f5c\u76ee\u5f55\u3002 \u251c\u2500\u2500 rbash -> bash \u251c\u2500\u2500 readlink # \u51fa\u7b26\u53f7\u94fe\u63a5\u6240\u6307\u5411\u7684\u4f4d\u7f6e\u3002 \u251c\u2500\u2500 red #\u6587\u672c\u7f16\u8f91\u5668 \u251c\u2500\u2500 rm # \u5220\u9664\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u3002 \u251c\u2500\u2500 rmdir # \u5220\u9664\u7a7a\u7684\u76ee\u5f55\u3002 \u251c\u2500\u2500 rnano -> nano \u251c\u2500\u2500 run-parts \u251c\u2500\u2500 sed # \u5229\u7528script\u6765\u5904\u7406\u6587\u672c\u6587\u4ef6\u3002 \u251c\u2500\u2500 setfont \u251c\u2500\u2500 setupcon \u251c\u2500\u2500 sh -> dash \u251c\u2500\u2500 sh.distrib -> dash \u251c\u2500\u2500 sleep # \u5c06\u76ee\u524d\u52a8\u4f5c\u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u3002 \u251c\u2500\u2500 ss # \u83b7\u53d6socket\u7edf\u8ba1\u4fe1\u606f \u251c\u2500\u2500 stty # \u4fee\u6539\u7ec8\u7aef\u547d\u4ee4\u884c\u7684\u76f8\u5173\u8bbe\u7f6e \u251c\u2500\u2500 su # \u53d8\u66f4\u4e3a\u5176\u4ed6\u4f7f\u7528\u8005\u7684\u8eab\u4efd\uff0c\u9664 root \u5916\uff0c\u9700\u8981\u952e\u5165\u8be5\u4f7f\u7528\u8005\u7684\u5bc6\u7801\u3002 \u251c\u2500\u2500 sync # \u6570\u636e\u540c\u6b65,sync\u547d\u4ee4\u662f\u5728\u5173\u95edLinux\u7cfb\u7edf\u65f6\u4f7f\u7528\u7684\u3002 \u251c\u2500\u2500 systemctl # \u7cfb\u7edf\u670d\u52a1\u7ba1\u7406\u5668\u6307\u4ee4 \u251c\u2500\u2500 systemd -> /lib/systemd/systemd # \u542f\u52a8\u5b88\u62a4\u8fdb\u7a0b \u251c\u2500\u2500 systemd-ask-password \u251c\u2500\u2500 systemd-escape \u251c\u2500\u2500 systemd-hwdb \u251c\u2500\u2500 systemd-inhibit \u251c\u2500\u2500 systemd-machine-id-setup \u251c\u2500\u2500 systemd-notify \u251c\u2500\u2500 systemd-sysusers \u251c\u2500\u2500 systemd-tmpfiles \u251c\u2500\u2500 systemd-tty-ask-password-agent \u251c\u2500\u2500 tailf #\u663e\u793a\u7ed3\u5c3e\u67d0\u4e2a\u6570\u91cf\u7684\u6587\u5b57\u533a\u5757 \u251c\u2500\u2500 tar # \u7528\u4e8e\u5907\u4efd\u6587\u4ef6\u3002\u538b\u7f29 \u251c\u2500\u2500 tempfile # \u7ed9\u4e34\u65f6\u6587\u4ef6\u547d\u540d \u251c\u2500\u2500 touch # \u4fee\u6539\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u7684\u65f6\u95f4\u5c5e\u6027\uff0c\u5305\u62ec\u5b58\u53d6\u65f6\u95f4\u548c\u66f4\u6539\u65f6\u95f4\u3002\u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u7cfb\u7edf\u4f1a\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u3002 \u251c\u2500\u2500 true # \u8fd4\u56de\u96f6\u9000\u51fa\u503c\u3002 \u251c\u2500\u2500 udevadm # \u53ef\u7528\u4e8e\uff1a \u63a7\u5236\u670d\u52a1\u3001 \u8bf7\u6c42\u5185\u6838\u4e8b\u4ef6\u3001\u7ba1\u7406\u4e8b\u4ef6\u961f\u5217\u3001\u8fdb\u884c\u7b80\u5355\u7684\u8c03\u8bd5\u3002 \u251c\u2500\u2500 umount # \u5378\u9664\u6587\u4ef6\u7cfb\u7edf\u3002 \u251c\u2500\u2500 uname # \u663e\u793a\u7cfb\u7edf\u4fe1\u606f\u3002 \u251c\u2500\u2500 uncompress # \u7528\u6765\u89e3\u538b.Z\u6587\u4ef6 \u251c\u2500\u2500 unicode_start \u251c\u2500\u2500 vdir \u251c\u2500\u2500 wdctl # \u770b\u95e8\u72d7\u63a7\u5236 \u251c\u2500\u2500 which # \u67e5\u627e\u6587\u4ef6\u3002 \u251c\u2500\u2500 ypdomainname -> hostname \u251c\u2500\u2500 zcat # \u663e\u793a\u538b\u7f29\u5305\u4e2d\u6587\u4ef6\u7684\u5185\u5bb9 \u251c\u2500\u2500 zcmp # \u6bd4\u8f83\u4e24\u4e2a\u538b\u7f29\u5305\u4e2d\u7684\u6587\u4ef6 \u251c\u2500\u2500 zdiff \u251c\u2500\u2500 zegrep # egrep=grep -E \u7528\u4e8e\u663e\u793a\u6587\u4ef6\u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26 \u251c\u2500\u2500 zfgrep # \u251c\u2500\u2500 zforce \u251c\u2500\u2500 zgrep # \u4e0d\u89e3\u538b\u8fc7\u6ee4\u538b\u7f29\u5305\u4e2d\u6587\u672c \u251c\u2500\u2500 zless \u251c\u2500\u2500 zmore \u2514\u2500\u2500 znew # \u5c06.Z\u538b\u7f29\u5305\u91cd\u65b0\u8f6c\u5316\u4e3agzip\u547d\u4ee4\u538b\u7f29\u7684.gz\u538b\u7f29\u5305 /etc/init.d \u00b6 \u251c\u2500\u2500 alsa-utils # \u63a7\u5236\u58f0\u5361\u7684\u7a0b\u5e8f \u251c\u2500\u2500 apache2 # apache2\u670d\u52a1\u5668 \u251c\u2500\u2500 apache-htcacheclean # \u53ef\u4ee5\u7528\u4e8e\u5c06mod_disk_cache\u7684\u78c1\u76d8\u7f13\u51b2\u533a\u5360\u7528\u7684\u7a7a\u95f4\u4fdd\u6301\u5728\u4e00\u4e2a\u5408\u7406\u7684\u6c34\u5e73 \u251c\u2500\u2500 avahi-daemon # Avahi\u5141\u8bb8\u7a0b\u5e8f\u5728\u4e0d\u9700\u8981\u8fdb\u884c\u624b\u52a8\u7f51\u7edc\u914d\u7f6e\u7684\u60c5\u51b5 \u4e0b\uff0c\u5728\u4e00\u4e2a\u672c\u5730\u7f51\u7edc\u4e2d\u53d1\u5e03\u548c\u83b7\u77e5\u5404\u79cd\u670d\u52a1\u548c\u4e3b\u673a\u3002 \u251c\u2500\u2500 bluetooth # \u84dd\u7259 \u251c\u2500\u2500 console-setup.sh \u251c\u2500\u2500 cron # \u5b9a\u65f6\u4efb\u52a1 \u251c\u2500\u2500 dbus # \u6570\u636e\u603b\u7ebf \u251c\u2500\u2500 dhcpcd # DHCP \u251c\u2500\u2500 dphys-swapfile #\u5185\u5b58\u4ea4\u6362\u7a7a\u95f4 \u251c\u2500\u2500 fake-hwclock \u251c\u2500\u2500 hwclock.sh # \u663e\u793a\u4e0e\u8bbe\u5b9a\u786c\u4ef6\u65f6\u949f \u251c\u2500\u2500 keyboard-setup.sh \u251c\u2500\u2500 kmod # \u5904\u7406Linux\u5185\u6838\u6a21\u5757\u4e2d\u4e00\u822c\u4efb\u52a1\u7684\u5de5\u5177\u96c6\uff0c\u529f\u80fd\u5305\u62ec\uff1a\u63d2\u5165\u3001\u5220\u9664\u3001\u5217\u8868\u3001\u67e5\u770b\u5c5e\u6027\u3001\u89e3\u51b3\u4f9d\u8d56\u5173\u7cfb\u548c\u522b\u540d\u7684\u5171\u540c\u4efb\u52a1 \u251c\u2500\u2500 networking \u251c\u2500\u2500 nfs-common \u251c\u2500\u2500 paxctld \u251c\u2500\u2500 plymouth # \u6e32\u67d3\u521d\u59cb\u7684\u542f\u52a8\u754c\u9762 \u251c\u2500\u2500 plymouth-log \u251c\u2500\u2500 procps \u251c\u2500\u2500 raspi-config # \u6811\u8393\u6d3e\u914d\u7f6e\u7a0b\u5e8f \u251c\u2500\u2500 rpcbind # \u901a\u7528\u5730\u5740\u548cRCP\u7a0b\u5e8f\u53f7\u7801(RPCprogramnumber)\u4e4b\u95f4\u7684\u6620\u5c04\u5668 \u251c\u2500\u2500 rsync # \u6570\u636e\u955c\u50cf\u5907\u4efd\u5de5\u5177 \u251c\u2500\u2500 rsyslog # \u5feb\u901f\u5904\u7406\u6536\u96c6\u7cfb\u7edf\u65e5\u5fd7\u7684\u7a0b\u5e8f \u251c\u2500\u2500 ssh /dev \u00b6 /boot \u00b6 \u4e0e\u5f00\u673a\u6709\u5173\u7684\u6587\u4ef6 \u5f00\u673a\u4fe1\u606f\u4ece\u547d\u4ee4dmesg\u4e2d\u8bfb\u53d6 \u00b6 \u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u7531\u547d\u4ee4findmnt\u8bfb\u53d6 \u00b6 \u5b89\u88c5\u7684\u7cfb\u7edf\u670d\u52a1 \u00b6 \u5b58\u653e\u547d\u4ee4\u7684\u76ee\u5f55 \u00b6 ser\u7684\u610f\u601d\u4e0d\u662fuser\uff0c\u800c\u662fUnix System Resource\uff08Unix\u7cfb\u7edf\u8d44\u6e90\uff09 /bin\uff1a\u7cfb\u7edf\u5fc5\u5907\u6307\u4ee4 /sbin\uff1a\u8d85\u7ea7\u7528\u6237\u6307\u4ee4 /usr/bin\uff1a\u540e\u671f\u5b89\u88c5\u8f6f\u4ef6\u7684\u8fd0\u884c\u811a\u672c /usr/sbin\uff1a\u540e\u671f\u5b89\u88c5\u7684\u7cfb\u7edf\u7ba1\u7406\u5fc5\u5907\u7a0b\u5e8f /usr/local/bin\uff1a\u7528\u6237\u81ea\u5b9a\u4e49 /usr/local/sbin\uff1a\u7528\u6237\u81ea\u5b9a\u4e49 \u76f4\u63a5root \u00b6 $ sudo su $ curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun \u00b6 dpkg-reconfigure \u00b6 \u672c\u5730\u5316\u8bed\u8a00\u8bbe\u7f6e\uff0c\u7528\u7a7a\u683c\u589e\u51cf[*]\u9009\u9879 sudo dpkg-reconfigure locales \u5982\u679c\u8df3\u8fc7\u751f\u6210\u5219\u4f7f\u7528apt update+upgrade\u4e0b\u8f7d\u8bed\u8a00\u5305\uff0c\u4e4b\u540ereboot\u751f\u6548 \u8bbe\u7f6e\u65f6\u533a sudo dpkg-reconfigure tzdata \u8bbe\u7f6e\u63a7\u5236\u53f0\u7f16\u7801 sudo dpkg-reconfigure console-setup vcgencmd \u547d\u4ee4\u67e5\u770b\u786c\u4ef6\u72b6\u6001 \u00b6","title":"\u6811\u8393\u6d3e"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#_1","text":"","title":"\u6811\u8393\u6d3e"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#_2","text":"1\u3001raspbian\u4e0b\u8f7d https://www.raspberrypi.org/ noobs.zip\u6216raspbian.img 2\u3001\u51c6\u5907TF\u5361 \u7528SD Card Formatter\u8f6f\u4ef6\u683c\u5f0f\u5316\uff0c\u7528Win32DiskImager\u5bfc\u5165img\u6587\u4ef6\uff0c\u6216\u76f4\u63a5\u89e3\u538bnoobs.zip\u5230TF\u5361 3\u3001\u4f7f\u80fdSSH \u4f7f\u7528powershell\u5728\u70e7\u5199\u597d\u7684\u76d8\u7b26(\u9ed8\u8ba4\u540d\u5b57\u662fboot)\u4e2d\u952e\u5165new-item ssh -type file\uff0c\u6765\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u7c7b\u578b\u7684ssh\u6587\u4ef6 3\u3001\u63d2\u5361\u4e0a\u7535\u8fde\u63a5\u6709\u7ebf\u7f51\u5b89\u88c5 noob\u5b89\u88c5\u9700\u8981\u7528\u663e\u793a\u5668\uff0craspbian\u88f8\u7cfb\u7edf\u76f4\u63a5SSH\u8fdc\u7a0b\u8fde\u63a5 \u9ed8\u8ba4\u8d26\u53f7pi\uff0c\u5bc6\u7801raspberry\u3002 4\u3001\u5b89\u88c5vim\uff0c\u4e5f\u53ef\u76f4\u63a5\u4f7f\u7528vi sudo apt install vim 5\u3001\u8fde\u63a5\u65e0\u7ebf\u7f51 iwlist wlan0 scan # \u626b\u63cf\u53ef\u7528wifi\uff0c\u6ca1\u5565\u7528 sudo vim /etc/wpa_supplicant/wpa_supplicant.conf # \u6253\u5f00\u6587\u4ef6 \u5728\u672b\u5c3e\u6dfb\u52a0\u4ee5\u4e0b\u5b57\u6bb5 network={ ssid=\"\u4f60\u7684wifi\u540d\" psk=\"wifi\u5bc6\u7801\" key_mgmt=WPA-PSK # \u975e\u5fc5\u9700 priority=1 # \u975e\u5fc5\u9700 } \u4fdd\u5b58\u67e5\u770b\u8fde\u63a5 ifconfig wlan0 \u82e5\u6728\u6709IP\u7b49\u4fe1\u606f\u5219\u8868\u793a\u6ca1\u8fde\u4e0a\uff0c ifconfig wlan0 down ifconfig wlan0 up \u6216 reboot \u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528SSH2\u8fdc\u7a0b\u8fde\u63a5\u4e86","title":"\u5b89\u88c5"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#_3","text":"apt\u7684\u8f6f\u4ef6\u6e90\u5730\u5740\u5728/etc/apt/sources.list\u4e2d 1\u3001\u6253\u5f00\u6587\u4ef6 sudo vi /etc/apt/sources.list \u6216 $ sudo apt edit-sources 2\u3001\u7f16\u8f91 \u53d8\u6210\u5982\u4e0b\u683c\u5f0f\u7684\u5185\u5bb9,\u5176\u4ed6\u53ef\u4ee5#\u6ce8\u91ca\u6389 deb http://mirrors.aliyun.com/raspbian/raspbian/ stretch main contrib non-free rpi deb-src http://mirrors.aliyun.com/raspbian/raspbian/ stretcth main contrib non-free rpi \u8bed\u6cd5 deb\uff1a\u6863\u6848\u7c7b\u578b\uff0c\u4e8c\u8fdb\u5236\u9884\u7f16\u8bd1\u8f6f\u4ef6\u5305 deb-src\uff1a\u6863\u6848\u7c7b\u578b\uff0c\u7528\u4e8e\u7f16\u8bd1\u4e8c\u8fdb\u5236\u8f6f\u4ef6\u5305\u7684\u6e90\u4ee3\u7801 http://...\uff1a\u4ed3\u5e93\u5730\u5740\uff0c\u8fd9\u91cc\u4f7f\u7528\u963f\u91cc\u4e91\u5f00\u6e90\u955c\u50cf\u7ad9OPSX\u7684\u6e90\u4ed3\u5e93 stretch\uff1a\u53d1\u884c\u7248\uff0c\u7248\u672c \u8f6f\u4ef6\u5305\u5206\u7c7b\uff1a main \u5b98\u65b9\u652f\u6301\u7684\u81ea\u7531\u8f6f\u4ef6 contrib \u4e0d\u5728main\u4e2d\u7684\u81ea\u7531\u8f6f\u4ef6 non-free \u975e\u81ea\u7531\u8f6f\u4ef6\u5305 rpi \u53ef\u80fd\u662frpi\u4e13\u7528 \u4fdd\u5b58\u5e76\u66f4\u65b0\u6e90 sudo apt update","title":"\u66f4\u6362\u8f6f\u4ef6\u6e90"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#raspbian","text":"","title":"Raspbian"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#bin","text":"\u8be5\u76ee\u5f55\u4e3a\u547d\u4ee4\u6587\u4ef6\u76ee\u5f55\uff0c\u4e5f\u79f0\u4e3a\u4e8c\u8fdb\u5236\u76ee\u5f55\u3002\u5305\u542b\u4e86\u4f9b\u7cfb\u7edf\u7ba1\u7406\u5458\u53ca\u666e\u901a\u7528\u6237\u4f7f\u7528\u7684\u91cd\u8981\u7684linux\u547d\u4ee4\u548c\u4e8c\u8fdb\u5236\uff08\u53ef\u6267\u884c\uff09\u6587\u4ef6\uff0c\u5305\u542bshell\u89e3\u91ca\u5668\u7b49\u3002 \u251c\u2500\u2500 bash # Bourne Again Shell \u251c\u2500\u2500 bunzip2 # .bz2\u6587\u4ef6\u7684\u89e3\u538b\u7f29\u7a0b\u5e8f \u251c\u2500\u2500 bzcat # \u89e3\u538b\u7f29\u6307\u5b9a\u7684.bz2\u6587\u4ef6\uff0c\u5e76\u663e\u793a\u89e3\u538b\u7f29\u540e\u7684\u6587\u4ef6\u5185\u5bb9\u3002\u4fdd\u7559\u539f\u538b\u7f29\u6587\u4ef6\uff0c\u5e76\u4e14\u4e0d\u751f\u6210\u89e3\u538b\u7f29\u540e\u7684\u6587\u4ef6\u3002 \u251c\u2500\u2500 bzcmp -> bzdiff \u251c\u2500\u2500 bzdiff # \u76f4\u63a5\u6bd4\u8f83\u4e24\u4e2a\u201c.bz2\u201d\u538b\u7f29\u5305\u4e2d\u6587\u4ef6\u7684\u4e0d\u540c\uff0c\u7701\u53bb\u4e86\u89e3\u538b\u7f29\u540e\u518d\u8c03\u7528diff\u547d\u4ee4\u7684\u8fc7\u7a0b\u3002 \u251c\u2500\u2500 bzegrep -> bzgrep \u251c\u2500\u2500 bzexe \u251c\u2500\u2500 bzfgrep -> bzgrep \u251c\u2500\u2500 bzgrep # \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u641c\u7d22\u201c.bz2\u201d\u538b\u7f29\u5305\u4e2d\u6587\u4ef6\uff0c\u5c06\u5339\u914d\u7684\u884c\u663e\u793a\u5230\u6807\u6ce8\u8f93\u51fa\u3002 \u251c\u2500\u2500 bzip2 # .bz2\u6587\u4ef6\u7684\u538b\u7f29\u7a0b\u5e8f\u3002 \u251c\u2500\u2500 bzip2recover # \u4fee\u590d\u635f\u574f\u7684.bz2\u6587\u4ef6 \u251c\u2500\u2500 bzless -> bzmore \u251c\u2500\u2500 bzmore # \u7528\u4e8e\u67e5\u770bbzip2\u538b\u7f29\u8fc7\u7684\u6587\u672c\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u5f53\u4e0b\u4e00\u5c4f\u663e\u793a\u4e0d\u4e0b\u65f6\u53ef\u4ee5\u5b9e\u73b0\u5206\u5c4f\u663e\u793a\u3002 \u251c\u2500\u2500 cat # \u7528\u4e8e\u8fde\u63a5\u6587\u4ef6\u5e76\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\u8bbe\u5907\u4e0a\u3002 \u251c\u2500\u2500 chgrp # change group\u53d8\u66f4\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6240\u5c5e\u7fa4\u7ec4\u3002 \u251c\u2500\u2500 chmod # change mode\u6539\u53d8\u6587\u4ef6\u7684\u8bfb\u5199\u8fd0\u884c\u6743\u9650\u3002 \u251c\u2500\u2500 chown # \u7cfb\u7edf\u7ba1\u7406\u5458root\u6539\u53d8\u6587\u4ef6\u6240\u6709\u8005 \u251c\u2500\u2500 chvt # \u53ef\u4ee5\u66ff\u4ee3\u7ec4\u5408\u952eCtrl+Alt+Fx\uff0cchvt 5=Ctrl+Alt+F7 \u251c\u2500\u2500 con2fbmap # \u53ef\u80fd\u662f\u7528\u4e8e\u663e\u793a\u7684\u529f\u80fd \u251c\u2500\u2500 cp # \u7528\u4e8e\u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55 \u251c\u2500\u2500 cpio # \u7528\u6765\u5efa\u7acb\uff0c\u8fd8\u539f\u5907\u4efd\u6863\u7684\u5de5\u5177\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u52a0\u5165\uff0c\u89e3\u5f00cpio\u6216tra\u5907\u4efd\u6863\u5185\u7684\u6587\u4ef6\u3002 \u251c\u2500\u2500 dash # Debian Almquist Shell \u811a\u672c\u7b2c\u4e00\u884c#!/bin/sh \u251c\u2500\u2500 date # \u793a\u6216\u8bbe\u5b9a\u7cfb\u7edf\u7684\u65e5\u671f\u4e0e\u65f6\u95f4 \u251c\u2500\u2500 dd # \u7528\u4e8e\u8bfb\u53d6\u3001\u8f6c\u6362\u5e76\u8f93\u51fa\u6570\u636e\u3002 \u251c\u2500\u2500 df # \u663e\u793a\u76ee\u524d\u5728Linux\u7cfb\u7edf\u4e0a\u7684\u6587\u4ef6\u7cfb\u7edf\u7684\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5\u7edf\u8ba1\u3002 \u251c\u2500\u2500 dir # \u6253\u5f00Linux\u76ee\u5f55\u5185\u5bb9\uff0c\u4e0els\u4e00\u6837 \u251c\u2500\u2500 dmesg # \u663e\u793a\u5f00\u673a\u4fe1\u606f\u3002 \u251c\u2500\u2500 dnsdomainname -> hostname \u251c\u2500\u2500 domainname -> hostname \u251c\u2500\u2500 dumpkeys #\u7528\u4e8e\u663e\u793a\u952e\u76d8\u6620\u5c04\u8868\uff0c\u8f93\u51fa\u7684\u5185\u5bb9\u53ef\u4ee5\u88abloadkeys\u547d\u4ee4\u8bc6\u522b,\u6539\u53d8\u6620\u5c04\u5173\u7cfb \u251c\u2500\u2500 echo # \u7528\u4e8e\u5b57\u7b26\u4e32\u7684\u8f93\u51fa\u3002 \u251c\u2500\u2500 ed # \u5355\u884c\u7eaf\u6587\u672c\u7f16\u8f91\u5668 \u251c\u2500\u2500 egrep # \u5728\u6587\u4ef6\u5185\u67e5\u627e\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u3002 \u251c\u2500\u2500 false # \u8fd4\u56de\u975e\u96f6\u9000\u51fa\u503c\u3002 \u251c\u2500\u2500 fbset # \u8bbe\u7f6e\u666f\u6846\u7f13\u51b2\u533a\uff0c\u8fd8\u80fd\u8c03\u6574\u753b\u9762\u4e4b\u5206\u8fa8\u7387\uff0c\u4f4d\u7f6e\uff0c\u9ad8\u4f4e\u5bbd\u7a84\uff0c\u8272\u5f69\u6df1\u5ea6\uff0c\u5e76\u53ef\u51b3\u5b9a\u662f\u5426\u542f\u52a8\u5148\u5361\u4e4b\u5404\u9879\u786c\u4ef6\u7279\u6027\u3002 \u251c\u2500\u2500 fgconsole #\u6253\u5370\u865a\u62df\u7ec8\u7aef\u7684\u6570\u76ee \u251c\u2500\u2500 fgrep # \u67e5\u627e\u6587\u4ef6\u91cc\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u3002 \u251c\u2500\u2500 findmnt # \u7528\u4e8e\u67e5\u627e\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf \u251c\u2500\u2500 fuser # \u4f7f\u7528\u6587\u4ef6\u6216\u6587\u4ef6\u7ed3\u6784\u8bc6\u522b\u8fdb\u7a0b \u251c\u2500\u2500 grep # \u7528\u4e8e\u67e5\u627e\u6587\u4ef6\u91cc\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u3002 \u251c\u2500\u2500 gunzip # \u89e3\u5f00\u88abgzip\u538b\u7f29\u8fc7\u7684\u6587\u4ef6\uff0c\u6269\u5c55\u540d\u4e3a\u201d.gz\u201d \u251c\u2500\u2500 gzexe # \u538b\u7f29\u6267\u884c\u6587\u4ef6\uff0c\u4e00\u8bf4\u7528\u6765\u52a0\u5bc6\u89e3\u5bc6 \u251c\u2500\u2500 gzip # \u4f7f\u7528\u5e7f\u6cdb\u7684\u538b\u7f29\u7a0b\u5e8f\uff0c\u6269\u5c55\u540d\u201d.gz\u201d\u3002 \u251c\u2500\u2500 hciconfig #HCI,\u5373\u4e3b\u673a\u63a7\u5236\u63a5\u53e3,\u5c5e\u4e8e\u84dd\u7259\u534f\u8bae\u6808\u7684\u4e00\u90e8\u5206\u3002\u84dd\u7259\u914d\u7f6e \u251c\u2500\u2500 hostname # \u663e\u793a\u548c\u8bbe\u7f6e\u7cfb\u7edf\u7684\u4e3b\u673a\u540d \u251c\u2500\u2500 ip # \u663e\u793a\u6216\u64cd\u7eb5Linux\u4e3b\u673a\u7684\u8def\u7531\u3001\u7f51\u7edc\u8bbe\u5907\u3001\u7b56\u7565\u8def\u7531\u548c\u96a7\u9053\uff0c\u662fLinux\u4e0b\u8f83\u65b0\u7684\u529f\u80fd\u5f3a\u5927\u7684\u7f51\u7edc\u914d\u7f6e\u5de5\u5177\u3002 \u251c\u2500\u2500 journalctl # \u67e5\u770b\u65e5\u5fd7 \u251c\u2500\u2500 kbd_mode \u251c\u2500\u2500 keyctl # \u5bc6\u94a5\u7ba1\u7406 \u251c\u2500\u2500 kill #\u7528\u4e8e\u5220\u9664\u6267\u884c\u4e2d\u7684\u7a0b\u5e8f\u6216\u5de5\u4f5c\u3002 \u251c\u2500\u2500 kmod # \u251c\u2500\u2500 less # cat\u548cmore\u52a0\u5f3a\u7248 \u251c\u2500\u2500 lessecho \u251c\u2500\u2500 lessfile -> lesspipe \u251c\u2500\u2500 lesskey \u251c\u2500\u2500 lesspipe \u251c\u2500\u2500 ln #\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u547d\u4ee4\uff0c\u5b83\u7684\u529f\u80fd\u662f\u4e3a\u67d0\u4e00\u4e2a\u6587\u4ef6\u5728\u53e6\u5916\u4e00\u4e2a\u4f4d\u7f6e\u5efa\u7acb\u4e00\u4e2a\u540c\u6b65\u7684\u94fe\u63a5\u3002 \u251c\u2500\u2500 loadkeys #\u6839\u636e\u4e00\u4e2a\u952e\u76d8\u5b9a\u4e49\u8868\u6539\u53d8 linux \u952e\u76d8\u9a71\u52a8\u7a0b\u5e8f\u8f6c\u8bd1\u952e\u76d8\u8f93\u5165\u8fc7\u7a0b\u3002\u7c7b\u4f3cdumpkeys \u251c\u2500\u2500 login # \u7528\u4e8e\u767b\u5165\u7cfb\u7edf\u3002/etc\u91cc\u542bnologin\u6587\u4ef6\u65f6\uff0c\u53earoot\u80fd\u767b\u5165 \u251c\u2500\u2500 loginctl # \u63a7\u5236 systemd \u767b\u5f55\u7ba1\u7406\u5668 \u251c\u2500\u2500 ls # \u663e\u793a\u6307\u5b9a\u5de5\u4f5c\u76ee\u5f55\u4e0b\u4e4b\u5185\u5bb9 \u251c\u2500\u2500 lsblk # \u5217\u51fa\u5757\u8bbe\u5907\u4fe1\u606f\uff0c\u5757\u8bbe\u5907\u6709\u786c\u76d8\uff0c\u95ea\u5b58\u76d8\uff0ccd-ROM\u7b49\u7b49 \u251c\u2500\u2500 lsmod -> kmod \u251c\u2500\u2500 mkdir # \u5efa\u7acb\u540d\u79f0\u4e3a dirName \u4e4b\u5b50\u76ee\u5f55\u3002 \u251c\u2500\u2500 mknod # \u521b\u5efa\u5b57\u7b26\u8bbe\u5907\u6587\u4ef6\u548c\u5757\u8bbe\u5907\u6587\u4ef6 \u251c\u2500\u2500 mktemp # \u7528\u4e8e\u5efa\u7acb\u6682\u5b58\u6587\u4ef6\u3002 \u251c\u2500\u2500 modeline2fb \u251c\u2500\u2500 more # cat\u52a0\u5f3a\u7248 \u251c\u2500\u2500 mount # \u7ecf\u5e38\u4f1a\u4f7f\u7528\u5230\u7684\u547d\u4ee4\uff0c\u5b83\u7528\u4e8e\u6302\u8f7dLinux\u7cfb\u7edf\u5916\u7684\u6587\u4ef6\u3002 \u251c\u2500\u2500 mountpoint \u251c\u2500\u2500 mt -> /etc/alternatives/mt \u251c\u2500\u2500 mt-gnu \u251c\u2500\u2500 mv # \u4e3a\u6587\u4ef6\u6216\u76ee\u5f55\u6539\u540d\u3001\u6216\u5c06\u6587\u4ef6\u6216\u76ee\u5f55\u79fb\u5165\u5176\u5b83\u4f4d\u7f6e\u3002 \u251c\u2500\u2500 nano # \u5b57\u7b26\u7ec8\u7aef\u6587\u672c\u7f16\u8f91\u5668 \u251c\u2500\u2500 nc -> /etc/alternatives/nc \u251c\u2500\u2500 nc.openbsd \u251c\u2500\u2500 nc.traditional \u251c\u2500\u2500 netcat -> /etc/alternatives/netcat \u251c\u2500\u2500 netstat #\u663e\u793a\u7f51\u7edc\u72b6\u6001\u3002 \u251c\u2500\u2500 networkctl # \u67e5\u770b\u7f51\u7edc\u8bbe\u5907\u53ca\u5176\u8fde\u63a5\u72b6\u6001\u7684\u6458\u8981\u3002 \u251c\u2500\u2500 nisdomainname -> hostname \u251c\u2500\u2500 open -> openvt \u251c\u2500\u2500 openvt # \u64cd\u4f5c\u7cfb\u7edf\u5206\u533a \u251c\u2500\u2500 pidof -> /sbin/killall5 \u251c\u2500\u2500 ping # \u4f7f\u7528ICMP\u4f20\u8f93\u534f\u8bae\uff0c\u68c0\u6d4b\u4e3b\u673a\u3002 \u251c\u2500\u2500 ping4 -> ping \u251c\u2500\u2500 ping6 -> ping \u251c\u2500\u2500 plymouth \u251c\u2500\u2500 ps # \u663e\u793a\u5f53\u524d\u8fdb\u7a0b (process) \u7684\u72b6\u6001\u3002 \u251c\u2500\u2500 pwd # \u663e\u793a\u5de5\u4f5c\u76ee\u5f55\u3002 \u251c\u2500\u2500 rbash -> bash \u251c\u2500\u2500 readlink # \u51fa\u7b26\u53f7\u94fe\u63a5\u6240\u6307\u5411\u7684\u4f4d\u7f6e\u3002 \u251c\u2500\u2500 red #\u6587\u672c\u7f16\u8f91\u5668 \u251c\u2500\u2500 rm # \u5220\u9664\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u3002 \u251c\u2500\u2500 rmdir # \u5220\u9664\u7a7a\u7684\u76ee\u5f55\u3002 \u251c\u2500\u2500 rnano -> nano \u251c\u2500\u2500 run-parts \u251c\u2500\u2500 sed # \u5229\u7528script\u6765\u5904\u7406\u6587\u672c\u6587\u4ef6\u3002 \u251c\u2500\u2500 setfont \u251c\u2500\u2500 setupcon \u251c\u2500\u2500 sh -> dash \u251c\u2500\u2500 sh.distrib -> dash \u251c\u2500\u2500 sleep # \u5c06\u76ee\u524d\u52a8\u4f5c\u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u3002 \u251c\u2500\u2500 ss # \u83b7\u53d6socket\u7edf\u8ba1\u4fe1\u606f \u251c\u2500\u2500 stty # \u4fee\u6539\u7ec8\u7aef\u547d\u4ee4\u884c\u7684\u76f8\u5173\u8bbe\u7f6e \u251c\u2500\u2500 su # \u53d8\u66f4\u4e3a\u5176\u4ed6\u4f7f\u7528\u8005\u7684\u8eab\u4efd\uff0c\u9664 root \u5916\uff0c\u9700\u8981\u952e\u5165\u8be5\u4f7f\u7528\u8005\u7684\u5bc6\u7801\u3002 \u251c\u2500\u2500 sync # \u6570\u636e\u540c\u6b65,sync\u547d\u4ee4\u662f\u5728\u5173\u95edLinux\u7cfb\u7edf\u65f6\u4f7f\u7528\u7684\u3002 \u251c\u2500\u2500 systemctl # \u7cfb\u7edf\u670d\u52a1\u7ba1\u7406\u5668\u6307\u4ee4 \u251c\u2500\u2500 systemd -> /lib/systemd/systemd # \u542f\u52a8\u5b88\u62a4\u8fdb\u7a0b \u251c\u2500\u2500 systemd-ask-password \u251c\u2500\u2500 systemd-escape \u251c\u2500\u2500 systemd-hwdb \u251c\u2500\u2500 systemd-inhibit \u251c\u2500\u2500 systemd-machine-id-setup \u251c\u2500\u2500 systemd-notify \u251c\u2500\u2500 systemd-sysusers \u251c\u2500\u2500 systemd-tmpfiles \u251c\u2500\u2500 systemd-tty-ask-password-agent \u251c\u2500\u2500 tailf #\u663e\u793a\u7ed3\u5c3e\u67d0\u4e2a\u6570\u91cf\u7684\u6587\u5b57\u533a\u5757 \u251c\u2500\u2500 tar # \u7528\u4e8e\u5907\u4efd\u6587\u4ef6\u3002\u538b\u7f29 \u251c\u2500\u2500 tempfile # \u7ed9\u4e34\u65f6\u6587\u4ef6\u547d\u540d \u251c\u2500\u2500 touch # \u4fee\u6539\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u7684\u65f6\u95f4\u5c5e\u6027\uff0c\u5305\u62ec\u5b58\u53d6\u65f6\u95f4\u548c\u66f4\u6539\u65f6\u95f4\u3002\u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u7cfb\u7edf\u4f1a\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u3002 \u251c\u2500\u2500 true # \u8fd4\u56de\u96f6\u9000\u51fa\u503c\u3002 \u251c\u2500\u2500 udevadm # \u53ef\u7528\u4e8e\uff1a \u63a7\u5236\u670d\u52a1\u3001 \u8bf7\u6c42\u5185\u6838\u4e8b\u4ef6\u3001\u7ba1\u7406\u4e8b\u4ef6\u961f\u5217\u3001\u8fdb\u884c\u7b80\u5355\u7684\u8c03\u8bd5\u3002 \u251c\u2500\u2500 umount # \u5378\u9664\u6587\u4ef6\u7cfb\u7edf\u3002 \u251c\u2500\u2500 uname # \u663e\u793a\u7cfb\u7edf\u4fe1\u606f\u3002 \u251c\u2500\u2500 uncompress # \u7528\u6765\u89e3\u538b.Z\u6587\u4ef6 \u251c\u2500\u2500 unicode_start \u251c\u2500\u2500 vdir \u251c\u2500\u2500 wdctl # \u770b\u95e8\u72d7\u63a7\u5236 \u251c\u2500\u2500 which # \u67e5\u627e\u6587\u4ef6\u3002 \u251c\u2500\u2500 ypdomainname -> hostname \u251c\u2500\u2500 zcat # \u663e\u793a\u538b\u7f29\u5305\u4e2d\u6587\u4ef6\u7684\u5185\u5bb9 \u251c\u2500\u2500 zcmp # \u6bd4\u8f83\u4e24\u4e2a\u538b\u7f29\u5305\u4e2d\u7684\u6587\u4ef6 \u251c\u2500\u2500 zdiff \u251c\u2500\u2500 zegrep # egrep=grep -E \u7528\u4e8e\u663e\u793a\u6587\u4ef6\u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26 \u251c\u2500\u2500 zfgrep # \u251c\u2500\u2500 zforce \u251c\u2500\u2500 zgrep # \u4e0d\u89e3\u538b\u8fc7\u6ee4\u538b\u7f29\u5305\u4e2d\u6587\u672c \u251c\u2500\u2500 zless \u251c\u2500\u2500 zmore \u2514\u2500\u2500 znew # \u5c06.Z\u538b\u7f29\u5305\u91cd\u65b0\u8f6c\u5316\u4e3agzip\u547d\u4ee4\u538b\u7f29\u7684.gz\u538b\u7f29\u5305","title":"/bin"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#etcinitd","text":"\u251c\u2500\u2500 alsa-utils # \u63a7\u5236\u58f0\u5361\u7684\u7a0b\u5e8f \u251c\u2500\u2500 apache2 # apache2\u670d\u52a1\u5668 \u251c\u2500\u2500 apache-htcacheclean # \u53ef\u4ee5\u7528\u4e8e\u5c06mod_disk_cache\u7684\u78c1\u76d8\u7f13\u51b2\u533a\u5360\u7528\u7684\u7a7a\u95f4\u4fdd\u6301\u5728\u4e00\u4e2a\u5408\u7406\u7684\u6c34\u5e73 \u251c\u2500\u2500 avahi-daemon # Avahi\u5141\u8bb8\u7a0b\u5e8f\u5728\u4e0d\u9700\u8981\u8fdb\u884c\u624b\u52a8\u7f51\u7edc\u914d\u7f6e\u7684\u60c5\u51b5 \u4e0b\uff0c\u5728\u4e00\u4e2a\u672c\u5730\u7f51\u7edc\u4e2d\u53d1\u5e03\u548c\u83b7\u77e5\u5404\u79cd\u670d\u52a1\u548c\u4e3b\u673a\u3002 \u251c\u2500\u2500 bluetooth # \u84dd\u7259 \u251c\u2500\u2500 console-setup.sh \u251c\u2500\u2500 cron # \u5b9a\u65f6\u4efb\u52a1 \u251c\u2500\u2500 dbus # \u6570\u636e\u603b\u7ebf \u251c\u2500\u2500 dhcpcd # DHCP \u251c\u2500\u2500 dphys-swapfile #\u5185\u5b58\u4ea4\u6362\u7a7a\u95f4 \u251c\u2500\u2500 fake-hwclock \u251c\u2500\u2500 hwclock.sh # \u663e\u793a\u4e0e\u8bbe\u5b9a\u786c\u4ef6\u65f6\u949f \u251c\u2500\u2500 keyboard-setup.sh \u251c\u2500\u2500 kmod # \u5904\u7406Linux\u5185\u6838\u6a21\u5757\u4e2d\u4e00\u822c\u4efb\u52a1\u7684\u5de5\u5177\u96c6\uff0c\u529f\u80fd\u5305\u62ec\uff1a\u63d2\u5165\u3001\u5220\u9664\u3001\u5217\u8868\u3001\u67e5\u770b\u5c5e\u6027\u3001\u89e3\u51b3\u4f9d\u8d56\u5173\u7cfb\u548c\u522b\u540d\u7684\u5171\u540c\u4efb\u52a1 \u251c\u2500\u2500 networking \u251c\u2500\u2500 nfs-common \u251c\u2500\u2500 paxctld \u251c\u2500\u2500 plymouth # \u6e32\u67d3\u521d\u59cb\u7684\u542f\u52a8\u754c\u9762 \u251c\u2500\u2500 plymouth-log \u251c\u2500\u2500 procps \u251c\u2500\u2500 raspi-config # \u6811\u8393\u6d3e\u914d\u7f6e\u7a0b\u5e8f \u251c\u2500\u2500 rpcbind # \u901a\u7528\u5730\u5740\u548cRCP\u7a0b\u5e8f\u53f7\u7801(RPCprogramnumber)\u4e4b\u95f4\u7684\u6620\u5c04\u5668 \u251c\u2500\u2500 rsync # \u6570\u636e\u955c\u50cf\u5907\u4efd\u5de5\u5177 \u251c\u2500\u2500 rsyslog # \u5feb\u901f\u5904\u7406\u6536\u96c6\u7cfb\u7edf\u65e5\u5fd7\u7684\u7a0b\u5e8f \u251c\u2500\u2500 ssh","title":"/etc/init.d"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#dev","text":"","title":"/dev"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#boot","text":"\u4e0e\u5f00\u673a\u6709\u5173\u7684\u6587\u4ef6","title":"/boot"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#dmesg","text":"","title":"\u5f00\u673a\u4fe1\u606f\u4ece\u547d\u4ee4dmesg\u4e2d\u8bfb\u53d6"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#findmnt","text":"","title":"\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u7531\u547d\u4ee4findmnt\u8bfb\u53d6"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#_4","text":"","title":"\u5b89\u88c5\u7684\u7cfb\u7edf\u670d\u52a1"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#_5","text":"ser\u7684\u610f\u601d\u4e0d\u662fuser\uff0c\u800c\u662fUnix System Resource\uff08Unix\u7cfb\u7edf\u8d44\u6e90\uff09 /bin\uff1a\u7cfb\u7edf\u5fc5\u5907\u6307\u4ee4 /sbin\uff1a\u8d85\u7ea7\u7528\u6237\u6307\u4ee4 /usr/bin\uff1a\u540e\u671f\u5b89\u88c5\u8f6f\u4ef6\u7684\u8fd0\u884c\u811a\u672c /usr/sbin\uff1a\u540e\u671f\u5b89\u88c5\u7684\u7cfb\u7edf\u7ba1\u7406\u5fc5\u5907\u7a0b\u5e8f /usr/local/bin\uff1a\u7528\u6237\u81ea\u5b9a\u4e49 /usr/local/sbin\uff1a\u7528\u6237\u81ea\u5b9a\u4e49","title":"\u5b58\u653e\u547d\u4ee4\u7684\u76ee\u5f55"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#root","text":"$ sudo su","title":"\u76f4\u63a5root"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#curl-fssl-httpsgetdockercom-bash-s-docker-mirror-aliyun","text":"","title":"$ curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#dpkg-reconfigure","text":"\u672c\u5730\u5316\u8bed\u8a00\u8bbe\u7f6e\uff0c\u7528\u7a7a\u683c\u589e\u51cf[*]\u9009\u9879 sudo dpkg-reconfigure locales \u5982\u679c\u8df3\u8fc7\u751f\u6210\u5219\u4f7f\u7528apt update+upgrade\u4e0b\u8f7d\u8bed\u8a00\u5305\uff0c\u4e4b\u540ereboot\u751f\u6548 \u8bbe\u7f6e\u65f6\u533a sudo dpkg-reconfigure tzdata \u8bbe\u7f6e\u63a7\u5236\u53f0\u7f16\u7801 sudo dpkg-reconfigure console-setup","title":"dpkg-reconfigure"},{"location":"\u8ba1\u7b97\u673a/IoT\u7269\u8054\u7f51/\u6811\u8393\u6d3e/#vcgencmd","text":"","title":"vcgencmd \u547d\u4ee4\u67e5\u770b\u786c\u4ef6\u72b6\u6001"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u57fa\u7840\u77e5\u8bc6/","text":"\u57fa\u7840\u77e5\u8bc6 \u00b6","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u57fa\u7840\u77e5\u8bc6/#_1","text":"","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u9762\u8bd5\u8bd5\u9898/","text":"\u9762\u8bd5\u8bd5\u9898 \u00b6","title":"\u9762\u8bd5\u8bd5\u9898"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u9762\u8bd5\u8bd5\u9898/#_1","text":"","title":"\u9762\u8bd5\u8bd5\u9898"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/ITIL/\u6301\u7eed\u670d\u52a1\u6539\u8fdb/","text":"\u6301\u7eed\u670d\u52a1\u6539\u8fdb \u00b6","title":"\u6301\u7eed\u670d\u52a1\u6539\u8fdb"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/ITIL/\u6301\u7eed\u670d\u52a1\u6539\u8fdb/#_1","text":"","title":"\u6301\u7eed\u670d\u52a1\u6539\u8fdb"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/ITIL/\u670d\u52a1\u6218\u7565/","text":"","title":"\u670d\u52a1\u6218\u7565"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/ITIL/\u670d\u52a1\u8bbe\u8ba1/","text":"\u670d\u52a1\u8bbe\u8ba1 \u00b6","title":"\u670d\u52a1\u8bbe\u8ba1"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/ITIL/\u670d\u52a1\u8bbe\u8ba1/#_1","text":"","title":"\u670d\u52a1\u8bbe\u8ba1"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/ITIL/\u670d\u52a1\u8f6c\u6362/","text":"","title":"\u670d\u52a1\u8f6c\u6362"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/ITIL/\u670d\u52a1\u8fd0\u8425/","text":"","title":"\u670d\u52a1\u8fd0\u8425"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Ansible/","text":"","title":"Ansible"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Apache/","text":"Apache \u00b6","title":"Apache"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Apache/#apache","text":"","title":"Apache"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/ApacheTomcat/","text":"ApacheTomcat \u00b6","title":"ApacheTomcat"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/ApacheTomcat/#apachetomcat","text":"","title":"ApacheTomcat"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/ApacheZookeeper/","text":"","title":"ApacheZookeeper"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Cacti/","text":"Cacti \u00b6","title":"Cacti"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Cacti/#cacti","text":"","title":"Cacti"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/ClamAV/","text":"ClamAV \u00b6 ClamAV\u662f\u4e00\u4e2a\u5728\u547d\u4ee4\u884c\u4e0b\u67e5\u6bd2\u8f6f\u4ef6,\u56e0\u4e3a\u5b83\u4e0d\u5c06\u6740\u6bd2\u4f5c\u4e3a\u4e3b\u8981\u529f\u80fd,\u9ed8\u8ba4\u53ea\u80fd\u67e5\u51fa\u60a8\u8ba1\u7b97\u673a\u5185\u7684\u75c5\u6bd2,\u4f46\u662f\u65e0\u6cd5\u6e05\u9664,\u81f3\u591a\u5220\u9664\u6587\u4ef6\u3002 \u4e8c\u8fdb\u5236\u5b89\u88c5 sudo apt-get install clamav \u5e38\u7528\u547d\u4ee4 freshclam # \u66f4\u65b0\u75c5\u6bd2\u5e93 clamscan -r /home # \u626b\u63cf\u6240\u6709\u7528\u6237\u7684\u4e3b\u76ee\u5f55 clamscan -r / # \u626b\u63cf\u6240\u6709\u76ee\u5f55\u5e76\u663e\u793a\u6240\u6709\u6587\u4ef6\u7684\u626b\u63cf\u7ed3\u679c clamscan -r --bell -i / # \u626b\u63cf\u6240\u6709\u76ee\u5f55\u5e76\u663e\u793a\u6709\u95ee\u9898\u6587\u4ef6\u7684\u626b\u63cf\u7ed3\u679c","title":"ClamAV"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/ClamAV/#clamav","text":"ClamAV\u662f\u4e00\u4e2a\u5728\u547d\u4ee4\u884c\u4e0b\u67e5\u6bd2\u8f6f\u4ef6,\u56e0\u4e3a\u5b83\u4e0d\u5c06\u6740\u6bd2\u4f5c\u4e3a\u4e3b\u8981\u529f\u80fd,\u9ed8\u8ba4\u53ea\u80fd\u67e5\u51fa\u60a8\u8ba1\u7b97\u673a\u5185\u7684\u75c5\u6bd2,\u4f46\u662f\u65e0\u6cd5\u6e05\u9664,\u81f3\u591a\u5220\u9664\u6587\u4ef6\u3002 \u4e8c\u8fdb\u5236\u5b89\u88c5 sudo apt-get install clamav \u5e38\u7528\u547d\u4ee4 freshclam # \u66f4\u65b0\u75c5\u6bd2\u5e93 clamscan -r /home # \u626b\u63cf\u6240\u6709\u7528\u6237\u7684\u4e3b\u76ee\u5f55 clamscan -r / # \u626b\u63cf\u6240\u6709\u76ee\u5f55\u5e76\u663e\u793a\u6240\u6709\u6587\u4ef6\u7684\u626b\u63cf\u7ed3\u679c clamscan -r --bell -i / # \u626b\u63cf\u6240\u6709\u76ee\u5f55\u5e76\u663e\u793a\u6709\u95ee\u9898\u6587\u4ef6\u7684\u626b\u63cf\u7ed3\u679c","title":"ClamAV"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/DHCP/","text":"DHCP \u00b6","title":"DHCP"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/DHCP/#dhcp","text":"","title":"DHCP"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/DNS/","text":"DNS \u00b6","title":"DNS"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/DNS/#dns","text":"","title":"DNS"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Dokcer/","text":"Docker \u00b6 ubuntu\u5b89\u88c5 \u00b6 1.\u5728\u7ebf\u624b\u52a8\u5b89\u88c5docker $ apt-get update $ apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ software-properties-common \u6dfb\u52a0\u6e90\u7684gpg\u5bc6\u94a5 $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - $ add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" # lsb_release -cs\u547d\u4ee4\u4e3a\u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u4ee3\u53f7 $ apt-get update $ apt-get install docker-ce 2.\u4f7f\u7528\u5b98\u65b9\u811a\u672c\u5b89\u88c5docker $ sudo curl -sSL https://get.docker.com / | sh centos\u5b89\u88c5 \u00b6 $ sudo yum dpdate $ sudo yum install -y yum-utils \\ device-mapper-persistent-data \\ lvm2 $ sudo yum-config-manager \\ --add-repo \\ https://download.docker.com/linux/centos/docker-ce.repo $ sudo yum update $ sudo yum install -y docker-ce $sudo systemctl start docker 2.\u4f7f\u7528\u5b98\u65b9\u811a\u672c\u5b89\u88c5docker $ curl -fsSL https://get.docker.com / | sh \u6216 $ curl -qO https://get.docker.com / | sh \u6d4b\u8bd5\u7248 $ curl -fsSL https://test.docker.com / | sh docker\u547d\u4ee4 \u00b6 -a stdin: \u6307\u5b9a\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u5185\u5bb9\u7c7b\u578b\uff0c\u53ef\u9009 STDIN/STDOUT/STDERR \u4e09\u9879\uff1b -d: \u540e\u53f0\u8fd0\u884c\u5bb9\u5668\uff0c\u5e76\u8fd4\u56de\u5bb9\u5668ID\uff1b -i: \u4ee5\u4ea4\u4e92\u6a21\u5f0f\u8fd0\u884c\u5bb9\u5668\uff0c\u901a\u5e38\u4e0e -t \u540c\u65f6\u4f7f\u7528\uff1b -p: \u7aef\u53e3\u6620\u5c04\uff0c\u683c\u5f0f\u4e3a\uff1a\u4e3b\u673a(\u5bbf\u4e3b)\u7aef\u53e3:\u5bb9\u5668\u7aef\u53e3 -t: \u4e3a\u5bb9\u5668\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u4f2a\u8f93\u5165\u7ec8\u7aef\uff0c\u901a\u5e38\u4e0e -i \u540c\u65f6\u4f7f\u7528\uff1b --name=\"nginx-lb\": \u4e3a\u5bb9\u5668\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\uff1b --dns 8.8.8.8: \u6307\u5b9a\u5bb9\u5668\u4f7f\u7528\u7684DNS\u670d\u52a1\u5668\uff0c\u9ed8\u8ba4\u548c\u5bbf\u4e3b\u4e00\u81f4\uff1b --dns-search example.com: \u6307\u5b9a\u5bb9\u5668DNS\u641c\u7d22\u57df\u540d\uff0c\u9ed8\u8ba4\u548c\u5bbf\u4e3b\u4e00\u81f4\uff1b -h \"mars\": \u6307\u5b9a\u5bb9\u5668\u7684hostname\uff1b -e username=\"ritchie\": \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff1b --env-file=[]: \u4ece\u6307\u5b9a\u6587\u4ef6\u8bfb\u5165\u73af\u5883\u53d8\u91cf\uff1b --cpuset=\"0-2\" or --cpuset=\"0,1,2\": \u7ed1\u5b9a\u5bb9\u5668\u5230\u6307\u5b9aCPU\u8fd0\u884c\uff1b -m :\u8bbe\u7f6e\u5bb9\u5668\u4f7f\u7528\u5185\u5b58\u6700\u5927\u503c\uff1b --net=\"bridge\": \u6307\u5b9a\u5bb9\u5668\u7684\u7f51\u7edc\u8fde\u63a5\u7c7b\u578b\uff0c\u652f\u6301 bridge/host/none/container: \u56db\u79cd\u7c7b\u578b\uff1b --link=[]: \u6dfb\u52a0\u94fe\u63a5\u5230\u53e6\u4e00\u4e2a\u5bb9\u5668\uff1b --expose=[]: \u5f00\u653e\u4e00\u4e2a\u7aef\u53e3\u6216\u4e00\u7ec4\u7aef\u53e3\uff1b $ docker pull ubuntu # \u83b7\u53d6ubuntu\u955c\u50cf \u76f8\u5f53\u4e8e $ docker pull registry.hub.docker.com/ubuntu:latest docker\u547d\u4ee4\u514dsudo $ sudo usermod -aG docker USER_NAME docker\u5e38\u7528\u547d\u4ee4 \u00b6 \u67e5\u770b\u8be6\u7ec6\u7684\u5bb9\u5668\u4fe1\u606f $ docker inspect \u5bb9\u5668id/image \u67e5\u770b\u5bb9\u5668\u5b9e\u65f6\u7edf\u8ba1\u4fe1\u606f $ docker stats -a -a, --all \u8f93\u51fa\u6240\u6709 \u67e5\u770b\u5bb9\u5668\u5185\u7684\u6587\u4ef6\u7cfb\u7edf\u53d8\u66f4 $ docker container diff \u5bb9\u5668id \u67e5\u770b\u5bb9\u5668\u7684\u7aef\u53e3\u6620\u5c04 $ docker container port \u5bb9\u5668id \u66f4\u65b0\u914d\u7f6e $ container update [\u9009\u9879] \u5bb9\u5668id \u66f4\u6539\u5bb9\u5668\u65f6\u95f4\u8bbe\u7f6e $ docker cp /etc/localtime [containerId]:/etc/localtime \u5982\u679c\u521b\u5efa\u65f6\u672a\u6307\u5b9a\u81ea\u52a8\u91cd\u542f --restart=always ,\u53ef\u901a\u8fc7update \u547d\u4ee4\u8bbe\u7f6e $ docker update --restart=always xxx \u914d\u7f6e\u81ea\u52a8\u91cd\u542f \u5982 $ sudo docker run --restart=on-failure:10 redis","title":"Docker"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Dokcer/#docker","text":"","title":"Docker"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Dokcer/#ubuntu","text":"1.\u5728\u7ebf\u624b\u52a8\u5b89\u88c5docker $ apt-get update $ apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ software-properties-common \u6dfb\u52a0\u6e90\u7684gpg\u5bc6\u94a5 $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - $ add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\" # lsb_release -cs\u547d\u4ee4\u4e3a\u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u4ee3\u53f7 $ apt-get update $ apt-get install docker-ce 2.\u4f7f\u7528\u5b98\u65b9\u811a\u672c\u5b89\u88c5docker $ sudo curl -sSL https://get.docker.com / | sh","title":"ubuntu\u5b89\u88c5"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Dokcer/#centos","text":"$ sudo yum dpdate $ sudo yum install -y yum-utils \\ device-mapper-persistent-data \\ lvm2 $ sudo yum-config-manager \\ --add-repo \\ https://download.docker.com/linux/centos/docker-ce.repo $ sudo yum update $ sudo yum install -y docker-ce $sudo systemctl start docker 2.\u4f7f\u7528\u5b98\u65b9\u811a\u672c\u5b89\u88c5docker $ curl -fsSL https://get.docker.com / | sh \u6216 $ curl -qO https://get.docker.com / | sh \u6d4b\u8bd5\u7248 $ curl -fsSL https://test.docker.com / | sh","title":"centos\u5b89\u88c5"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Dokcer/#docker_1","text":"-a stdin: \u6307\u5b9a\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u5185\u5bb9\u7c7b\u578b\uff0c\u53ef\u9009 STDIN/STDOUT/STDERR \u4e09\u9879\uff1b -d: \u540e\u53f0\u8fd0\u884c\u5bb9\u5668\uff0c\u5e76\u8fd4\u56de\u5bb9\u5668ID\uff1b -i: \u4ee5\u4ea4\u4e92\u6a21\u5f0f\u8fd0\u884c\u5bb9\u5668\uff0c\u901a\u5e38\u4e0e -t \u540c\u65f6\u4f7f\u7528\uff1b -p: \u7aef\u53e3\u6620\u5c04\uff0c\u683c\u5f0f\u4e3a\uff1a\u4e3b\u673a(\u5bbf\u4e3b)\u7aef\u53e3:\u5bb9\u5668\u7aef\u53e3 -t: \u4e3a\u5bb9\u5668\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u4f2a\u8f93\u5165\u7ec8\u7aef\uff0c\u901a\u5e38\u4e0e -i \u540c\u65f6\u4f7f\u7528\uff1b --name=\"nginx-lb\": \u4e3a\u5bb9\u5668\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\uff1b --dns 8.8.8.8: \u6307\u5b9a\u5bb9\u5668\u4f7f\u7528\u7684DNS\u670d\u52a1\u5668\uff0c\u9ed8\u8ba4\u548c\u5bbf\u4e3b\u4e00\u81f4\uff1b --dns-search example.com: \u6307\u5b9a\u5bb9\u5668DNS\u641c\u7d22\u57df\u540d\uff0c\u9ed8\u8ba4\u548c\u5bbf\u4e3b\u4e00\u81f4\uff1b -h \"mars\": \u6307\u5b9a\u5bb9\u5668\u7684hostname\uff1b -e username=\"ritchie\": \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff1b --env-file=[]: \u4ece\u6307\u5b9a\u6587\u4ef6\u8bfb\u5165\u73af\u5883\u53d8\u91cf\uff1b --cpuset=\"0-2\" or --cpuset=\"0,1,2\": \u7ed1\u5b9a\u5bb9\u5668\u5230\u6307\u5b9aCPU\u8fd0\u884c\uff1b -m :\u8bbe\u7f6e\u5bb9\u5668\u4f7f\u7528\u5185\u5b58\u6700\u5927\u503c\uff1b --net=\"bridge\": \u6307\u5b9a\u5bb9\u5668\u7684\u7f51\u7edc\u8fde\u63a5\u7c7b\u578b\uff0c\u652f\u6301 bridge/host/none/container: \u56db\u79cd\u7c7b\u578b\uff1b --link=[]: \u6dfb\u52a0\u94fe\u63a5\u5230\u53e6\u4e00\u4e2a\u5bb9\u5668\uff1b --expose=[]: \u5f00\u653e\u4e00\u4e2a\u7aef\u53e3\u6216\u4e00\u7ec4\u7aef\u53e3\uff1b $ docker pull ubuntu # \u83b7\u53d6ubuntu\u955c\u50cf \u76f8\u5f53\u4e8e $ docker pull registry.hub.docker.com/ubuntu:latest docker\u547d\u4ee4\u514dsudo $ sudo usermod -aG docker USER_NAME","title":"docker\u547d\u4ee4"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Dokcer/#docker_2","text":"\u67e5\u770b\u8be6\u7ec6\u7684\u5bb9\u5668\u4fe1\u606f $ docker inspect \u5bb9\u5668id/image \u67e5\u770b\u5bb9\u5668\u5b9e\u65f6\u7edf\u8ba1\u4fe1\u606f $ docker stats -a -a, --all \u8f93\u51fa\u6240\u6709 \u67e5\u770b\u5bb9\u5668\u5185\u7684\u6587\u4ef6\u7cfb\u7edf\u53d8\u66f4 $ docker container diff \u5bb9\u5668id \u67e5\u770b\u5bb9\u5668\u7684\u7aef\u53e3\u6620\u5c04 $ docker container port \u5bb9\u5668id \u66f4\u65b0\u914d\u7f6e $ container update [\u9009\u9879] \u5bb9\u5668id \u66f4\u6539\u5bb9\u5668\u65f6\u95f4\u8bbe\u7f6e $ docker cp /etc/localtime [containerId]:/etc/localtime \u5982\u679c\u521b\u5efa\u65f6\u672a\u6307\u5b9a\u81ea\u52a8\u91cd\u542f --restart=always ,\u53ef\u901a\u8fc7update \u547d\u4ee4\u8bbe\u7f6e $ docker update --restart=always xxx \u914d\u7f6e\u81ea\u52a8\u91cd\u542f \u5982 $ sudo docker run --restart=on-failure:10 redis","title":"docker\u5e38\u7528\u547d\u4ee4"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/ELK/","text":"","title":"ELK"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/ElasticSearch/","text":"ElasticSearch \u00b6","title":"ElasticSearch"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/ElasticSearch/#elasticsearch","text":"","title":"ElasticSearch"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Email/","text":"Email \u00b6","title":"Email"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Email/#email","text":"","title":"Email"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/FTP/","text":"FTP \u00b6 \u5b89\u88c5FTP $ yum install vsftpd \u5f00\u542f $ service vsftpd start \u6216 $ systemctl start vsftpd \u9632\u706b\u5899\u653e\u884c $ firewall-cmd --zone=public --query-port=21/tcp $ firewall-cmd --reload \u914d\u7f6e\u6587\u4ef6/etc/csftpd/vsftpd.conf anonymous_enable=YES # \u5141\u8bb8\u533f\u540d\u8bbf\u95ee local_enable=YES write_enable=YES local_umask=022 dirmessage_enable=YES xferlog_enable=YES connect_from_port_20=YES xferlog_std_format=YES listen=NO listen_ipv6=YES pam_service_name=vsftpd userlist_enable=YES tcp_wrappers=YES anon_root=/var/ftp/pub \uff03\u8bbe\u7f6e\u533f\u540d\u7528\u6237\u7684\u767b\u5f55\u76ee\u5f55\uff08\u5982\u9700\u8981\uff0c\u9700\u81ea\u5df1\u6dfb\u52a0\u5e76\u4fee\u6539\uff09 anon_upload_enable=YES \uff03\u6253\u5f00\u533f\u540d\u7528\u6237\u7684\u4e0a\u4f20\u6743\u9650 anon_mkdir_write_enable=YES \uff03\u6253\u5f00\u533f\u540d\u7528\u6237\u521b\u5efa\u76ee\u5f55\u7684\u6743\u9650 anon_other_write_enable=YES \uff03\u6253\u5f00\u533f\u540d\u7528\u6237\u5220\u9664\u548c\u91cd\u547d\u540d\u7684\u6743\u9650\uff08\u5982\u9700\u8981\uff0c\u9700\u81ea\u5df1\u6dfb\u52a0\uff09 \u914d\u7f6e\u7ec4\u7ec7\u533f\u540d\u8bbf\u95ee\u548c\u5207\u6362\u76ee\u5f55 anonymous_enable=NO # \u7981\u7528\u533f\u540d\u7528\u6237 12 YES \u6539\u4e3aNO chroot_local_user=YES # \u7981\u6b62\u5207\u6362\u6839\u76ee\u5f55 101 \u884c \u5220\u9664# \u914d\u7f6e\u521b\u5efa FTP \u7528\u6237 $ useradd ftpuser # \u521b\u5efa\u4e00\u4e2a\u7528\u6237 ftpuser $ echo \"password\" | passwd ftpuser --stdin # \u4e3a\u7528\u6237 ftpuser \u8bbe\u7f6e\u5bc6\u7801 $ usermod -s /sbin/nologin ftpuser # \u9650\u5236\u7528\u6237 ftpuser\u53ea\u80fd\u901a\u8fc7 FTP \u8bbf\u95ee\uff0c\u800c\u4e0d\u80fd\u76f4\u63a5\u767b\u5f55\u670d\u52a1\u5668\u3002 \u4e3a\u7528\u6237\u5206\u914d\u4e3b\u76ee\u5f55 $ mkdir -p /data/ftp/pub # -p\u521b\u5efa\u4e0a\u5c42\u76ee\u5f55 $ usermod -d /data/ftp ftpuser # \u5c06\u76ee\u5f55\u5206\u914d\u7ed9ftpuser \u521b\u5efa\u767b\u5f55\u6b22\u8fce\u6587\u4ef6 $ echo \"Welcome to use FTP service.\" > /data/ftp/welcome.txt $ mod a-w /data/ftp && chmod 777 -R /data/ftp/pub # \u8bbe\u7f6e\u8bbf\u95ee\u6743\u9650","title":"FTP"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/FTP/#ftp","text":"\u5b89\u88c5FTP $ yum install vsftpd \u5f00\u542f $ service vsftpd start \u6216 $ systemctl start vsftpd \u9632\u706b\u5899\u653e\u884c $ firewall-cmd --zone=public --query-port=21/tcp $ firewall-cmd --reload \u914d\u7f6e\u6587\u4ef6/etc/csftpd/vsftpd.conf anonymous_enable=YES # \u5141\u8bb8\u533f\u540d\u8bbf\u95ee local_enable=YES write_enable=YES local_umask=022 dirmessage_enable=YES xferlog_enable=YES connect_from_port_20=YES xferlog_std_format=YES listen=NO listen_ipv6=YES pam_service_name=vsftpd userlist_enable=YES tcp_wrappers=YES anon_root=/var/ftp/pub \uff03\u8bbe\u7f6e\u533f\u540d\u7528\u6237\u7684\u767b\u5f55\u76ee\u5f55\uff08\u5982\u9700\u8981\uff0c\u9700\u81ea\u5df1\u6dfb\u52a0\u5e76\u4fee\u6539\uff09 anon_upload_enable=YES \uff03\u6253\u5f00\u533f\u540d\u7528\u6237\u7684\u4e0a\u4f20\u6743\u9650 anon_mkdir_write_enable=YES \uff03\u6253\u5f00\u533f\u540d\u7528\u6237\u521b\u5efa\u76ee\u5f55\u7684\u6743\u9650 anon_other_write_enable=YES \uff03\u6253\u5f00\u533f\u540d\u7528\u6237\u5220\u9664\u548c\u91cd\u547d\u540d\u7684\u6743\u9650\uff08\u5982\u9700\u8981\uff0c\u9700\u81ea\u5df1\u6dfb\u52a0\uff09 \u914d\u7f6e\u7ec4\u7ec7\u533f\u540d\u8bbf\u95ee\u548c\u5207\u6362\u76ee\u5f55 anonymous_enable=NO # \u7981\u7528\u533f\u540d\u7528\u6237 12 YES \u6539\u4e3aNO chroot_local_user=YES # \u7981\u6b62\u5207\u6362\u6839\u76ee\u5f55 101 \u884c \u5220\u9664# \u914d\u7f6e\u521b\u5efa FTP \u7528\u6237 $ useradd ftpuser # \u521b\u5efa\u4e00\u4e2a\u7528\u6237 ftpuser $ echo \"password\" | passwd ftpuser --stdin # \u4e3a\u7528\u6237 ftpuser \u8bbe\u7f6e\u5bc6\u7801 $ usermod -s /sbin/nologin ftpuser # \u9650\u5236\u7528\u6237 ftpuser\u53ea\u80fd\u901a\u8fc7 FTP \u8bbf\u95ee\uff0c\u800c\u4e0d\u80fd\u76f4\u63a5\u767b\u5f55\u670d\u52a1\u5668\u3002 \u4e3a\u7528\u6237\u5206\u914d\u4e3b\u76ee\u5f55 $ mkdir -p /data/ftp/pub # -p\u521b\u5efa\u4e0a\u5c42\u76ee\u5f55 $ usermod -d /data/ftp ftpuser # \u5c06\u76ee\u5f55\u5206\u914d\u7ed9ftpuser \u521b\u5efa\u767b\u5f55\u6b22\u8fce\u6587\u4ef6 $ echo \"Welcome to use FTP service.\" > /data/ftp/welcome.txt $ mod a-w /data/ftp && chmod 777 -R /data/ftp/pub # \u8bbe\u7f6e\u8bbf\u95ee\u6743\u9650","title":"FTP"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Fabric/","text":"","title":"Fabric"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Git/","text":"Git \u00b6 git --version # \u67e5\u770b\u7248\u672c git clone https://xxx # \u514b\u9686\u9879\u76ee git add -A # \u5c06\u6240\u6709\u6587\u4ef6\u6dfb\u52a0\u5230\u4e0a\u4f20\u961f\u5217 git commit -m \"\u6ce8\u91ca\" # \u63d0\u4ea4\u66f4\u6539 git push orgin master # \u63a8\u9001\u5230orgin/master\u5206\u652f git branch # \u67e5\u770b\u76ee\u524d\u7684\u5206\u652f git branch new_branch # \u521b\u5efa\u65b0\u5206\u652fnew_branch git checkout -b new_b # \u521b\u5efa\u5e76\u5207\u6362\u5230\u65b0\u5206\u652f git merge gh_pages --allow-unrelated-histories # \u5408\u5e76\u5206\u652f\u5230master git branch -D new_b # \u5220\u9664\u5206\u652f","title":"Git"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Git/#git","text":"git --version # \u67e5\u770b\u7248\u672c git clone https://xxx # \u514b\u9686\u9879\u76ee git add -A # \u5c06\u6240\u6709\u6587\u4ef6\u6dfb\u52a0\u5230\u4e0a\u4f20\u961f\u5217 git commit -m \"\u6ce8\u91ca\" # \u63d0\u4ea4\u66f4\u6539 git push orgin master # \u63a8\u9001\u5230orgin/master\u5206\u652f git branch # \u67e5\u770b\u76ee\u524d\u7684\u5206\u652f git branch new_branch # \u521b\u5efa\u65b0\u5206\u652fnew_branch git checkout -b new_b # \u521b\u5efa\u5e76\u5207\u6362\u5230\u65b0\u5206\u652f git merge gh_pages --allow-unrelated-histories # \u5408\u5e76\u5206\u652f\u5230master git branch -D new_b # \u5220\u9664\u5206\u652f","title":"Git"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Graylog/","text":"","title":"Graylog"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/HAProxy/","text":"","title":"HAProxy"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/IIS/","text":"IIS \u00b6","title":"IIS"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/IIS/#iis","text":"","title":"IIS"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Jenkins/","text":"Jenkins \u00b6 \u4f7f\u7528Docker\u5feb\u901f\u5b89\u88c5 $ docker pull jenkins $ mkdir /home/jenkins_home $ docker run -d --name jenkins -p 8080:8080 -v /home/jenkins_home:/home/jenkins_home jenkins","title":"Jenkins"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Jenkins/#jenkins","text":"\u4f7f\u7528Docker\u5feb\u901f\u5b89\u88c5 $ docker pull jenkins $ mkdir /home/jenkins_home $ docker run -d --name jenkins -p 8080:8080 -v /home/jenkins_home:/home/jenkins_home jenkins","title":"Jenkins"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Keepalived/","text":"","title":"Keepalived"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Kubernates(K8s)/","text":"Kubernates(K8s) \u00b6","title":"Kubernates(K8s)"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Kubernates(K8s)/#kubernatesk8s","text":"","title":"Kubernates(K8s)"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/LVS/","text":"","title":"LVS"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/ModSecurity/","text":"","title":"ModSecurity"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/MongoDB/","text":"MongoDB \u00b6","title":"MongoDB"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/MongoDB/#mongodb","text":"","title":"MongoDB"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/MySQL&MariaDB/","text":"Mysql&MariaDB \u00b6 \u767b\u9646 \u00b6 \u65e0\u5bc6\u7801\u672c\u5730\u767b\u9646 $ mysql $ sudo mysql \u65e0\u5bc6\u7801\u7528\u6237\u540d\u767b\u9646 $ mysql -u umane \u7528\u6237\u540d\u5bc6\u7801\u767b\u9646 $ mysql -u uname -p \u521b\u5efa\u7528\u6237 \u547d\u4ee4:CREATE USER 'username'@'host' IDENTIFIED BY 'password'; username\uff1a\u7528\u6237\u540d host\uff1a\u767b\u9646\u4e3b\u673a\uff0c\u672c\u5730'localhost'\uff0c\u8fdc\u7a0b'%' password\uff1a\u5bc6\u7801\uff0c\u53ef\u4ee5\u4e3a\u7a7a'' \u6388\u6743 \u547d\u4ee4:GRANT privileges ON databasename.tablename TO 'username'@'host'; privileges\uff1aSELECT , INSERT , UPDATE\uff0cALL databasename\uff1a\u8981\u6388\u6743\u7684\u6570\u636e\u5e93\u540d\uff0c\u5168\u90e8\u5219\u4e3a* tablename\uff1a\u8981\u6388\u6743\u7684\u8868\u540d\uff0c\u5168\u90e8\u5219\u4e3a* \u521b\u5efa\u540c\u65f6\u6388\u6743\uff1a GRANT all privileges ON . to test@'%' IDENTIFIED BY '1234'; \u8bbe\u7f6e\u6216\u4fee\u6539\u7528\u6237\u5bc6\u7801 \u547d\u4ee4:SET PASSWORD FOR 'username'@'host' = PASSWORD('newpassword'); \u64a4\u9500\u7528\u6237\u6743\u9650 \u547d\u4ee4: REVOKE privilege ON databasename.tablename FROM 'username'@'host'; \u67e5\u770b\u7528\u6237\u6743\u9650 SHOW GRANTS FOR 'dog'@'localhost'; \u5220\u9664\u7528\u6237 \u547d\u4ee4: DROP USER 'username'@'host'; \u4fdd\u5b58\u8bbe\u7f6e flush privileges; \u8868\u7ba1\u7406 \u00b6 \u5220\u9664\u6570\u636e\u5e93\u4e2d\u6240\u6709\u7684\u8868 1\u3001\u9009\u62e9\u6570\u636e\u5e93\u4e2d\u7684\u6240\u6709\u7684\u8868 SELECT concat('DROP TABLE IF EXISTS ', table_name, ';') FROM information_schema.tables WHERE table_schema = 'mydb'; 2\u3001\u5c06\u8f93\u51fa\u7684\u5185\u5bb9\u518d\u8fd0\u884c\u4e00\u6b21 MySQL \u5b89\u88c5\u914d\u7f6e \u00b6 MySQL \u662f\u6700\u6d41\u884c\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff0c\u7531\u745e\u5178MySQL AB\u516c\u53f8\u5f00\u53d1\uff0c\u76ee\u524d\u5c5e\u4e8eOracle\u516c\u53f8\u3002 MySQL\u6240\u4f7f\u7528\u7684SQL\u8bed\u8a00\u662f\u7528\u4e8e\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u6700\u5e38\u7528\u6807\u51c6\u5316\u8bed\u8a00\u3002 MySQL\u7531\u4e8e\u5176\u4f53\u79ef\u5c0f\u3001\u901f\u5ea6\u5feb\u3001\u603b\u4f53\u62e5\u6709\u6210\u672c\u4f4e\uff0c\u5c24\u5176\u662f\u5f00\u653e\u6e90\u7801\u8fd9\u4e00\u7279\u70b9\uff0c\u4e00\u822c\u4e2d\u5c0f\u578b\u7f51\u7ad9\u7684\u5f00\u53d1\u90fd\u9009\u62e9MySQL\u4f5c\u4e3a\u7f51\u7ad9\u6570\u636e\u5e93\u3002 MySQL \u5b89\u88c5 \u672c\u6559\u7a0b\u7684\u7cfb\u7edf\u5e73\u53f0\uff1aCentOS release 6.6 (Final) 64\u4f4d\u3002 \u4e00\u3001\u5b89\u88c5\u7f16\u8bd1\u5de5\u5177\u53ca\u5e93\u6587\u4ef6 yum -y install gcc gcc-c++ make autoconf libtool-ltdl-devel gd-devel freetype-devel libxml2-devel libjpeg-devel libpng-devel openssl-devel curl-devel bison patch unzip libmcrypt-devel libmhash-devel ncurses-devel sudo bzip2 flex libaio-devel \u4e8c\u3001 \u5b89\u88c5cmake \u7f16\u8bd1\u5668 1\u3001\u4e0b\u8f7dcmake\u5b89\u88c5\u5305 wget http://www.cmake.org/files/v3.1/cmake-3.1.1.tar.gz 2\u3001\u89e3\u538b\u5b89\u88c5\u5305 tar zxvf cmake-3.1.1.tar.gz 3\u3001\u8fdb\u5165\u5b89\u88c5\u5305\u76ee\u5f55 cd cmake-3.1.1 4\u3001\u7f16\u8bd1\u5b89\u88c5 ./bootstrap make && make install \u4e09\u3001\u5b89\u88c5 MySQL MySQL\u7248\u672c\uff1amysql-5.6.15\u3002 1\u3001\u4e0b\u8f7dMySQL\u5b89\u88c5\u5305 wget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.15.tar.gz 2\u3001\u89e3\u538b\u5b89\u88c5\u5305 tar zxvf mysql-5.6.15.tar.gz 3\u3001\u8fdb\u5165\u5b89\u88c5\u5305\u76ee\u5f55 cd mysql-5.6.15 4\u3001\u7f16\u8bd1\u5b89\u88c5 $ cmake -DCMAKE_INSTALL_PREFIX=/usr/local/webserver/mysql/ -DMYSQL_UNIX_ADDR=/tmp/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS=all -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DWITH_INNODB_MEMCACHED=1 -DWITH_DEBUG=OFF -DWITH_ZLIB=bundled -DENABLED_LOCAL_INFILE=1 -DENABLED_PROFILING=ON -DMYSQL_MAINTAINER_MODE=OFF -DMYSQL_DATADIR=/usr/local/webserver/mysql/data -DMYSQL_TCP_PORT=3306 $ make && make install 5\u3001\u67e5\u770bmysql\u7248\u672c: /usr/local/webserver/mysql/bin/mysql --version \u5230\u6b64\uff0cmysql\u5b89\u88c5\u5b8c\u6210\u3002 MySQL \u914d\u7f6e 1\u3001\u521b\u5efamysql\u8fd0\u884c\u4f7f\u7528\u7684\u7528\u6237mysql\uff1a /usr/sbin/groupadd mysql /usr/sbin/useradd -g mysql mysql 2\u3001\u521b\u5efabinlog\u548c\u5e93\u7684\u5b58\u50a8\u8def\u5f84\u5e76\u8d4b\u4e88mysql\u7528\u6237\u6743\u9650 mkdir -p /usr/local/webserver/mysql/binlog /www/data_mysql chown mysql.mysql /usr/local/webserver/mysql/binlog/ /www/data_mysql/ 3\u3001\u521b\u5efamy.cnf\u914d\u7f6e\u6587\u4ef6 \u5c06/etc/my.cnf\u66ff\u6362\u4e3a\u4e0b\u9762\u5185\u5bb9 $ cat /etc/my.cnf [client] port = 3306 socket = /tmp/mysql.sock [mysqld] replicate-ignore-db = mysql replicate-ignore-db = test replicate-ignore-db = information_schema user = mysql port = 3306 socket = /tmp/mysql.sock basedir = /usr/local/webserver/mysql datadir = /www/data_mysql log-error = /usr/local/webserver/mysql/mysql_error.log pid-file = /usr/local/webserver/mysql/mysql.pid open_files_limit = 65535 back_log = 600 max_connections = 5000 max_connect_errors = 1000 table_open_cache = 1024 external-locking = FALSE max_allowed_packet = 32M sort_buffer_size = 1M join_buffer_size = 1M thread_cache_size = 600 #thread_concurrency = 8 query_cache_size = 128M query_cache_limit = 2M query_cache_min_res_unit = 2k default-storage-engine = MyISAM default-tmp-storage-engine = MYISAM thread_stack = 192K transaction_isolation = READ-COMMITTED tmp_table_size = 128M max_heap_table_size = 128M log-slave-updates log-bin = /usr/local/webserver/mysql/binlog/binlog binlog-do-db = oa_fb binlog-ignore-db = mysql binlog_cache_size = 4M binlog_format = MIXED max_binlog_cache_size = 8M max_binlog_size = 1G relay-log-index = /usr/local/webserver/mysql/relaylog/relaylog relay-log-info-file = /usr/local/webserver/mysql/relaylog/relaylog relay-log = /usr/local/webserver/mysql/relaylog/relaylog expire_logs_days = 10 key_buffer_size = 256M read_buffer_size = 1M read_rnd_buffer_size = 16M bulk_insert_buffer_size = 64M myisam_sort_buffer_size = 128M myisam_max_sort_file_size = 10G myisam_repair_threads = 1 myisam_recover interactive_timeout = 120 wait_timeout = 120 skip-name-resolve #master-connect-retry = 10 slave-skip-errors = 1032,1062,126,1114,1146,1048,1396 #master-host = 192.168.1.2 #master-user = username #master-password = password #master-port = 3306 server-id = 1 loose-innodb-trx = 0 loose-innodb-locks = 0 loose-innodb-lock-waits = 0 loose-innodb-cmp = 0 loose-innodb-cmp-per-index = 0 loose-innodb-cmp-per-index-reset = 0 loose-innodb-cmp-reset = 0 loose-innodb-cmpmem = 0 loose-innodb-cmpmem-reset = 0 loose-innodb-buffer-page = 0 loose-innodb-buffer-page-lru = 0 loose-innodb-buffer-pool-stats = 0 loose-innodb-metrics = 0 loose-innodb-ft-default-stopword = 0 loose-innodb-ft-inserted = 0 loose-innodb-ft-deleted = 0 loose-innodb-ft-being-deleted = 0 loose-innodb-ft-config = 0 loose-innodb-ft-index-cache = 0 loose-innodb-ft-index-table = 0 loose-innodb-sys-tables = 0 loose-innodb-sys-tablestats = 0 loose-innodb-sys-indexes = 0 loose-innodb-sys-columns = 0 loose-innodb-sys-fields = 0 loose-innodb-sys-foreign = 0 loose-innodb-sys-foreign-cols = 0 slow_query_log_file = /usr/local/webserver/mysql/mysql_slow.log long_query_time = 1 [mysqldump] quick max_allowed_packet = 32M 4\u3001\u521d\u59cb\u5316\u6570\u636e\u5e93 /usr/local/webserver/mysql/scripts/mysql_install_db --defaults-file=/etc/my.cnf --user=mysql \u663e\u793a\u5982\u4e0b\u4fe1\u606f\uff1a Installing MySQL system tables...2015-01-26 20:18:51 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details). OK Filling help tables...2015-01-26 20:18:57 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details). OK ... 5\u3001\u521b\u5efa\u5f00\u673a\u542f\u52a8\u811a\u672c $ cd /usr/local/webserver/mysql/ $ cp support-files/mysql.server /etc/rc.d/init.d/mysqld $ chkconfig --add mysqld $ chkconfig --level 35 mysqld on 6\u3001\u542f\u52a8mysql\u670d\u52a1\u5668 $ service mysqld start 7\u3001\u8fde\u63a5 MySQL $ /usr/local/webserver/mysql/bin/mysql -u root -p \u4fee\u6539MySQL\u7528\u6237\u5bc6\u7801 mysqladmin -u\u7528\u6237\u540d -p\u65e7\u5bc6\u7801 password \u65b0\u5bc6\u7801 \u6216\u8fdb\u5165mysql\u547d\u4ee4\u884c SET PASSWORD FOR '\u7528\u6237\u540d'@'\u4e3b\u673a' = PASSWORD(\u2018\u5bc6\u7801'); \u521b\u5efa\u65b0\u7528\u6237\u5e76\u6388\u6743: grant all privileges on . to \u7528\u6237\u540d@'%' identified by '\u5bc6\u7801' with grant option; \u5176\u4ed6\u547d\u4ee4 \u542f\u52a8\uff1aservice mysqld start \u505c\u6b62\uff1aservice mysqld stop \u91cd\u542f\uff1aservice mysqld restart \u91cd\u8f7d\u914d\u7f6e\uff1aservice mysqld reload MariaDB\u5b89\u88c5\u914d\u7f6e \u00b6 \u5b89\u88c5\u51c6\u5907 \u521b\u5efamysql\u7528\u6237\u7ec4\uff0c-r\u7cfb\u7edf\u7528\u6237\u7ec4 $ groupadd -r mysql \u521b\u5efa\u7528\u6237\u5e76\u52a0\u5165\u5230mysql\u7cfb\u7edf\u7528\u6237\u7ec4 $ useradd -r -g mysql -s /sbin/nologin -d /usr/local/mysql -M mysql \u6dfb\u52a0\u65b0\u7528\u6237 -r\u6dfb\u52a0\u7cfb\u7edf\u7528\u6237 -g\u7528\u6237\u6240\u5c5e\u7ec4-s\u767b\u5f55\u7684shell -d\u65b0\u5e10\u6237\u7684\u4e3b\u76ee\u5f55 -M\u4e0d\u8981\u81ea\u52a8\u521b\u5efa\u76ee\u5f55 \u521b\u5efa\u6570\u636e\u5e93\u76f8\u5173\u76ee\u5f55 $ mkdir -pv /data/mysql $ chown -R mysql:mysql /data/mysql/ \u5220\u9664CentOS \u9ed8\u8ba4\u6570\u636e\u5e93\u914d\u7f6e\u6587\u4ef6 $ find -H /etc/ | grep my.c $ rm -rf /etc/my.cnf /etc/my.cnf.d/ $ find -H /etc/ | grep my.c \u5378\u8f7d\u7cfb\u7edf\u81ea\u5e26mariadb-libs $ rpm -qa|grep mariadb* $ rpm -e mariadb-libs-5.5.60-1.el7_5.x86_64 --nodeps \u5b89\u88c5\u76f8\u5173\u5305 $ yum -y install libaio libaio-devel bison bison-devel zlib-devel openssl openssl-devel ncurses ncurses-devel libcurl-devel libarchive-devel boost boost-devel lsof wget gcc gcc-c++ make cmake perl kernel-headers kernel-devel pcre-devel $ cd /usr/local/src \u7f16\u8bd1\u5b89\u88c5cmake\uff0cncurses\uff0cBison\uff0cBoost $ wget https://github.com/Kitware/CMake/releases/download/v3.13.3/cmake-3.13.3.tar.gz $ tar -zxvf cmake-3.13.3.tar.gz $ cd cmake-3.13.3 $ ./bootstrap $ gmake && make install $$ cd .. $ curl -O http://120.52.51.14/ftp.gnu.org/gnu/ncurses/ncurses-6.1.tar.gz $ tar -zxvf ncurses-6.1.tar.gz $ cd ncurses-6.1 $ ./configure $ make && make install && cd .. $ curl -O http://alpha.gnu.org/gnu/bison/bison-3.2.91.tar.gz $ tar -zxvf bison-3.2.91.tar.gz $ cd ncurses-6.1 $ ./configure $ make && make install && cd .. $ wget https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0_rc1.tar.gz $ tar -zxvf boost_1_69_0_rc1.tar.gz $ cd boost_1_69_0 $ ./bootstrap.sh $ ./b2 stage --with-iostreams --toolset=gcc link=static runtime-link=shared threading=multi release $ ./b2 install --prefix=/opt/boost \u4e0b\u8f7d\u5b89\u88c5MariaDB $ curl -O http://mirrors.neusoft.edu.cn/mariadb//mariadb-10.3.12/source/mariadb-10.3.12.tar.gz $ tar -zxvf mariadb-10.3.12.tar.gz $ cd mariadb-10.3.12 $ cmake . \\ -DCMAKE_INSTALL_PREFIX=/usr/local/mysql \\ -DDEFAULT_CHARSET=utf8 \\ -DDEFAULT_COLLATION=utf8_general_ci \\ -DENABLED_LOCAL_INFILE=1 \\ -DENABLE_DOWNLOADS=1 \\ -DEXTRA_CHARSETS=all \\ -DSYSCONFDIR=/etc \\ -DWITHOUT_TOKUDB=1 \\ -DWITH_ARCHIVE_STPRAGE_ENGINE=1 \\ -DWITH_ARCHIVE_STORAGE_ENGINE=1 \\ -DWITH_BLACKHOLE_STORAGE_ENGINE=1 \\ -DWITH_DEBUG=0 \\ -DWITH_MEMORY_STORAGE_ENGINE=1 \\ -DWITH_MYISAM_STORAGE_ENGINE=1 \\ -DWITH_INNOBASE_STORAGE_ENGINE=1 \\ -DWITH_PARTITION_STORAGE_ENGINE=1 \\ -DWITH_READLINE=1 \\ -DWITH_SSL=system \\ -DWITH_ZLIB=system \\ -DWITH_LOBWRAP=0 \\ -DMYSQL_DATADIR=/data/mysql \\ -DMYSQL_USER=mysql \\ -DMYSQL_UNIX_ADDR=/var/run/mysql/mysql.sock \\ -DMYSQL_TCP_PORT=3306 \\ -DMYSQL_MAINTAINER_MODE=0 \u53c2\u6570\u542b\u4e49 -DCMAKE_INSTALL_PREFIX=/usr/local/mysql [MySQL\u5b89\u88c5\u7684\u6839\u76ee\u5f55] -DDEFAULT_CHARSET=utf8 [\u8bbe\u7f6e\u9ed8\u8ba4\u5b57\u7b26\u96c6\u4e3autf8] -DDEFAULT_COLLATION=utf8_general_ci [\u8bbe\u7f6e\u9ed8\u8ba4\u5b57\u7b26\u6821\u5bf9] -DENABLED_LOCAL_INFILE=1 [\u542f\u7528\u52a0\u8f7d\u672c\u5730\u6570\u636e] -DENABLE_DOWNLOADS=1 [\u7f16\u8bd1\u65f6\u5141\u8bb8\u81ea\u4e3b\u4e0b\u8f7d\u76f8\u5173\u6587\u4ef6] -DEXTRA_CHARSETS=all [\u4f7fMySQL\u652f\u6301\u6240\u6709\u7684\u6269\u5c55\u5b57\u7b26] -DSYSCONFDIR=/etc [MySQL\u914d\u7f6e\u6587\u4ef6\u6240\u5728\u76ee\u5f55] -DWITHOUT_TOKUDB=1 \\ -DWITH_ARCHIVE_STPRAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_ARCHIVE_STORAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_BLACKHOLE_STORAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_DEBUG=0 [\u7981\u7528\u8c03\u8bd5\u6a21\u5f0f] -DWITH_MEMORY_STORAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_MYISAM_STORAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_INNOBASE_STORAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_PARTITION_STORAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_READLINE=1 [MySQL\u7684readline library] -DWITH_SSL=system [\u901a\u8baf\u65f6\u652f\u6301ssl\u534f\u8bae] -DWITH_ZLIB=system [\u5141\u8bb8\u4f7f\u7528zlib library] -DWITH_LOBWRAP=0 \\ -DMYSQL_DATADIR=/data/mysql [MySQL\u6570\u636e\u5e93\u6587\u4ef6\u5b58\u653e\u76ee\u5f55] -DMYSQL_USER=mysql [MySQL\u7528\u6237\u540d] -DMYSQL_UNIX_ADDR=/var/run/mysql/mysql.sock [MySQL\u7684\u901a\u8baf\u76ee\u5f55] -DMYSQL_TCP_PORT=3306 [MySQL\u7684\u76d1\u542c\u7aef\u53e3] -DMYSQL_MAINTAINER_MODE=0 $ make && make install && cd # \u4e0a\u6b65\u5931\u8d25$ rm -f CMakeCache.txt \u4f7f\u7528maria\u7528\u6237\u6267\u884c\u811a\u672c, \u5b89\u88c5\u6570\u636e\u5e93\u5230\u6570\u636e\u5e93\u5b58\u653e\u76ee\u5f55 $ cd /usr/local/mysql # \u9700\u8981\u5728\u6b64\u76ee\u5f55\u4e0b $ /usr/local/mysql/scripts/mysql_install_db --user=mysql --datadir=/data/mysql \u590d\u5236MariaDB\u914d\u7f6e\u6587\u4ef6\u5230/etc\u76ee\u5f55 $ cp /usr/local/mysql/support-files/wsrep.cnf /etc/my.cnf \u521b\u5efa\u542f\u52a8\u811a\u672c $ cp /usr/local/mysql/support-files/mysql.server /etc/rc.d/init.d/mysqld \u542f\u52a8mysqld\u670d\u52a1 $ /etc/rc.d/init.d/mysqld start \u914d\u7f6e\u73af\u5883\u53d8\u91cf $ vim /etc/profile.d/mysql.sh \u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 export PATH=$PATH:/usr/local/mysql/bin/ \u4fdd\u5b58\u5e76\u9000\u51fa :wq \u4e3a\u811a\u672c\u8d4b\u4e8e\u53ef\u6267\u884c\u6743\u9650 $ chmod 0777 /etc/profile.d/mysql.sh \u8bfb\u53d6\u5e76\u6267\u884c mysql.sh \u811a\u672c, \u5e76\u6267\u884c\u811a\u672c, \u4ee5\u7acb\u5373\u751f\u6548\u73af\u5883\u53d8\u91cf $ source /etc/profile.d/mysql.sh \u8fd0\u884cMariaDB\u521d\u59cb\u5316\u811a\u672c $ /usr/local/mysql/bin/mysql_secure_installation \u6839\u636e\u63d0\u793a\u521d\u59cb\u5316\u64cd\u4f5c \u542f\u52a8MariaDB\u670d\u52a1 $ systemctl start mysqld \u67e5\u770bMariaDB\u670d\u52a1\u72b6\u6001 $ systemctl status mysqld","title":"Mysql&MariaDB"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/MySQL&MariaDB/#mysqlmariadb","text":"","title":"Mysql&amp;MariaDB"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/MySQL&MariaDB/#_1","text":"\u65e0\u5bc6\u7801\u672c\u5730\u767b\u9646 $ mysql $ sudo mysql \u65e0\u5bc6\u7801\u7528\u6237\u540d\u767b\u9646 $ mysql -u umane \u7528\u6237\u540d\u5bc6\u7801\u767b\u9646 $ mysql -u uname -p \u521b\u5efa\u7528\u6237 \u547d\u4ee4:CREATE USER 'username'@'host' IDENTIFIED BY 'password'; username\uff1a\u7528\u6237\u540d host\uff1a\u767b\u9646\u4e3b\u673a\uff0c\u672c\u5730'localhost'\uff0c\u8fdc\u7a0b'%' password\uff1a\u5bc6\u7801\uff0c\u53ef\u4ee5\u4e3a\u7a7a'' \u6388\u6743 \u547d\u4ee4:GRANT privileges ON databasename.tablename TO 'username'@'host'; privileges\uff1aSELECT , INSERT , UPDATE\uff0cALL databasename\uff1a\u8981\u6388\u6743\u7684\u6570\u636e\u5e93\u540d\uff0c\u5168\u90e8\u5219\u4e3a* tablename\uff1a\u8981\u6388\u6743\u7684\u8868\u540d\uff0c\u5168\u90e8\u5219\u4e3a* \u521b\u5efa\u540c\u65f6\u6388\u6743\uff1a GRANT all privileges ON . to test@'%' IDENTIFIED BY '1234'; \u8bbe\u7f6e\u6216\u4fee\u6539\u7528\u6237\u5bc6\u7801 \u547d\u4ee4:SET PASSWORD FOR 'username'@'host' = PASSWORD('newpassword'); \u64a4\u9500\u7528\u6237\u6743\u9650 \u547d\u4ee4: REVOKE privilege ON databasename.tablename FROM 'username'@'host'; \u67e5\u770b\u7528\u6237\u6743\u9650 SHOW GRANTS FOR 'dog'@'localhost'; \u5220\u9664\u7528\u6237 \u547d\u4ee4: DROP USER 'username'@'host'; \u4fdd\u5b58\u8bbe\u7f6e flush privileges;","title":"\u767b\u9646"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/MySQL&MariaDB/#_2","text":"\u5220\u9664\u6570\u636e\u5e93\u4e2d\u6240\u6709\u7684\u8868 1\u3001\u9009\u62e9\u6570\u636e\u5e93\u4e2d\u7684\u6240\u6709\u7684\u8868 SELECT concat('DROP TABLE IF EXISTS ', table_name, ';') FROM information_schema.tables WHERE table_schema = 'mydb'; 2\u3001\u5c06\u8f93\u51fa\u7684\u5185\u5bb9\u518d\u8fd0\u884c\u4e00\u6b21","title":"\u8868\u7ba1\u7406"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/MySQL&MariaDB/#mysql","text":"MySQL \u662f\u6700\u6d41\u884c\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff0c\u7531\u745e\u5178MySQL AB\u516c\u53f8\u5f00\u53d1\uff0c\u76ee\u524d\u5c5e\u4e8eOracle\u516c\u53f8\u3002 MySQL\u6240\u4f7f\u7528\u7684SQL\u8bed\u8a00\u662f\u7528\u4e8e\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u6700\u5e38\u7528\u6807\u51c6\u5316\u8bed\u8a00\u3002 MySQL\u7531\u4e8e\u5176\u4f53\u79ef\u5c0f\u3001\u901f\u5ea6\u5feb\u3001\u603b\u4f53\u62e5\u6709\u6210\u672c\u4f4e\uff0c\u5c24\u5176\u662f\u5f00\u653e\u6e90\u7801\u8fd9\u4e00\u7279\u70b9\uff0c\u4e00\u822c\u4e2d\u5c0f\u578b\u7f51\u7ad9\u7684\u5f00\u53d1\u90fd\u9009\u62e9MySQL\u4f5c\u4e3a\u7f51\u7ad9\u6570\u636e\u5e93\u3002 MySQL \u5b89\u88c5 \u672c\u6559\u7a0b\u7684\u7cfb\u7edf\u5e73\u53f0\uff1aCentOS release 6.6 (Final) 64\u4f4d\u3002 \u4e00\u3001\u5b89\u88c5\u7f16\u8bd1\u5de5\u5177\u53ca\u5e93\u6587\u4ef6 yum -y install gcc gcc-c++ make autoconf libtool-ltdl-devel gd-devel freetype-devel libxml2-devel libjpeg-devel libpng-devel openssl-devel curl-devel bison patch unzip libmcrypt-devel libmhash-devel ncurses-devel sudo bzip2 flex libaio-devel \u4e8c\u3001 \u5b89\u88c5cmake \u7f16\u8bd1\u5668 1\u3001\u4e0b\u8f7dcmake\u5b89\u88c5\u5305 wget http://www.cmake.org/files/v3.1/cmake-3.1.1.tar.gz 2\u3001\u89e3\u538b\u5b89\u88c5\u5305 tar zxvf cmake-3.1.1.tar.gz 3\u3001\u8fdb\u5165\u5b89\u88c5\u5305\u76ee\u5f55 cd cmake-3.1.1 4\u3001\u7f16\u8bd1\u5b89\u88c5 ./bootstrap make && make install \u4e09\u3001\u5b89\u88c5 MySQL MySQL\u7248\u672c\uff1amysql-5.6.15\u3002 1\u3001\u4e0b\u8f7dMySQL\u5b89\u88c5\u5305 wget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.15.tar.gz 2\u3001\u89e3\u538b\u5b89\u88c5\u5305 tar zxvf mysql-5.6.15.tar.gz 3\u3001\u8fdb\u5165\u5b89\u88c5\u5305\u76ee\u5f55 cd mysql-5.6.15 4\u3001\u7f16\u8bd1\u5b89\u88c5 $ cmake -DCMAKE_INSTALL_PREFIX=/usr/local/webserver/mysql/ -DMYSQL_UNIX_ADDR=/tmp/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS=all -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DWITH_INNODB_MEMCACHED=1 -DWITH_DEBUG=OFF -DWITH_ZLIB=bundled -DENABLED_LOCAL_INFILE=1 -DENABLED_PROFILING=ON -DMYSQL_MAINTAINER_MODE=OFF -DMYSQL_DATADIR=/usr/local/webserver/mysql/data -DMYSQL_TCP_PORT=3306 $ make && make install 5\u3001\u67e5\u770bmysql\u7248\u672c: /usr/local/webserver/mysql/bin/mysql --version \u5230\u6b64\uff0cmysql\u5b89\u88c5\u5b8c\u6210\u3002 MySQL \u914d\u7f6e 1\u3001\u521b\u5efamysql\u8fd0\u884c\u4f7f\u7528\u7684\u7528\u6237mysql\uff1a /usr/sbin/groupadd mysql /usr/sbin/useradd -g mysql mysql 2\u3001\u521b\u5efabinlog\u548c\u5e93\u7684\u5b58\u50a8\u8def\u5f84\u5e76\u8d4b\u4e88mysql\u7528\u6237\u6743\u9650 mkdir -p /usr/local/webserver/mysql/binlog /www/data_mysql chown mysql.mysql /usr/local/webserver/mysql/binlog/ /www/data_mysql/ 3\u3001\u521b\u5efamy.cnf\u914d\u7f6e\u6587\u4ef6 \u5c06/etc/my.cnf\u66ff\u6362\u4e3a\u4e0b\u9762\u5185\u5bb9 $ cat /etc/my.cnf [client] port = 3306 socket = /tmp/mysql.sock [mysqld] replicate-ignore-db = mysql replicate-ignore-db = test replicate-ignore-db = information_schema user = mysql port = 3306 socket = /tmp/mysql.sock basedir = /usr/local/webserver/mysql datadir = /www/data_mysql log-error = /usr/local/webserver/mysql/mysql_error.log pid-file = /usr/local/webserver/mysql/mysql.pid open_files_limit = 65535 back_log = 600 max_connections = 5000 max_connect_errors = 1000 table_open_cache = 1024 external-locking = FALSE max_allowed_packet = 32M sort_buffer_size = 1M join_buffer_size = 1M thread_cache_size = 600 #thread_concurrency = 8 query_cache_size = 128M query_cache_limit = 2M query_cache_min_res_unit = 2k default-storage-engine = MyISAM default-tmp-storage-engine = MYISAM thread_stack = 192K transaction_isolation = READ-COMMITTED tmp_table_size = 128M max_heap_table_size = 128M log-slave-updates log-bin = /usr/local/webserver/mysql/binlog/binlog binlog-do-db = oa_fb binlog-ignore-db = mysql binlog_cache_size = 4M binlog_format = MIXED max_binlog_cache_size = 8M max_binlog_size = 1G relay-log-index = /usr/local/webserver/mysql/relaylog/relaylog relay-log-info-file = /usr/local/webserver/mysql/relaylog/relaylog relay-log = /usr/local/webserver/mysql/relaylog/relaylog expire_logs_days = 10 key_buffer_size = 256M read_buffer_size = 1M read_rnd_buffer_size = 16M bulk_insert_buffer_size = 64M myisam_sort_buffer_size = 128M myisam_max_sort_file_size = 10G myisam_repair_threads = 1 myisam_recover interactive_timeout = 120 wait_timeout = 120 skip-name-resolve #master-connect-retry = 10 slave-skip-errors = 1032,1062,126,1114,1146,1048,1396 #master-host = 192.168.1.2 #master-user = username #master-password = password #master-port = 3306 server-id = 1 loose-innodb-trx = 0 loose-innodb-locks = 0 loose-innodb-lock-waits = 0 loose-innodb-cmp = 0 loose-innodb-cmp-per-index = 0 loose-innodb-cmp-per-index-reset = 0 loose-innodb-cmp-reset = 0 loose-innodb-cmpmem = 0 loose-innodb-cmpmem-reset = 0 loose-innodb-buffer-page = 0 loose-innodb-buffer-page-lru = 0 loose-innodb-buffer-pool-stats = 0 loose-innodb-metrics = 0 loose-innodb-ft-default-stopword = 0 loose-innodb-ft-inserted = 0 loose-innodb-ft-deleted = 0 loose-innodb-ft-being-deleted = 0 loose-innodb-ft-config = 0 loose-innodb-ft-index-cache = 0 loose-innodb-ft-index-table = 0 loose-innodb-sys-tables = 0 loose-innodb-sys-tablestats = 0 loose-innodb-sys-indexes = 0 loose-innodb-sys-columns = 0 loose-innodb-sys-fields = 0 loose-innodb-sys-foreign = 0 loose-innodb-sys-foreign-cols = 0 slow_query_log_file = /usr/local/webserver/mysql/mysql_slow.log long_query_time = 1 [mysqldump] quick max_allowed_packet = 32M 4\u3001\u521d\u59cb\u5316\u6570\u636e\u5e93 /usr/local/webserver/mysql/scripts/mysql_install_db --defaults-file=/etc/my.cnf --user=mysql \u663e\u793a\u5982\u4e0b\u4fe1\u606f\uff1a Installing MySQL system tables...2015-01-26 20:18:51 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details). OK Filling help tables...2015-01-26 20:18:57 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details). OK ... 5\u3001\u521b\u5efa\u5f00\u673a\u542f\u52a8\u811a\u672c $ cd /usr/local/webserver/mysql/ $ cp support-files/mysql.server /etc/rc.d/init.d/mysqld $ chkconfig --add mysqld $ chkconfig --level 35 mysqld on 6\u3001\u542f\u52a8mysql\u670d\u52a1\u5668 $ service mysqld start 7\u3001\u8fde\u63a5 MySQL $ /usr/local/webserver/mysql/bin/mysql -u root -p \u4fee\u6539MySQL\u7528\u6237\u5bc6\u7801 mysqladmin -u\u7528\u6237\u540d -p\u65e7\u5bc6\u7801 password \u65b0\u5bc6\u7801 \u6216\u8fdb\u5165mysql\u547d\u4ee4\u884c SET PASSWORD FOR '\u7528\u6237\u540d'@'\u4e3b\u673a' = PASSWORD(\u2018\u5bc6\u7801'); \u521b\u5efa\u65b0\u7528\u6237\u5e76\u6388\u6743: grant all privileges on . to \u7528\u6237\u540d@'%' identified by '\u5bc6\u7801' with grant option; \u5176\u4ed6\u547d\u4ee4 \u542f\u52a8\uff1aservice mysqld start \u505c\u6b62\uff1aservice mysqld stop \u91cd\u542f\uff1aservice mysqld restart \u91cd\u8f7d\u914d\u7f6e\uff1aservice mysqld reload","title":"MySQL \u5b89\u88c5\u914d\u7f6e"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/MySQL&MariaDB/#mariadb","text":"\u5b89\u88c5\u51c6\u5907 \u521b\u5efamysql\u7528\u6237\u7ec4\uff0c-r\u7cfb\u7edf\u7528\u6237\u7ec4 $ groupadd -r mysql \u521b\u5efa\u7528\u6237\u5e76\u52a0\u5165\u5230mysql\u7cfb\u7edf\u7528\u6237\u7ec4 $ useradd -r -g mysql -s /sbin/nologin -d /usr/local/mysql -M mysql \u6dfb\u52a0\u65b0\u7528\u6237 -r\u6dfb\u52a0\u7cfb\u7edf\u7528\u6237 -g\u7528\u6237\u6240\u5c5e\u7ec4-s\u767b\u5f55\u7684shell -d\u65b0\u5e10\u6237\u7684\u4e3b\u76ee\u5f55 -M\u4e0d\u8981\u81ea\u52a8\u521b\u5efa\u76ee\u5f55 \u521b\u5efa\u6570\u636e\u5e93\u76f8\u5173\u76ee\u5f55 $ mkdir -pv /data/mysql $ chown -R mysql:mysql /data/mysql/ \u5220\u9664CentOS \u9ed8\u8ba4\u6570\u636e\u5e93\u914d\u7f6e\u6587\u4ef6 $ find -H /etc/ | grep my.c $ rm -rf /etc/my.cnf /etc/my.cnf.d/ $ find -H /etc/ | grep my.c \u5378\u8f7d\u7cfb\u7edf\u81ea\u5e26mariadb-libs $ rpm -qa|grep mariadb* $ rpm -e mariadb-libs-5.5.60-1.el7_5.x86_64 --nodeps \u5b89\u88c5\u76f8\u5173\u5305 $ yum -y install libaio libaio-devel bison bison-devel zlib-devel openssl openssl-devel ncurses ncurses-devel libcurl-devel libarchive-devel boost boost-devel lsof wget gcc gcc-c++ make cmake perl kernel-headers kernel-devel pcre-devel $ cd /usr/local/src \u7f16\u8bd1\u5b89\u88c5cmake\uff0cncurses\uff0cBison\uff0cBoost $ wget https://github.com/Kitware/CMake/releases/download/v3.13.3/cmake-3.13.3.tar.gz $ tar -zxvf cmake-3.13.3.tar.gz $ cd cmake-3.13.3 $ ./bootstrap $ gmake && make install $$ cd .. $ curl -O http://120.52.51.14/ftp.gnu.org/gnu/ncurses/ncurses-6.1.tar.gz $ tar -zxvf ncurses-6.1.tar.gz $ cd ncurses-6.1 $ ./configure $ make && make install && cd .. $ curl -O http://alpha.gnu.org/gnu/bison/bison-3.2.91.tar.gz $ tar -zxvf bison-3.2.91.tar.gz $ cd ncurses-6.1 $ ./configure $ make && make install && cd .. $ wget https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0_rc1.tar.gz $ tar -zxvf boost_1_69_0_rc1.tar.gz $ cd boost_1_69_0 $ ./bootstrap.sh $ ./b2 stage --with-iostreams --toolset=gcc link=static runtime-link=shared threading=multi release $ ./b2 install --prefix=/opt/boost \u4e0b\u8f7d\u5b89\u88c5MariaDB $ curl -O http://mirrors.neusoft.edu.cn/mariadb//mariadb-10.3.12/source/mariadb-10.3.12.tar.gz $ tar -zxvf mariadb-10.3.12.tar.gz $ cd mariadb-10.3.12 $ cmake . \\ -DCMAKE_INSTALL_PREFIX=/usr/local/mysql \\ -DDEFAULT_CHARSET=utf8 \\ -DDEFAULT_COLLATION=utf8_general_ci \\ -DENABLED_LOCAL_INFILE=1 \\ -DENABLE_DOWNLOADS=1 \\ -DEXTRA_CHARSETS=all \\ -DSYSCONFDIR=/etc \\ -DWITHOUT_TOKUDB=1 \\ -DWITH_ARCHIVE_STPRAGE_ENGINE=1 \\ -DWITH_ARCHIVE_STORAGE_ENGINE=1 \\ -DWITH_BLACKHOLE_STORAGE_ENGINE=1 \\ -DWITH_DEBUG=0 \\ -DWITH_MEMORY_STORAGE_ENGINE=1 \\ -DWITH_MYISAM_STORAGE_ENGINE=1 \\ -DWITH_INNOBASE_STORAGE_ENGINE=1 \\ -DWITH_PARTITION_STORAGE_ENGINE=1 \\ -DWITH_READLINE=1 \\ -DWITH_SSL=system \\ -DWITH_ZLIB=system \\ -DWITH_LOBWRAP=0 \\ -DMYSQL_DATADIR=/data/mysql \\ -DMYSQL_USER=mysql \\ -DMYSQL_UNIX_ADDR=/var/run/mysql/mysql.sock \\ -DMYSQL_TCP_PORT=3306 \\ -DMYSQL_MAINTAINER_MODE=0 \u53c2\u6570\u542b\u4e49 -DCMAKE_INSTALL_PREFIX=/usr/local/mysql [MySQL\u5b89\u88c5\u7684\u6839\u76ee\u5f55] -DDEFAULT_CHARSET=utf8 [\u8bbe\u7f6e\u9ed8\u8ba4\u5b57\u7b26\u96c6\u4e3autf8] -DDEFAULT_COLLATION=utf8_general_ci [\u8bbe\u7f6e\u9ed8\u8ba4\u5b57\u7b26\u6821\u5bf9] -DENABLED_LOCAL_INFILE=1 [\u542f\u7528\u52a0\u8f7d\u672c\u5730\u6570\u636e] -DENABLE_DOWNLOADS=1 [\u7f16\u8bd1\u65f6\u5141\u8bb8\u81ea\u4e3b\u4e0b\u8f7d\u76f8\u5173\u6587\u4ef6] -DEXTRA_CHARSETS=all [\u4f7fMySQL\u652f\u6301\u6240\u6709\u7684\u6269\u5c55\u5b57\u7b26] -DSYSCONFDIR=/etc [MySQL\u914d\u7f6e\u6587\u4ef6\u6240\u5728\u76ee\u5f55] -DWITHOUT_TOKUDB=1 \\ -DWITH_ARCHIVE_STPRAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_ARCHIVE_STORAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_BLACKHOLE_STORAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_DEBUG=0 [\u7981\u7528\u8c03\u8bd5\u6a21\u5f0f] -DWITH_MEMORY_STORAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_MYISAM_STORAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_INNOBASE_STORAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_PARTITION_STORAGE_ENGINE=1 [MySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce] -DWITH_READLINE=1 [MySQL\u7684readline library] -DWITH_SSL=system [\u901a\u8baf\u65f6\u652f\u6301ssl\u534f\u8bae] -DWITH_ZLIB=system [\u5141\u8bb8\u4f7f\u7528zlib library] -DWITH_LOBWRAP=0 \\ -DMYSQL_DATADIR=/data/mysql [MySQL\u6570\u636e\u5e93\u6587\u4ef6\u5b58\u653e\u76ee\u5f55] -DMYSQL_USER=mysql [MySQL\u7528\u6237\u540d] -DMYSQL_UNIX_ADDR=/var/run/mysql/mysql.sock [MySQL\u7684\u901a\u8baf\u76ee\u5f55] -DMYSQL_TCP_PORT=3306 [MySQL\u7684\u76d1\u542c\u7aef\u53e3] -DMYSQL_MAINTAINER_MODE=0 $ make && make install && cd # \u4e0a\u6b65\u5931\u8d25$ rm -f CMakeCache.txt \u4f7f\u7528maria\u7528\u6237\u6267\u884c\u811a\u672c, \u5b89\u88c5\u6570\u636e\u5e93\u5230\u6570\u636e\u5e93\u5b58\u653e\u76ee\u5f55 $ cd /usr/local/mysql # \u9700\u8981\u5728\u6b64\u76ee\u5f55\u4e0b $ /usr/local/mysql/scripts/mysql_install_db --user=mysql --datadir=/data/mysql \u590d\u5236MariaDB\u914d\u7f6e\u6587\u4ef6\u5230/etc\u76ee\u5f55 $ cp /usr/local/mysql/support-files/wsrep.cnf /etc/my.cnf \u521b\u5efa\u542f\u52a8\u811a\u672c $ cp /usr/local/mysql/support-files/mysql.server /etc/rc.d/init.d/mysqld \u542f\u52a8mysqld\u670d\u52a1 $ /etc/rc.d/init.d/mysqld start \u914d\u7f6e\u73af\u5883\u53d8\u91cf $ vim /etc/profile.d/mysql.sh \u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 export PATH=$PATH:/usr/local/mysql/bin/ \u4fdd\u5b58\u5e76\u9000\u51fa :wq \u4e3a\u811a\u672c\u8d4b\u4e8e\u53ef\u6267\u884c\u6743\u9650 $ chmod 0777 /etc/profile.d/mysql.sh \u8bfb\u53d6\u5e76\u6267\u884c mysql.sh \u811a\u672c, \u5e76\u6267\u884c\u811a\u672c, \u4ee5\u7acb\u5373\u751f\u6548\u73af\u5883\u53d8\u91cf $ source /etc/profile.d/mysql.sh \u8fd0\u884cMariaDB\u521d\u59cb\u5316\u811a\u672c $ /usr/local/mysql/bin/mysql_secure_installation \u6839\u636e\u63d0\u793a\u521d\u59cb\u5316\u64cd\u4f5c \u542f\u52a8MariaDB\u670d\u52a1 $ systemctl start mysqld \u67e5\u770bMariaDB\u670d\u52a1\u72b6\u6001 $ systemctl status mysqld","title":"MariaDB\u5b89\u88c5\u914d\u7f6e"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/NTP/","text":"NTP \u00b6","title":"NTP"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/NTP/#ntp","text":"","title":"NTP"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Nagios/","text":"Nagios \u00b6","title":"Nagios"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Nagios/#nagios","text":"","title":"Nagios"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Nginx/","text":"Nginx \u00b6 Nginx \u5b89\u88c5\u914d\u7f6e \u00b6 Nginx(\"engine x\")\u662f\u4e00\u6b3e\u662f\u7531\u4fc4\u7f57\u65af\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5e08Igor Sysoev\u6240\u5f00\u53d1\u9ad8\u6027\u80fd\u7684 Web\u548c \u53cd\u5411\u4ee3\u7406 \u670d\u52a1\u5668\uff0c\u4e5f\u662f\u4e00\u4e2a IMAP/POP3/SMTP \u4ee3\u7406\u670d\u52a1\u5668\u3002 \u5728\u9ad8\u8fde\u63a5\u5e76\u53d1\u7684\u60c5\u51b5\u4e0b\uff0cNginx\u662fApache\u670d\u52a1\u5668\u4e0d\u9519\u7684\u66ff\u4ee3\u54c1\u3002 Nginx \u5b89\u88c5 \u7cfb\u7edf\u5e73\u53f0\uff1aCentOS release 6.6 (Final) 64\u4f4d\u3002 \u4e00\u3001\u5b89\u88c5\u7f16\u8bd1\u5de5\u5177\u53ca\u5e93\u6587\u4ef6 yum -y install make zlib zlib-devel gcc-c++ libtool openssl openssl-devel \u4e8c\u3001\u9996\u5148\u8981\u5b89\u88c5 PCRE PCRE \u4f5c\u7528\u662f\u8ba9 Nginx \u652f\u6301 Rewrite \u529f\u80fd\u3002 1\u3001\u4e0b\u8f7d PCRE \u5b89\u88c5\u5305 wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz 2\u3001\u89e3\u538b\u5b89\u88c5\u5305: tar zxvf pcre-8.35.tar.gz 3\u3001\u8fdb\u5165\u5b89\u88c5\u5305\u76ee\u5f55 cd pcre-8.35 4\u3001\u7f16\u8bd1\u5b89\u88c5 ./configure make && make install 5\u3001\u67e5\u770bpcre\u7248\u672c pcre-config --version \u5b89\u88c5 Nginx 1\u3001\u4e0b\u8f7d Nginx wget http://nginx.org/download/nginx-1.6.2.tar.gz 2\u3001\u89e3\u538b\u5b89\u88c5\u5305 tar zxvf nginx-1.6.2.tar.gz 3\u3001\u8fdb\u5165\u5b89\u88c5\u5305\u76ee\u5f55 cd nginx-1.6.2 4\u3001\u7f16\u8bd1\u5b89\u88c5 ./configure --prefix=/usr/local/webserver/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre=/usr/local/src/pcre-8.35 make make install 5\u3001\u67e5\u770bnginx\u7248\u672c /usr/local/webserver/nginx/sbin/nginx -v \u5230\u6b64\uff0cnginx\u5b89\u88c5\u5b8c\u6210\u3002 Nginx \u914d\u7f6e \u521b\u5efa Nginx \u8fd0\u884c\u4f7f\u7528\u7684\u7528\u6237 www\uff1a /usr/sbin/groupadd www /usr/sbin/useradd -g www www \u914d\u7f6enginx.conf \uff0c\u5c06/usr/local/webserver/nginx/conf/nginx.conf\u66ff\u6362\u4e3a\u4ee5\u4e0b\u5185\u5bb9 cat /usr/local/webserver/nginx/conf/nginx.conf user www www; worker_processes 2; #\u8bbe\u7f6e\u503c\u548cCPU\u6838\u5fc3\u6570\u4e00\u81f4 error_log /usr/local/webserver/nginx/logs/nginx_error.log crit; #\u65e5\u5fd7\u4f4d\u7f6e\u548c\u65e5\u5fd7\u7ea7\u522b pid /usr/local/webserver/nginx/nginx.pid; Specifies the value for maximum file descriptors that can be opened by this process. \u00b6 worker_rlimit_nofile 65535; events { use epoll; worker_connections 65535; } http { include mime.types; default_type application/octet-stream; log_format main ' remote_addr - remote_user [ remote_user [ time_local] \"time_local] \" remote_addr - <span><span class=\"MathJax_Preview\">remote_user [</span><script type=\"math/tex\">remote_user [ time_local] \"time_local] \" request\" ' ' status body_bytes_sent \" body_bytes_sent \" http_referer\" ' '\"http_referer\" ' '\" status <span><span class=\"MathJax_Preview\">body_bytes_sent \"</span><script type=\"math/tex\">body_bytes_sent \" http_referer\" ' '\"http_referer\" ' '\" http_user_agent\" $http_x_forwarded_for'; charset gb2312; \u00b6 server_names_hash_bucket_size 128; client_header_buffer_size 32k; large_client_header_buffers 4 32k; client_max_body_size 8m; sendfile on; tcp_nopush on; keepalive_timeout 60; tcp_nodelay on; fastcgi_connect_timeout 300; fastcgi_send_timeout 300; fastcgi_read_timeout 300; fastcgi_buffer_size 64k; fastcgi_buffers 4 64k; fastcgi_busy_buffers_size 128k; fastcgi_temp_file_write_size 128k; gzip on; gzip_min_length 1k; gzip_buffers 4 16k; gzip_http_version 1.0; gzip_comp_level 2; gzip_types text/plain application/x-javascript text/css application/xml; gzip_vary on; #limit_zone crawler $binary_remote_addr 10m; #\u4e0b\u9762\u662fserver\u865a\u62df\u4e3b\u673a\u7684\u914d\u7f6e server { listen 80;#\u76d1\u542c\u7aef\u53e3 server_name localhost;#\u57df\u540d index index.html index.htm index.php; root /usr/local/webserver/nginx/html;#\u7ad9\u70b9\u76ee\u5f55 location ~ .*\\.(php|php5)?$ { #fastcgi_pass unix:/tmp/php-cgi.sock; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; include fastcgi.conf; } location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf|ico)$ { expires 30d; # access_log off; } location ~ .*\\.(js|css)?$ { expires 15d; # access_log off; } access_log off; } } \u68c0\u67e5\u914d\u7f6e\u6587\u4ef6nginx.conf\u7684\u6b63\u786e\u6027\u547d\u4ee4\uff1a /usr/local/webserver/nginx/sbin/nginx -t \u542f\u52a8 Nginx Nginx \u542f\u52a8\u547d\u4ee4\u5982\u4e0b\uff1a /usr/local/webserver/nginx/sbin/nginx \u8bbf\u95ee\u7ad9\u70b9 \u4ece\u6d4f\u89c8\u5668\u8bbf\u95ee\u6211\u4eec\u914d\u7f6e\u7684\u7ad9\u70b9ip\uff1a Nginx \u5176\u4ed6\u547d\u4ee4 \u4ee5\u4e0b\u5305\u542b\u4e86 Nginx \u5e38\u7528\u7684\u51e0\u4e2a\u547d\u4ee4\uff1a /usr/local/webserver/nginx/sbin/nginx -s reload # \u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\u6587\u4ef6 /usr/local/webserver/nginx/sbin/nginx -s reopen # \u91cd\u542f Nginx /usr/local/webserver/nginx/sbin/nginx -s stop # \u505c\u6b62 Nginx \u7f16\u8bd1\u5b89\u88c5 \u00b6 \u5b89\u88c5\u7f16\u8bd1\u73af\u5883 APT apt-get install build-essential apt-get install libtool YUM yum -y install gcc automake autoconf libtool make yum install gcc gcc-c++ \u9009\u5b9a\u6e90\u7801\u76ee\u5f55 cd /usr/local/src \u7f16\u8bd1\u5b89\u88c5PCRE\uff08rewrite\uff09\uff0czlib\uff08\u538b\u7f29\uff09\u548copenssl\uff08https\uff09 PCRE wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.42.tar.gz # \u4e0d\u662fpcre2 \u6216 curl -O ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.42.tar.gz tar -zxvf pcre-8.42.tar.gz cd pcre-8.42 ./configure # \u68c0\u6d4b\u4f60\u7684\u5b89\u88c5\u5e73\u53f0\u7684\u76ee\u6807\u7279\u5f81\uff0c\u521b\u5efaMakefile make # \u7f16\u8bd1 make install # \u5b89\u88c5\u5230\u6307\u5b9a\u4f4d\u7f6e ZLIB cd /usr/local/src wget https://jaist.dl.sourceforge.net/project/libpng/zlib/1.2.11/zlib-1.2.11.tar.gz tar -zxvf zlib-1.2.11.tar.gz cd zlib-1.2.11 ./configure make make install SSL cd /usr/local/src wget https://www.openssl.org/source/openssl-1.1.1a.tar.gz tar -zxvf openssl-1.1.1a.tar.gz \u5b89\u88c5nginx cd /usr/local/src wget http://120.52.51.15/nginx.org/download/nginx-1.15.8.tar.gz tar -zxvf nginx-1.15.8.tar.gz cd nginx-1.15.8 sudo ./configure --sbin-path=/usr/local/nginx/nginx \\ --conf-path=/usr/local/nginx/nginx.conf \\ --pid-path=/usr/local/nginx/nginx.pid \\ --with-http_ssl_module \\ --with-pcre=/usr/local/src/pcre-8.42 \\ --with-zlib=/usr/local/src/zlib-1.2.11 \\ --with-openssl=/usr/local/src/openssl-1.1.1a make make install \u5b89\u88c5\u5b8c\u6210\u9a8c\u8bc1\u542f\u52a8 sudo /usr/local/nginx/nginx \u505c\u6b62 sudo /usr/local/nginx/nginx -s stop \u6216 ps -aux |grep nginx # \u67e5\u627enginx\u8fdb\u7a0b\u6216ps -ef kill -9 [PID] # nginx\u7684PID\u8fdb\u7a0b\u53f7 \u6216 netstat -apn |grep 80 # \u67e5\u627e80\u7aef\u53e3\u5360\u7528 kill -9 [PID] # nginx\u7684PID\u8fdb\u7a0b\u53f7 \u6216 sudo /usr/local/nginx/nginx -s quit \u6216 killall nginx \u67e5\u770b\u7aef\u53e3\u53f7\u5360\u7528 ntestat -tlnp # t\u67e5\u770bTCP\uff0cl\u67e5\u770b\u76d1\u542c\u670d\u52a1\uff0cn\u4e0d\u89e3\u6790\u540d\u79f0\uff0cp\u7aef\u53e3\u53f7 \u6ce8\u610ffirewalld\u653e\u884c\u7aef\u53e3 \u5e2e\u52a9 sudo /usr/local/nginx/nginx -h \u540e\u7eed\u64cd\u4f5c \u00b6 \u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf ln -s /usr/local/nginx/nginx /usr/local/sbin/nginx # \u6dfb\u52a0\u8f6f\u8fde\u63a5\uff08\u5feb\u6377\u65b9\u5f0f\uff09 \u6b64\u65f6\u53ef\u4ee5\u5728\u4efb\u610f\u76ee\u5f55\u4ee5nginx\u547d\u4ee4\u8fd0\u884c\u7a0b\u5e8f \u914d\u7f6e\u6587\u4ef6 \u00b6 \u542f\u52a8 \u542f\u52a8\u4ee3\u7801\u683c\u5f0f\uff1anginx\u5b89\u88c5\u76ee\u5f55\u5730\u5740 -c nginx\u914d\u7f6e\u6587\u4ef6\u5730\u5740 \u4f8b\u5982\uff1a $ /usr/local/nginx/nginx -c /usr/local/nginx/nginx.conf \u68c0\u67e5\u914d\u7f6e\u6587\u4ef6\u7684\u6b63\u786e\u6027 sudo /usr/local/nginx/nginx -t \u6dfb\u52a0\u670d\u52a1 \u00b6 nginx\u4e00\u822c\u542f\u52a8 sudo /usr/local/nginx/nginx \u5411/etc/init.d/\u6dfb\u52a0\u542f\u52a8\u6587\u4ef6 touch nginx \u6dfb\u52a0\u542f\u52a8\u811a\u672c NGINX Init Scripts | NGINX centos7 \u8bb0\u5f97\u4fee\u6539\u811a\u672c\u91cc\u7684\u8def\u5f84 vim /etc/init.d/nginx \u4fee\u6539PATH\u548cDAEMON\u8def\u5f84 PATH=/usr/bin:/usr/sbin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin DAEMON=/usr/local/nginx/nginx \u7ed9\u811a\u672c\u6dfb\u52a0\u8fd0\u884c\u6743\u9650 sudo chmod +x /etc/init.d/nginx \u5b88\u62a4\u8fdb\u7a0b\u91cd\u8f7d\uff08\u5173\u952e\u6b65\u9aa4\uff09 systemctl daemon-reload \u542f\u52a8|\u505c\u6b62|\u91cd\u542f|\u67e5\u770b\u72b6\u6001nginx sudo service nginx start|stop|restart|status \u6216 sudo systemctl start|stop|restart nginx functions network","title":"Nginx"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Nginx/#nginx","text":"","title":"Nginx"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Nginx/#nginx_1","text":"Nginx(\"engine x\")\u662f\u4e00\u6b3e\u662f\u7531\u4fc4\u7f57\u65af\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5e08Igor Sysoev\u6240\u5f00\u53d1\u9ad8\u6027\u80fd\u7684 Web\u548c \u53cd\u5411\u4ee3\u7406 \u670d\u52a1\u5668\uff0c\u4e5f\u662f\u4e00\u4e2a IMAP/POP3/SMTP \u4ee3\u7406\u670d\u52a1\u5668\u3002 \u5728\u9ad8\u8fde\u63a5\u5e76\u53d1\u7684\u60c5\u51b5\u4e0b\uff0cNginx\u662fApache\u670d\u52a1\u5668\u4e0d\u9519\u7684\u66ff\u4ee3\u54c1\u3002 Nginx \u5b89\u88c5 \u7cfb\u7edf\u5e73\u53f0\uff1aCentOS release 6.6 (Final) 64\u4f4d\u3002 \u4e00\u3001\u5b89\u88c5\u7f16\u8bd1\u5de5\u5177\u53ca\u5e93\u6587\u4ef6 yum -y install make zlib zlib-devel gcc-c++ libtool openssl openssl-devel \u4e8c\u3001\u9996\u5148\u8981\u5b89\u88c5 PCRE PCRE \u4f5c\u7528\u662f\u8ba9 Nginx \u652f\u6301 Rewrite \u529f\u80fd\u3002 1\u3001\u4e0b\u8f7d PCRE \u5b89\u88c5\u5305 wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz 2\u3001\u89e3\u538b\u5b89\u88c5\u5305: tar zxvf pcre-8.35.tar.gz 3\u3001\u8fdb\u5165\u5b89\u88c5\u5305\u76ee\u5f55 cd pcre-8.35 4\u3001\u7f16\u8bd1\u5b89\u88c5 ./configure make && make install 5\u3001\u67e5\u770bpcre\u7248\u672c pcre-config --version \u5b89\u88c5 Nginx 1\u3001\u4e0b\u8f7d Nginx wget http://nginx.org/download/nginx-1.6.2.tar.gz 2\u3001\u89e3\u538b\u5b89\u88c5\u5305 tar zxvf nginx-1.6.2.tar.gz 3\u3001\u8fdb\u5165\u5b89\u88c5\u5305\u76ee\u5f55 cd nginx-1.6.2 4\u3001\u7f16\u8bd1\u5b89\u88c5 ./configure --prefix=/usr/local/webserver/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre=/usr/local/src/pcre-8.35 make make install 5\u3001\u67e5\u770bnginx\u7248\u672c /usr/local/webserver/nginx/sbin/nginx -v \u5230\u6b64\uff0cnginx\u5b89\u88c5\u5b8c\u6210\u3002 Nginx \u914d\u7f6e \u521b\u5efa Nginx \u8fd0\u884c\u4f7f\u7528\u7684\u7528\u6237 www\uff1a /usr/sbin/groupadd www /usr/sbin/useradd -g www www \u914d\u7f6enginx.conf \uff0c\u5c06/usr/local/webserver/nginx/conf/nginx.conf\u66ff\u6362\u4e3a\u4ee5\u4e0b\u5185\u5bb9 cat /usr/local/webserver/nginx/conf/nginx.conf user www www; worker_processes 2; #\u8bbe\u7f6e\u503c\u548cCPU\u6838\u5fc3\u6570\u4e00\u81f4 error_log /usr/local/webserver/nginx/logs/nginx_error.log crit; #\u65e5\u5fd7\u4f4d\u7f6e\u548c\u65e5\u5fd7\u7ea7\u522b pid /usr/local/webserver/nginx/nginx.pid;","title":"Nginx \u5b89\u88c5\u914d\u7f6e"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Nginx/#specifies-the-value-for-maximum-file-descriptors-that-can-be-opened-by-this-process","text":"worker_rlimit_nofile 65535; events { use epoll; worker_connections 65535; } http { include mime.types; default_type application/octet-stream; log_format main ' remote_addr - remote_user [ remote_user [ time_local] \"time_local] \" remote_addr - <span><span class=\"MathJax_Preview\">remote_user [</span><script type=\"math/tex\">remote_user [ time_local] \"time_local] \" request\" ' ' status body_bytes_sent \" body_bytes_sent \" http_referer\" ' '\"http_referer\" ' '\" status <span><span class=\"MathJax_Preview\">body_bytes_sent \"</span><script type=\"math/tex\">body_bytes_sent \" http_referer\" ' '\"http_referer\" ' '\" http_user_agent\" $http_x_forwarded_for';","title":"Specifies the value for maximum file descriptors that can be opened by this process."},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Nginx/#charset-gb2312","text":"server_names_hash_bucket_size 128; client_header_buffer_size 32k; large_client_header_buffers 4 32k; client_max_body_size 8m; sendfile on; tcp_nopush on; keepalive_timeout 60; tcp_nodelay on; fastcgi_connect_timeout 300; fastcgi_send_timeout 300; fastcgi_read_timeout 300; fastcgi_buffer_size 64k; fastcgi_buffers 4 64k; fastcgi_busy_buffers_size 128k; fastcgi_temp_file_write_size 128k; gzip on; gzip_min_length 1k; gzip_buffers 4 16k; gzip_http_version 1.0; gzip_comp_level 2; gzip_types text/plain application/x-javascript text/css application/xml; gzip_vary on; #limit_zone crawler $binary_remote_addr 10m; #\u4e0b\u9762\u662fserver\u865a\u62df\u4e3b\u673a\u7684\u914d\u7f6e server { listen 80;#\u76d1\u542c\u7aef\u53e3 server_name localhost;#\u57df\u540d index index.html index.htm index.php; root /usr/local/webserver/nginx/html;#\u7ad9\u70b9\u76ee\u5f55 location ~ .*\\.(php|php5)?$ { #fastcgi_pass unix:/tmp/php-cgi.sock; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; include fastcgi.conf; } location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf|ico)$ { expires 30d; # access_log off; } location ~ .*\\.(js|css)?$ { expires 15d; # access_log off; } access_log off; } } \u68c0\u67e5\u914d\u7f6e\u6587\u4ef6nginx.conf\u7684\u6b63\u786e\u6027\u547d\u4ee4\uff1a /usr/local/webserver/nginx/sbin/nginx -t \u542f\u52a8 Nginx Nginx \u542f\u52a8\u547d\u4ee4\u5982\u4e0b\uff1a /usr/local/webserver/nginx/sbin/nginx \u8bbf\u95ee\u7ad9\u70b9 \u4ece\u6d4f\u89c8\u5668\u8bbf\u95ee\u6211\u4eec\u914d\u7f6e\u7684\u7ad9\u70b9ip\uff1a Nginx \u5176\u4ed6\u547d\u4ee4 \u4ee5\u4e0b\u5305\u542b\u4e86 Nginx \u5e38\u7528\u7684\u51e0\u4e2a\u547d\u4ee4\uff1a /usr/local/webserver/nginx/sbin/nginx -s reload # \u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\u6587\u4ef6 /usr/local/webserver/nginx/sbin/nginx -s reopen # \u91cd\u542f Nginx /usr/local/webserver/nginx/sbin/nginx -s stop # \u505c\u6b62 Nginx","title":"charset gb2312;"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Nginx/#_1","text":"\u5b89\u88c5\u7f16\u8bd1\u73af\u5883 APT apt-get install build-essential apt-get install libtool YUM yum -y install gcc automake autoconf libtool make yum install gcc gcc-c++ \u9009\u5b9a\u6e90\u7801\u76ee\u5f55 cd /usr/local/src \u7f16\u8bd1\u5b89\u88c5PCRE\uff08rewrite\uff09\uff0czlib\uff08\u538b\u7f29\uff09\u548copenssl\uff08https\uff09 PCRE wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.42.tar.gz # \u4e0d\u662fpcre2 \u6216 curl -O ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.42.tar.gz tar -zxvf pcre-8.42.tar.gz cd pcre-8.42 ./configure # \u68c0\u6d4b\u4f60\u7684\u5b89\u88c5\u5e73\u53f0\u7684\u76ee\u6807\u7279\u5f81\uff0c\u521b\u5efaMakefile make # \u7f16\u8bd1 make install # \u5b89\u88c5\u5230\u6307\u5b9a\u4f4d\u7f6e ZLIB cd /usr/local/src wget https://jaist.dl.sourceforge.net/project/libpng/zlib/1.2.11/zlib-1.2.11.tar.gz tar -zxvf zlib-1.2.11.tar.gz cd zlib-1.2.11 ./configure make make install SSL cd /usr/local/src wget https://www.openssl.org/source/openssl-1.1.1a.tar.gz tar -zxvf openssl-1.1.1a.tar.gz \u5b89\u88c5nginx cd /usr/local/src wget http://120.52.51.15/nginx.org/download/nginx-1.15.8.tar.gz tar -zxvf nginx-1.15.8.tar.gz cd nginx-1.15.8 sudo ./configure --sbin-path=/usr/local/nginx/nginx \\ --conf-path=/usr/local/nginx/nginx.conf \\ --pid-path=/usr/local/nginx/nginx.pid \\ --with-http_ssl_module \\ --with-pcre=/usr/local/src/pcre-8.42 \\ --with-zlib=/usr/local/src/zlib-1.2.11 \\ --with-openssl=/usr/local/src/openssl-1.1.1a make make install \u5b89\u88c5\u5b8c\u6210\u9a8c\u8bc1\u542f\u52a8 sudo /usr/local/nginx/nginx \u505c\u6b62 sudo /usr/local/nginx/nginx -s stop \u6216 ps -aux |grep nginx # \u67e5\u627enginx\u8fdb\u7a0b\u6216ps -ef kill -9 [PID] # nginx\u7684PID\u8fdb\u7a0b\u53f7 \u6216 netstat -apn |grep 80 # \u67e5\u627e80\u7aef\u53e3\u5360\u7528 kill -9 [PID] # nginx\u7684PID\u8fdb\u7a0b\u53f7 \u6216 sudo /usr/local/nginx/nginx -s quit \u6216 killall nginx \u67e5\u770b\u7aef\u53e3\u53f7\u5360\u7528 ntestat -tlnp # t\u67e5\u770bTCP\uff0cl\u67e5\u770b\u76d1\u542c\u670d\u52a1\uff0cn\u4e0d\u89e3\u6790\u540d\u79f0\uff0cp\u7aef\u53e3\u53f7 \u6ce8\u610ffirewalld\u653e\u884c\u7aef\u53e3 \u5e2e\u52a9 sudo /usr/local/nginx/nginx -h","title":"\u7f16\u8bd1\u5b89\u88c5"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Nginx/#_2","text":"\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf ln -s /usr/local/nginx/nginx /usr/local/sbin/nginx # \u6dfb\u52a0\u8f6f\u8fde\u63a5\uff08\u5feb\u6377\u65b9\u5f0f\uff09 \u6b64\u65f6\u53ef\u4ee5\u5728\u4efb\u610f\u76ee\u5f55\u4ee5nginx\u547d\u4ee4\u8fd0\u884c\u7a0b\u5e8f","title":"\u540e\u7eed\u64cd\u4f5c"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Nginx/#_3","text":"\u542f\u52a8 \u542f\u52a8\u4ee3\u7801\u683c\u5f0f\uff1anginx\u5b89\u88c5\u76ee\u5f55\u5730\u5740 -c nginx\u914d\u7f6e\u6587\u4ef6\u5730\u5740 \u4f8b\u5982\uff1a $ /usr/local/nginx/nginx -c /usr/local/nginx/nginx.conf \u68c0\u67e5\u914d\u7f6e\u6587\u4ef6\u7684\u6b63\u786e\u6027 sudo /usr/local/nginx/nginx -t","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Nginx/#_4","text":"nginx\u4e00\u822c\u542f\u52a8 sudo /usr/local/nginx/nginx \u5411/etc/init.d/\u6dfb\u52a0\u542f\u52a8\u6587\u4ef6 touch nginx \u6dfb\u52a0\u542f\u52a8\u811a\u672c NGINX Init Scripts | NGINX centos7 \u8bb0\u5f97\u4fee\u6539\u811a\u672c\u91cc\u7684\u8def\u5f84 vim /etc/init.d/nginx \u4fee\u6539PATH\u548cDAEMON\u8def\u5f84 PATH=/usr/bin:/usr/sbin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin DAEMON=/usr/local/nginx/nginx \u7ed9\u811a\u672c\u6dfb\u52a0\u8fd0\u884c\u6743\u9650 sudo chmod +x /etc/init.d/nginx \u5b88\u62a4\u8fdb\u7a0b\u91cd\u8f7d\uff08\u5173\u952e\u6b65\u9aa4\uff09 systemctl daemon-reload \u542f\u52a8|\u505c\u6b62|\u91cd\u542f|\u67e5\u770b\u72b6\u6001nginx sudo service nginx start|stop|restart|status \u6216 sudo systemctl start|stop|restart nginx functions network","title":"\u6dfb\u52a0\u670d\u52a1"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Ngrok/","text":"Ngrok \u00b6 \u4ecb\u7ecd\uff1a\u5185\u7f51\u7a7f\u900f\u670d\u52a1\u3002 \u8f6f\u4ef6\u5b98\u7f51\uff1a ngrok.com \u3002 \u81ea\u5efangrok\u670d\u52a1 \u00b6 \u670d\u52a1\u5668\u9632\u706b\u5899\u5f00\u542f\u7aef\u53e34443 \u57df\u540d\u89e3\u6790\u5230\u76f8\u5e94IP\uff08*\u5168\u90e8\u89e3\u6790\uff0c@\u5269\u4e0b\uff09 yum install gcc git golang \u7cfb\u7edf\u63d0\u4f9b\u7684golang\u7248\u672c\u8f83\u4f4e\u65f6\u53ef wget https://studygolang.com/dl/golang/go1.12.linux-amd64.tar.gz tar -zxvf go1.8.linux-amd64.tar.gz .vim /etc/profile \u52a0\u4e0a\u8fd9\u4e24\u53e5\u8bdd export GOROOT=\u4f60\u7684go\u89e3\u538b\u5730\u5740 export PATH=$PATH:$GOROOT/bin source /etc/profile \u662f\u73af\u5883\u751f\u6548 go version \u67e5\u770bgo\u662f\u5426\u5b89\u88c5\u6210\u529f \u5982\u91cd\u590d\u5b89\u88c5\u53ef\u6309\u7167\u6b64\u6cd5\u5220\u9664 which go rm \u76f8\u5e94\u6587\u4ef6\u5939\u5373\u53ef \u83b7\u53d6ngrok\u6e90\u7801 git clone https://github.com/inconshreveable/ngrok.git cd ngrok NGROK_DOMAIN=\"\u4f60\u7684\u57df\u540d\" openssl genrsa -out base.key 2048 openssl req -new -x509 -nodes -key base.key -days 10000 -subj \"/CN=$NGROK_DOMAIN\" -out base.pem openssl genrsa -out server.key 2048 openssl req -new -key server.key -subj \"/CN=$NGROK_DOMAIN\" -out server.csr openssl x509 -req -in server.csr -CA base.pem -CAkey base.key -CAcreateserial -days 10000 -out server.crt cp base.pem assets/client/tls/ngrokroot.crt # \u590d\u5236\u8bc1\u4e66 make release-server release-client # \u751f\u6210\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u6587\u4ef6 nohup ./bin/ngrokd -tlsKey=server.key -tlsCrt=server.crt -domain=\"\u4f60\u7684\u57df\u540d\" -httpAddr=\":80\" -httpsAddr=\":8082\" & # \u542f\u52a8\u670d\u52a1 \u751f\u6210win\u548cmac\u5ba2\u6237\u7aef GOOS=windows GOARCH=amd64 make release-client GOOS=darwin GOARCH=amd64 make release-client \u5728\u5ba2\u6237\u7aef\u540c\u7ea7\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6ngrok.cfg: server_addr: \"\u4f60\u7684\u57df\u540d:4443\" trust_host_root_certs: false \u7136\u540e\u590d\u5236\u5230\u76f8\u5e94\u5ba2\u6237\u673a\u4e0a\u8fd0\u884c linux\u8bbe\u7f6e\u4e3a\u7cfb\u7edf\u7a0b\u5e8f\u5e76\u540e\u53f0\u8fd0\u884c \u00b6 cd /etc/systemd/system/ vim ngrok.service [ Unit ] Description = ngrok After = network.target [ Service ] ExecStart = /myweb/ngrok/bin/ngrokd -tlsKey = /myweb/ngrok/server.key -tlsCrt = /myweb/ngrok/server.crt -domain = \"weixin.yangjiace.xyz\" -httpAddr = \":80\" -httpsAddr = \":443\" [ Install ] WantedBy = multi-user.target windows\u914d\u7f6e\u542f\u52a8 \u00b6 \u914d\u7f6e\u6587\u4ef6ngrok.cfg server_addr: \"weixin.yangjiace.xyz:4443\" trust_host_root_certs: false startup.bat\u6587\u4ef6 @ echo off if \" %1 \" == \"hide\" goto CmdBegin start mshta vbscript:createobject( \"wscript.shell\" ).run( \"\"\" %~0 \"\" hide\" ,0)(window.close) && exit : CmdBegin cd %cd% #ngrok -proto=tcp 22 #ngrok start web ngrok -config=ngrok.cfg -log=ngrok.log -subdomain=yjc 8080 \u5c06startup.bat\u5feb\u6377\u65b9\u5f0f\u590d\u5236\u5230\u542f\u52a8\u4e0b \u5ba2\u6237\u7aef\u914d\u7f6e \u00b6 \u5c0f\u7c73\u7403ngrok \u5728\u7a0b\u5e8f\u76ee\u5f55\u65b0\u5efa\u6587\u4ef6start.sh path = /usr/local/ngrok nohup $path /ngrok -config = $path /ngrok.cfg -subdomain xxx -log = stdout 80 >/dev/null 2 > & 1 & \u5728/etc/init.d/\u65b0\u5efa\u6587\u4ef6ngrok #!/bin/sh #chkconfig:2345 70 30 #description:ngrok ngrok_path = /usr/local/ngrok case \" $1 \" in start ) echo \"start ngrok service..\" sh ${ ngrok_path } /start.sh ;; * ) exit 1 ;; esac","title":"Ngrok"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Ngrok/#ngrok","text":"\u4ecb\u7ecd\uff1a\u5185\u7f51\u7a7f\u900f\u670d\u52a1\u3002 \u8f6f\u4ef6\u5b98\u7f51\uff1a ngrok.com \u3002","title":"Ngrok"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Ngrok/#ngrok_1","text":"\u670d\u52a1\u5668\u9632\u706b\u5899\u5f00\u542f\u7aef\u53e34443 \u57df\u540d\u89e3\u6790\u5230\u76f8\u5e94IP\uff08*\u5168\u90e8\u89e3\u6790\uff0c@\u5269\u4e0b\uff09 yum install gcc git golang \u7cfb\u7edf\u63d0\u4f9b\u7684golang\u7248\u672c\u8f83\u4f4e\u65f6\u53ef wget https://studygolang.com/dl/golang/go1.12.linux-amd64.tar.gz tar -zxvf go1.8.linux-amd64.tar.gz .vim /etc/profile \u52a0\u4e0a\u8fd9\u4e24\u53e5\u8bdd export GOROOT=\u4f60\u7684go\u89e3\u538b\u5730\u5740 export PATH=$PATH:$GOROOT/bin source /etc/profile \u662f\u73af\u5883\u751f\u6548 go version \u67e5\u770bgo\u662f\u5426\u5b89\u88c5\u6210\u529f \u5982\u91cd\u590d\u5b89\u88c5\u53ef\u6309\u7167\u6b64\u6cd5\u5220\u9664 which go rm \u76f8\u5e94\u6587\u4ef6\u5939\u5373\u53ef \u83b7\u53d6ngrok\u6e90\u7801 git clone https://github.com/inconshreveable/ngrok.git cd ngrok NGROK_DOMAIN=\"\u4f60\u7684\u57df\u540d\" openssl genrsa -out base.key 2048 openssl req -new -x509 -nodes -key base.key -days 10000 -subj \"/CN=$NGROK_DOMAIN\" -out base.pem openssl genrsa -out server.key 2048 openssl req -new -key server.key -subj \"/CN=$NGROK_DOMAIN\" -out server.csr openssl x509 -req -in server.csr -CA base.pem -CAkey base.key -CAcreateserial -days 10000 -out server.crt cp base.pem assets/client/tls/ngrokroot.crt # \u590d\u5236\u8bc1\u4e66 make release-server release-client # \u751f\u6210\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u6587\u4ef6 nohup ./bin/ngrokd -tlsKey=server.key -tlsCrt=server.crt -domain=\"\u4f60\u7684\u57df\u540d\" -httpAddr=\":80\" -httpsAddr=\":8082\" & # \u542f\u52a8\u670d\u52a1 \u751f\u6210win\u548cmac\u5ba2\u6237\u7aef GOOS=windows GOARCH=amd64 make release-client GOOS=darwin GOARCH=amd64 make release-client \u5728\u5ba2\u6237\u7aef\u540c\u7ea7\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6ngrok.cfg: server_addr: \"\u4f60\u7684\u57df\u540d:4443\" trust_host_root_certs: false \u7136\u540e\u590d\u5236\u5230\u76f8\u5e94\u5ba2\u6237\u673a\u4e0a\u8fd0\u884c","title":"\u81ea\u5efangrok\u670d\u52a1"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Ngrok/#linux","text":"cd /etc/systemd/system/ vim ngrok.service [ Unit ] Description = ngrok After = network.target [ Service ] ExecStart = /myweb/ngrok/bin/ngrokd -tlsKey = /myweb/ngrok/server.key -tlsCrt = /myweb/ngrok/server.crt -domain = \"weixin.yangjiace.xyz\" -httpAddr = \":80\" -httpsAddr = \":443\" [ Install ] WantedBy = multi-user.target","title":"linux\u8bbe\u7f6e\u4e3a\u7cfb\u7edf\u7a0b\u5e8f\u5e76\u540e\u53f0\u8fd0\u884c"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Ngrok/#windows","text":"\u914d\u7f6e\u6587\u4ef6ngrok.cfg server_addr: \"weixin.yangjiace.xyz:4443\" trust_host_root_certs: false startup.bat\u6587\u4ef6 @ echo off if \" %1 \" == \"hide\" goto CmdBegin start mshta vbscript:createobject( \"wscript.shell\" ).run( \"\"\" %~0 \"\" hide\" ,0)(window.close) && exit : CmdBegin cd %cd% #ngrok -proto=tcp 22 #ngrok start web ngrok -config=ngrok.cfg -log=ngrok.log -subdomain=yjc 8080 \u5c06startup.bat\u5feb\u6377\u65b9\u5f0f\u590d\u5236\u5230\u542f\u52a8\u4e0b","title":"windows\u914d\u7f6e\u542f\u52a8"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Ngrok/#_1","text":"\u5c0f\u7c73\u7403ngrok \u5728\u7a0b\u5e8f\u76ee\u5f55\u65b0\u5efa\u6587\u4ef6start.sh path = /usr/local/ngrok nohup $path /ngrok -config = $path /ngrok.cfg -subdomain xxx -log = stdout 80 >/dev/null 2 > & 1 & \u5728/etc/init.d/\u65b0\u5efa\u6587\u4ef6ngrok #!/bin/sh #chkconfig:2345 70 30 #description:ngrok ngrok_path = /usr/local/ngrok case \" $1 \" in start ) echo \"start ngrok service..\" sh ${ ngrok_path } /start.sh ;; * ) exit 1 ;; esac","title":"\u5ba2\u6237\u7aef\u914d\u7f6e"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/OpenResty/","text":"OpenResty \u00b6","title":"OpenResty"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/OpenResty/#openresty","text":"","title":"OpenResty"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Oracle/","text":"Oracle \u00b6","title":"Oracle"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Oracle/#oracle","text":"","title":"Oracle"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/PostgreSQL/","text":"PostgerSQL \u00b6","title":"PostgerSQL"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/PostgreSQL/#postgersql","text":"","title":"PostgerSQL"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Puppet/","text":"Puppet \u00b6","title":"Puppet"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Puppet/#puppet","text":"","title":"Puppet"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Redis/","text":"Redis \u00b6","title":"Redis"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Redis/#redis","text":"","title":"Redis"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/SAMBA/","text":"SAMBA \u00b6","title":"SAMBA"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/SAMBA/#samba","text":"","title":"SAMBA"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/SSH&PSSH&DSH/","text":"SSH&PSSH&DSH \u00b6","title":"SSH&PSSH&DSH"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/SSH&PSSH&DSH/#sshpsshdsh","text":"","title":"SSH&amp;PSSH&amp;DSH"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/SaltStack/","text":"SaltStack \u00b6","title":"SaltStack"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/SaltStack/#saltstack","text":"","title":"SaltStack"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/VirtualBox/","text":"","title":"VirtualBox"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/WebLogic/","text":"WebLogic \u00b6","title":"WebLogic"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/WebLogic/#weblogic","text":"","title":"WebLogic"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Zabbix/","text":"Zabbix \u00b6 \u5b89\u88c5agent \u00b6 linux \u4e0b\u8f7d-\u5b89\u88c5\u76f8\u5e94\u7248\u672c\u7684agent \u4fee\u6539agent\u914d\u7f6e\u6587\u4ef6 vim /etc/zabbix/zabbix_agentd.conf \u4e3b\u8981\u53c2\u6570 Server=x.x.x.x # \u5141\u8bb8\u8c03\u53d6agent\u6570\u636e\u7684server\u5730\u5740\uff0c\u82e5server\u4e0d\u5728\u516c\u7f51\u4e0b\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0.0.0.0/0 ServerActive=x.x.x.x:x #\u4e3b\u52a8\u63d0\u4ea4\u76d1\u63a7\u6570\u636e\u65f6\u53d1\u9001\u5230\u7684\u5730\u5740\uff0c\u4ec5\u7528\u4e8eagent\u7684\u4e3b\u52a8\u6a21\u5f0f Hostname=xxxx # zabbix-agent\u6807\u8bc6\u5fc5\u987b\u4e0eserver\u4e0a\u914d\u7f6e\u7684\u4e3b\u673a\u540d\u4e00\u6837 \u8fd0\u884c\uff0c\u6dfb\u52a0\u670d\u52a1 systemctl restart zabbix-agent \u00b6 systemctl enable zabbix-agent \u00b6 windows \u4e0b\u8f7d-\u76f8\u5e94\u7248\u672c\u7684agent \u4fee\u6539agent\u914d\u7f6e\u6587\u4ef6 zabbix_agentd.conf\uff0c\u9ed8\u8ba4\u5b58\u653e\u5730\u5740c:\\ \u547d\u4ee4 zabbix_agentd.exe -i # \u5b89\u88c5\u670d\u52a1 zabbix_agentd.exe -s # \u542f\u52a8\u670d\u52a1 zabbix_agentd.exe -x # \u505c\u6b62\u670d\u52a1 zabbix_agentd.exe -d # \u5378\u8f7d\u670d\u52a1 \u89e3\u51b3\u7f51\u9875\u4e0a\u56fe\u8868\u5185\u4e2d\u6587\u663e\u793a\u65b9\u5757\u7684\u95ee\u9898 \u00b6 \u539f\u56e0\u662fzabbix\u5185\u7f6e\u5b57\u4f53\u4e0d\u652f\u6301\u4e2d\u6587 \u89e3\u51b3\u65b9\u6cd5\uff1a \u5728\u4e0b\u8f7d\u5b8b\u4f53\uff08\u65b0\uff09\u5b57\u4f53simsun.fft wget http://downza.91speed.com.cn/2017/06/pc6-simsunztxz.zip \u89e3\u538b\uff0c\u5f97\u5230simsun.fft unzip ./pc6-simsunztxz.zip \u590d\u5236\u5230zabbix\u7684\u5b57\u4f53\u6587\u4ef6\u5939 $ sudo find / -name 'zabbix*' # \u67e5\u627e $ sudo mv ./simsun.fft /usr/share/zabbix/fonts/simsun.fft \u6539\u53d8\u6240\u6709\u8005\u548c\u6743\u9650 $ sudo chmod 777 /usr/share/zabbix/fonts/simsun.fft $ sudo chown root:root /usr/share/zabbix/fonts/simsun.fft \u4fee\u6539zabbix php\u914d\u7f6e\u6587\u4ef6 $ sudo vim /usr/share/zabbix/include/defines.inc.php \u5c06\u4ee5\u4e0b\u5185\u5bb9\uff1a define('ZBX_FONT_NAME', 'graphfont'); define('ZBX_GRAPH_FONT_NAME', 'graphfont'); // font file name \u6539\u4e3a\uff1a define('ZBX_FONT_NAME', 'simsun'); define('ZBX_GRAPH_FONT_NAME', 'simsun'); \u4fdd\u5b58\uff0c\u5237\u65b0\u7f51\u9875\u7acb\u5373\u751f\u6548\u3002","title":"Zabbix"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Zabbix/#zabbix","text":"","title":"Zabbix"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Zabbix/#agent","text":"linux \u4e0b\u8f7d-\u5b89\u88c5\u76f8\u5e94\u7248\u672c\u7684agent \u4fee\u6539agent\u914d\u7f6e\u6587\u4ef6 vim /etc/zabbix/zabbix_agentd.conf \u4e3b\u8981\u53c2\u6570 Server=x.x.x.x # \u5141\u8bb8\u8c03\u53d6agent\u6570\u636e\u7684server\u5730\u5740\uff0c\u82e5server\u4e0d\u5728\u516c\u7f51\u4e0b\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0.0.0.0/0 ServerActive=x.x.x.x:x #\u4e3b\u52a8\u63d0\u4ea4\u76d1\u63a7\u6570\u636e\u65f6\u53d1\u9001\u5230\u7684\u5730\u5740\uff0c\u4ec5\u7528\u4e8eagent\u7684\u4e3b\u52a8\u6a21\u5f0f Hostname=xxxx # zabbix-agent\u6807\u8bc6\u5fc5\u987b\u4e0eserver\u4e0a\u914d\u7f6e\u7684\u4e3b\u673a\u540d\u4e00\u6837 \u8fd0\u884c\uff0c\u6dfb\u52a0\u670d\u52a1","title":"\u5b89\u88c5agent"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Zabbix/#systemctl-restart-zabbix-agent","text":"","title":"systemctl restart zabbix-agent"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Zabbix/#systemctl-enable-zabbix-agent","text":"windows \u4e0b\u8f7d-\u76f8\u5e94\u7248\u672c\u7684agent \u4fee\u6539agent\u914d\u7f6e\u6587\u4ef6 zabbix_agentd.conf\uff0c\u9ed8\u8ba4\u5b58\u653e\u5730\u5740c:\\ \u547d\u4ee4 zabbix_agentd.exe -i # \u5b89\u88c5\u670d\u52a1 zabbix_agentd.exe -s # \u542f\u52a8\u670d\u52a1 zabbix_agentd.exe -x # \u505c\u6b62\u670d\u52a1 zabbix_agentd.exe -d # \u5378\u8f7d\u670d\u52a1","title":"systemctl enable zabbix-agent"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/Zabbix/#_1","text":"\u539f\u56e0\u662fzabbix\u5185\u7f6e\u5b57\u4f53\u4e0d\u652f\u6301\u4e2d\u6587 \u89e3\u51b3\u65b9\u6cd5\uff1a \u5728\u4e0b\u8f7d\u5b8b\u4f53\uff08\u65b0\uff09\u5b57\u4f53simsun.fft wget http://downza.91speed.com.cn/2017/06/pc6-simsunztxz.zip \u89e3\u538b\uff0c\u5f97\u5230simsun.fft unzip ./pc6-simsunztxz.zip \u590d\u5236\u5230zabbix\u7684\u5b57\u4f53\u6587\u4ef6\u5939 $ sudo find / -name 'zabbix*' # \u67e5\u627e $ sudo mv ./simsun.fft /usr/share/zabbix/fonts/simsun.fft \u6539\u53d8\u6240\u6709\u8005\u548c\u6743\u9650 $ sudo chmod 777 /usr/share/zabbix/fonts/simsun.fft $ sudo chown root:root /usr/share/zabbix/fonts/simsun.fft \u4fee\u6539zabbix php\u914d\u7f6e\u6587\u4ef6 $ sudo vim /usr/share/zabbix/include/defines.inc.php \u5c06\u4ee5\u4e0b\u5185\u5bb9\uff1a define('ZBX_FONT_NAME', 'graphfont'); define('ZBX_GRAPH_FONT_NAME', 'graphfont'); // font file name \u6539\u4e3a\uff1a define('ZBX_FONT_NAME', 'simsun'); define('ZBX_GRAPH_FONT_NAME', 'simsun'); \u4fdd\u5b58\uff0c\u5237\u65b0\u7f51\u9875\u7acb\u5373\u751f\u6548\u3002","title":"\u89e3\u51b3\u7f51\u9875\u4e0a\u56fe\u8868\u5185\u4e2d\u6587\u663e\u793a\u65b9\u5757\u7684\u95ee\u9898"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/grafana/","text":"","title":"Grafana"},{"location":"\u8ba1\u7b97\u673a/\u8fd0\u7ef4/\u8f6f\u4ef6/rsyslog/","text":"","title":"Rsyslog"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/01-Nginx\u57fa\u672c\u914d\u7f6e/","text":"Nginx\u57fa\u672c\u914d\u7f6e \u00b6 \u8ba4\u8bc6\u914d\u7f6e\u6587\u4ef6 \u00b6 1\u3001\u914d\u7f6e\u6587\u4ef6\u7ed3\u6784 main\uff1a\u5b50\u8fdb\u7a0b events\uff1a\u63a7\u5236nginx\u5904\u7406\u8fde\u63a5\u65b9\u5f0f http\uff1a\u5904\u7406http\u8bf7\u6c42 server\uff1a\u4e3b\u673a\u914d\u7f6e location\uff1a\u76ee\u5f55\u7ea7\u522b\u7684\u914d\u7f6e\uff0c\u5982location /\uff0c\u5373\u6839\u76ee\u5f55\u914d\u7f6e 2\u3001\u6307\u4ee4 worker_process\uff1a\u5de5\u4f5c\u8fdb\u7a0b\u6570\uff0c\u4e00\u822c\u4e3aCPU\u6570\u6216\u00d72\uff0c\u9ed8\u8ba41 worker_connections\uff1a\u5141\u8bb8\u5355\u4e2a\u8fdb\u7a0b\u5e76\u53d1\u8fde\u63a5\u7684\u6700\u5927\u503c\uff0c\u9ed8\u8ba41024 include\uff1a\u5f15\u5165\u914d\u7f6e\u6587\u4ef6 default_type\uff1a\u9ed8\u8ba4\u6587\u4ef6\u7c7b\u578b\uff0c\u5982application/octet-stream sendfile\uff1a\u5f00\u542f\u9ad8\u6548\u6587\u4ef6\u4f20\u8f93\u6a21\u5f0f\uff0c\u9ed8\u8ba4on keepalive_timeout\uff1a\u8bbe\u7f6e\u957f\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\uff08\u79d2\uff09\uff0c\u9ed8\u8ba465 listen\uff1a\u76d1\u542c\u7aef\u53e3\uff0c\u9ed8\u8ba480 server_name\uff1a\u8bbe\u7f6e\u4e3b\u673a\u57df\u540d\uff0c\u9ed8\u8ba4localhost root\uff1a\u8bbe\u7f6e\u4e3b\u673a\u7ad9\u70b9\u6839\u76ee\u5f55\u5730\u5740\uff0c\u9ed8\u8ba4html index\uff1a\u8bbe\u7f6e\u9ed8\u8ba4\u7d22\u5f15\u6587\u4ef6\uff0c\u9ed8\u8ba4index.html index.htm error_page\uff1a\u81ea\u5b9a\u4e49\u9519\u8bef\u9875\u9762\uff0c\u6307\u5411location\u914d\u7f6e\uff0c\u9ed8\u8ba4500 502 503 504 /50x.html 3\u3001\u914d\u7f6e\u7528\u6237\u548c\u7ec4user \u7f16\u8bd1\u524d\u914d\u7f6e\uff1a./configuer --user= --group= \u914d\u7f6e\u6587\u4ef6\uff1auser nobody;\u6216user nuser ngroup; 4\u3001\u81ea\u5b9a\u4e49\u9519\u8bef\u9875error_page \u5982error_page 403 /40x.html; \u5982error_page 404 /404.jpg; \u5982error_page 403 http://example.com/forbidden.html ; \u5982error_page 500 502 503 http://example.com/notfound.html ; \u5982error_page 403=200 /40x.html; # \u9690\u85cf\u771f\u5b9e\u54cd\u5e94\u72b6\u6001\u7801\u7528200\u66ff\u4ee3 \u8bbf\u95ee\u63a7\u5236 \u00b6 \u6743\u9650\u63a7\u5236\u6307\u4ee4allow,deny \u9ed8\u8ba4\uff1a\u5168\u90e8allow \u7981\u6b62\u6240\u6709\u7528\u6237\u8bbf\u95ee\uff1adeny all; \u53ea\u5141\u8bb8\u6307\u5b9a\u7528\u6237\u8bbf\u95ee\uff1a server {... allow 192.168.1.100; # \u540c\u7ea7\u6309\u5148\u540e\u987a\u5e8f\uff0c deny all; } \u5d4c\u5957\uff1a\u5185\u90e8\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5916\u90e8 \u8bbf\u95ee\u63a7\u5236\u5e94\u7528 location\uff1a\u5339\u914d\u76ee\u5f55\uff0c\u6709\u4ee5\u4e0b\u89c4\u5219 \u65e0\u7b26\u53f7\uff0c\u6700\u5927\u524d\u7f00\u5339\u914d location /ng.test { ... # http://xxx/ng.test/xxx \u5339\u914d location /ng.test/log { ... # http://xxx/ng.test/log/xxx \u5339\u914d =\u7cbe\u786e\u5339\u914d\uff0clocation =/admin/auth { ... ~\u6b63\u5219\u5339\u914d\uff0clocation ~.html$ { ... location ~^/aaa/.*.html$ { ... ~*\u6b63\u5219\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u5339\u914d ^~\u6307\u5b9a\u6a21\u5f0f\u5339\u914d @\u4e0d\u88ab\u5ba2\u6237\u7aef\u8bbf\u95ee\u4ec5nginx\u5185\u90e8\u8bbf\u95ee root\u548calias\uff1a root\u4ece\u8be5\u76ee\u5f55\u5f00\u59cb\u67e5\u627e\u5339\u914d\u5230\u7684location\uff0c\u5373{root}/{location}/a.img alias\u4ee5\u8be5\u76ee\u5f55\u4e3alocation\u7684\u522b\u540d\u5373{alias}/a.img \u65e5\u5fd7\u6587\u4ef6 \u00b6 log_format\u6307\u4ee4\uff0c\u914d\u7f6e\u65e5\u5fd7\u683c\u5f0f \u683c\u5f0f\uff1alog_format {name} '{format}' '{format}' \u53c2\u6570\uff1a $remote_addr\u5ba2\u6237\u7aefIP\u5730\u5740 $remote_user\u5ba2\u6237\u7aef\u7528\u6237\u540d $time_locale\u65f6\u533a $request\u8bf7\u6c42\u7684URI\u548c\u534f\u8bae $status\u8fd4\u56de\u7684\u72b6\u6001\u7801 $body_bytes_sent\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u6587\u4ef6\u5185\u5bb9\u5927\u5c0f $http_referer\u6765\u8defURL $http_user_agent\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u4fe1\u606f $http_x_forwarded_for\u5ba2\u6237\u7aefIP\u5730\u5740\u5217\u8868\uff08\u5305\u62ec\u4ee3\u7406\uff09 \u81ea\u5b9a\u4e49\u65e5\u5fd7\u683c\u5f0f\uff1alog_format mylog '[ip:] $remote_addr [time:] time_local [user_agent:] \" time_local [user_agent:] \" http_user_agent\"'; access_log\u6307\u4ee4\uff0c\u8bbf\u95ee\u65e5\u5fd7 \u5982access_log logs/xxx/access.log mylog buffer=2k flush=5s \u5982access_log off # \u5173\u95ed\u8bbf\u95ee\u65e5\u5fd7 log_subrequest\u6307\u4ee4 \u5141\u8bb8\u8bb0\u5f55\u5b50\u8bf7\u6c42\u7684\u65e5\u5fd7\u8bb0\u5f55\uff0c\u9ed8\u8ba4off,\u53ef\u4ee5\u8bbe\u7f6e\u4e3aon error_log\u6307\u4ee4\uff0c\u9519\u8bef\u65e5\u5fd7 \u5982error_log logs/xxx/error.log; \u5982error_log logs/xxx/error.log notice # \u6307\u5b9a\u8bb0\u5f55\u7b49\u7ea7 \u5982error_log dev/null # \u5173\u95ed\u9519\u8bef\u65e5\u5fd7 \u65e5\u5fd7\u6587\u4ef6\u5207\u5272 \u624b\u52a8\u5207\u5272 $ ls /usr/local/nginx/logs/ # \u67e5\u770b\u76ee\u5f55 $ mv /usr/local/nginx/logs/xxx/access.log /usr/local/nginx/logs/xxx/20190101.log # \u6309\u65e5\u671f\u683c\u5f0f\u91cd\u547d\u540d\u65e5\u5fd7\u6587\u4ef6 $ nginx -s reopen # \u751f\u6210\u65b0\u7684\u65e5\u5fd7\u6587\u4ef6 \u81ea\u52a8\u5207\u5272\uff0cautolog.sh #! /bin/bash logs_path=\"/usr/local/nginx/logs/xxx\" mv $logs_path/access.log $logs_path/ date +\"%Y%m%d%H%M\" .log /usr/local/nginx/sbin/nginx -s reopen \u5982\u679c\u8981\u4fdd\u5b58\u524d\u4e00\u5929\u7684\u65e5\u5fd7\u53ef\u6539\u4e3a mv $logs_path/access.log $logs_path/ date -d yesterday +\"%Y%m%d\" .log \u5b9a\u65f6\u4efb\u52a1\uff0c\u7cfb\u7edf\u81ea\u52a8\u5907\u4efd $ crontab -e # \u8fdb\u5165\u5b9a\u65f6\u4efb\u52a1\u7f16\u8f91 0 0 * * * /user/local/nginx/logs/xxx/autolog.sh >/dev/null 2>&1 # \u5206 \u65f6 \u65e5 \u6708 \u661f\u671f \u547d\u4ee4 \u9519\u8bef\u4e0d\u8f93\u51fa \u865a\u62df\u4e3b\u673a \u00b6 \u57fa\u4e8e\u7aef\u53e3\u53f7\u914d\u7f6e\u865a\u62df\u4e3b\u673anginx.conf # \u914d\u7f6e\u76d1\u542c8001\u7aef\u53e3\u53f7\u7684\u865a\u62df\u4e3b\u673a server { listen 8001; server_name 192.168.1.100; root html/html8001; index index.html index.htm; } # \u914d\u7f6e\u76d1\u542c8001\u7aef\u53e3\u53f7\u7684\u865a\u62df\u4e3b\u673a server { listen 8002; server_name 192.168.1.100; root html/html8002; index index.html index.htm; } \u57fa\u4e8eIP\u914d\u7f6e\u865a\u62df\u4e3b\u673a step1\u914d\u7f6e\u5b50IP 1.\u4fee\u6539\u6587\u4ef6\u65b9\u5f0f \u590d\u5236\u6587\u4ef6 $ cd /etc/sysconfig/network-scripts/ $ cp ifcfg-eth0 ifcfg-eth0:1 $ cp ifcfg-eth0 ifcfg-eth0:2 \u7f16\u8f91\u6587\u4ef6\uff0cifcfg-eth0:1\u548cifcfg-eth0:2 DEVICE=eth0:1 IPADDR=192.168.1.101 \u548c DEVICE=eth0:2 IPADDR=192.168.1.102 \u751f\u6548\u914d\u7f6e service network reload 2.\u547d\u4ee4\u65b9\u5f0f $ ifconfig eth0:1 192.168.1.101 broadcast 192.168.1.255 net mask 255.255.255.0 up $ route add -host 192.168.1.101 dev eth0:1 \u6b64\u65b9\u5f0f\u91cd\u542f\u540e\u914d\u7f6e\u4f1a\u91cd\u7f6e\uff0c\u53ef\u5c06\u6b64\u547d\u4ee4\u590d\u5236\u5230/etc/rc.local\u4e2d\uff0c\u5f00\u673a\u81ea\u52a8\u914d\u7f6e\u3002 step2\u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf # \u914d\u7f6e\u57fa\u4e8eIP\u4e3a192.168.1.101\u7684\u865a\u62df\u4e3b\u673a servser { listen 80; server_name 192.168.1.101; root html/192.168.1.101; index index.html index.htm; } # \u914d\u7f6e\u57fa\u4e8eIP\u4e3a192.168.1.102\u7684\u865a\u62df\u4e3b\u673a servser { listen 80; server_name 192.168.1.102; root html/192.168.1.102; index index.html index.htm; } \u4fdd\u5b58\u5b8c\u6210\u540e\u5e73\u6ed1\u91cd\u542fnginx -s reload \uff08\u4e0d\u5173\u95ed\u7a0b\u5e8f\u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\uff09 \u57fa\u4e8e\u57df\u540d\u914d\u7f6e\u865a\u62df\u4e3b\u673a step1\u4fee\u6539hosts\u6587\u4ef6\uff0c/etc/hosts \u6dfb\u52a0IP\u5730\u5740\u4e0e\u57df\u540d\u6620\u5c04 127.0.0.1 www.xxx.com 127.0.0.1 xxx.com step2\u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf # \u914d\u7f6e\u57df\u540d\u4e3awww.xxx.com\u7684\u865a\u62df\u4e3b\u673a servser { listen 80; server_name www.xxx.com; root html/www.xxx.com; index index.html index.htm; } \u4fdd\u5b58\uff0c\u5e73\u6ed1\u91cd\u542fnginx -s reload \uff08\u4e0d\u5173\u95ed\u7a0b\u5e8f\u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\uff09 server_name\u7684\u53ef\u9009\u914d\u7f6e server_name www.xxx.com xxx.com; server_name .xxx.com; server_name www. ; server_name ~^(? .+).doman.com$; # \u6b63\u5219\u5339\u914d \u5339\u914d\u7684\u4f18\u5148\u7ea7\u987a\u5e8f\u4f9d\u6b21\u4e3a\uff0c\u7cbe\u51c6\u5339\u81ea>\u4ee5\u901a\u914d\u7b26\u5f00\u59cb\u7684\u5b57\u7b26\u4e32>\u4ee5\u901a\u914d\u7b26\u7ed3\u675f\u7684\u5b57\u7b26\u4e32>\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u8bbe\u7f6e\u76ee\u5f55\u5217\u8868\uff0c\u5728\u65e0index\u6587\u4ef6\u65f6\u663e\u793a\u76ee\u5f55\u5217\u8868 \u5728server\u6216location\u4e2d\uff1a autoindex on; # \u6253\u5f00\u663e\u793a\u76ee\u5f55\u5217\u8868\u529f\u80fd autoindex_exact_size off; # \u4ee5kB/MB/GB\u663e\u793a\u6587\u4ef6\u5927\u5c0f autoindex_localtime on; # \u6700\u540e\u4fee\u6539\u65f6\u95f4\u4ee5\u672c\u5730\u65f6\u95f4\u663e\u793a\uff0c\u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u4e3aGMT\u683c\u6797\u5c3c\u6cbb\u65f6\u95f4\u3002 \u5f15\u5165\u5b50\u914d\u7f6e\u6587\u4ef6 include file | mask # file\u6587\u4ef6\u540d\uff0cmask\u7edd\u5bf9\u6216\u76f8\u5bf9\u8def\u5f84\u4e0b\u7684\u6587\u4ef6 include vhost/*.conf #\u901a\u914d\u7b26\u5f15\u5165\u914d\u7f6e\u6587\u4ef6","title":"Nginx\u57fa\u672c\u914d\u7f6e"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/01-Nginx\u57fa\u672c\u914d\u7f6e/#nginx","text":"","title":"Nginx\u57fa\u672c\u914d\u7f6e"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/01-Nginx\u57fa\u672c\u914d\u7f6e/#_1","text":"1\u3001\u914d\u7f6e\u6587\u4ef6\u7ed3\u6784 main\uff1a\u5b50\u8fdb\u7a0b events\uff1a\u63a7\u5236nginx\u5904\u7406\u8fde\u63a5\u65b9\u5f0f http\uff1a\u5904\u7406http\u8bf7\u6c42 server\uff1a\u4e3b\u673a\u914d\u7f6e location\uff1a\u76ee\u5f55\u7ea7\u522b\u7684\u914d\u7f6e\uff0c\u5982location /\uff0c\u5373\u6839\u76ee\u5f55\u914d\u7f6e 2\u3001\u6307\u4ee4 worker_process\uff1a\u5de5\u4f5c\u8fdb\u7a0b\u6570\uff0c\u4e00\u822c\u4e3aCPU\u6570\u6216\u00d72\uff0c\u9ed8\u8ba41 worker_connections\uff1a\u5141\u8bb8\u5355\u4e2a\u8fdb\u7a0b\u5e76\u53d1\u8fde\u63a5\u7684\u6700\u5927\u503c\uff0c\u9ed8\u8ba41024 include\uff1a\u5f15\u5165\u914d\u7f6e\u6587\u4ef6 default_type\uff1a\u9ed8\u8ba4\u6587\u4ef6\u7c7b\u578b\uff0c\u5982application/octet-stream sendfile\uff1a\u5f00\u542f\u9ad8\u6548\u6587\u4ef6\u4f20\u8f93\u6a21\u5f0f\uff0c\u9ed8\u8ba4on keepalive_timeout\uff1a\u8bbe\u7f6e\u957f\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\uff08\u79d2\uff09\uff0c\u9ed8\u8ba465 listen\uff1a\u76d1\u542c\u7aef\u53e3\uff0c\u9ed8\u8ba480 server_name\uff1a\u8bbe\u7f6e\u4e3b\u673a\u57df\u540d\uff0c\u9ed8\u8ba4localhost root\uff1a\u8bbe\u7f6e\u4e3b\u673a\u7ad9\u70b9\u6839\u76ee\u5f55\u5730\u5740\uff0c\u9ed8\u8ba4html index\uff1a\u8bbe\u7f6e\u9ed8\u8ba4\u7d22\u5f15\u6587\u4ef6\uff0c\u9ed8\u8ba4index.html index.htm error_page\uff1a\u81ea\u5b9a\u4e49\u9519\u8bef\u9875\u9762\uff0c\u6307\u5411location\u914d\u7f6e\uff0c\u9ed8\u8ba4500 502 503 504 /50x.html 3\u3001\u914d\u7f6e\u7528\u6237\u548c\u7ec4user \u7f16\u8bd1\u524d\u914d\u7f6e\uff1a./configuer --user= --group= \u914d\u7f6e\u6587\u4ef6\uff1auser nobody;\u6216user nuser ngroup; 4\u3001\u81ea\u5b9a\u4e49\u9519\u8bef\u9875error_page \u5982error_page 403 /40x.html; \u5982error_page 404 /404.jpg; \u5982error_page 403 http://example.com/forbidden.html ; \u5982error_page 500 502 503 http://example.com/notfound.html ; \u5982error_page 403=200 /40x.html; # \u9690\u85cf\u771f\u5b9e\u54cd\u5e94\u72b6\u6001\u7801\u7528200\u66ff\u4ee3","title":"\u8ba4\u8bc6\u914d\u7f6e\u6587\u4ef6"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/01-Nginx\u57fa\u672c\u914d\u7f6e/#_2","text":"\u6743\u9650\u63a7\u5236\u6307\u4ee4allow,deny \u9ed8\u8ba4\uff1a\u5168\u90e8allow \u7981\u6b62\u6240\u6709\u7528\u6237\u8bbf\u95ee\uff1adeny all; \u53ea\u5141\u8bb8\u6307\u5b9a\u7528\u6237\u8bbf\u95ee\uff1a server {... allow 192.168.1.100; # \u540c\u7ea7\u6309\u5148\u540e\u987a\u5e8f\uff0c deny all; } \u5d4c\u5957\uff1a\u5185\u90e8\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5916\u90e8 \u8bbf\u95ee\u63a7\u5236\u5e94\u7528 location\uff1a\u5339\u914d\u76ee\u5f55\uff0c\u6709\u4ee5\u4e0b\u89c4\u5219 \u65e0\u7b26\u53f7\uff0c\u6700\u5927\u524d\u7f00\u5339\u914d location /ng.test { ... # http://xxx/ng.test/xxx \u5339\u914d location /ng.test/log { ... # http://xxx/ng.test/log/xxx \u5339\u914d =\u7cbe\u786e\u5339\u914d\uff0clocation =/admin/auth { ... ~\u6b63\u5219\u5339\u914d\uff0clocation ~.html$ { ... location ~^/aaa/.*.html$ { ... ~*\u6b63\u5219\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u5339\u914d ^~\u6307\u5b9a\u6a21\u5f0f\u5339\u914d @\u4e0d\u88ab\u5ba2\u6237\u7aef\u8bbf\u95ee\u4ec5nginx\u5185\u90e8\u8bbf\u95ee root\u548calias\uff1a root\u4ece\u8be5\u76ee\u5f55\u5f00\u59cb\u67e5\u627e\u5339\u914d\u5230\u7684location\uff0c\u5373{root}/{location}/a.img alias\u4ee5\u8be5\u76ee\u5f55\u4e3alocation\u7684\u522b\u540d\u5373{alias}/a.img","title":"\u8bbf\u95ee\u63a7\u5236"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/01-Nginx\u57fa\u672c\u914d\u7f6e/#_3","text":"log_format\u6307\u4ee4\uff0c\u914d\u7f6e\u65e5\u5fd7\u683c\u5f0f \u683c\u5f0f\uff1alog_format {name} '{format}' '{format}' \u53c2\u6570\uff1a $remote_addr\u5ba2\u6237\u7aefIP\u5730\u5740 $remote_user\u5ba2\u6237\u7aef\u7528\u6237\u540d $time_locale\u65f6\u533a $request\u8bf7\u6c42\u7684URI\u548c\u534f\u8bae $status\u8fd4\u56de\u7684\u72b6\u6001\u7801 $body_bytes_sent\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u6587\u4ef6\u5185\u5bb9\u5927\u5c0f $http_referer\u6765\u8defURL $http_user_agent\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u4fe1\u606f $http_x_forwarded_for\u5ba2\u6237\u7aefIP\u5730\u5740\u5217\u8868\uff08\u5305\u62ec\u4ee3\u7406\uff09 \u81ea\u5b9a\u4e49\u65e5\u5fd7\u683c\u5f0f\uff1alog_format mylog '[ip:] $remote_addr [time:] time_local [user_agent:] \" time_local [user_agent:] \" http_user_agent\"'; access_log\u6307\u4ee4\uff0c\u8bbf\u95ee\u65e5\u5fd7 \u5982access_log logs/xxx/access.log mylog buffer=2k flush=5s \u5982access_log off # \u5173\u95ed\u8bbf\u95ee\u65e5\u5fd7 log_subrequest\u6307\u4ee4 \u5141\u8bb8\u8bb0\u5f55\u5b50\u8bf7\u6c42\u7684\u65e5\u5fd7\u8bb0\u5f55\uff0c\u9ed8\u8ba4off,\u53ef\u4ee5\u8bbe\u7f6e\u4e3aon error_log\u6307\u4ee4\uff0c\u9519\u8bef\u65e5\u5fd7 \u5982error_log logs/xxx/error.log; \u5982error_log logs/xxx/error.log notice # \u6307\u5b9a\u8bb0\u5f55\u7b49\u7ea7 \u5982error_log dev/null # \u5173\u95ed\u9519\u8bef\u65e5\u5fd7 \u65e5\u5fd7\u6587\u4ef6\u5207\u5272 \u624b\u52a8\u5207\u5272 $ ls /usr/local/nginx/logs/ # \u67e5\u770b\u76ee\u5f55 $ mv /usr/local/nginx/logs/xxx/access.log /usr/local/nginx/logs/xxx/20190101.log # \u6309\u65e5\u671f\u683c\u5f0f\u91cd\u547d\u540d\u65e5\u5fd7\u6587\u4ef6 $ nginx -s reopen # \u751f\u6210\u65b0\u7684\u65e5\u5fd7\u6587\u4ef6 \u81ea\u52a8\u5207\u5272\uff0cautolog.sh #! /bin/bash logs_path=\"/usr/local/nginx/logs/xxx\" mv $logs_path/access.log $logs_path/ date +\"%Y%m%d%H%M\" .log /usr/local/nginx/sbin/nginx -s reopen \u5982\u679c\u8981\u4fdd\u5b58\u524d\u4e00\u5929\u7684\u65e5\u5fd7\u53ef\u6539\u4e3a mv $logs_path/access.log $logs_path/ date -d yesterday +\"%Y%m%d\" .log \u5b9a\u65f6\u4efb\u52a1\uff0c\u7cfb\u7edf\u81ea\u52a8\u5907\u4efd $ crontab -e # \u8fdb\u5165\u5b9a\u65f6\u4efb\u52a1\u7f16\u8f91 0 0 * * * /user/local/nginx/logs/xxx/autolog.sh >/dev/null 2>&1 # \u5206 \u65f6 \u65e5 \u6708 \u661f\u671f \u547d\u4ee4 \u9519\u8bef\u4e0d\u8f93\u51fa","title":"\u65e5\u5fd7\u6587\u4ef6"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/01-Nginx\u57fa\u672c\u914d\u7f6e/#_4","text":"\u57fa\u4e8e\u7aef\u53e3\u53f7\u914d\u7f6e\u865a\u62df\u4e3b\u673anginx.conf # \u914d\u7f6e\u76d1\u542c8001\u7aef\u53e3\u53f7\u7684\u865a\u62df\u4e3b\u673a server { listen 8001; server_name 192.168.1.100; root html/html8001; index index.html index.htm; } # \u914d\u7f6e\u76d1\u542c8001\u7aef\u53e3\u53f7\u7684\u865a\u62df\u4e3b\u673a server { listen 8002; server_name 192.168.1.100; root html/html8002; index index.html index.htm; } \u57fa\u4e8eIP\u914d\u7f6e\u865a\u62df\u4e3b\u673a step1\u914d\u7f6e\u5b50IP 1.\u4fee\u6539\u6587\u4ef6\u65b9\u5f0f \u590d\u5236\u6587\u4ef6 $ cd /etc/sysconfig/network-scripts/ $ cp ifcfg-eth0 ifcfg-eth0:1 $ cp ifcfg-eth0 ifcfg-eth0:2 \u7f16\u8f91\u6587\u4ef6\uff0cifcfg-eth0:1\u548cifcfg-eth0:2 DEVICE=eth0:1 IPADDR=192.168.1.101 \u548c DEVICE=eth0:2 IPADDR=192.168.1.102 \u751f\u6548\u914d\u7f6e service network reload 2.\u547d\u4ee4\u65b9\u5f0f $ ifconfig eth0:1 192.168.1.101 broadcast 192.168.1.255 net mask 255.255.255.0 up $ route add -host 192.168.1.101 dev eth0:1 \u6b64\u65b9\u5f0f\u91cd\u542f\u540e\u914d\u7f6e\u4f1a\u91cd\u7f6e\uff0c\u53ef\u5c06\u6b64\u547d\u4ee4\u590d\u5236\u5230/etc/rc.local\u4e2d\uff0c\u5f00\u673a\u81ea\u52a8\u914d\u7f6e\u3002 step2\u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf # \u914d\u7f6e\u57fa\u4e8eIP\u4e3a192.168.1.101\u7684\u865a\u62df\u4e3b\u673a servser { listen 80; server_name 192.168.1.101; root html/192.168.1.101; index index.html index.htm; } # \u914d\u7f6e\u57fa\u4e8eIP\u4e3a192.168.1.102\u7684\u865a\u62df\u4e3b\u673a servser { listen 80; server_name 192.168.1.102; root html/192.168.1.102; index index.html index.htm; } \u4fdd\u5b58\u5b8c\u6210\u540e\u5e73\u6ed1\u91cd\u542fnginx -s reload \uff08\u4e0d\u5173\u95ed\u7a0b\u5e8f\u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\uff09 \u57fa\u4e8e\u57df\u540d\u914d\u7f6e\u865a\u62df\u4e3b\u673a step1\u4fee\u6539hosts\u6587\u4ef6\uff0c/etc/hosts \u6dfb\u52a0IP\u5730\u5740\u4e0e\u57df\u540d\u6620\u5c04 127.0.0.1 www.xxx.com 127.0.0.1 xxx.com step2\u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf # \u914d\u7f6e\u57df\u540d\u4e3awww.xxx.com\u7684\u865a\u62df\u4e3b\u673a servser { listen 80; server_name www.xxx.com; root html/www.xxx.com; index index.html index.htm; } \u4fdd\u5b58\uff0c\u5e73\u6ed1\u91cd\u542fnginx -s reload \uff08\u4e0d\u5173\u95ed\u7a0b\u5e8f\u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\uff09 server_name\u7684\u53ef\u9009\u914d\u7f6e server_name www.xxx.com xxx.com; server_name .xxx.com; server_name www. ; server_name ~^(? .+).doman.com$; # \u6b63\u5219\u5339\u914d \u5339\u914d\u7684\u4f18\u5148\u7ea7\u987a\u5e8f\u4f9d\u6b21\u4e3a\uff0c\u7cbe\u51c6\u5339\u81ea>\u4ee5\u901a\u914d\u7b26\u5f00\u59cb\u7684\u5b57\u7b26\u4e32>\u4ee5\u901a\u914d\u7b26\u7ed3\u675f\u7684\u5b57\u7b26\u4e32>\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u8bbe\u7f6e\u76ee\u5f55\u5217\u8868\uff0c\u5728\u65e0index\u6587\u4ef6\u65f6\u663e\u793a\u76ee\u5f55\u5217\u8868 \u5728server\u6216location\u4e2d\uff1a autoindex on; # \u6253\u5f00\u663e\u793a\u76ee\u5f55\u5217\u8868\u529f\u80fd autoindex_exact_size off; # \u4ee5kB/MB/GB\u663e\u793a\u6587\u4ef6\u5927\u5c0f autoindex_localtime on; # \u6700\u540e\u4fee\u6539\u65f6\u95f4\u4ee5\u672c\u5730\u65f6\u95f4\u663e\u793a\uff0c\u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u4e3aGMT\u683c\u6797\u5c3c\u6cbb\u65f6\u95f4\u3002 \u5f15\u5165\u5b50\u914d\u7f6e\u6587\u4ef6 include file | mask # file\u6587\u4ef6\u540d\uff0cmask\u7edd\u5bf9\u6216\u76f8\u5bf9\u8def\u5f84\u4e0b\u7684\u6587\u4ef6 include vhost/*.conf #\u901a\u914d\u7b26\u5f15\u5165\u914d\u7f6e\u6587\u4ef6","title":"\u865a\u62df\u4e3b\u673a"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/02-Web\u670d\u52a1\u5668\u642d\u5efa/","text":"Web\u670d\u52a1\u5668\u642d\u5efa \u00b6 Nginx+PHP\u73af\u5883 \u00b6 \u7f16\u8bd1\u5b89\u88c5PHP \u00b6 \u5b89\u88c5\u4f9d\u8d56 $ cd /usr/local/src $ yum -y install libxml2-devel openssl-devel curl-devel libjpeg-devel libpng-devel freetype-devel \u7f16\u8bd1\u5b89\u88c5libmcrypt $ curl -O https://jaist.dl.sourceforge.net/project/mcrypt/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz $ tar -zxvf libmcrypt-2.5.8.tar.gz $ cd libmcrypt-2.5.8 $ ./configure $ make && make install \u7f16\u8bd1\u5b89\u88c5cmake\uff08libzip\u8981\u6c42\u5927\u4e8e3.0\u7248\u672c\uff0cyum\u4e0a\u7684\u7248\u672c\u8fc7\u4f4e\uff0c\u6e90\u7801\u5b89\u88c5\uff09 $ cd /usr/local/src $ wget https://github.com/Kitware/CMake/releases/download/v3.13.3/cmake-3.13.3.tar.gz $ tar -zxvf cmake-3.13.3.tar.gz $ cd cmake-3.13.3 $ ./bootstrap $ gmake $ make install \u5b89\u88c5libzip\uff08PHP\u8981\u6c42\u5927\u4e8e0.11\u7248\u672c\uff0cyum\u4e0a\u7684\u7248\u672c\u8fc7\u4f4e\uff0c\u6e90\u7801\u5b89\u88c5\uff09 $ cd /usr/local/src $ curl -O https://libzip.org/download/libzip-1.5.1.tar.gz $ tar -zxvf libzip-1.5.1.tar.gz $ cd libzip-1.5.1 $ ./configure $ mkdir build && cd build && cmake .. && make && make install \u5b89\u88c5PHP $ cd /usr/local/src $ curl -O http://cn.php.net/distributions/php-7.3.1.tar.gz $ tar -zxvf php-7.3.1.tar.gz $ cd php-7.3.1 $ ./configure --prefix=/usr/local/php --with-apxs2=/usr/local/apache2/bin/apxs --enable-fpm --with-zlib --enable-zip --enable-mbstring --with-mcrypt --with-mysql --with-mysqli --with-pdo-mysql --with-gd --with-jpeg-dir --with-png-dir --with-freetype-dir --with-curl --with-openssl --with-mhash --enable-bcmath --enable-opcache \u914d\u7f6e\u8bf4\u660e --prefix=/usr/local/php # \u5b89\u88c5\u76ee\u5f55 --with-apxs2=/usr/local/apache2/bin/apxs # Apache\u652f\u6301 --enable-fpm # FPM\uff0cFastCGI\u7ba1\u7406 --with-zlib # \u652f\u6301\u6570\u636e\u538b\u7f29\u548c\u89e3\u538b --enable-zip # ZIP --enable-mbstring # \u591a\u5b57\u8282\u5b57\u7b26\u4e32\u5904\u7406 --with-mcrypt # mcrypt\u52a0\u5bc6\uff08\u4f9d\u8d56libmcrypt\uff09PHP7.2\u5f00\u59cb\u4e0d\u518d\u652f\u6301--with-mysql --with-mysql # MySQL\u6570\u636e\u5e93\u8bbf\u95ee\u652f\u6301\uff0cPHP7\u5f00\u59cb\u4e0d\u518d\u652f\u6301--with-mysql --with-mysqli # \u589e\u5f3a\u7248MySQL\u6570\u636e\u5e93\u8bbf\u95ee\u652f\u6301 --with-pdo-mysql # \u57fa\u4e8ePHP Data Object\u7684MySQL\u6570\u636e\u5e93\u8bbf\u95ee\u652f\u6301 --with-gd # GD\u5e93\uff0c\u7528\u4e8ePHP\u56fe\u50cf\u5904\u7406 --with-jpeg-dir # JPEG\u56fe\u50cf\u5904\u7406\uff08\u4f9d\u8d56libjpeg-devel\uff09 --with-png-dir # PNG\u56fe\u50cf\u5904\u7406\uff08\u4f9d\u8d56libpng-devel\uff09 --with-freetype-dir # FreeType\u5b57\u4f53\u56fe\u50cf\u5904\u7406\u5e93\uff08\u4f9d\u8d56freetype-devel\uff09 --with-curl # curl\u652f\u6301\uff08\u4f9d\u8d56curl-devel\uff09 --with-openssl # OpenSSL\uff08\u4f9d\u8d56openssl-devel\uff09 --with-mhash # mhash\u52a0\u5bc6\u652f\u6301 --enable-bcmath # \u5f00\u542f\u7cbe\u51c6\u8ba1\u7b97\u529f\u80fd --enable-opcache # opencache\uff0cPHP\u4ee3\u7801\u4f18\u5316\u5668 $ make && make install ERROR \u7f16\u8bd1php\u62a5\u9519configure: error: off_t undefined; check your library configuration echo '/usr/local/lib64 /usr/local/lib /usr/lib /usr/lib64'>>/etc/ld.so.conf&&ldconfig -v PHP\u4e0eNginx\u6574\u5408 \u00b6 \u914d\u7f6e\u6587\u4ef6php-fpm.conf\u8be6\u89e3 \u00b6 pid = /usr/local/var/run/php-fpm.pid #pid\u8bbe\u7f6e\uff0c\u4e00\u5b9a\u8981\u5f00\u542f,\u4e0a\u9762\u662fMac\u5e73\u53f0\u7684\u3002\u9ed8\u8ba4\u5728php\u5b89\u88c5\u76ee\u5f55\u4e2d\u7684var/run/php-fpm.pid\u3002 #\u6bd4\u5982centos\u7684\u5728: /usr/local/php/var/run/php-fpm.pid error_log = /usr/local/var/log/php-fpm.log #\u9519\u8bef\u65e5\u5fd7\uff0c\u4e0a\u9762\u662fMac\u5e73\u53f0\u7684\uff0c\u9ed8\u8ba4\u5728php\u5b89\u88c5\u76ee\u5f55\u4e2d\u7684var/log/php-fpm.log\uff0c #\u6bd4\u5982centos\u7684\u5728: /usr/local/php/var/log/php-fpm.log log_level = notice #\u9519\u8bef\u7ea7\u522b. \u4e0a\u9762\u7684php-fpm.log\u7eaa\u5f55\u7684\u767b\u8bb0\u3002\u53ef\u7528\u7ea7\u522b\u4e3a: alert\uff08\u5fc5\u987b\u7acb\u5373\u5904\u7406\uff09, # error\uff08\u9519\u8bef\u60c5\u51b5\uff09, warning\uff08\u8b66\u544a\u60c5\u51b5\uff09, notice\uff08\u4e00\u822c\u91cd\u8981\u4fe1\u606f\uff09, debug\uff08\u8c03\u8bd5\u4fe1\u606f\uff09. \u9ed8\u8ba4: notice. emergency_restart_threshold = 60 emergency_restart_interval = 60s #\u8868\u793a\u5728emergency_restart_interval\u6240\u8bbe\u503c\u5185\u51fa\u73b0SIGSEGV #\u6216\u8005SIGBUS\u9519\u8bef\u7684php-cgi\u8fdb\u7a0b\u6570\u5982\u679c\u8d85\u8fc7 emergency_restart_threshold\u4e2a\uff0c #php-fpm\u5c31\u4f1a\u4f18\u96c5\u91cd\u542f\u3002\u8fd9\u4e24\u4e2a\u9009\u9879\u4e00\u822c\u4fdd\u6301\u9ed8\u8ba4\u503c\u30020 \u8868\u793a '\u5173\u95ed\u8be5\u529f\u80fd'. \u9ed8\u8ba4\u503c: 0 (\u5173\u95ed). process_control_timeout = 0 #\u8bbe\u7f6e\u5b50\u8fdb\u7a0b\u63a5\u53d7\u4e3b\u8fdb\u7a0b\u590d\u7528\u4fe1\u53f7\u7684\u8d85\u65f6\u65f6\u95f4. #\u53ef\u7528\u5355\u4f4d: s(\u79d2), m(\u5206), h(\u5c0f\u65f6), \u6216\u8005 d(\u5929) \u9ed8\u8ba4\u5355\u4f4d: s(\u79d2). \u9ed8\u8ba4\u503c: 0. daemonize = yes #\u540e\u53f0\u6267\u884cfpm,\u9ed8\u8ba4\u503c\u4e3ayes\uff0c\u5982\u679c\u4e3a\u4e86\u8c03\u8bd5\u53ef\u4ee5\u6539\u4e3ano\u3002 #\u5728FPM\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u8bbe\u7f6e\u6765\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\u6c60\u3002 \u8fd9\u4e9b\u8bbe\u7f6e\u53ef\u4ee5\u9488\u5bf9\u6bcf\u4e2a\u8fdb\u7a0b\u6c60\u5355\u72ec\u8bbe\u7f6e\u3002 listen = 127.0.0.1:9000 #fpm\u76d1\u542c\u7aef\u53e3\uff0c\u5373nginx\u4e2dphp\u5904\u7406\u7684\u5730\u5740\uff0c\u4e00\u822c\u9ed8\u8ba4\u503c\u5373\u53ef\u3002 #\u53ef\u7528\u683c\u5f0f\u4e3a: 'ip:port', 'port', '/path/to/unix/socket'. \u6bcf\u4e2a\u8fdb\u7a0b\u6c60\u90fd\u9700\u8981\u8bbe\u7f6e\u3002 #\u5982\u679cnginx\u548cphp\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\uff0c\u5206\u5e03\u5f0f\u5904\u7406\uff0c\u5c31\u8bbe\u7f6eip\u8fd9\u91cc\u5c31\u53ef\u4ee5\u4e86\u3002 listen.backlog = -1 #backlog\u6570\uff0c\u8bbe\u7f6e listen \u7684\u534a\u8fde\u63a5\u961f\u5217\u957f\u5ea6\uff0c-1\u8868\u793a\u65e0\u9650\u5236\uff0c #\u7531\u64cd\u4f5c\u7cfb\u7edf\u51b3\u5b9a\uff0c\u6b64\u884c\u6ce8\u91ca\u6389\u5c31\u884c\u3002backlog\u542b\u4e49\u770b: https://www.jianshu.com/p/fe2228a77429 listen.allowed_clients = 127.0.0.1 #\u5141\u8bb8\u8bbf\u95eeFastCGI\u8fdb\u7a0b\u7684IP\u767d\u540d\u5355\uff0c\u8bbe\u7f6eany\u4e3a\u4e0d\u9650\u5236IP\uff0c #\u5982\u679c\u8981\u8bbe\u7f6e\u5176\u4ed6\u4e3b\u673a\u7684nginx\u4e5f\u80fd\u8bbf\u95ee\u8fd9\u53f0FPM\u8fdb\u7a0b\uff0c #listen\u5904\u8981\u8bbe\u7f6e\u6210\u672c\u5730\u53ef\u88ab\u8bbf\u95ee\u7684IP\u3002\u9ed8\u8ba4\u503c\u662fany\u3002 #\u6bcf\u4e2a\u5730\u5740\u662f\u7528\u9017\u53f7\u5206\u9694. \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u6216\u8005\u4e3a\u7a7a\uff0c\u5219\u5141\u8bb8\u4efb\u4f55\u670d\u52a1\u5668\u8bf7\u6c42\u8fde\u63a5\u3002 listen.owner = www listen.group = www listen.mode = 0666 #unix socket\u8bbe\u7f6e\u9009\u9879\uff0c\u5982\u679c\u4f7f\u7528tcp\u65b9\u5f0f\u8bbf\u95ee\uff0c\u8fd9\u91cc\u6ce8\u91ca\u5373\u53ef\u3002 user = www group = www #\u542f\u52a8\u8fdb\u7a0b\u7684\u7528\u6237\u548c\u7528\u6237\u7ec4\uff0cFPM \u8fdb\u7a0b\u8fd0\u884c\u7684Unix\u7528\u6237, \u5fc5\u987b\u8981\u8bbe\u7f6e\u3002 #\u7528\u6237\u7ec4\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u9ed8\u8ba4\u7528\u6237\u7684\u7ec4\u88ab\u4f7f\u7528\u3002 pm = dynamic #php-fpm\u8fdb\u7a0b\u542f\u52a8\u6a21\u5f0f\uff0cpm\u53ef\u4ee5\u8bbe\u7f6e\u4e3astatic\u548cdynamic\u548condemand #\u5982\u679c\u9009\u62e9static\uff0c\u5219\u8fdb\u7a0b\u6570\u5c31\u6570\u56fa\u5b9a\u7684\uff0c\u7531pm.max_children\u6307\u5b9a\u56fa\u5b9a\u7684\u5b50\u8fdb\u7a0b\u6570\u3002 #\u5982\u679c\u9009\u62e9dynamic\uff0c\u5219\u8fdb\u7a0b\u6570\u662f\u52a8\u6001\u53d8\u5316\u7684,\u7531\u4ee5\u4e0b\u53c2\u6570\u51b3\u5b9a\uff1a pm.max_children = 50 #\u5b50\u8fdb\u7a0b\u6700\u5927\u6570 pm.start_servers = 2 #\u542f\u52a8\u65f6\u7684\u8fdb\u7a0b\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a: min_spare_servers + (max_spare_servers - min_spare_servers) / 2 pm.min_spare_servers = 1 #\u4fdd\u8bc1\u7a7a\u95f2\u8fdb\u7a0b\u6570\u6700\u5c0f\u503c\uff0c\u5982\u679c\u7a7a\u95f2\u8fdb\u7a0b\u5c0f\u4e8e\u6b64\u503c\uff0c\u5219\u521b\u5efa\u65b0\u7684\u5b50\u8fdb\u7a0b pm.max_spare_servers = 3 #\uff0c\u4fdd\u8bc1\u7a7a\u95f2\u8fdb\u7a0b\u6570\u6700\u5927\u503c\uff0c\u5982\u679c\u7a7a\u95f2\u8fdb\u7a0b\u5927\u4e8e\u6b64\u503c\uff0c\u6b64\u8fdb\u884c\u6e05\u7406 pm.max_requests = 500 #\u8bbe\u7f6e\u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u91cd\u751f\u4e4b\u524d\u670d\u52a1\u7684\u8bf7\u6c42\u6570. \u5bf9\u4e8e\u53ef\u80fd\u5b58\u5728 \u5185\u5b58\u6cc4\u6f0f\u7684\u7b2c\u4e09\u65b9\u6a21\u5757\u6765\u8bf4\u662f\u975e\u5e38\u6709\u7528\u7684. \u5982\u679c\u8bbe\u7f6e\u4e3a '0' \u5219\u4e00\u76f4\u63a5\u53d7\u8bf7\u6c42. \u7b49\u540c\u4e8e PHP_FCGI_MAX_REQUESTS \u73af\u5883\u53d8\u91cf. \u9ed8\u8ba4\u503c: 0. pm.status_path = /status #FPM\u72b6\u6001\u9875\u9762\u7684\u7f51\u5740. \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e, \u5219\u65e0\u6cd5\u8bbf\u95ee\u72b6\u6001\u9875\u9762. \u9ed8\u8ba4\u503c: none. munin\u76d1\u63a7\u4f1a\u4f7f\u7528\u5230 ping.path = /ping #FPM\u76d1\u63a7\u9875\u9762\u7684ping\u7f51\u5740. \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e, \u5219\u65e0\u6cd5\u8bbf\u95eeping\u9875\u9762. #\u8be5\u9875\u9762\u7528\u4e8e\u5916\u90e8\u68c0\u6d4bFPM\u662f\u5426\u5b58\u6d3b\u5e76\u4e14\u53ef\u4ee5\u54cd\u5e94\u8bf7\u6c42. \u8bf7\u6ce8\u610f\u5fc5\u987b\u4ee5\u659c\u7ebf\u5f00\u5934 (/)\u3002 ping.response = pong #\u7528\u4e8e\u5b9a\u4e49ping\u8bf7\u6c42\u7684\u8fd4\u56de\u76f8\u5e94. \u8fd4\u56de\u4e3a HTTP 200 \u7684 text/plain \u683c\u5f0f\u6587\u672c. \u9ed8\u8ba4\u503c: pong. access.log = log/$pool.access.log #\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u7684\u8bbf\u95ee\u65e5\u5fd7\uff0c\u9ed8\u8ba4\u662f\u5173\u95ed\u7684\u3002 access.format = \"%R - %u %t \\\"%m %r%Q%q\\\" %s %f %{mili}d %{kilo}M %C%%\" #\u8bbe\u5b9a\u8bbf\u95ee\u65e5\u5fd7\u7684\u683c\u5f0f\u3002 slowlog = log/$pool.log.slow #\u6162\u8bf7\u6c42\u7684\u8bb0\u5f55\u65e5\u5fd7,\u914d\u5408request_slowlog_timeout\u4f7f\u7528\uff0c\u9ed8\u8ba4\u5173\u95ed request_slowlog_timeout = 10s #\u5f53\u4e00\u4e2a\u8bf7\u6c42\u8be5\u8bbe\u7f6e\u7684\u8d85\u65f6\u65f6\u95f4\u540e\uff0c\u5c31\u4f1a\u5c06\u5bf9\u5e94\u7684PHP\u8c03\u7528\u5806\u6808\u4fe1\u606f\u5b8c\u6574\u5199\u5165 #\u5230\u6162\u65e5\u5fd7\u4e2d. \u8bbe\u7f6e\u4e3a '0' \u8868\u793a 'Off' request_terminate_timeout = 0 #\u8bbe\u7f6e\u5355\u4e2a\u8bf7\u6c42\u7684\u8d85\u65f6\u4e2d\u6b62\u65f6\u95f4. \u8be5\u9009\u9879\u53ef\u80fd\u4f1a\u5bf9php.ini\u8bbe\u7f6e\u4e2d\u7684'max_execution_time' #\u56e0\u4e3a\u67d0\u4e9b\u7279\u6b8a\u539f\u56e0\u6ca1\u6709\u4e2d\u6b62\u8fd0\u884c\u7684\u811a\u672c\u6709\u7528. \u8bbe\u7f6e\u4e3a '0' \u8868\u793a 'Off'. #\u5f53\u7ecf\u5e38\u51fa\u73b0502\u9519\u8bef\u65f6\u53ef\u4ee5\u5c1d\u8bd5\u66f4\u6539\u6b64\u9009\u9879\u3002 rlimit_files = 1024 #\u8bbe\u7f6e\u6587\u4ef6\u6253\u5f00\u63cf\u8ff0\u7b26\u7684rlimit\u9650\u5236. \u9ed8\u8ba4\u503c: \u7cfb\u7edf\u5b9a\u4e49\u503c\u9ed8\u8ba4\u53ef\u6253\u5f00\u53e5\u67c4\u662f1024\uff0c #\u53ef\u4f7f\u7528 ulimit -n\u67e5\u770b\uff0culimit -n 2048\u4fee\u6539\u3002 rlimit_core = 0 #\u8bbe\u7f6e\u6838\u5fc3rlimit\u6700\u5927\u9650\u5236\u503c. \u53ef\u7528\u503c: 'unlimited' \u30010\u6216\u8005\u6b63\u6574\u6570. \u9ed8\u8ba4\u503c: \u7cfb\u7edf\u5b9a\u4e49\u503c. chroot = #\u542f\u52a8\u65f6\u7684Chroot\u76ee\u5f55. \u6240\u5b9a\u4e49\u7684\u76ee\u5f55\u9700\u8981\u662f\u7edd\u5bf9\u8def\u5f84. \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e, \u5219chroot\u4e0d\u88ab\u4f7f\u7528. chdir = #\u8bbe\u7f6e\u542f\u52a8\u76ee\u5f55\uff0c\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8Chdir\u5230\u8be5\u76ee\u5f55. \u6240\u5b9a\u4e49\u7684\u76ee\u5f55\u9700\u8981\u662f\u7edd\u5bf9\u8def\u5f84. #\u9ed8\u8ba4\u503c: \u5f53\u524d\u76ee\u5f55\uff0c\u6216\u8005/\u76ee\u5f55\uff08chroot\u65f6\uff09 catch_workers_output = yes #\u91cd\u5b9a\u5411\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684stdout\u548cstderr\u5230\u4e3b\u8981\u7684\u9519\u8bef\u65e5\u5fd7\u6587\u4ef6\u4e2d. #\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e, stdout \u548c stderr \u5c06\u4f1a\u6839\u636eFastCGI\u7684\u89c4\u5219\u88ab\u91cd\u5b9a\u5411\u5230 /dev/null . \u9ed8\u8ba4\u503c: \u7a7a. php.ini\u8be6\u89e3 \u00b6 [PHP] ; PHP\u8fd8\u662f\u4e00\u4e2a\u4e0d\u65ad\u53d1\u5c55\u7684\u5de5\u5177\uff0c\u5176\u529f\u80fd\u8fd8\u5728\u4e0d\u65ad\u5730\u5220\u51cf ; \u800cphp.ini\u7684\u8bbe\u7f6e\u66f4\u6539\u53ef\u4ee5\u53cd\u6620\u51fa\u76f8\u5f53\u7684\u53d8\u5316\uff0c ; \u5728\u4f7f\u7528\u65b0\u7684PHP\u7248\u672c\u524d\uff0c\u7814\u7a76\u4e00\u4e0bphp.ini\u4f1a\u6709\u597d\u5904\u7684 ;;;;;;;;;;;;;;;;;;; ; \u5173\u4e8e\u8fd9\u4e2a\u6587\u4ef6 ; ;;;;;;;;;;;;;;;;;;; ; \u8fd9\u4e2a\u6587\u4ef6\u63a7\u5236\u4e86PHP\u8bb8\u591a\u65b9\u9762\u7684\u89c2\u70b9\u3002\u4e3a\u4e86\u8ba9PHP\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5b83\u5fc5\u987b\u88ab\u547d\u540d\u4e3a ; 'php.ini'\u3002PHP \u5c06\u5728\u8fd9\u4e9b\u5730\u65b9\u4f9d\u6b21\u67e5\u627e\u8be5\u6587\u4ef6\uff1a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff1b\u73af\u5883\u53d8\u91cfPHPRC ; \u6307\u660e\u7684\u8def\u5f84\uff1b\u7f16\u8bd1\u65f6\u6307\u5b9a\u7684\u8def\u5f84\u3002 ; \u5728windows\u4e0b\uff0c\u7f16\u8bd1\u65f6\u7684\u8def\u5f84\u662fWindows\u5b89\u88c5\u76ee\u5f55\u3002 ; \u5728\u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\uff0cphp.ini\u7684\u67e5\u627e\u8def\u5f84\u53ef\u4ee5\u7528 -c \u53c2\u6570\u66ff\u4ee3\u3002 ; \u8be5\u6587\u4ef6\u7684\u8bed\u6cd5\u975e\u5e38\u7b80\u5355\u3002\u7a7a\u767d\u5b57\u7b26\u548c\u7528\u5206\u53f7';'\u5f00\u59cb\u7684\u884c\u88ab\u7b80\u5355\u5730\u5ffd\u7565\uff08\u5c31\u8c61\u4f60\u53ef\u80fd ; \u731c\u5230\u7684\u4e00\u6837\uff09\u3002 \u7ae0\u8282\u6807\u9898\uff08\u4f8b\u5982 : [Foo]\uff09\u4e5f\u88ab\u7b80\u5355\u5730\u5ffd\u7565\uff0c\u5373\u4f7f\u5c06\u6765\u5b83\u4eec\u53ef\u80fd ; \u6709\u67d0\u79cd\u7684\u610f\u4e49\u3002 ; ; \u6307\u793a\u88ab\u6307\u5b9a\u4f7f\u7528\u5982\u4e0b\u8bed\u6cd5\uff1a ; \u6307\u793a\u6807\u8bc6\u7b26 = \u503c ; directive = value ; \u6307\u793a\u6807\u8bc6\u7b26 \u662f *\u5927\u5c0f\u5199\u654f\u611f\u7684* - foo=bar \u4e0d\u540c\u4e8e FOO = bar\u3002 ; ; \u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e00\u4e2a\u6570\u5b57\uff0c\u4e00\u4e2a PHP \u5e38\u91cf (\u5982\uff1a E_ALL or M_PI), INI \u5e38\u91cf\u4e2d\u7684 ; \u4e00\u4e2a (On, Off, True, False, Yes, No and None) \uff0c\u6216\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f ; (\u5982: E_ALL & ~E_NOTICE), \u6216\u662f\u7528\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u5b57\u7b26\u4e32(\" foo\" ). ; ; INI \u6587\u4ef6\u7684\u8868\u8fbe\u5f0f\u88ab\u9650\u5236\u4e8e\u4f4d\u8fd0\u7b97\u7b26\u548c\u62ec\u53f7\u3002 ; | bitwise OR ; & bitwise AND ; ~ bitwise NOT ; ! boolean NOT ; ; \u5e03\u5c14\u6807\u5fd7\u53ef\u7528 1, On, True or Yes \u8fd9\u4e9b\u503c\u7f6e\u4e8e\u5f00\u7684\u72b6\u6001\u3002 ; \u5b83\u4eec\u53ef\u7528 0, Off, False or No \u8fd9\u4e9b\u503c\u7f6e\u4e8e\u5173\u7684\u72b6\u6001\u3002 ; ; \u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\u5728\u7b49\u53f7\u540e\u4e0d\u5199\u4efb\u4f55\u4e1c\u897f\u8868\u793a\uff0c\u6216\u8005\u7528 None \u5173\u952e\u5b57: ; ; foo = ; \u5c06foo\u7f6e\u4e3a\u7a7a\u5b57\u7b26\u4e32 ; foo = none ; \u5c06foo\u7f6e\u4e3a\u7a7a\u5b57\u7b26\u4e32 ; foo = \" none\" ; \u5c06foo\u7f6e\u4e3a\u5b57\u7b26\u4e32'none' ; ; \u5982\u679c\u4f60\u503c\u8bbe\u7f6e\u4e2d\u4f7f\u7528\u5e38\u91cf\uff0c\u800c\u8fd9\u4e9b\u5e38\u91cf\u5c5e\u4e8e\u52a8\u6001\u8c03\u5165\u7684\u6269\u5c55\u5e93\uff08\u4e0d\u662f PHP \u7684\u6269\u5c55\uff0c\u5c31\u662f ; Zend \u7684\u6269\u5c55\uff09\uff0c\u4f60\u4ec5\u53ef\u4ee5\u8c03\u5165\u8fd9\u4e9b\u6269\u5c55\u7684\u884c*\u4e4b\u540e*\u4f7f\u7528\u8fd9\u4e9b\u5e38\u91cf\u3002 ; ; \u6240\u6709\u5728 php.ini-dist \u6587\u4ef6\u91cc\u8bbe\u5b9a\u7684\u503c\u4e0e\u5185\u5efa\u7684\u9ed8\u8ba4\u503c\u76f8\u540c\uff08\u8fd9\u662f\u8bf4\uff0c\u5982\u679c php.ini ; \u6ca1\u88ab\u4f7f\u7528\u6216\u8005\u4f60\u5220\u6389\u4e86\u8fd9\u4e9b\u884c\uff0c\u9ed8\u8ba4\u503c\u4e0e\u4e4b\u76f8\u540c\uff09\u3002 ;;;;;;;;;;;;;;;;;;;; ; \u8bed\u8a00\u9009\u9879 ; ;;;;;;;;;;;;;;;;;;;; engine = On ; \u4f7f PHP scripting language engine\uff08PHP \u811a\u672c\u8bed\u8a00\u5f15\u64ce\uff09\u5728 Apache\u4e0b\u6709\u6548\u3002 short_open_tag = On ; \u5141\u8bb8 tags \u5c06\u88ab\u8bc6\u522b\u3002 asp_tags = Off ; \u5141\u8bb8ASP-style tags precision = 14 ; \u6d6e\u70b9\u7c7b\u578b\u6570\u663e\u793a\u65f6\u7684\u6709\u6548\u4f4d\u6570 y2k_compliance = Off ; \u662f\u5426\u6253\u5f00 2000\u5e74\u9002\u5e94 (\u53ef\u80fd\u5728\u975eY2K\u9002\u5e94\u7684\u6d4f\u89c8\u5668\u4e2d\u5bfc\u81f4\u95ee\u9898) output_buffering = Off ; \u8f93\u51fa\u7f13\u5b58\u5141\u8bb8\u4f60\u751a\u81f3\u5728\u8f93\u51fa\u6b63\u6587\u5185\u5bb9\u4e4b\u540e\u53d1\u9001 header\uff08\u6807\u5934\uff0c\u5305\u62eccookies\uff09\u884c ; \u5176\u4ee3\u4ef7\u662f\u8f93\u51fa\u5c42\u51cf\u6162\u4e00\u70b9\u70b9\u901f\u5ea6\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u8f93\u51fa\u7f13\u5b58\u5728\u8fd0\u884c\u65f6\u6253\u5f00\u8f93\u51fa\u7f13\u5b58\uff0c ; \u6216\u8005\u5728\u8fd9\u91cc\u5c06\u6307\u793a\u8bbe\u4e3a On \u800c\u4f7f\u5f97\u6240\u6709\u6587\u4ef6\u7684\u8f93\u51fa\u7f13\u5b58\u6253\u5f00\u3002 output_handler = ; \u4f60\u53ef\u4ee5\u91cd\u5b9a\u5411\u4f60\u7684\u811a\u672c\u7684\u6240\u6709\u8f93\u51fa\u5230\u4e00\u4e2a\u51fd\u6570\uff0c ; \u90a3\u6837\u505a\u53ef\u80fd\u5bf9\u5904\u7406\u6216\u4ee5\u65e5\u5fd7\u8bb0\u5f55\u5b83\u6709\u7528\u3002 ; \u4f8b\u5982\u82e5\u4f60\u5c06\u8fd9\u4e2aoutput_handler \u8bbe\u4e3a\" ob_gzhandler\" , ; \u5219\u8f93\u51fa\u4f1a\u88ab\u900f\u660e\u5730\u4e3a\u652f\u6301gzip\u6216deflate\u7f16\u7801\u7684\u6d4f\u89c8\u5668\u538b\u7f29\u3002 ; \u8bbe\u4e00\u4e2a\u8f93\u51fa\u5904\u7406\u5668\u81ea\u52a8\u5730\u6253\u5f00\u8f93\u51fa\u7f13\u51b2\u3002 implicit_flush = Off ; \u5f3a\u5236flush\uff08\u5237\u65b0\uff09\u8ba9PHP \u544a\u8bc9\u8f93\u51fa\u5c42\u5728\u6bcf\u4e2a\u8f93\u51fa\u5757\u4e4b\u540e\u81ea\u52a8\u5237\u65b0\u81ea\u8eab\u6570\u636e\u3002 ; \u8fd9\u7b49\u6548\u4e8e\u5728\u6bcf\u4e2a print() \u6216 echo() \u8c03\u7528\u548c\u6bcf\u4e2a HTML \u5757\u540e\u8c03\u7528flush()\u51fd\u6570\u3002 ; \u6253\u5f00\u8fd9\u9879\u8bbe\u7f6e\u4f1a\u5bfc\u81f4\u4e25\u91cd\u7684\u8fd0\u884c\u65f6\u51b2\u7a81\uff0c\u5efa\u8bae\u4ec5\u5728debug\u8fc7\u7a0b\u4e2d\u6253\u5f00\u3002 allow_call_time_pass_reference = On ; \u662f\u5426\u8ba9\u5f3a\u8feb\u51fd\u6570\u8c03\u7528\u65f6\u6309\u5f15\u7528\u4f20\u9012\u53c2\u6570\u3002\u8fd9\u4e00\u65b9\u6cd5\u906d\u5230\u6297\u8bae\uff0c ; \u5e76\u53ef\u80fd\u5728\u5c06\u6765\u7248\u672c\u7684PHP/Zend\u91cc\u4e0d\u518d\u652f\u6301\u3002 ; \u53d7\u5230\u9f13\u52b1\u7684\u6307\u5b9a\u54ea\u4e9b\u53c2\u6570\u6309\u5f15\u7528\u4f20\u9012\u7684\u65b9\u6cd5\u662f\u5728\u51fd\u6570\u58f0\u660e\u91cc\u3002 ; \u4f60\u88ab\u9f13\u52b1\u5c1d\u8bd5\u5173\u95ed\u8fd9\u4e00\u9009\u9879\u5e76\u786e\u8ba4\u4f60\u7684\u811a\u672c\u4ecd\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u4ee5\u4fdd\u8bc1\u5728\u5c06\u6765\u7248\u672c\u7684\u8bed\u8a00\u91cc ; \u5b83\u4eec\u4ecd\u80fd\u5de5\u4f5c\u3002\uff08\u4f60\u5c06\u5728\u6bcf\u6b21\u4f7f\u7528\u8be5\u7279\u70b9\u65f6\u5f97\u5230\u4e00\u4e2a\u8b66\u544a\uff0c\u800c\u53c2\u6570\u5c06\u6309\u503c\u800c\u4e0d\u662f\u6309\u5f15\u7528 ; \u4f20\u9012\uff09\u3002 ; Safe Mode \u5b89\u5168\u6a21\u5f0f safe_mode = Off safe_mode_exec_dir = safe_mode_allowed_env_vars = PHP_ ; \uff1fSetting certain environment variables ; \uff1fmay be a potential security breach. ; \u8be5\u6307\u793a\u5305\u542b\u7528\u9017\u53f7\u5206\u9694\u7684\u524d\u7f00\u5217\u8868\u3002\u5b89\u5168\u6a21\u5f0f\u4e2d\uff0c\u7528\u6237\u4ec5\u53ef\u4ee5\u66ff\u6362 ; \u4ee5\u5728\u6b64\u5217\u51fa\u7684\u524d\u7f00\u5f00\u5934\u7684\u73af\u5883\u53d8\u91cf\u7684\u503c\u3002 ; \u9ed8\u8ba4\u5730\uff0c\u7528\u6237\u5c06\u4ec5\u80fd \u8bbe\u5b9a\u4ee5PHP_\u5f00\u5934\u7684\u73af\u5883\u53d8\u91cf\uff0c\uff08\u5982: PHP_FOO=BAR\uff09\u3002 ; \u6ce8\u610f: \u5982\u679c\u8fd9\u4e00\u6307\u793a\u4e3a\u7a7a\uff0cPHP \u5c06\u8ba9\u7528\u6237\u66f4\u6539\u4efb\u610f\u73af\u5883\u53d8\u91cf! safe_mode_protected_env_vars = LD_LIBRARY_PATH ; \u8fd9\u6761\u6307\u793a\u5305\u542b\u4e00\u4e2a\u7528\u9017\u53f7\u5206\u9694\u7684\u73af\u5883\u53d8\u91cf\u5217\u8868\uff0c\u90a3\u662f\u6700\u7ec8\u7528\u6237\u5c06\u4e0d\u80fd\u7528putenv () \u66f4\u6539\u7684\u3002 ; \u8fd9\u4e9b\u53d8\u91cf\u751a\u81f3\u5728safe_mode_allowed_env_vars \u8bbe\u7f6e\u4e3a\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\u5f97\u5230\u4fdd\u62a4\u3002 disable_functions = ; \u8fd9\u6761\u6307\u793a\u8ba9\u4f60\u53ef\u4ee5\u4e3a\u4e86\u5b89\u5168\u7684\u539f\u56e0\u8ba9\u7279\u5b9a\u51fd\u6570\u5931\u6548\u3002 ; \u5b83\u63a5\u53d7\u4e00\u4e2a\u7528\u9017\u53f7\u5206\u9694\u7684\u51fd\u6570\u540d\u5217\u8868\u3002 ; \u8fd9\u6761\u6307\u793a *\u4e0d\u53d7* \u5b89\u5168\u6a21\u5f0f\u662f\u5426\u6253\u5f00\u7684\u5f71\u54cd\u3002 ; \u8bed\u6cd5\u9ad8\u4eae\u6a21\u5f0f\u7684\u8272\u5f69\u3002 ; \u53ea\u8981\u80fd\u88ab\u63a5\u53d7\u7684\u4e1c\u897f\u5c31\u80fd\u5de5\u4f5c\u3002 highlight.string = #DD0000 highlight.comment = #FF8000 highlight.keyword = #007700 highlight.bg = #FFFFFF highlight.default = #0000BB highlight.html = #000000 ; Misc \u6742\u9879 expose_php = Off ; \u51b3\u5b9a PHP \u662f\u5426\u6807\u793a\u5b83\u88c5\u5728\u670d\u52a1\u5668\u4e0a\u7684\u4e8b\u5b9e\uff08\u4f8b\u5982\uff1a\u52a0\u5728\u5b83 \u2014 PHP\u2014 \u7ed9Web\u670d\u52a1 ; \u53d1\u9001\u7684\u4fe1\u53f7\u4e0a\uff09\u3002 ; \uff08\u6211\u4e2a\u4eba\u7684\u610f\u89c1\uff0c\u5728\u51fa\u73b0\u4ec0\u4e48power-by\u7684header\u7684\u65f6\u5019\uff0c\u628a\u8fd9\u5173\u6389\u3002\uff09 ; \u5b83\u4e0d\u4f1a\u6709\u5b89\u5168\u4e0a\u7684\u5a01\u80c1, \u4f46\u5b83\u4f7f\u68c0\u67e5\u4f60\u7684\u670d\u52a1\u5668\u4e0a\u662f\u5426\u5b89\u88c5\u4e86PHP\u6210\u4e3a\u4e86\u53ef\u80fd\u3002 ;;;;;;;;;;;;;;;;;;; ; Resource Limits ; ;;;;;;;;;;;;;;;;;;; max_execution_time = 30 ; \u6bcf\u4e2a\u811a\u672c\u7684\u6700\u5927\u6267\u884c\u65f6\u95f4, \u6309\u79d2\u8ba1 memory_limit = 8388608 ; \u4e00\u4e2a\u811a\u672c\u6700\u5927\u53ef\u4f7f\u7528\u7684\u5185\u5b58\u603b\u91cf (\u8fd9\u91cc\u662f8MB) ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ; Error handling and logging ; ; \u51fa\u9519\u63a7\u5236\u548c\u767b\u8bb0 ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ; \u9519\u8bef\u62a5\u544a\u662f\u6309\u4f4d\u7684\u3002\u6216\u8005\u5c06\u6570\u5b57\u52a0\u8d77\u6765\u5f97\u5230\u60f3\u8981\u7684\u9519\u8bef\u62a5\u544a\u7b49\u7ea7\u3002 ; E_ALL - \u6240\u6709\u7684\u9519\u8bef\u548c\u8b66\u544a ; E_ERROR - \u81f4\u547d\u6027\u8fd0\u884c\u65f6\u9519 ; E_WARNING - \u8fd0\u884c\u65f6\u8b66\u544a\uff08\u975e\u81f4\u547d\u6027\u9519\uff09 ; E_PARSE - \u7f16\u8bd1\u65f6\u89e3\u6790\u9519\u8bef ; E_NOTICE - \u8fd0\u884c\u65f6\u63d0\u9192(\u8fd9\u4e9b\u7ecf\u5e38\u662f\u662f\u4f60\u7684\u4ee3\u7801\u7684bug\u5f15\u8d77\u7684\uff0c ;\u4e5f\u53ef\u80fd\u662f\u6709\u610f\u7684\u884c\u4e3a\u9020\u6210\u7684\u3002(\u5982\uff1a\u57fa\u4e8e\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a ;\u7a7a\u5b57\u7b26\u4e32\u7684\u4e8b\u5b9e\u800c\u4f7f\u7528\u4e00\u4e2a\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf) ; E_CORE_ERROR - \u53d1\u751f\u4e8ePHP\u542f\u52a8\u65f6\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u7684\u81f4\u547d\u9519\u8bef ; E_CORE_WARNING - \u53d1\u751f\u4e8ePHP\u542f\u52a8\u65f6\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u7684\u8b66\u544a(\u975e\u81f4\u547d\u6027\u9519) ; E_COMPILE_ERROR - \u7f16\u8bd1\u65f6\u81f4\u547d\u6027\u9519 ; E_COMPILE_WARNING - \u7f16\u8bd1\u65f6\u8b66\u544a(\u975e\u81f4\u547d\u6027\u9519) ; E_USER_ERROR - \u7528\u6237\u4ea7\u751f\u7684\u51fa\u9519\u6d88\u606f ; E_USER_WARNING - \u7528\u6237\u4ea7\u751f\u7684\u8b66\u544a\u6d88\u606f ; E_USER_NOTICE - \u7528\u6237\u4ea7\u751f\u7684\u63d0\u9192\u6d88\u606f ; \u4f8b\u5b50: ; error_reporting = E_ALL & ~E_NOTICE ; \u663e\u793a\u6240\u6709\u7684\u9519\u8bef\uff0c\u9664\u4e86\u63d0\u9192 ; error_reporting = E_COMPILE_ERROR|E_ERROR|E_CORE_ERROR ; \u4ec5\u663e\u793a\u9519\u8bef error_reporting = E_ALL & ~E_NOTICE ; \u663e\u793a\u6240\u6709\u7684\u9519\u8bef\uff0c\u9664\u4e86\u63d0\u9192 display_errors = On ; \u663e\u793a\u51fa\u9519\u8bef\u4fe1\u606f(\u4f5c\u4e3a\u8f93\u51fa\u7684\u4e00\u90e8\u5206) ; \u5728\u6700\u7ec8\u53d1\u5e03\u7684web\u7ad9\u70b9\u4e0a\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f60\u5173\u6389\u8fd9\u4e2a\u7279\u6027\uff0c\u5e76\u4f7f\u7528 ; \u9519\u8bef\u65e5\u5fd7\u4ee3\u66ff\uff08\u53c2\u770b\u4e0b\u9762\uff09\u3002 ; \u5728\u6700\u7ec8\u53d1\u5e03\u7684web\u7ad9\u70b9\u7ee7\u7eed\u8ba9 display_errors \u6709\u6548\u53ef\u80fd ; \u66b4\u9732\u4e00\u4e9b\u6709\u5173\u5b89\u5168\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u4f60\u7684web\u670d\u52a1\u4e0a\u7684\u6587\u4ef6\u8def\u5f84\u3001 ; \u4f60\u7684\u6570\u636e\u5e93\u89c4\u5212\u6216\u522b\u7684\u4fe1\u606f\u3002 display_startup_errors = Off ; \u751a\u81f3\u5f53display_erroes\u6253\u5f00\u4e86\uff0c\u53d1\u751f\u4e8ePHP\u7684\u542f\u52a8\u7684\u6b65\u9aa4\u4e2d ; \u7684\u9519\u8bef\u4e5f\u4e0d\u4f1a\u88ab\u663e\u793a\u3002 ; \u5f3a\u70c8\u5efa\u8bae\u4fdd\u6301\u4f7f display_startup_errors \u5173\u95ed\uff0c ; \u9664\u4e86\u5728\u6539\u9519\u8fc7\u7a0b\u4e2d\u3002 log_errors = Off ; \u5728\u65e5\u5fd7\u6587\u4ef6\u91cc\u8bb0\u5f55\u9519\u8bef\uff08\u670d\u52a1\u5668\u6307\u5b9a\u7684\u65e5\u5fd7\uff0cstderr\u6807\u51c6\u9519\u8bef\u8f93\u51fa\uff0c\u6216error_log(\u4e0b\u9762\u7684\uff09\uff09 ; \u6b63\u5982\u4e0a\u9762\u8bf4\u660e\u7684\u90a3\u6837\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f60\u5728\u6700\u7ec8\u53d1\u5e03\u7684web\u7ad9\u70b9\u4ee5\u65e5\u5fd7\u8bb0\u5f55\u9519\u8bef ; \u53d6\u4ee3\u76f4\u63a5\u9519\u8bef\u8f93\u51fa\u3002 track_errors = Off ; \u4fdd\u5b58\u6700\u8fd1\u4e00\u4e2a \u9519\u8bef/\u8b66\u544a \u6d88\u606f\u4e8e\u53d8\u91cf $php_errormsg (boolean) ;error_prepend_string = \" \" ; \u4e8e\u9519\u8bef\u4fe1\u606f\u524d\u8f93\u51fa\u7684\u5b57\u7b26\u4e32 ;error_append_string = \" \" ; \u4e8e\u9519\u8bef\u4fe1\u606f\u540e\u8f93\u51fa\u7684\u5b57\u7b26\u4e32 ;error_log = filename ; \u8bb0\u5f55\u9519\u8bef\u65e5\u5fd7\u4e8e\u6307\u5b9a\u6587\u4ef6 ;error_log = syslog ; \u8bb0\u5f55\u9519\u8bef\u65e5\u5fd7\u4e8e\u7cfb\u7edf\u65e5\u5fd7 syslog (NT \u4e0b\u7684\u4e8b\u4ef6\u65e5\u5fd7, Windows 95\u4e0b\u65e0\u6548) warn_plus_overloading = Off ; \u5f53\u5c06\u2018 +\u2019 \u7528\u4e8e\u5b57\u7b26\u4e32\u65f6\u8b66\u544a ;;;;;;;;;;;;;;;;; ; Data Handling ; ;;;;;;;;;;;;;;;;; variables_order = \" EGPCS\" ; \u8fd9\u6761\u6307\u793a\u63cf\u8ff0\u4e86PHP \u8bb0\u5f55 ; GET, POST, Cookie, Environment and Built-in \u8fd9\u4e9b\u53d8\u91cf\u7684\u987a\u5e8f\u3002 ; \uff08\u4ee5 G, P, C, E & S \u4ee3\u8868\uff0c\u901a\u5e38\u4ee5 EGPCS \u6216 GPC \u7684\u65b9\u5f0f\u5f15\u7528\uff09\u3002 ; \u6309\u4ece\u5de6\u5230\u53f3\u8bb0\u5f55\uff0c\u65b0\u503c\u53d6\u4ee3\u65e7\u503c\u3002 register_globals = On ; \u662f\u5426\u5c06\u8fd9\u4e9b EGPCS \u53d8\u91cf\u6ce8\u518c\u4e3a\u5168\u5c40\u53d8\u91cf\u3002 ; \u82e5\u4f60\u4e0d\u60f3\u8ba9\u7528\u6237\u6570\u636e\u4e0d\u5728\u5168\u5c40\u8303\u56f4\u5185\u6df7\u4e71\u7684\u8bdd\uff0c\u4f60\u53ef\u80fd\u60f3\u5173\u95ed\u5b83\u3002 ; \u8fd9\u548c track_vars \u8fde\u8d77\u6765\u7528\u66f4\u6709\u610f\u4e49 \u2014 \u8fd9\u6837\u4f60\u53ef\u4ee5\u901a\u8fc7 ; $HTTP_*_VARS[] \u6570\u7ec4\u8bbf\u95ee\u6240\u6709\u7684GPC\u53d8\u91cf\u3002 register_argc_argv = On ; \u8fd9\u6761\u6307\u793a\u544a\u8bc9 PHP \u662f\u5426\u58f0\u660e argv\u548cargc \u53d8\u91cf ; \uff08\u6ce8\uff1a\u8fd9\u91ccargv\u4e3a\u6570\u7ec4,argc\u4e3a\u53d8\u91cf\u6570\uff09 ; \uff08\u5176\u4e2d\u5305\u542b\u7528GET\u65b9\u6cd5\u4f20\u6765\u7684\u6570\u636e\uff09\u3002 ; \u82e5\u4f60\u4e0d\u60f3\u7528\u8fd9\u4e9b\u53d8\u91cf\uff0c\u4f60\u5e94\u5f53\u5173\u6389\u5b83\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002 track_vars = On ; \u4f7f$HTTP_*_VARS[]\u6570\u7ec4\u6709\u6548\uff0c\u8fd9\u91cc*\u5728\u4f7f\u7528\u65f6\u7528 ; ENV, POST, GET, COOKIE or SERVER\u66ff\u6362 post_max_size = 8M ; PHP\u5c06\u63a5\u53d7\u7684POST\u6570\u636e\u6700\u5927\u5927\u5c0f\u3002 gpc_order = \" GPC\" ; \u8fd9\u6761\u6307\u793a\u88ab\u4eba\u53cd\u5bf9\u3002\u7528 variables_order \u4ee3\u66ff\u3002 ; Magic quotes magic_quotes_gpc = On ; \u5728\u8f93\u5165\u7684GET/POST/Cookie\u6570\u636e\u91cc\u4f7f\u7528\u9b54\u672f\u5f15\u7528 ; \uff08\u539f\u6587\u5c31\u8fd9\u6837\uff0c\u5475\u5475\uff0c\u6240\u8c13magic quotes \u5e94\u8be5\u662f\u6307\u7528\u8f6c\u4e49\u7b26\u52a0\u5728\u5f15\u7528\u6027\u7684\u63a7\u5236\u5b57\u7b26\u4e0a\uff0c\u5982 '....\uff09 magic_quotes_runtime = Off ; \u5bf9\u8fd0\u884c\u65f6\u4ea7\u751f\u7684\u6570\u636e\u4f7f\u7528\u9b54\u672f\u5f15\u7528\uff0c ; \u4f8b\u5982\uff1a\u7528SQL\u67e5\u8be2\u5f97\u5230\u7684\u6570\u636e\uff0c\u7528exec()\u51fd\u6570\u5f97\u5230\u7684\u6570\u636e\uff0c\u7b49\u7b49 magic_quotes_sybase = Off ; \u91c7\u7528 Sybase\u5f62\u5f0f\u7684\u9b54\u672f\u5f15\u7528\uff08\u7528 '' \u8131\u51fa ' \u800c\u4e0d\u7528 '\uff09 ; \u81ea\u52a8\u5728 PHP \u6587\u6863\u4e4b\u524d\u548c\u4e4b\u540e\u6dfb\u52a0\u6587\u4ef6 auto_prepend_file = auto_append_file = ; \u8c614.04b4\u4e00\u6837\uff0cPHP \u9ed8\u8ba4\u5730\u603b\u662f\u5728 \u201c Content-type:\u201d \u5934\u6807\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u7684\u7f16\u7801\u65b9\u5f0f\u3002 ; \u8ba9\u8f93\u51fa\u5b57\u7b26\u96c6\u5931\u6548\uff0c\u53ea\u8981\u8bbe\u7f6e\u4e3a\u7a7a\u3002 ; PHP \u7684\u5185\u5efa\u9ed8\u8ba4\u503c\u662f text/html default_mimetype = \" text/html\" ;default_charset = \" iso-8859-1\" ;;;;;;;;;;;;;;;;;;;;;;;;; ; Paths and Directories ; ;;;;;;;;;;;;;;;;;;;;;;;;; include_path = ; include \u8def\u5f84\u8bbe\u7f6e\uff0cUNIX: \" /path1:/path2\" Windows: \" \\path1;\\path2\" doc_root = ; php \u9875\u9762\u7684\u6839\u8def\u5f84\uff0c\u4ec5\u5728\u975e\u7a7a\u65f6\u6709\u6548 user_dir = ; \u544a\u77e5 php \u5728\u4f7f\u7528 /~username \u6253\u5f00\u811a\u672c\u65f6\u5230\u54ea\u4e2a\u76ee\u5f55\u4e0b\u53bb\u627e\uff0c\u4ec5\u5728\u975e\u7a7a\u65f6\u6709\u6548 ;upload_tmp_dir = ; \u5b58\u653e\u7528HTTP\u534f\u8bae\u4e0a\u8f7d\u7684\u6587\u4ef6\u7684\u4e34\u65f6\u76ee\u5f55\uff08\u5728\u6ca1\u6307\u5b9a\u65f6\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\uff09 upload_max_filesize = 2097152 ; \u6587\u4ef6\u4e0a\u8f7d\u9ed8\u8ba4\u5730\u9650\u5236\u4e3a2 Meg extension_dir = c:\\php\\ ; \u5b58\u653e\u53ef\u52a0\u8f7d\u7684\u6269\u5145\u5e93\uff08\u6a21\u5757\uff09\u7684\u76ee\u5f55 enable_dl = On ; \u662f\u5426\u4f7fdl()\u6709\u6548\u3002 ; \u5728\u591a\u7ebf\u7a0b\u7684\u670d\u52a1\u5668\u4e0a dl()\u51fd\u6570*\u4e0d\u80fd*\u5f88\u597d\u5730\u5de5\u4f5c\uff0c ; \u4f8b\u5982IIS or Zeus\uff0c\u5e76\u5728\u5176\u4e0a\u9ed8\u8ba4\u4e3a\u7981\u6b62 ;;;;;;;;;;;;;;;; ; File Uploads ; ;;;;;;;;;;;;;;;; file_uploads = On ; \u662f\u5426\u5141\u8bb8HTTP\u65b9\u5f0f\u6587\u4ef6\u4e0a\u8f7d ;upload_tmp_dir = ; \u7528\u4e8eHTTP\u4e0a\u8f7d\u7684\u6587\u4ef6\u7684\u4e34\u65f6\u76ee\u5f55\uff08\u672a\u6307\u5b9a\u5219\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\uff09 upload_max_filesize = 2M ; \u4e0a\u8f7d\u6587\u4ef6\u7684\u6700\u5927\u8bb8\u53ef\u5927\u5c0f ; Fopen wrappers ; ;;;;;;;;;;;;;;;;;; allow_url_fopen = On ; \u662f\u5426\u5141\u8bb8\u628aURLs\u5f53\u4f5chttp:.. \u6216\u628a\u6587\u4ef6\u5f53\u4f5cftp:... ;;;;;;;;;;;;;;;;;;;;;; ; \u52a8\u6001\u6269\u5c55 ; ; Dynamic Extensions ; ;;;;;;;;;;;;;;;;;;;;;; ; \u82e5\u4f60\u5e0c\u671b\u4e00\u4e2a\u6269\u5c55\u5e93\u81ea\u52a8\u52a0\u8f7d\uff0c\u7528\u4e0b\u9762\u7684\u8bed\u6cd5\uff1a ; extension=modulename.extension ; \u4f8b\u5982\uff0c\u5728windows\u4e0a\uff0c ; extension=msql.dll ; or \u5728UNIX\u4e0b, ; extension=msql.so ; \u6ce8\u610f\uff0c\u8fd9\u53ea\u5e94\u5f53\u662f\u6a21\u5757\u7684\u540d\u5b57\uff0c\u4e0d\u9700\u8981\u76ee\u5f55\u4fe1\u606f\u653e\u5728\u91cc\u9762\u3002 ; \u7528\u4e0a\u9762\u7684 extension_dir \u6307\u793a\u6307\u5b9a\u6269\u5c55\u5e93\u7684\u4f4d\u7f6e\u3002 ;Windows \u6269\u5c55 ;extension=php_nsmail.dll extension = php_calendar.dll ;extension=php_dbase.dll ;extension=php_filepro.dll extension = php_gd.dll ;extension=php_dbm.dll ;extension=php_mssql.dll ;extension=php_zlib.dll ;extension=php_filepro.dll ;extension=php_imap4r2.dll ;extension=php_ldap.dll ;extension=php_crypt.dll ;extension=php_msql2.dll ;extension=php_odbc.dll ; \u6ce8\u610f\uff0c MySQL\u7684\u652f\u6301\u73b0\u5728\u662f\u5185\u5efa\u7684\uff0c\u56e0\u6b64\uff0c\u4e0d\u9700\u8981\u7528\u5b83\u7684dll ;;;;;;;;;;;;;;;;;;; ; \u6a21\u5757\u8bbe\u5b9a ; ; Module Settings ; ;;;;;;;;;;;;;;;;;;; [Syslog] define_syslog_variables = Off ; \u662f\u5426\u5b9a\u4e49\u5404\u79cd\u7684\u7cfb\u7edf\u65e5\u5fd7\u53d8\u91cf ; \u5982\uff1a$LOG_PID, $LOG_CRON, \u7b49\u7b49\u3002 ; \u5173\u6389\u5b83\u662f\u4e2a\u63d0\u9ad8\u6548\u7387\u7684\u597d\u4e3b\u610f\u3002 ; \u8fd0\u884c\u65f6\uff0c\u4f60\u53ef\u4ee5\u8c03\u7528\u51fd\u6570define_syslog_variables()\uff0c\u6765\u5b9a\u4e49\u8fd9\u4e9b\u53d8\u91cf [mail function] SMTP = localhost ;\u4ec5\u7528\u4e8ewin32\u7cfb\u7edf sendmail_from = me@localhost.com ;\u4ec5\u7528\u4e8ewin32\u7cfb\u7edf ;sendmail_path = ;\u4ec5\u7528\u4e8eunix, \u4e5f\u53ef\u652f\u6301\u53c2\u6570\uff08\u9ed8\u8ba4\u7684\u662f'sendmail -t -i'\uff09 [Debugger] debugger.host = localhost debugger.port = 7869 debugger.enabled = False [Logging] ; \u8fd9\u4e9b\u914d\u7f6e\u6307\u793a\u7528\u4e8e\u793a\u4f8b\u7684\u65e5\u5fd7\u8bb0\u5f55\u673a\u5236\u3002 ; \u770b examples/README.logging \u4ee5\u5f97\u5230\u66f4\u591a\u7684\u89e3\u91ca ;logging.method = db ;logging.directory = /path/to/log/directory [Java] ;java.class.path = .\\php_java.jar ;java.home = c:\\jdk ;java.library = c:\\jdk\\jre\\bin\\hotspot\\jvm.dll ;java.library.path = .\\ [SQL] sql.safe_mode = Off [ODBC] ;uodbc.default_db = Not yet implemented ;uodbc.default_user = Not yet implemented ;uodbc.default_pw = Not yet implemented uodbc.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 uodbc.check_persistent = On ; \u5728\u91cd\u7528\u524d\u68c0\u67e5\u8fde\u63a5\u662f\u5426\u8fd8\u53ef\u7528 uodbc.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 uodbc.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 uodbc.defaultlrl = 4096 ; \u63a7\u5236 LONG \u7c7b\u578b\u7684\u5b57\u6bb5\u3002\u8fd4\u56de\u53d8\u91cf\u7684\u5b57\u8282\u6570\uff0c0 \u4ee3\u8868\u901a\u8fc7\uff08\uff1f\uff090 means passthru uodbc.defaultbinmode = 1 ; \u63a7\u5236 \u4e8c\u8fdb\u5236\u6570\u636e\u30020 \u4ee3\u8868?????Handling of binary data. 0 means passthru, 1 return as is, 2 convert to char ; \u89c1\u6709\u5173 odbc_binmode \u548c odbc_longreadlen \u7684\u6587\u6863\u4ee5\u5f97\u5230 uodbc.defaultlrl \u548c uodbc.defaultbinmode \u7684\u89e3\u91ca\u3002 [MySQL] mysql.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 mysql.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 mysql.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 mysql.default_port = ; mysql_connect() \u4f7f\u7528\u7684\u9ed8\u8ba4\u7aef\u53e3\uff0c\u5982\u4e0d\u8bbe\u7f6e\uff0cmysql_connect() ; \u5c06\u4f7f\u7528\u53d8\u91cf $MYSQL_TCP_PORT\uff0c\u6216\u5728/etc/services \u4e0b\u7684mysql-tcp \u6761\u76ee(unix)\uff0c ; \u6216\u5728\u7f16\u8bd1\u662f\u5b9a\u4e49\u7684 MYSQL_PORT(\u6309\u8fd9\u6837\u7684\u987a\u5e8f) ; Win32\u73af\u5883\uff0c\u5c06\u4ec5\u68c0\u67e5MYSQL_PORT\u3002 mysql.default_socket = ; \u7528\u4e8e\u672c\u5730 MySql \u8fde\u63a5\u7684\u9ed8\u8ba4\u7684\u5957\u63a5\u5b57\u540d\u3002\u4e3a\u7a7a\uff0c\u4f7f\u7528 MYSQL \u5185\u5efa\u503c mysql.default_host = ; mysql_connect() \u9ed8\u8ba4\u4f7f\u7528\u7684\u4e3b\u673a\uff08\u5b89\u5168\u6a21\u5f0f\u4e0b\u65e0\u6548\uff09 mysql.default_user = ; mysql_connect() \u9ed8\u8ba4\u4f7f\u7528\u7684\u7528\u6237\u540d\uff08\u5b89\u5168\u6a21\u5f0f\u4e0b\u65e0\u6548\uff09 mysql.default_password = ; mysql_connect() \u9ed8\u8ba4\u4f7f\u7528\u7684\u5bc6\u7801\uff08\u5b89\u5168\u6a21\u5f0f\u4e0b\u65e0\u6548\uff09 ; \u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e0b\u4fdd\u5b58\u5bc6\u7801\u901a\u5e38\u662f\u4e00\u4e2a*\u574f*\u4e3b\u610f ; *\u4efb\u4f55*\u53ef\u4ee5\u4f7f\u7528PHP\u8bbf\u95ee\u7684\u7528\u6237\u53ef\u4ee5\u8fd0\u884c ; 'echo cfg_get_var(\" mysql.default_password\" )'\u6765\u663e\u793a\u90a3\u4e2a\u5bc6\u7801! ; \u800c\u4e14\u5f53\u7136\u5730\uff0c\u4efb\u4f55\u6709\u8bfb\u8be5\u6587\u4ef6\u6743\u529b\u7684\u7528\u6237\u4e5f\u80fd\u770b\u5230\u90a3\u4e2a\u5bc6\u7801\u3002 [mSQL] msql.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 msql.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 msql.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 [PostgresSQL] pgsql.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 pgsql.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 pgsql.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 [Sybase] sybase.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 sybase.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 sybase.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 ;sybase.interface_file = \" /usr/sybase/interfaces\" sybase.min_error_severity = 10 ; \u663e\u793a\u7684\u9519\u8bef\u7684\u6700\u4f4e\u4e25\u91cd\u6027 sybase.min_message_severity = 10 ; \u663e\u793a\u7684\u6d88\u606f\u7684\u6700\u4f4e\u91cd\u8981\u6027 sybase.compatability_mode = Off ; \u4e0e\u65e7\u7248\u7684PHP 3.0 \u517c\u5bb9\u7684\u6a21\u5f0f\u3002\u82e5\u6253\u5f00\uff0c\u8fd9\u5c06\u5bfc\u81f4 PHP \u81ea\u52a8\u5730 ; \u628a\u6839\u636e\u7ed3\u679c\u7684 Sybase \u7c7b\u578b\u8d4b\u4e88\u5b83\u4eec\uff0c ; \u800c\u4e0d\u662f\u628a\u5b83\u4eec\u5168\u5f53\u6210\u5b57\u7b26\u4e32\u3002 ; \u8fd9\u4e2a\u517c\u5bb9\u6a21\u5f0f\u4e0d\u4f1a\u6c38\u8fdc\u7559\u7740\uff0c ; \u56e0\u6b64\uff0c\u5c06\u4f60\u7684\u4ee3\u7801\u8fdb\u884c\u9700\u8981\u7684\u4fee\u6539\uff0c ; \u5e76\u5c06\u8be5\u9879\u5173\u95ed\u3002 [Sybase-CT] sybct.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 sybct.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 sybct.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 sybct.min_server_severity = 10 ; \u663e\u793a\u7684\u9519\u8bef\u7684\u6700\u4f4e\u4e25\u91cd\u6027 sybct.min_client_severity = 10 ; \u663e\u793a\u7684\u6d88\u606f\u7684\u6700\u4f4e\u91cd\u8981\u6027 [bcmath] bcmath.scale = 0 ; \u7528\u4e8e\u6240\u6709bcmath\u51fd\u6570\u768410\u5341\u8fdb\u5236\u6570\u6570\u5b57\u7684\u4e2a\u6570number of decimal digits for all bcmath functions [browscap] ;browscap = extra/browscap.ini browscap = C:\\WIN\\SYSTEM\\inetsrv\\browscap.ini [Informix] ifx.default_host = ; ifx_connect() \u9ed8\u8ba4\u4f7f\u7528\u7684\u4e3b\u673a\uff08\u5b89\u5168\u6a21\u5f0f\u4e0b\u65e0\u6548\uff09 ifx.default_user = ; ifx_connect() \u9ed8\u8ba4\u4f7f\u7528\u7684\u7528\u6237\u540d\uff08\u5b89\u5168\u6a21\u5f0f\u4e0b\u65e0\u6548\uff09 ifx.default_password = ; ifx_connect() \u9ed8\u8ba4\u4f7f\u7528\u7684\u5bc6\u7801\uff08\u5b89\u5168\u6a21\u5f0f\u4e0b\u65e0\u6548\uff09 ifx.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 ifx.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 ifx.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 ifx.textasvarchar = 0 ; \u82e5\u6253\u5f00\uff0cselect \u72b6\u6001\u7b26\u8fd4\u56de\u4e00\u4e2a \u2018 text blob\u2019 \u5b57\u6bb5\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5b83\u7684id ifx.byteasvarchar = 0 ; \u82e5\u6253\u5f00\uff0cselect \u72b6\u6001\u7b26\u8fd4\u56de\u4e00\u4e2a \u2018 byte blob\u2019 \u5b57\u6bb5\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5b83\u7684id ifx.charasvarchar = 0 ; \u8ffd\u8e2a\u4ece\u56fa\u5b9a\u957f\u5ea6\u7684\u5b57\u7b26\u5217\u91cc\u5265\u79bb\u7684\u7a7a\u683c\u3002 ; \u53ef\u80fd\u5bf9 Informix SE \u7528\u6237\u6709\u6548\u3002 ifx.blobinfile = 0 ; \u82e5\u6253\u5f00\uff0ctext\u548cbyte blobs \u7684\u5185\u5bb9\u88ab\u5bfc\u51fa\u5230\u4e00\u4e2a\u6587\u4ef6 ; \u800c\u4e0d\u662f\u4fdd\u5b58\u5230\u5185\u5b58\u3002 ifx.nullformat = 0 ; NULL\uff08\u7a7a\uff09\u88ab\u4f5c\u4e3a\u7a7a\u5b57\u6bb5\u8fd4\u56de\uff0c\u9664\u975e\uff0c\u8fd9\u91cc\u88ab\u8bbe\u4e3a1\u3002 ; \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff08\u4e3a1\uff09\uff0cNULL\u4f5c\u4e3a\u5b57\u4e32NULL\u8fd4\u56de\u3002 [Session] session.save_handler = files ; \u7528\u4e8e\u4fdd\u5b58/\u53d6\u56de\u6570\u636e\u7684\u63a7\u5236\u65b9\u5f0f session.save_path = C:\\win\\temp ; \u5728 save_handler \u8bbe\u4e3a\u6587\u4ef6\u65f6\u4f20\u7ed9\u63a7\u5236\u5668\u7684\u53c2\u6570\uff0c ; \u8fd9\u662f\u6570\u636e\u6587\u4ef6\u5c06\u4fdd\u5b58\u7684\u8def\u5f84\u3002 session.use_cookies = 1 ; \u662f\u5426\u4f7f\u7528cookies session.name = PHPSESSID ; \u7528\u5728cookie\u91cc\u7684session\u7684\u540d\u5b57 session.auto_start = 0 ; \u5728\u8bf7\u6c42\u542f\u52a8\u65f6\u521d\u59cb\u5316session session.cookie_lifetime = 0 ; \u4e3a\u6309\u79d2\u8bb0\u7684cookie\u7684\u4fdd\u5b58\u65f6\u95f4\uff0c ; \u6216\u4e3a0\u65f6\uff0c\u76f4\u5230\u6d4f\u89c8\u5668\u88ab\u91cd\u542f session.cookie_path = / ; cookie\u7684\u6709\u6548\u8def\u5f84 session.cookie_domain = ; cookie\u7684\u6709\u6548\u57df session.serialize_handler = php ; \u7528\u4e8e\u8fde\u63a5\u6570\u636e\u7684\u63a7\u5236\u5668 ; php\u662f PHP \u7684\u6807\u51c6\u63a7\u5236\u5668\u3002 session.gc_probability = 1 ; \u6309\u767e\u5206\u6bd4\u7684'garbage collection\uff08\u788e\u7247\u6574\u7406\uff09'\u8fdb\u7a0b ; \u5728\u6bcf\u6b21 session \u521d\u59cb\u5316\u7684\u65f6\u5019\u5f00\u59cb\u7684\u53ef\u80fd\u6027\u3002 session.gc_maxlifetime = 1440 ; \u5728\u8fd9\u91cc\u6570\u5b57\u6240\u6307\u7684\u79d2\u6570\u540e\uff0c\u4fdd\u5b58\u7684\u6570\u636e\u5c06\u88ab\u89c6\u4e3a ; '\u788e\u7247(garbage)'\u5e76\u7531gc \u8fdb\u7a0b\u6e05\u7406\u6389\u3002 session.referer_check = ; \u68c0\u67e5 HTTP\u5f15\u7528\u4ee5\u4f7f\u989d\u5916\u5305\u542b\u4e8eURLs\u4e2d\u7684ids\u65e0\u6548 session.entropy_length = 0 ; \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u591a\u5c11\u5b57\u8282 session.entropy_file = ; \u6307\u5b9a\u8fd9\u91cc\u5efa\u7acb session id ; session.entropy_length = 16 ; session.entropy_file = /dev/urandom session.cache_limiter = nocache ; \u8bbe\u4e3a{nocache,private,public},\u4ee5\u51b3\u5b9a HTTP \u7684 ; \u7f13\u5b58\u95ee\u9898 session.cache_expire = 180 ; \u6587\u6863\u5728 n \u5206\u949f\u540e\u8fc7\u65f6 session.use_trans_sid = 1 ; \u4f7f\u7528\u8fc7\u6e21\u6027\u7684 sid \u652f\u6301\uff0c\u82e5\u7f16\u8bd1\u65f6\u8bb8\u53ef\u4e86 ; --enable-trans-sid url_rewriter.tags = \" a=href,area=href,frame=src,input=src,form=fakeentry\" [MSSQL] ;extension=php_mssql.dll mssql.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 mssql.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 mssql.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 mssql.min_error_severity = 10 ; \u663e\u793a\u7684\u9519\u8bef\u7684\u6700\u4f4e\u4e25\u91cd\u6027 mssql.min_message_severity = 10 ; \u663e\u793a\u7684\u6d88\u606f\u7684\u6700\u4f4e\u91cd\u8981\u6027 mssql.compatability_mode = Off ; \u4e0e\u65e7\u7248\u7684PHP 3.0 \u517c\u5bb9\u7684\u6a21\u5f0f\u3002 [Assertion] ; \uff1f\uff1f\uff1f\uff1f\uff1f ;assert.active = On ; \uff1fassert(expr); active by default ;assert.warning = On ; issue a PHP warning for each failed assertion. ;assert.bail = Off ; don't bail out by default. ;assert.callback = 0 ; user-function to be called if an assertion fails. ;assert.quiet_eval = 0 ; eval the expression with current error_reporting(). set to true if you want error_reporting(0) around the eval(). [Ingres II] ii.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 ii.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 ii.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 ii.default_database = ; \u9ed8\u8ba4 database (format : [node_id::]dbname[/srv_class] ii.default_user = ; \u9ed8\u8ba4 user ii.default_password = ; \u9ed8\u8ba4 password [Verisign Payflow Pro] pfpro.defaulthost = \" test.signio.com\" ; \u9ed8\u8ba4\u7684 Signio \u670d\u52a1\u5668 pfpro.defaultport = 443 ; \u8fde\u63a5\u7684\u9ed8\u8ba4\u7aef\u53e3 pfpro.defaulttimeout = 30 ; \u6309\u79d2\u8ba1\u7684\u9ed8\u8ba4\u8d85\u65f6\u65f6\u95f4 ; pfpro.proxyaddress = ; \u9ed8\u8ba4\u7684\u4ee3\u7406\u7684 IP \u5730\u5740\uff08\u5982\u679c\u9700\u8981\uff09 ; pfpro.proxyport = ; \u9ed8\u8ba4\u7684\u4ee3\u7406\u7684\u7aef\u53e3 ; pfpro.proxylogon = ; \u9ed8\u8ba4\u7684\u4ee3\u7406\u7684\u767b\u5f55\uff08logon \u7528\u6237\u540d\uff09 ; pfpro.proxypassword = ; \u9ed8\u8ba4\u7684\u4ee3\u7406\u7684\u5bc6\u7801 [Sockets] sockets.use_system_read = On ; \u4f7f\u7528\u7cfb\u7edf\u7684read() \u51fd\u6570\u66ff\u4ee3 php_read()\u5c01\u88c5 ; Local Variables: \uff08\u5c40\u90e8\u53d8\u91cf\uff09 ; tab-width: 4 ; End nginx/fastcgi.conf\u8be6\u89e3 \u00b6 \u4fdd\u5b58factcgi\u7684\u73af\u5883\u53d8\u91cf SCRIPT_FILENAME \u811a\u672c\u6587\u4ef6\u8def\u5f84 \u5982/ usr/local/nginx/html/index.php QUERY_STRING \uff1f\u540e\u9762\u7684\u53c2\u6570 \u5982a = 2&b=2 REQUEST_METHOD \u8bf7\u6c42\u65b9\u5f0f \u5982POST CONTENT_TYPE \u8bf7\u6c42\u5185\u5bb9\u7684\u7c7b\u578b \u5982application/x-www-form-urlencoded CONTENT_LENGTH \u8bf7\u6c42\u5185\u5bb9\u7684\u957f\u5ea6 \u59828 SCRIPT_NAME \u811a\u672c\u6587\u4ef6\u540d \u5982/index.php REQUEST_URI \u8bf7\u6c42URI \u5982/index. php?a = 1&b=1 DOCUMENT_URI\u6587\u6863URI \u5982/index.php DOCUMENT_ROOT \u6587\u6863\u6839\u76ee\u5f55 \u5982/usr/local/nginx/html SERVER_PROTOCOL HTTP\u534f\u8bae\u7248\u672c \u5982HTTP/1.1 REQUEST_SCHEME \u8bf7\u6c42\u534f\u8bae\uff08http\uff0chttps\uff09\u5982http fastcgi_param HTTPS $https if_not_empty; GATEWAY_INTERFACE \u7f51\u5173\u63a5\u53e3 \u5982CGI/1.1 SERVER_SOFTWARE \u670d\u52a1\u5668\u8f6f\u4ef6\u548c\u7248\u672c \u5982nginx/1.10.1 REMOTE_ADDR \u6765\u6e90\u5730\u5740 \u5982192.168.78.1 REMOTE_PORT \u6765\u6e90\u7aef\u53e3 \u598260100 SERVER_ADDR \u670d\u52a1\u5668\u5730\u5740 \u5982192.168.78.3 SERVER_PORT \u670d\u52a1\u5668\u7aef\u53e3 \u598280 SERVER_NAME \u670d\u52a1\u5668\u540d\u79f0 \u5982ng.test # PHP only, required if PHP was built with --enable-force-cgi-redirect fastcgi_param REDIRECT_STATUS 200; Nginx+Apache\u73af\u5883 \u00b6 \u5b89\u88c5Apache Apache\u7684\u57fa\u672c\u914d\u7f6e Apache\u4e0ePHP\u6574\u5408 \u524d\u63d0\u662fPHP\u5728\u7f16\u8bd1\u65f6\u52a0\u5165\u4e86--with-apxs2=/usr/local/apache2/bin/apxs # Apache\u652f\u6301 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6httpd.conf setHandler application/x-httpd-php # .php\u4ea4\u7ed9\u6a21\u5757 <\\FileMatch> DirectoryIndex index.html index.php # \u52a0\u5165\u7d22\u5f15\u9875 <\\IfModule> Nginx+Apache\u52a8\u9759\u5206\u79bb \u7cfb\u7edf\u6587\u4ef6/etc/host\u52a0\u5165\u4ee5\u4e0b\u6761\u76ee 127.0.0.1 local1.com \u914d\u7f6e\u6587\u4ef6httpd.conf Listen 81 # \u4fee\u6539\u76d1\u542c\u7aef\u53e3 \u914d\u7f6e\u6587\u4ef6httpd-vhosts.conf DocumentRoot \"/var/www/apache2\" ServeraName local1.com Require all granted # \u914d\u7f6e\u8bbf\u95ee\u6743\u9650\uff0c\u5426\u5219\u65e0\u6743\u8bbf\u95ee \u914d\u7f6e\u6587\u4ef6nginx.conf server { listen 80; server_name localhost; root /var/www/apache2; index index.html index.htm index.php location ~ .php$ { proxy_pass http://local1.com:81 ; # \u6307\u5411\u865a\u62df\u4e3b\u673a proxy_set_header Host $host; } } Nginx+Tomcat\u73af\u5883 \u00b6 \u5b89\u88c5Tomcat \u4e0b\u8f7dJRE\uff08\u6700\u597d\u662fJDK\uff0cdaemon\u8fd0\u884c\u7f16\u8bd1\u9700\u8981\uff09\u548cTomcat,\u89e3\u538btar -zxvf\u540e\u76f4\u63a5\u79fb\u52a8\u5230/usr/local\u4e0b Tomcat\u6dfb\u52a0\u5230\u7cfb\u7edf\u670d\u52a1 tomcat 1.\u4ee5\u975eroot\u7528\u6237\u8fd0\u884c\uff08\u8fd9\u79cd\u65b9\u5f0f\u53ea\u80fd\u4ee5\u975edaemon\u8fd0\u884c\uff09 $ export JAVA_HOME=/usr/local/jre $ sudo -E -u tomcat /usr/local/tomcat/bin/catalina.sh 2.jsvc\u89e3\u51b3\u65b9\u6848 \u8981\u5c06tomcat\u4f5c\u4e3alinux\u7684daemon\u8fd0\u884c\uff0c\u9700\u8981commons-daemon\u5de5\u7a0b\u7684jsvc\u5de5\u5177\uff0ctomcat\u7684bin\u76ee\u5f55\u91cc\u5df2\u7ecf\u81ea\u5e26\u4e86\u8fd9\u4e2a\u5de5\u5177\u7684\u6e90\u7801\u3002 $ cd /usr/local/tomcat/bin/ $ tar -zxvf commons-daemon-native.tar.gz $ cd commons-daemon-1.1.0-native-src/unix/ $ ./configure --with-java=/usr/local/jdk/ $ make # \u751f\u6210jsvc\u53ef\u6267\u884c\u6587\u4ef6 $ cp jsvc ../../ $ cd /usr/local/tomcat/bin/ $ cp daemon.sh /etc/init.d/tomcat # \u5c06\u6587\u4ef6\u590d\u5236\u5230init.d \u4fee\u6539tomcat +# chkconfig: 2345 25 85 #\u6dfb\u52a0\u5230\u5934\u90e8\uff0c\u8fd9\u662f\u670d\u52a1\u914d\u7f6e\u4fe1\u606f +# description: Tomcat daemon project +JAVA_HOME=/opt/jdk #\u914d\u7f6e\u73af\u5883\u53d8\u91cf +CATALINA_HOME=/opt/tomcat ... test \".$TOMCAT_USER\" = . && TOMCAT_USER=daemon #\u5c06tomcat\u7528\u6237\u6539\u4e3adaemon \u66f4\u65b0systemctl\u8868 $ systemctl daemon-reload \u6dfb\u52a0\u7cfb\u7edf\u670d\u52a1 $ chkconfig --add tomcat \u914d\u7f6eNginx+Tomcat\u52a8\u9759\u5206\u79bb nginx.conf\u4e2d\u6dfb\u52a0\u865a\u62df\u4e3b\u673a server { listen 80; server_name www.xx.test; root /usr/local/tomcat/webapps/ROOT; index index.html index.htm index.jsp index.do; location ~ / (WEB-INF|META-INF){ deny all } location ~ \\.(jsp|do)${ proxy_pass http://127.0.0.1:8080; proxy_set_header X-Real-IP $remote_addr; } location ~^/(docs|example)(/.*) * ${ root /usr/local/tomcat/webapps; } } OpenResty\u73af\u5883 \u00b6 \u5b89\u88c5OpenResty \u5b89\u88c5\u4f9d\u8d56 $ yum -y install perl pcre_devel openssl-devel \u4e0b\u8f7d\u5b89\u88c5OpenResty $ cd /usr/local/src/ $ curl -O https://openresty.org/download/openresty-1.13.6.2.tar.gz $ tar -zxvf openresty-1.13.6.2.tar.gz $ cd cd openresty-1.13.6.2 $ ./configure $ gmake && gmake install \u5b89\u88c5\u76ee\u5f55\u4e2dbin\u6587\u4ef6\u5939\u4e0bopenresty\u6587\u4ef6\u5b9e\u9645\u4e0a\u662f\u8be5\u8f6f\u4ef6\u6574\u5408\u540eopenrestyd\u9879\u76ee\u4e2dnginx\u6587\u4ef6\u7684\u8f6f\u8fde\u63a5\uff0c\u6240\u4ee5\u5c06\u539f\u7248nginx\u6587\u4ef6\u66ff\u6362\u6210openresty\u4e2d\u7684nginx\u7684\u8f6f\u8fde\u63a5\u5373\u53ef $ mv /usr/local/nginx/nginx /usr/local/nginx/nginx.bak # \u5907\u4efdnginx $ cd /usr/local/openresty/nginx/sbin $ ln -s pwd /nginx /usr/local/nginx/nginx # \u5efa\u7acb\u8f6f\u8fde\u63a5","title":"Web\u670d\u52a1\u5668\u642d\u5efa"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/02-Web\u670d\u52a1\u5668\u642d\u5efa/#web","text":"","title":"Web\u670d\u52a1\u5668\u642d\u5efa"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/02-Web\u670d\u52a1\u5668\u642d\u5efa/#nginxphp","text":"","title":"Nginx+PHP\u73af\u5883"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/02-Web\u670d\u52a1\u5668\u642d\u5efa/#php","text":"\u5b89\u88c5\u4f9d\u8d56 $ cd /usr/local/src $ yum -y install libxml2-devel openssl-devel curl-devel libjpeg-devel libpng-devel freetype-devel \u7f16\u8bd1\u5b89\u88c5libmcrypt $ curl -O https://jaist.dl.sourceforge.net/project/mcrypt/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz $ tar -zxvf libmcrypt-2.5.8.tar.gz $ cd libmcrypt-2.5.8 $ ./configure $ make && make install \u7f16\u8bd1\u5b89\u88c5cmake\uff08libzip\u8981\u6c42\u5927\u4e8e3.0\u7248\u672c\uff0cyum\u4e0a\u7684\u7248\u672c\u8fc7\u4f4e\uff0c\u6e90\u7801\u5b89\u88c5\uff09 $ cd /usr/local/src $ wget https://github.com/Kitware/CMake/releases/download/v3.13.3/cmake-3.13.3.tar.gz $ tar -zxvf cmake-3.13.3.tar.gz $ cd cmake-3.13.3 $ ./bootstrap $ gmake $ make install \u5b89\u88c5libzip\uff08PHP\u8981\u6c42\u5927\u4e8e0.11\u7248\u672c\uff0cyum\u4e0a\u7684\u7248\u672c\u8fc7\u4f4e\uff0c\u6e90\u7801\u5b89\u88c5\uff09 $ cd /usr/local/src $ curl -O https://libzip.org/download/libzip-1.5.1.tar.gz $ tar -zxvf libzip-1.5.1.tar.gz $ cd libzip-1.5.1 $ ./configure $ mkdir build && cd build && cmake .. && make && make install \u5b89\u88c5PHP $ cd /usr/local/src $ curl -O http://cn.php.net/distributions/php-7.3.1.tar.gz $ tar -zxvf php-7.3.1.tar.gz $ cd php-7.3.1 $ ./configure --prefix=/usr/local/php --with-apxs2=/usr/local/apache2/bin/apxs --enable-fpm --with-zlib --enable-zip --enable-mbstring --with-mcrypt --with-mysql --with-mysqli --with-pdo-mysql --with-gd --with-jpeg-dir --with-png-dir --with-freetype-dir --with-curl --with-openssl --with-mhash --enable-bcmath --enable-opcache \u914d\u7f6e\u8bf4\u660e --prefix=/usr/local/php # \u5b89\u88c5\u76ee\u5f55 --with-apxs2=/usr/local/apache2/bin/apxs # Apache\u652f\u6301 --enable-fpm # FPM\uff0cFastCGI\u7ba1\u7406 --with-zlib # \u652f\u6301\u6570\u636e\u538b\u7f29\u548c\u89e3\u538b --enable-zip # ZIP --enable-mbstring # \u591a\u5b57\u8282\u5b57\u7b26\u4e32\u5904\u7406 --with-mcrypt # mcrypt\u52a0\u5bc6\uff08\u4f9d\u8d56libmcrypt\uff09PHP7.2\u5f00\u59cb\u4e0d\u518d\u652f\u6301--with-mysql --with-mysql # MySQL\u6570\u636e\u5e93\u8bbf\u95ee\u652f\u6301\uff0cPHP7\u5f00\u59cb\u4e0d\u518d\u652f\u6301--with-mysql --with-mysqli # \u589e\u5f3a\u7248MySQL\u6570\u636e\u5e93\u8bbf\u95ee\u652f\u6301 --with-pdo-mysql # \u57fa\u4e8ePHP Data Object\u7684MySQL\u6570\u636e\u5e93\u8bbf\u95ee\u652f\u6301 --with-gd # GD\u5e93\uff0c\u7528\u4e8ePHP\u56fe\u50cf\u5904\u7406 --with-jpeg-dir # JPEG\u56fe\u50cf\u5904\u7406\uff08\u4f9d\u8d56libjpeg-devel\uff09 --with-png-dir # PNG\u56fe\u50cf\u5904\u7406\uff08\u4f9d\u8d56libpng-devel\uff09 --with-freetype-dir # FreeType\u5b57\u4f53\u56fe\u50cf\u5904\u7406\u5e93\uff08\u4f9d\u8d56freetype-devel\uff09 --with-curl # curl\u652f\u6301\uff08\u4f9d\u8d56curl-devel\uff09 --with-openssl # OpenSSL\uff08\u4f9d\u8d56openssl-devel\uff09 --with-mhash # mhash\u52a0\u5bc6\u652f\u6301 --enable-bcmath # \u5f00\u542f\u7cbe\u51c6\u8ba1\u7b97\u529f\u80fd --enable-opcache # opencache\uff0cPHP\u4ee3\u7801\u4f18\u5316\u5668 $ make && make install ERROR \u7f16\u8bd1php\u62a5\u9519configure: error: off_t undefined; check your library configuration echo '/usr/local/lib64 /usr/local/lib /usr/lib /usr/lib64'>>/etc/ld.so.conf&&ldconfig -v","title":"\u7f16\u8bd1\u5b89\u88c5PHP"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/02-Web\u670d\u52a1\u5668\u642d\u5efa/#phpnginx","text":"","title":"PHP\u4e0eNginx\u6574\u5408"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/02-Web\u670d\u52a1\u5668\u642d\u5efa/#php-fpmconf","text":"pid = /usr/local/var/run/php-fpm.pid #pid\u8bbe\u7f6e\uff0c\u4e00\u5b9a\u8981\u5f00\u542f,\u4e0a\u9762\u662fMac\u5e73\u53f0\u7684\u3002\u9ed8\u8ba4\u5728php\u5b89\u88c5\u76ee\u5f55\u4e2d\u7684var/run/php-fpm.pid\u3002 #\u6bd4\u5982centos\u7684\u5728: /usr/local/php/var/run/php-fpm.pid error_log = /usr/local/var/log/php-fpm.log #\u9519\u8bef\u65e5\u5fd7\uff0c\u4e0a\u9762\u662fMac\u5e73\u53f0\u7684\uff0c\u9ed8\u8ba4\u5728php\u5b89\u88c5\u76ee\u5f55\u4e2d\u7684var/log/php-fpm.log\uff0c #\u6bd4\u5982centos\u7684\u5728: /usr/local/php/var/log/php-fpm.log log_level = notice #\u9519\u8bef\u7ea7\u522b. \u4e0a\u9762\u7684php-fpm.log\u7eaa\u5f55\u7684\u767b\u8bb0\u3002\u53ef\u7528\u7ea7\u522b\u4e3a: alert\uff08\u5fc5\u987b\u7acb\u5373\u5904\u7406\uff09, # error\uff08\u9519\u8bef\u60c5\u51b5\uff09, warning\uff08\u8b66\u544a\u60c5\u51b5\uff09, notice\uff08\u4e00\u822c\u91cd\u8981\u4fe1\u606f\uff09, debug\uff08\u8c03\u8bd5\u4fe1\u606f\uff09. \u9ed8\u8ba4: notice. emergency_restart_threshold = 60 emergency_restart_interval = 60s #\u8868\u793a\u5728emergency_restart_interval\u6240\u8bbe\u503c\u5185\u51fa\u73b0SIGSEGV #\u6216\u8005SIGBUS\u9519\u8bef\u7684php-cgi\u8fdb\u7a0b\u6570\u5982\u679c\u8d85\u8fc7 emergency_restart_threshold\u4e2a\uff0c #php-fpm\u5c31\u4f1a\u4f18\u96c5\u91cd\u542f\u3002\u8fd9\u4e24\u4e2a\u9009\u9879\u4e00\u822c\u4fdd\u6301\u9ed8\u8ba4\u503c\u30020 \u8868\u793a '\u5173\u95ed\u8be5\u529f\u80fd'. \u9ed8\u8ba4\u503c: 0 (\u5173\u95ed). process_control_timeout = 0 #\u8bbe\u7f6e\u5b50\u8fdb\u7a0b\u63a5\u53d7\u4e3b\u8fdb\u7a0b\u590d\u7528\u4fe1\u53f7\u7684\u8d85\u65f6\u65f6\u95f4. #\u53ef\u7528\u5355\u4f4d: s(\u79d2), m(\u5206), h(\u5c0f\u65f6), \u6216\u8005 d(\u5929) \u9ed8\u8ba4\u5355\u4f4d: s(\u79d2). \u9ed8\u8ba4\u503c: 0. daemonize = yes #\u540e\u53f0\u6267\u884cfpm,\u9ed8\u8ba4\u503c\u4e3ayes\uff0c\u5982\u679c\u4e3a\u4e86\u8c03\u8bd5\u53ef\u4ee5\u6539\u4e3ano\u3002 #\u5728FPM\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u8bbe\u7f6e\u6765\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\u6c60\u3002 \u8fd9\u4e9b\u8bbe\u7f6e\u53ef\u4ee5\u9488\u5bf9\u6bcf\u4e2a\u8fdb\u7a0b\u6c60\u5355\u72ec\u8bbe\u7f6e\u3002 listen = 127.0.0.1:9000 #fpm\u76d1\u542c\u7aef\u53e3\uff0c\u5373nginx\u4e2dphp\u5904\u7406\u7684\u5730\u5740\uff0c\u4e00\u822c\u9ed8\u8ba4\u503c\u5373\u53ef\u3002 #\u53ef\u7528\u683c\u5f0f\u4e3a: 'ip:port', 'port', '/path/to/unix/socket'. \u6bcf\u4e2a\u8fdb\u7a0b\u6c60\u90fd\u9700\u8981\u8bbe\u7f6e\u3002 #\u5982\u679cnginx\u548cphp\u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\uff0c\u5206\u5e03\u5f0f\u5904\u7406\uff0c\u5c31\u8bbe\u7f6eip\u8fd9\u91cc\u5c31\u53ef\u4ee5\u4e86\u3002 listen.backlog = -1 #backlog\u6570\uff0c\u8bbe\u7f6e listen \u7684\u534a\u8fde\u63a5\u961f\u5217\u957f\u5ea6\uff0c-1\u8868\u793a\u65e0\u9650\u5236\uff0c #\u7531\u64cd\u4f5c\u7cfb\u7edf\u51b3\u5b9a\uff0c\u6b64\u884c\u6ce8\u91ca\u6389\u5c31\u884c\u3002backlog\u542b\u4e49\u770b: https://www.jianshu.com/p/fe2228a77429 listen.allowed_clients = 127.0.0.1 #\u5141\u8bb8\u8bbf\u95eeFastCGI\u8fdb\u7a0b\u7684IP\u767d\u540d\u5355\uff0c\u8bbe\u7f6eany\u4e3a\u4e0d\u9650\u5236IP\uff0c #\u5982\u679c\u8981\u8bbe\u7f6e\u5176\u4ed6\u4e3b\u673a\u7684nginx\u4e5f\u80fd\u8bbf\u95ee\u8fd9\u53f0FPM\u8fdb\u7a0b\uff0c #listen\u5904\u8981\u8bbe\u7f6e\u6210\u672c\u5730\u53ef\u88ab\u8bbf\u95ee\u7684IP\u3002\u9ed8\u8ba4\u503c\u662fany\u3002 #\u6bcf\u4e2a\u5730\u5740\u662f\u7528\u9017\u53f7\u5206\u9694. \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u6216\u8005\u4e3a\u7a7a\uff0c\u5219\u5141\u8bb8\u4efb\u4f55\u670d\u52a1\u5668\u8bf7\u6c42\u8fde\u63a5\u3002 listen.owner = www listen.group = www listen.mode = 0666 #unix socket\u8bbe\u7f6e\u9009\u9879\uff0c\u5982\u679c\u4f7f\u7528tcp\u65b9\u5f0f\u8bbf\u95ee\uff0c\u8fd9\u91cc\u6ce8\u91ca\u5373\u53ef\u3002 user = www group = www #\u542f\u52a8\u8fdb\u7a0b\u7684\u7528\u6237\u548c\u7528\u6237\u7ec4\uff0cFPM \u8fdb\u7a0b\u8fd0\u884c\u7684Unix\u7528\u6237, \u5fc5\u987b\u8981\u8bbe\u7f6e\u3002 #\u7528\u6237\u7ec4\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u9ed8\u8ba4\u7528\u6237\u7684\u7ec4\u88ab\u4f7f\u7528\u3002 pm = dynamic #php-fpm\u8fdb\u7a0b\u542f\u52a8\u6a21\u5f0f\uff0cpm\u53ef\u4ee5\u8bbe\u7f6e\u4e3astatic\u548cdynamic\u548condemand #\u5982\u679c\u9009\u62e9static\uff0c\u5219\u8fdb\u7a0b\u6570\u5c31\u6570\u56fa\u5b9a\u7684\uff0c\u7531pm.max_children\u6307\u5b9a\u56fa\u5b9a\u7684\u5b50\u8fdb\u7a0b\u6570\u3002 #\u5982\u679c\u9009\u62e9dynamic\uff0c\u5219\u8fdb\u7a0b\u6570\u662f\u52a8\u6001\u53d8\u5316\u7684,\u7531\u4ee5\u4e0b\u53c2\u6570\u51b3\u5b9a\uff1a pm.max_children = 50 #\u5b50\u8fdb\u7a0b\u6700\u5927\u6570 pm.start_servers = 2 #\u542f\u52a8\u65f6\u7684\u8fdb\u7a0b\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a: min_spare_servers + (max_spare_servers - min_spare_servers) / 2 pm.min_spare_servers = 1 #\u4fdd\u8bc1\u7a7a\u95f2\u8fdb\u7a0b\u6570\u6700\u5c0f\u503c\uff0c\u5982\u679c\u7a7a\u95f2\u8fdb\u7a0b\u5c0f\u4e8e\u6b64\u503c\uff0c\u5219\u521b\u5efa\u65b0\u7684\u5b50\u8fdb\u7a0b pm.max_spare_servers = 3 #\uff0c\u4fdd\u8bc1\u7a7a\u95f2\u8fdb\u7a0b\u6570\u6700\u5927\u503c\uff0c\u5982\u679c\u7a7a\u95f2\u8fdb\u7a0b\u5927\u4e8e\u6b64\u503c\uff0c\u6b64\u8fdb\u884c\u6e05\u7406 pm.max_requests = 500 #\u8bbe\u7f6e\u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u91cd\u751f\u4e4b\u524d\u670d\u52a1\u7684\u8bf7\u6c42\u6570. \u5bf9\u4e8e\u53ef\u80fd\u5b58\u5728 \u5185\u5b58\u6cc4\u6f0f\u7684\u7b2c\u4e09\u65b9\u6a21\u5757\u6765\u8bf4\u662f\u975e\u5e38\u6709\u7528\u7684. \u5982\u679c\u8bbe\u7f6e\u4e3a '0' \u5219\u4e00\u76f4\u63a5\u53d7\u8bf7\u6c42. \u7b49\u540c\u4e8e PHP_FCGI_MAX_REQUESTS \u73af\u5883\u53d8\u91cf. \u9ed8\u8ba4\u503c: 0. pm.status_path = /status #FPM\u72b6\u6001\u9875\u9762\u7684\u7f51\u5740. \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e, \u5219\u65e0\u6cd5\u8bbf\u95ee\u72b6\u6001\u9875\u9762. \u9ed8\u8ba4\u503c: none. munin\u76d1\u63a7\u4f1a\u4f7f\u7528\u5230 ping.path = /ping #FPM\u76d1\u63a7\u9875\u9762\u7684ping\u7f51\u5740. \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e, \u5219\u65e0\u6cd5\u8bbf\u95eeping\u9875\u9762. #\u8be5\u9875\u9762\u7528\u4e8e\u5916\u90e8\u68c0\u6d4bFPM\u662f\u5426\u5b58\u6d3b\u5e76\u4e14\u53ef\u4ee5\u54cd\u5e94\u8bf7\u6c42. \u8bf7\u6ce8\u610f\u5fc5\u987b\u4ee5\u659c\u7ebf\u5f00\u5934 (/)\u3002 ping.response = pong #\u7528\u4e8e\u5b9a\u4e49ping\u8bf7\u6c42\u7684\u8fd4\u56de\u76f8\u5e94. \u8fd4\u56de\u4e3a HTTP 200 \u7684 text/plain \u683c\u5f0f\u6587\u672c. \u9ed8\u8ba4\u503c: pong. access.log = log/$pool.access.log #\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u7684\u8bbf\u95ee\u65e5\u5fd7\uff0c\u9ed8\u8ba4\u662f\u5173\u95ed\u7684\u3002 access.format = \"%R - %u %t \\\"%m %r%Q%q\\\" %s %f %{mili}d %{kilo}M %C%%\" #\u8bbe\u5b9a\u8bbf\u95ee\u65e5\u5fd7\u7684\u683c\u5f0f\u3002 slowlog = log/$pool.log.slow #\u6162\u8bf7\u6c42\u7684\u8bb0\u5f55\u65e5\u5fd7,\u914d\u5408request_slowlog_timeout\u4f7f\u7528\uff0c\u9ed8\u8ba4\u5173\u95ed request_slowlog_timeout = 10s #\u5f53\u4e00\u4e2a\u8bf7\u6c42\u8be5\u8bbe\u7f6e\u7684\u8d85\u65f6\u65f6\u95f4\u540e\uff0c\u5c31\u4f1a\u5c06\u5bf9\u5e94\u7684PHP\u8c03\u7528\u5806\u6808\u4fe1\u606f\u5b8c\u6574\u5199\u5165 #\u5230\u6162\u65e5\u5fd7\u4e2d. \u8bbe\u7f6e\u4e3a '0' \u8868\u793a 'Off' request_terminate_timeout = 0 #\u8bbe\u7f6e\u5355\u4e2a\u8bf7\u6c42\u7684\u8d85\u65f6\u4e2d\u6b62\u65f6\u95f4. \u8be5\u9009\u9879\u53ef\u80fd\u4f1a\u5bf9php.ini\u8bbe\u7f6e\u4e2d\u7684'max_execution_time' #\u56e0\u4e3a\u67d0\u4e9b\u7279\u6b8a\u539f\u56e0\u6ca1\u6709\u4e2d\u6b62\u8fd0\u884c\u7684\u811a\u672c\u6709\u7528. \u8bbe\u7f6e\u4e3a '0' \u8868\u793a 'Off'. #\u5f53\u7ecf\u5e38\u51fa\u73b0502\u9519\u8bef\u65f6\u53ef\u4ee5\u5c1d\u8bd5\u66f4\u6539\u6b64\u9009\u9879\u3002 rlimit_files = 1024 #\u8bbe\u7f6e\u6587\u4ef6\u6253\u5f00\u63cf\u8ff0\u7b26\u7684rlimit\u9650\u5236. \u9ed8\u8ba4\u503c: \u7cfb\u7edf\u5b9a\u4e49\u503c\u9ed8\u8ba4\u53ef\u6253\u5f00\u53e5\u67c4\u662f1024\uff0c #\u53ef\u4f7f\u7528 ulimit -n\u67e5\u770b\uff0culimit -n 2048\u4fee\u6539\u3002 rlimit_core = 0 #\u8bbe\u7f6e\u6838\u5fc3rlimit\u6700\u5927\u9650\u5236\u503c. \u53ef\u7528\u503c: 'unlimited' \u30010\u6216\u8005\u6b63\u6574\u6570. \u9ed8\u8ba4\u503c: \u7cfb\u7edf\u5b9a\u4e49\u503c. chroot = #\u542f\u52a8\u65f6\u7684Chroot\u76ee\u5f55. \u6240\u5b9a\u4e49\u7684\u76ee\u5f55\u9700\u8981\u662f\u7edd\u5bf9\u8def\u5f84. \u5982\u679c\u6ca1\u6709\u8bbe\u7f6e, \u5219chroot\u4e0d\u88ab\u4f7f\u7528. chdir = #\u8bbe\u7f6e\u542f\u52a8\u76ee\u5f55\uff0c\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8Chdir\u5230\u8be5\u76ee\u5f55. \u6240\u5b9a\u4e49\u7684\u76ee\u5f55\u9700\u8981\u662f\u7edd\u5bf9\u8def\u5f84. #\u9ed8\u8ba4\u503c: \u5f53\u524d\u76ee\u5f55\uff0c\u6216\u8005/\u76ee\u5f55\uff08chroot\u65f6\uff09 catch_workers_output = yes #\u91cd\u5b9a\u5411\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684stdout\u548cstderr\u5230\u4e3b\u8981\u7684\u9519\u8bef\u65e5\u5fd7\u6587\u4ef6\u4e2d. #\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e, stdout \u548c stderr \u5c06\u4f1a\u6839\u636eFastCGI\u7684\u89c4\u5219\u88ab\u91cd\u5b9a\u5411\u5230 /dev/null . \u9ed8\u8ba4\u503c: \u7a7a.","title":"\u914d\u7f6e\u6587\u4ef6php-fpm.conf\u8be6\u89e3"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/02-Web\u670d\u52a1\u5668\u642d\u5efa/#phpini","text":"[PHP] ; PHP\u8fd8\u662f\u4e00\u4e2a\u4e0d\u65ad\u53d1\u5c55\u7684\u5de5\u5177\uff0c\u5176\u529f\u80fd\u8fd8\u5728\u4e0d\u65ad\u5730\u5220\u51cf ; \u800cphp.ini\u7684\u8bbe\u7f6e\u66f4\u6539\u53ef\u4ee5\u53cd\u6620\u51fa\u76f8\u5f53\u7684\u53d8\u5316\uff0c ; \u5728\u4f7f\u7528\u65b0\u7684PHP\u7248\u672c\u524d\uff0c\u7814\u7a76\u4e00\u4e0bphp.ini\u4f1a\u6709\u597d\u5904\u7684 ;;;;;;;;;;;;;;;;;;; ; \u5173\u4e8e\u8fd9\u4e2a\u6587\u4ef6 ; ;;;;;;;;;;;;;;;;;;; ; \u8fd9\u4e2a\u6587\u4ef6\u63a7\u5236\u4e86PHP\u8bb8\u591a\u65b9\u9762\u7684\u89c2\u70b9\u3002\u4e3a\u4e86\u8ba9PHP\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5b83\u5fc5\u987b\u88ab\u547d\u540d\u4e3a ; 'php.ini'\u3002PHP \u5c06\u5728\u8fd9\u4e9b\u5730\u65b9\u4f9d\u6b21\u67e5\u627e\u8be5\u6587\u4ef6\uff1a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff1b\u73af\u5883\u53d8\u91cfPHPRC ; \u6307\u660e\u7684\u8def\u5f84\uff1b\u7f16\u8bd1\u65f6\u6307\u5b9a\u7684\u8def\u5f84\u3002 ; \u5728windows\u4e0b\uff0c\u7f16\u8bd1\u65f6\u7684\u8def\u5f84\u662fWindows\u5b89\u88c5\u76ee\u5f55\u3002 ; \u5728\u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\uff0cphp.ini\u7684\u67e5\u627e\u8def\u5f84\u53ef\u4ee5\u7528 -c \u53c2\u6570\u66ff\u4ee3\u3002 ; \u8be5\u6587\u4ef6\u7684\u8bed\u6cd5\u975e\u5e38\u7b80\u5355\u3002\u7a7a\u767d\u5b57\u7b26\u548c\u7528\u5206\u53f7';'\u5f00\u59cb\u7684\u884c\u88ab\u7b80\u5355\u5730\u5ffd\u7565\uff08\u5c31\u8c61\u4f60\u53ef\u80fd ; \u731c\u5230\u7684\u4e00\u6837\uff09\u3002 \u7ae0\u8282\u6807\u9898\uff08\u4f8b\u5982 : [Foo]\uff09\u4e5f\u88ab\u7b80\u5355\u5730\u5ffd\u7565\uff0c\u5373\u4f7f\u5c06\u6765\u5b83\u4eec\u53ef\u80fd ; \u6709\u67d0\u79cd\u7684\u610f\u4e49\u3002 ; ; \u6307\u793a\u88ab\u6307\u5b9a\u4f7f\u7528\u5982\u4e0b\u8bed\u6cd5\uff1a ; \u6307\u793a\u6807\u8bc6\u7b26 = \u503c ; directive = value ; \u6307\u793a\u6807\u8bc6\u7b26 \u662f *\u5927\u5c0f\u5199\u654f\u611f\u7684* - foo=bar \u4e0d\u540c\u4e8e FOO = bar\u3002 ; ; \u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e00\u4e2a\u6570\u5b57\uff0c\u4e00\u4e2a PHP \u5e38\u91cf (\u5982\uff1a E_ALL or M_PI), INI \u5e38\u91cf\u4e2d\u7684 ; \u4e00\u4e2a (On, Off, True, False, Yes, No and None) \uff0c\u6216\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f ; (\u5982: E_ALL & ~E_NOTICE), \u6216\u662f\u7528\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u5b57\u7b26\u4e32(\" foo\" ). ; ; INI \u6587\u4ef6\u7684\u8868\u8fbe\u5f0f\u88ab\u9650\u5236\u4e8e\u4f4d\u8fd0\u7b97\u7b26\u548c\u62ec\u53f7\u3002 ; | bitwise OR ; & bitwise AND ; ~ bitwise NOT ; ! boolean NOT ; ; \u5e03\u5c14\u6807\u5fd7\u53ef\u7528 1, On, True or Yes \u8fd9\u4e9b\u503c\u7f6e\u4e8e\u5f00\u7684\u72b6\u6001\u3002 ; \u5b83\u4eec\u53ef\u7528 0, Off, False or No \u8fd9\u4e9b\u503c\u7f6e\u4e8e\u5173\u7684\u72b6\u6001\u3002 ; ; \u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\u5728\u7b49\u53f7\u540e\u4e0d\u5199\u4efb\u4f55\u4e1c\u897f\u8868\u793a\uff0c\u6216\u8005\u7528 None \u5173\u952e\u5b57: ; ; foo = ; \u5c06foo\u7f6e\u4e3a\u7a7a\u5b57\u7b26\u4e32 ; foo = none ; \u5c06foo\u7f6e\u4e3a\u7a7a\u5b57\u7b26\u4e32 ; foo = \" none\" ; \u5c06foo\u7f6e\u4e3a\u5b57\u7b26\u4e32'none' ; ; \u5982\u679c\u4f60\u503c\u8bbe\u7f6e\u4e2d\u4f7f\u7528\u5e38\u91cf\uff0c\u800c\u8fd9\u4e9b\u5e38\u91cf\u5c5e\u4e8e\u52a8\u6001\u8c03\u5165\u7684\u6269\u5c55\u5e93\uff08\u4e0d\u662f PHP \u7684\u6269\u5c55\uff0c\u5c31\u662f ; Zend \u7684\u6269\u5c55\uff09\uff0c\u4f60\u4ec5\u53ef\u4ee5\u8c03\u5165\u8fd9\u4e9b\u6269\u5c55\u7684\u884c*\u4e4b\u540e*\u4f7f\u7528\u8fd9\u4e9b\u5e38\u91cf\u3002 ; ; \u6240\u6709\u5728 php.ini-dist \u6587\u4ef6\u91cc\u8bbe\u5b9a\u7684\u503c\u4e0e\u5185\u5efa\u7684\u9ed8\u8ba4\u503c\u76f8\u540c\uff08\u8fd9\u662f\u8bf4\uff0c\u5982\u679c php.ini ; \u6ca1\u88ab\u4f7f\u7528\u6216\u8005\u4f60\u5220\u6389\u4e86\u8fd9\u4e9b\u884c\uff0c\u9ed8\u8ba4\u503c\u4e0e\u4e4b\u76f8\u540c\uff09\u3002 ;;;;;;;;;;;;;;;;;;;; ; \u8bed\u8a00\u9009\u9879 ; ;;;;;;;;;;;;;;;;;;;; engine = On ; \u4f7f PHP scripting language engine\uff08PHP \u811a\u672c\u8bed\u8a00\u5f15\u64ce\uff09\u5728 Apache\u4e0b\u6709\u6548\u3002 short_open_tag = On ; \u5141\u8bb8 tags \u5c06\u88ab\u8bc6\u522b\u3002 asp_tags = Off ; \u5141\u8bb8ASP-style tags precision = 14 ; \u6d6e\u70b9\u7c7b\u578b\u6570\u663e\u793a\u65f6\u7684\u6709\u6548\u4f4d\u6570 y2k_compliance = Off ; \u662f\u5426\u6253\u5f00 2000\u5e74\u9002\u5e94 (\u53ef\u80fd\u5728\u975eY2K\u9002\u5e94\u7684\u6d4f\u89c8\u5668\u4e2d\u5bfc\u81f4\u95ee\u9898) output_buffering = Off ; \u8f93\u51fa\u7f13\u5b58\u5141\u8bb8\u4f60\u751a\u81f3\u5728\u8f93\u51fa\u6b63\u6587\u5185\u5bb9\u4e4b\u540e\u53d1\u9001 header\uff08\u6807\u5934\uff0c\u5305\u62eccookies\uff09\u884c ; \u5176\u4ee3\u4ef7\u662f\u8f93\u51fa\u5c42\u51cf\u6162\u4e00\u70b9\u70b9\u901f\u5ea6\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u8f93\u51fa\u7f13\u5b58\u5728\u8fd0\u884c\u65f6\u6253\u5f00\u8f93\u51fa\u7f13\u5b58\uff0c ; \u6216\u8005\u5728\u8fd9\u91cc\u5c06\u6307\u793a\u8bbe\u4e3a On \u800c\u4f7f\u5f97\u6240\u6709\u6587\u4ef6\u7684\u8f93\u51fa\u7f13\u5b58\u6253\u5f00\u3002 output_handler = ; \u4f60\u53ef\u4ee5\u91cd\u5b9a\u5411\u4f60\u7684\u811a\u672c\u7684\u6240\u6709\u8f93\u51fa\u5230\u4e00\u4e2a\u51fd\u6570\uff0c ; \u90a3\u6837\u505a\u53ef\u80fd\u5bf9\u5904\u7406\u6216\u4ee5\u65e5\u5fd7\u8bb0\u5f55\u5b83\u6709\u7528\u3002 ; \u4f8b\u5982\u82e5\u4f60\u5c06\u8fd9\u4e2aoutput_handler \u8bbe\u4e3a\" ob_gzhandler\" , ; \u5219\u8f93\u51fa\u4f1a\u88ab\u900f\u660e\u5730\u4e3a\u652f\u6301gzip\u6216deflate\u7f16\u7801\u7684\u6d4f\u89c8\u5668\u538b\u7f29\u3002 ; \u8bbe\u4e00\u4e2a\u8f93\u51fa\u5904\u7406\u5668\u81ea\u52a8\u5730\u6253\u5f00\u8f93\u51fa\u7f13\u51b2\u3002 implicit_flush = Off ; \u5f3a\u5236flush\uff08\u5237\u65b0\uff09\u8ba9PHP \u544a\u8bc9\u8f93\u51fa\u5c42\u5728\u6bcf\u4e2a\u8f93\u51fa\u5757\u4e4b\u540e\u81ea\u52a8\u5237\u65b0\u81ea\u8eab\u6570\u636e\u3002 ; \u8fd9\u7b49\u6548\u4e8e\u5728\u6bcf\u4e2a print() \u6216 echo() \u8c03\u7528\u548c\u6bcf\u4e2a HTML \u5757\u540e\u8c03\u7528flush()\u51fd\u6570\u3002 ; \u6253\u5f00\u8fd9\u9879\u8bbe\u7f6e\u4f1a\u5bfc\u81f4\u4e25\u91cd\u7684\u8fd0\u884c\u65f6\u51b2\u7a81\uff0c\u5efa\u8bae\u4ec5\u5728debug\u8fc7\u7a0b\u4e2d\u6253\u5f00\u3002 allow_call_time_pass_reference = On ; \u662f\u5426\u8ba9\u5f3a\u8feb\u51fd\u6570\u8c03\u7528\u65f6\u6309\u5f15\u7528\u4f20\u9012\u53c2\u6570\u3002\u8fd9\u4e00\u65b9\u6cd5\u906d\u5230\u6297\u8bae\uff0c ; \u5e76\u53ef\u80fd\u5728\u5c06\u6765\u7248\u672c\u7684PHP/Zend\u91cc\u4e0d\u518d\u652f\u6301\u3002 ; \u53d7\u5230\u9f13\u52b1\u7684\u6307\u5b9a\u54ea\u4e9b\u53c2\u6570\u6309\u5f15\u7528\u4f20\u9012\u7684\u65b9\u6cd5\u662f\u5728\u51fd\u6570\u58f0\u660e\u91cc\u3002 ; \u4f60\u88ab\u9f13\u52b1\u5c1d\u8bd5\u5173\u95ed\u8fd9\u4e00\u9009\u9879\u5e76\u786e\u8ba4\u4f60\u7684\u811a\u672c\u4ecd\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u4ee5\u4fdd\u8bc1\u5728\u5c06\u6765\u7248\u672c\u7684\u8bed\u8a00\u91cc ; \u5b83\u4eec\u4ecd\u80fd\u5de5\u4f5c\u3002\uff08\u4f60\u5c06\u5728\u6bcf\u6b21\u4f7f\u7528\u8be5\u7279\u70b9\u65f6\u5f97\u5230\u4e00\u4e2a\u8b66\u544a\uff0c\u800c\u53c2\u6570\u5c06\u6309\u503c\u800c\u4e0d\u662f\u6309\u5f15\u7528 ; \u4f20\u9012\uff09\u3002 ; Safe Mode \u5b89\u5168\u6a21\u5f0f safe_mode = Off safe_mode_exec_dir = safe_mode_allowed_env_vars = PHP_ ; \uff1fSetting certain environment variables ; \uff1fmay be a potential security breach. ; \u8be5\u6307\u793a\u5305\u542b\u7528\u9017\u53f7\u5206\u9694\u7684\u524d\u7f00\u5217\u8868\u3002\u5b89\u5168\u6a21\u5f0f\u4e2d\uff0c\u7528\u6237\u4ec5\u53ef\u4ee5\u66ff\u6362 ; \u4ee5\u5728\u6b64\u5217\u51fa\u7684\u524d\u7f00\u5f00\u5934\u7684\u73af\u5883\u53d8\u91cf\u7684\u503c\u3002 ; \u9ed8\u8ba4\u5730\uff0c\u7528\u6237\u5c06\u4ec5\u80fd \u8bbe\u5b9a\u4ee5PHP_\u5f00\u5934\u7684\u73af\u5883\u53d8\u91cf\uff0c\uff08\u5982: PHP_FOO=BAR\uff09\u3002 ; \u6ce8\u610f: \u5982\u679c\u8fd9\u4e00\u6307\u793a\u4e3a\u7a7a\uff0cPHP \u5c06\u8ba9\u7528\u6237\u66f4\u6539\u4efb\u610f\u73af\u5883\u53d8\u91cf! safe_mode_protected_env_vars = LD_LIBRARY_PATH ; \u8fd9\u6761\u6307\u793a\u5305\u542b\u4e00\u4e2a\u7528\u9017\u53f7\u5206\u9694\u7684\u73af\u5883\u53d8\u91cf\u5217\u8868\uff0c\u90a3\u662f\u6700\u7ec8\u7528\u6237\u5c06\u4e0d\u80fd\u7528putenv () \u66f4\u6539\u7684\u3002 ; \u8fd9\u4e9b\u53d8\u91cf\u751a\u81f3\u5728safe_mode_allowed_env_vars \u8bbe\u7f6e\u4e3a\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\u5f97\u5230\u4fdd\u62a4\u3002 disable_functions = ; \u8fd9\u6761\u6307\u793a\u8ba9\u4f60\u53ef\u4ee5\u4e3a\u4e86\u5b89\u5168\u7684\u539f\u56e0\u8ba9\u7279\u5b9a\u51fd\u6570\u5931\u6548\u3002 ; \u5b83\u63a5\u53d7\u4e00\u4e2a\u7528\u9017\u53f7\u5206\u9694\u7684\u51fd\u6570\u540d\u5217\u8868\u3002 ; \u8fd9\u6761\u6307\u793a *\u4e0d\u53d7* \u5b89\u5168\u6a21\u5f0f\u662f\u5426\u6253\u5f00\u7684\u5f71\u54cd\u3002 ; \u8bed\u6cd5\u9ad8\u4eae\u6a21\u5f0f\u7684\u8272\u5f69\u3002 ; \u53ea\u8981\u80fd\u88ab\u63a5\u53d7\u7684\u4e1c\u897f\u5c31\u80fd\u5de5\u4f5c\u3002 highlight.string = #DD0000 highlight.comment = #FF8000 highlight.keyword = #007700 highlight.bg = #FFFFFF highlight.default = #0000BB highlight.html = #000000 ; Misc \u6742\u9879 expose_php = Off ; \u51b3\u5b9a PHP \u662f\u5426\u6807\u793a\u5b83\u88c5\u5728\u670d\u52a1\u5668\u4e0a\u7684\u4e8b\u5b9e\uff08\u4f8b\u5982\uff1a\u52a0\u5728\u5b83 \u2014 PHP\u2014 \u7ed9Web\u670d\u52a1 ; \u53d1\u9001\u7684\u4fe1\u53f7\u4e0a\uff09\u3002 ; \uff08\u6211\u4e2a\u4eba\u7684\u610f\u89c1\uff0c\u5728\u51fa\u73b0\u4ec0\u4e48power-by\u7684header\u7684\u65f6\u5019\uff0c\u628a\u8fd9\u5173\u6389\u3002\uff09 ; \u5b83\u4e0d\u4f1a\u6709\u5b89\u5168\u4e0a\u7684\u5a01\u80c1, \u4f46\u5b83\u4f7f\u68c0\u67e5\u4f60\u7684\u670d\u52a1\u5668\u4e0a\u662f\u5426\u5b89\u88c5\u4e86PHP\u6210\u4e3a\u4e86\u53ef\u80fd\u3002 ;;;;;;;;;;;;;;;;;;; ; Resource Limits ; ;;;;;;;;;;;;;;;;;;; max_execution_time = 30 ; \u6bcf\u4e2a\u811a\u672c\u7684\u6700\u5927\u6267\u884c\u65f6\u95f4, \u6309\u79d2\u8ba1 memory_limit = 8388608 ; \u4e00\u4e2a\u811a\u672c\u6700\u5927\u53ef\u4f7f\u7528\u7684\u5185\u5b58\u603b\u91cf (\u8fd9\u91cc\u662f8MB) ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ; Error handling and logging ; ; \u51fa\u9519\u63a7\u5236\u548c\u767b\u8bb0 ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ; \u9519\u8bef\u62a5\u544a\u662f\u6309\u4f4d\u7684\u3002\u6216\u8005\u5c06\u6570\u5b57\u52a0\u8d77\u6765\u5f97\u5230\u60f3\u8981\u7684\u9519\u8bef\u62a5\u544a\u7b49\u7ea7\u3002 ; E_ALL - \u6240\u6709\u7684\u9519\u8bef\u548c\u8b66\u544a ; E_ERROR - \u81f4\u547d\u6027\u8fd0\u884c\u65f6\u9519 ; E_WARNING - \u8fd0\u884c\u65f6\u8b66\u544a\uff08\u975e\u81f4\u547d\u6027\u9519\uff09 ; E_PARSE - \u7f16\u8bd1\u65f6\u89e3\u6790\u9519\u8bef ; E_NOTICE - \u8fd0\u884c\u65f6\u63d0\u9192(\u8fd9\u4e9b\u7ecf\u5e38\u662f\u662f\u4f60\u7684\u4ee3\u7801\u7684bug\u5f15\u8d77\u7684\uff0c ;\u4e5f\u53ef\u80fd\u662f\u6709\u610f\u7684\u884c\u4e3a\u9020\u6210\u7684\u3002(\u5982\uff1a\u57fa\u4e8e\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a ;\u7a7a\u5b57\u7b26\u4e32\u7684\u4e8b\u5b9e\u800c\u4f7f\u7528\u4e00\u4e2a\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf) ; E_CORE_ERROR - \u53d1\u751f\u4e8ePHP\u542f\u52a8\u65f6\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u7684\u81f4\u547d\u9519\u8bef ; E_CORE_WARNING - \u53d1\u751f\u4e8ePHP\u542f\u52a8\u65f6\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u7684\u8b66\u544a(\u975e\u81f4\u547d\u6027\u9519) ; E_COMPILE_ERROR - \u7f16\u8bd1\u65f6\u81f4\u547d\u6027\u9519 ; E_COMPILE_WARNING - \u7f16\u8bd1\u65f6\u8b66\u544a(\u975e\u81f4\u547d\u6027\u9519) ; E_USER_ERROR - \u7528\u6237\u4ea7\u751f\u7684\u51fa\u9519\u6d88\u606f ; E_USER_WARNING - \u7528\u6237\u4ea7\u751f\u7684\u8b66\u544a\u6d88\u606f ; E_USER_NOTICE - \u7528\u6237\u4ea7\u751f\u7684\u63d0\u9192\u6d88\u606f ; \u4f8b\u5b50: ; error_reporting = E_ALL & ~E_NOTICE ; \u663e\u793a\u6240\u6709\u7684\u9519\u8bef\uff0c\u9664\u4e86\u63d0\u9192 ; error_reporting = E_COMPILE_ERROR|E_ERROR|E_CORE_ERROR ; \u4ec5\u663e\u793a\u9519\u8bef error_reporting = E_ALL & ~E_NOTICE ; \u663e\u793a\u6240\u6709\u7684\u9519\u8bef\uff0c\u9664\u4e86\u63d0\u9192 display_errors = On ; \u663e\u793a\u51fa\u9519\u8bef\u4fe1\u606f(\u4f5c\u4e3a\u8f93\u51fa\u7684\u4e00\u90e8\u5206) ; \u5728\u6700\u7ec8\u53d1\u5e03\u7684web\u7ad9\u70b9\u4e0a\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f60\u5173\u6389\u8fd9\u4e2a\u7279\u6027\uff0c\u5e76\u4f7f\u7528 ; \u9519\u8bef\u65e5\u5fd7\u4ee3\u66ff\uff08\u53c2\u770b\u4e0b\u9762\uff09\u3002 ; \u5728\u6700\u7ec8\u53d1\u5e03\u7684web\u7ad9\u70b9\u7ee7\u7eed\u8ba9 display_errors \u6709\u6548\u53ef\u80fd ; \u66b4\u9732\u4e00\u4e9b\u6709\u5173\u5b89\u5168\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u4f60\u7684web\u670d\u52a1\u4e0a\u7684\u6587\u4ef6\u8def\u5f84\u3001 ; \u4f60\u7684\u6570\u636e\u5e93\u89c4\u5212\u6216\u522b\u7684\u4fe1\u606f\u3002 display_startup_errors = Off ; \u751a\u81f3\u5f53display_erroes\u6253\u5f00\u4e86\uff0c\u53d1\u751f\u4e8ePHP\u7684\u542f\u52a8\u7684\u6b65\u9aa4\u4e2d ; \u7684\u9519\u8bef\u4e5f\u4e0d\u4f1a\u88ab\u663e\u793a\u3002 ; \u5f3a\u70c8\u5efa\u8bae\u4fdd\u6301\u4f7f display_startup_errors \u5173\u95ed\uff0c ; \u9664\u4e86\u5728\u6539\u9519\u8fc7\u7a0b\u4e2d\u3002 log_errors = Off ; \u5728\u65e5\u5fd7\u6587\u4ef6\u91cc\u8bb0\u5f55\u9519\u8bef\uff08\u670d\u52a1\u5668\u6307\u5b9a\u7684\u65e5\u5fd7\uff0cstderr\u6807\u51c6\u9519\u8bef\u8f93\u51fa\uff0c\u6216error_log(\u4e0b\u9762\u7684\uff09\uff09 ; \u6b63\u5982\u4e0a\u9762\u8bf4\u660e\u7684\u90a3\u6837\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f60\u5728\u6700\u7ec8\u53d1\u5e03\u7684web\u7ad9\u70b9\u4ee5\u65e5\u5fd7\u8bb0\u5f55\u9519\u8bef ; \u53d6\u4ee3\u76f4\u63a5\u9519\u8bef\u8f93\u51fa\u3002 track_errors = Off ; \u4fdd\u5b58\u6700\u8fd1\u4e00\u4e2a \u9519\u8bef/\u8b66\u544a \u6d88\u606f\u4e8e\u53d8\u91cf $php_errormsg (boolean) ;error_prepend_string = \" \" ; \u4e8e\u9519\u8bef\u4fe1\u606f\u524d\u8f93\u51fa\u7684\u5b57\u7b26\u4e32 ;error_append_string = \" \" ; \u4e8e\u9519\u8bef\u4fe1\u606f\u540e\u8f93\u51fa\u7684\u5b57\u7b26\u4e32 ;error_log = filename ; \u8bb0\u5f55\u9519\u8bef\u65e5\u5fd7\u4e8e\u6307\u5b9a\u6587\u4ef6 ;error_log = syslog ; \u8bb0\u5f55\u9519\u8bef\u65e5\u5fd7\u4e8e\u7cfb\u7edf\u65e5\u5fd7 syslog (NT \u4e0b\u7684\u4e8b\u4ef6\u65e5\u5fd7, Windows 95\u4e0b\u65e0\u6548) warn_plus_overloading = Off ; \u5f53\u5c06\u2018 +\u2019 \u7528\u4e8e\u5b57\u7b26\u4e32\u65f6\u8b66\u544a ;;;;;;;;;;;;;;;;; ; Data Handling ; ;;;;;;;;;;;;;;;;; variables_order = \" EGPCS\" ; \u8fd9\u6761\u6307\u793a\u63cf\u8ff0\u4e86PHP \u8bb0\u5f55 ; GET, POST, Cookie, Environment and Built-in \u8fd9\u4e9b\u53d8\u91cf\u7684\u987a\u5e8f\u3002 ; \uff08\u4ee5 G, P, C, E & S \u4ee3\u8868\uff0c\u901a\u5e38\u4ee5 EGPCS \u6216 GPC \u7684\u65b9\u5f0f\u5f15\u7528\uff09\u3002 ; \u6309\u4ece\u5de6\u5230\u53f3\u8bb0\u5f55\uff0c\u65b0\u503c\u53d6\u4ee3\u65e7\u503c\u3002 register_globals = On ; \u662f\u5426\u5c06\u8fd9\u4e9b EGPCS \u53d8\u91cf\u6ce8\u518c\u4e3a\u5168\u5c40\u53d8\u91cf\u3002 ; \u82e5\u4f60\u4e0d\u60f3\u8ba9\u7528\u6237\u6570\u636e\u4e0d\u5728\u5168\u5c40\u8303\u56f4\u5185\u6df7\u4e71\u7684\u8bdd\uff0c\u4f60\u53ef\u80fd\u60f3\u5173\u95ed\u5b83\u3002 ; \u8fd9\u548c track_vars \u8fde\u8d77\u6765\u7528\u66f4\u6709\u610f\u4e49 \u2014 \u8fd9\u6837\u4f60\u53ef\u4ee5\u901a\u8fc7 ; $HTTP_*_VARS[] \u6570\u7ec4\u8bbf\u95ee\u6240\u6709\u7684GPC\u53d8\u91cf\u3002 register_argc_argv = On ; \u8fd9\u6761\u6307\u793a\u544a\u8bc9 PHP \u662f\u5426\u58f0\u660e argv\u548cargc \u53d8\u91cf ; \uff08\u6ce8\uff1a\u8fd9\u91ccargv\u4e3a\u6570\u7ec4,argc\u4e3a\u53d8\u91cf\u6570\uff09 ; \uff08\u5176\u4e2d\u5305\u542b\u7528GET\u65b9\u6cd5\u4f20\u6765\u7684\u6570\u636e\uff09\u3002 ; \u82e5\u4f60\u4e0d\u60f3\u7528\u8fd9\u4e9b\u53d8\u91cf\uff0c\u4f60\u5e94\u5f53\u5173\u6389\u5b83\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002 track_vars = On ; \u4f7f$HTTP_*_VARS[]\u6570\u7ec4\u6709\u6548\uff0c\u8fd9\u91cc*\u5728\u4f7f\u7528\u65f6\u7528 ; ENV, POST, GET, COOKIE or SERVER\u66ff\u6362 post_max_size = 8M ; PHP\u5c06\u63a5\u53d7\u7684POST\u6570\u636e\u6700\u5927\u5927\u5c0f\u3002 gpc_order = \" GPC\" ; \u8fd9\u6761\u6307\u793a\u88ab\u4eba\u53cd\u5bf9\u3002\u7528 variables_order \u4ee3\u66ff\u3002 ; Magic quotes magic_quotes_gpc = On ; \u5728\u8f93\u5165\u7684GET/POST/Cookie\u6570\u636e\u91cc\u4f7f\u7528\u9b54\u672f\u5f15\u7528 ; \uff08\u539f\u6587\u5c31\u8fd9\u6837\uff0c\u5475\u5475\uff0c\u6240\u8c13magic quotes \u5e94\u8be5\u662f\u6307\u7528\u8f6c\u4e49\u7b26\u52a0\u5728\u5f15\u7528\u6027\u7684\u63a7\u5236\u5b57\u7b26\u4e0a\uff0c\u5982 '....\uff09 magic_quotes_runtime = Off ; \u5bf9\u8fd0\u884c\u65f6\u4ea7\u751f\u7684\u6570\u636e\u4f7f\u7528\u9b54\u672f\u5f15\u7528\uff0c ; \u4f8b\u5982\uff1a\u7528SQL\u67e5\u8be2\u5f97\u5230\u7684\u6570\u636e\uff0c\u7528exec()\u51fd\u6570\u5f97\u5230\u7684\u6570\u636e\uff0c\u7b49\u7b49 magic_quotes_sybase = Off ; \u91c7\u7528 Sybase\u5f62\u5f0f\u7684\u9b54\u672f\u5f15\u7528\uff08\u7528 '' \u8131\u51fa ' \u800c\u4e0d\u7528 '\uff09 ; \u81ea\u52a8\u5728 PHP \u6587\u6863\u4e4b\u524d\u548c\u4e4b\u540e\u6dfb\u52a0\u6587\u4ef6 auto_prepend_file = auto_append_file = ; \u8c614.04b4\u4e00\u6837\uff0cPHP \u9ed8\u8ba4\u5730\u603b\u662f\u5728 \u201c Content-type:\u201d \u5934\u6807\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u7684\u7f16\u7801\u65b9\u5f0f\u3002 ; \u8ba9\u8f93\u51fa\u5b57\u7b26\u96c6\u5931\u6548\uff0c\u53ea\u8981\u8bbe\u7f6e\u4e3a\u7a7a\u3002 ; PHP \u7684\u5185\u5efa\u9ed8\u8ba4\u503c\u662f text/html default_mimetype = \" text/html\" ;default_charset = \" iso-8859-1\" ;;;;;;;;;;;;;;;;;;;;;;;;; ; Paths and Directories ; ;;;;;;;;;;;;;;;;;;;;;;;;; include_path = ; include \u8def\u5f84\u8bbe\u7f6e\uff0cUNIX: \" /path1:/path2\" Windows: \" \\path1;\\path2\" doc_root = ; php \u9875\u9762\u7684\u6839\u8def\u5f84\uff0c\u4ec5\u5728\u975e\u7a7a\u65f6\u6709\u6548 user_dir = ; \u544a\u77e5 php \u5728\u4f7f\u7528 /~username \u6253\u5f00\u811a\u672c\u65f6\u5230\u54ea\u4e2a\u76ee\u5f55\u4e0b\u53bb\u627e\uff0c\u4ec5\u5728\u975e\u7a7a\u65f6\u6709\u6548 ;upload_tmp_dir = ; \u5b58\u653e\u7528HTTP\u534f\u8bae\u4e0a\u8f7d\u7684\u6587\u4ef6\u7684\u4e34\u65f6\u76ee\u5f55\uff08\u5728\u6ca1\u6307\u5b9a\u65f6\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\uff09 upload_max_filesize = 2097152 ; \u6587\u4ef6\u4e0a\u8f7d\u9ed8\u8ba4\u5730\u9650\u5236\u4e3a2 Meg extension_dir = c:\\php\\ ; \u5b58\u653e\u53ef\u52a0\u8f7d\u7684\u6269\u5145\u5e93\uff08\u6a21\u5757\uff09\u7684\u76ee\u5f55 enable_dl = On ; \u662f\u5426\u4f7fdl()\u6709\u6548\u3002 ; \u5728\u591a\u7ebf\u7a0b\u7684\u670d\u52a1\u5668\u4e0a dl()\u51fd\u6570*\u4e0d\u80fd*\u5f88\u597d\u5730\u5de5\u4f5c\uff0c ; \u4f8b\u5982IIS or Zeus\uff0c\u5e76\u5728\u5176\u4e0a\u9ed8\u8ba4\u4e3a\u7981\u6b62 ;;;;;;;;;;;;;;;; ; File Uploads ; ;;;;;;;;;;;;;;;; file_uploads = On ; \u662f\u5426\u5141\u8bb8HTTP\u65b9\u5f0f\u6587\u4ef6\u4e0a\u8f7d ;upload_tmp_dir = ; \u7528\u4e8eHTTP\u4e0a\u8f7d\u7684\u6587\u4ef6\u7684\u4e34\u65f6\u76ee\u5f55\uff08\u672a\u6307\u5b9a\u5219\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\uff09 upload_max_filesize = 2M ; \u4e0a\u8f7d\u6587\u4ef6\u7684\u6700\u5927\u8bb8\u53ef\u5927\u5c0f ; Fopen wrappers ; ;;;;;;;;;;;;;;;;;; allow_url_fopen = On ; \u662f\u5426\u5141\u8bb8\u628aURLs\u5f53\u4f5chttp:.. \u6216\u628a\u6587\u4ef6\u5f53\u4f5cftp:... ;;;;;;;;;;;;;;;;;;;;;; ; \u52a8\u6001\u6269\u5c55 ; ; Dynamic Extensions ; ;;;;;;;;;;;;;;;;;;;;;; ; \u82e5\u4f60\u5e0c\u671b\u4e00\u4e2a\u6269\u5c55\u5e93\u81ea\u52a8\u52a0\u8f7d\uff0c\u7528\u4e0b\u9762\u7684\u8bed\u6cd5\uff1a ; extension=modulename.extension ; \u4f8b\u5982\uff0c\u5728windows\u4e0a\uff0c ; extension=msql.dll ; or \u5728UNIX\u4e0b, ; extension=msql.so ; \u6ce8\u610f\uff0c\u8fd9\u53ea\u5e94\u5f53\u662f\u6a21\u5757\u7684\u540d\u5b57\uff0c\u4e0d\u9700\u8981\u76ee\u5f55\u4fe1\u606f\u653e\u5728\u91cc\u9762\u3002 ; \u7528\u4e0a\u9762\u7684 extension_dir \u6307\u793a\u6307\u5b9a\u6269\u5c55\u5e93\u7684\u4f4d\u7f6e\u3002 ;Windows \u6269\u5c55 ;extension=php_nsmail.dll extension = php_calendar.dll ;extension=php_dbase.dll ;extension=php_filepro.dll extension = php_gd.dll ;extension=php_dbm.dll ;extension=php_mssql.dll ;extension=php_zlib.dll ;extension=php_filepro.dll ;extension=php_imap4r2.dll ;extension=php_ldap.dll ;extension=php_crypt.dll ;extension=php_msql2.dll ;extension=php_odbc.dll ; \u6ce8\u610f\uff0c MySQL\u7684\u652f\u6301\u73b0\u5728\u662f\u5185\u5efa\u7684\uff0c\u56e0\u6b64\uff0c\u4e0d\u9700\u8981\u7528\u5b83\u7684dll ;;;;;;;;;;;;;;;;;;; ; \u6a21\u5757\u8bbe\u5b9a ; ; Module Settings ; ;;;;;;;;;;;;;;;;;;; [Syslog] define_syslog_variables = Off ; \u662f\u5426\u5b9a\u4e49\u5404\u79cd\u7684\u7cfb\u7edf\u65e5\u5fd7\u53d8\u91cf ; \u5982\uff1a$LOG_PID, $LOG_CRON, \u7b49\u7b49\u3002 ; \u5173\u6389\u5b83\u662f\u4e2a\u63d0\u9ad8\u6548\u7387\u7684\u597d\u4e3b\u610f\u3002 ; \u8fd0\u884c\u65f6\uff0c\u4f60\u53ef\u4ee5\u8c03\u7528\u51fd\u6570define_syslog_variables()\uff0c\u6765\u5b9a\u4e49\u8fd9\u4e9b\u53d8\u91cf [mail function] SMTP = localhost ;\u4ec5\u7528\u4e8ewin32\u7cfb\u7edf sendmail_from = me@localhost.com ;\u4ec5\u7528\u4e8ewin32\u7cfb\u7edf ;sendmail_path = ;\u4ec5\u7528\u4e8eunix, \u4e5f\u53ef\u652f\u6301\u53c2\u6570\uff08\u9ed8\u8ba4\u7684\u662f'sendmail -t -i'\uff09 [Debugger] debugger.host = localhost debugger.port = 7869 debugger.enabled = False [Logging] ; \u8fd9\u4e9b\u914d\u7f6e\u6307\u793a\u7528\u4e8e\u793a\u4f8b\u7684\u65e5\u5fd7\u8bb0\u5f55\u673a\u5236\u3002 ; \u770b examples/README.logging \u4ee5\u5f97\u5230\u66f4\u591a\u7684\u89e3\u91ca ;logging.method = db ;logging.directory = /path/to/log/directory [Java] ;java.class.path = .\\php_java.jar ;java.home = c:\\jdk ;java.library = c:\\jdk\\jre\\bin\\hotspot\\jvm.dll ;java.library.path = .\\ [SQL] sql.safe_mode = Off [ODBC] ;uodbc.default_db = Not yet implemented ;uodbc.default_user = Not yet implemented ;uodbc.default_pw = Not yet implemented uodbc.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 uodbc.check_persistent = On ; \u5728\u91cd\u7528\u524d\u68c0\u67e5\u8fde\u63a5\u662f\u5426\u8fd8\u53ef\u7528 uodbc.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 uodbc.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 uodbc.defaultlrl = 4096 ; \u63a7\u5236 LONG \u7c7b\u578b\u7684\u5b57\u6bb5\u3002\u8fd4\u56de\u53d8\u91cf\u7684\u5b57\u8282\u6570\uff0c0 \u4ee3\u8868\u901a\u8fc7\uff08\uff1f\uff090 means passthru uodbc.defaultbinmode = 1 ; \u63a7\u5236 \u4e8c\u8fdb\u5236\u6570\u636e\u30020 \u4ee3\u8868?????Handling of binary data. 0 means passthru, 1 return as is, 2 convert to char ; \u89c1\u6709\u5173 odbc_binmode \u548c odbc_longreadlen \u7684\u6587\u6863\u4ee5\u5f97\u5230 uodbc.defaultlrl \u548c uodbc.defaultbinmode \u7684\u89e3\u91ca\u3002 [MySQL] mysql.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 mysql.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 mysql.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 mysql.default_port = ; mysql_connect() \u4f7f\u7528\u7684\u9ed8\u8ba4\u7aef\u53e3\uff0c\u5982\u4e0d\u8bbe\u7f6e\uff0cmysql_connect() ; \u5c06\u4f7f\u7528\u53d8\u91cf $MYSQL_TCP_PORT\uff0c\u6216\u5728/etc/services \u4e0b\u7684mysql-tcp \u6761\u76ee(unix)\uff0c ; \u6216\u5728\u7f16\u8bd1\u662f\u5b9a\u4e49\u7684 MYSQL_PORT(\u6309\u8fd9\u6837\u7684\u987a\u5e8f) ; Win32\u73af\u5883\uff0c\u5c06\u4ec5\u68c0\u67e5MYSQL_PORT\u3002 mysql.default_socket = ; \u7528\u4e8e\u672c\u5730 MySql \u8fde\u63a5\u7684\u9ed8\u8ba4\u7684\u5957\u63a5\u5b57\u540d\u3002\u4e3a\u7a7a\uff0c\u4f7f\u7528 MYSQL \u5185\u5efa\u503c mysql.default_host = ; mysql_connect() \u9ed8\u8ba4\u4f7f\u7528\u7684\u4e3b\u673a\uff08\u5b89\u5168\u6a21\u5f0f\u4e0b\u65e0\u6548\uff09 mysql.default_user = ; mysql_connect() \u9ed8\u8ba4\u4f7f\u7528\u7684\u7528\u6237\u540d\uff08\u5b89\u5168\u6a21\u5f0f\u4e0b\u65e0\u6548\uff09 mysql.default_password = ; mysql_connect() \u9ed8\u8ba4\u4f7f\u7528\u7684\u5bc6\u7801\uff08\u5b89\u5168\u6a21\u5f0f\u4e0b\u65e0\u6548\uff09 ; \u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e0b\u4fdd\u5b58\u5bc6\u7801\u901a\u5e38\u662f\u4e00\u4e2a*\u574f*\u4e3b\u610f ; *\u4efb\u4f55*\u53ef\u4ee5\u4f7f\u7528PHP\u8bbf\u95ee\u7684\u7528\u6237\u53ef\u4ee5\u8fd0\u884c ; 'echo cfg_get_var(\" mysql.default_password\" )'\u6765\u663e\u793a\u90a3\u4e2a\u5bc6\u7801! ; \u800c\u4e14\u5f53\u7136\u5730\uff0c\u4efb\u4f55\u6709\u8bfb\u8be5\u6587\u4ef6\u6743\u529b\u7684\u7528\u6237\u4e5f\u80fd\u770b\u5230\u90a3\u4e2a\u5bc6\u7801\u3002 [mSQL] msql.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 msql.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 msql.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 [PostgresSQL] pgsql.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 pgsql.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 pgsql.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 [Sybase] sybase.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 sybase.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 sybase.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 ;sybase.interface_file = \" /usr/sybase/interfaces\" sybase.min_error_severity = 10 ; \u663e\u793a\u7684\u9519\u8bef\u7684\u6700\u4f4e\u4e25\u91cd\u6027 sybase.min_message_severity = 10 ; \u663e\u793a\u7684\u6d88\u606f\u7684\u6700\u4f4e\u91cd\u8981\u6027 sybase.compatability_mode = Off ; \u4e0e\u65e7\u7248\u7684PHP 3.0 \u517c\u5bb9\u7684\u6a21\u5f0f\u3002\u82e5\u6253\u5f00\uff0c\u8fd9\u5c06\u5bfc\u81f4 PHP \u81ea\u52a8\u5730 ; \u628a\u6839\u636e\u7ed3\u679c\u7684 Sybase \u7c7b\u578b\u8d4b\u4e88\u5b83\u4eec\uff0c ; \u800c\u4e0d\u662f\u628a\u5b83\u4eec\u5168\u5f53\u6210\u5b57\u7b26\u4e32\u3002 ; \u8fd9\u4e2a\u517c\u5bb9\u6a21\u5f0f\u4e0d\u4f1a\u6c38\u8fdc\u7559\u7740\uff0c ; \u56e0\u6b64\uff0c\u5c06\u4f60\u7684\u4ee3\u7801\u8fdb\u884c\u9700\u8981\u7684\u4fee\u6539\uff0c ; \u5e76\u5c06\u8be5\u9879\u5173\u95ed\u3002 [Sybase-CT] sybct.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 sybct.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 sybct.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 sybct.min_server_severity = 10 ; \u663e\u793a\u7684\u9519\u8bef\u7684\u6700\u4f4e\u4e25\u91cd\u6027 sybct.min_client_severity = 10 ; \u663e\u793a\u7684\u6d88\u606f\u7684\u6700\u4f4e\u91cd\u8981\u6027 [bcmath] bcmath.scale = 0 ; \u7528\u4e8e\u6240\u6709bcmath\u51fd\u6570\u768410\u5341\u8fdb\u5236\u6570\u6570\u5b57\u7684\u4e2a\u6570number of decimal digits for all bcmath functions [browscap] ;browscap = extra/browscap.ini browscap = C:\\WIN\\SYSTEM\\inetsrv\\browscap.ini [Informix] ifx.default_host = ; ifx_connect() \u9ed8\u8ba4\u4f7f\u7528\u7684\u4e3b\u673a\uff08\u5b89\u5168\u6a21\u5f0f\u4e0b\u65e0\u6548\uff09 ifx.default_user = ; ifx_connect() \u9ed8\u8ba4\u4f7f\u7528\u7684\u7528\u6237\u540d\uff08\u5b89\u5168\u6a21\u5f0f\u4e0b\u65e0\u6548\uff09 ifx.default_password = ; ifx_connect() \u9ed8\u8ba4\u4f7f\u7528\u7684\u5bc6\u7801\uff08\u5b89\u5168\u6a21\u5f0f\u4e0b\u65e0\u6548\uff09 ifx.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 ifx.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 ifx.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 ifx.textasvarchar = 0 ; \u82e5\u6253\u5f00\uff0cselect \u72b6\u6001\u7b26\u8fd4\u56de\u4e00\u4e2a \u2018 text blob\u2019 \u5b57\u6bb5\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5b83\u7684id ifx.byteasvarchar = 0 ; \u82e5\u6253\u5f00\uff0cselect \u72b6\u6001\u7b26\u8fd4\u56de\u4e00\u4e2a \u2018 byte blob\u2019 \u5b57\u6bb5\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5b83\u7684id ifx.charasvarchar = 0 ; \u8ffd\u8e2a\u4ece\u56fa\u5b9a\u957f\u5ea6\u7684\u5b57\u7b26\u5217\u91cc\u5265\u79bb\u7684\u7a7a\u683c\u3002 ; \u53ef\u80fd\u5bf9 Informix SE \u7528\u6237\u6709\u6548\u3002 ifx.blobinfile = 0 ; \u82e5\u6253\u5f00\uff0ctext\u548cbyte blobs \u7684\u5185\u5bb9\u88ab\u5bfc\u51fa\u5230\u4e00\u4e2a\u6587\u4ef6 ; \u800c\u4e0d\u662f\u4fdd\u5b58\u5230\u5185\u5b58\u3002 ifx.nullformat = 0 ; NULL\uff08\u7a7a\uff09\u88ab\u4f5c\u4e3a\u7a7a\u5b57\u6bb5\u8fd4\u56de\uff0c\u9664\u975e\uff0c\u8fd9\u91cc\u88ab\u8bbe\u4e3a1\u3002 ; \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff08\u4e3a1\uff09\uff0cNULL\u4f5c\u4e3a\u5b57\u4e32NULL\u8fd4\u56de\u3002 [Session] session.save_handler = files ; \u7528\u4e8e\u4fdd\u5b58/\u53d6\u56de\u6570\u636e\u7684\u63a7\u5236\u65b9\u5f0f session.save_path = C:\\win\\temp ; \u5728 save_handler \u8bbe\u4e3a\u6587\u4ef6\u65f6\u4f20\u7ed9\u63a7\u5236\u5668\u7684\u53c2\u6570\uff0c ; \u8fd9\u662f\u6570\u636e\u6587\u4ef6\u5c06\u4fdd\u5b58\u7684\u8def\u5f84\u3002 session.use_cookies = 1 ; \u662f\u5426\u4f7f\u7528cookies session.name = PHPSESSID ; \u7528\u5728cookie\u91cc\u7684session\u7684\u540d\u5b57 session.auto_start = 0 ; \u5728\u8bf7\u6c42\u542f\u52a8\u65f6\u521d\u59cb\u5316session session.cookie_lifetime = 0 ; \u4e3a\u6309\u79d2\u8bb0\u7684cookie\u7684\u4fdd\u5b58\u65f6\u95f4\uff0c ; \u6216\u4e3a0\u65f6\uff0c\u76f4\u5230\u6d4f\u89c8\u5668\u88ab\u91cd\u542f session.cookie_path = / ; cookie\u7684\u6709\u6548\u8def\u5f84 session.cookie_domain = ; cookie\u7684\u6709\u6548\u57df session.serialize_handler = php ; \u7528\u4e8e\u8fde\u63a5\u6570\u636e\u7684\u63a7\u5236\u5668 ; php\u662f PHP \u7684\u6807\u51c6\u63a7\u5236\u5668\u3002 session.gc_probability = 1 ; \u6309\u767e\u5206\u6bd4\u7684'garbage collection\uff08\u788e\u7247\u6574\u7406\uff09'\u8fdb\u7a0b ; \u5728\u6bcf\u6b21 session \u521d\u59cb\u5316\u7684\u65f6\u5019\u5f00\u59cb\u7684\u53ef\u80fd\u6027\u3002 session.gc_maxlifetime = 1440 ; \u5728\u8fd9\u91cc\u6570\u5b57\u6240\u6307\u7684\u79d2\u6570\u540e\uff0c\u4fdd\u5b58\u7684\u6570\u636e\u5c06\u88ab\u89c6\u4e3a ; '\u788e\u7247(garbage)'\u5e76\u7531gc \u8fdb\u7a0b\u6e05\u7406\u6389\u3002 session.referer_check = ; \u68c0\u67e5 HTTP\u5f15\u7528\u4ee5\u4f7f\u989d\u5916\u5305\u542b\u4e8eURLs\u4e2d\u7684ids\u65e0\u6548 session.entropy_length = 0 ; \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u591a\u5c11\u5b57\u8282 session.entropy_file = ; \u6307\u5b9a\u8fd9\u91cc\u5efa\u7acb session id ; session.entropy_length = 16 ; session.entropy_file = /dev/urandom session.cache_limiter = nocache ; \u8bbe\u4e3a{nocache,private,public},\u4ee5\u51b3\u5b9a HTTP \u7684 ; \u7f13\u5b58\u95ee\u9898 session.cache_expire = 180 ; \u6587\u6863\u5728 n \u5206\u949f\u540e\u8fc7\u65f6 session.use_trans_sid = 1 ; \u4f7f\u7528\u8fc7\u6e21\u6027\u7684 sid \u652f\u6301\uff0c\u82e5\u7f16\u8bd1\u65f6\u8bb8\u53ef\u4e86 ; --enable-trans-sid url_rewriter.tags = \" a=href,area=href,frame=src,input=src,form=fakeentry\" [MSSQL] ;extension=php_mssql.dll mssql.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 mssql.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 mssql.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 mssql.min_error_severity = 10 ; \u663e\u793a\u7684\u9519\u8bef\u7684\u6700\u4f4e\u4e25\u91cd\u6027 mssql.min_message_severity = 10 ; \u663e\u793a\u7684\u6d88\u606f\u7684\u6700\u4f4e\u91cd\u8981\u6027 mssql.compatability_mode = Off ; \u4e0e\u65e7\u7248\u7684PHP 3.0 \u517c\u5bb9\u7684\u6a21\u5f0f\u3002 [Assertion] ; \uff1f\uff1f\uff1f\uff1f\uff1f ;assert.active = On ; \uff1fassert(expr); active by default ;assert.warning = On ; issue a PHP warning for each failed assertion. ;assert.bail = Off ; don't bail out by default. ;assert.callback = 0 ; user-function to be called if an assertion fails. ;assert.quiet_eval = 0 ; eval the expression with current error_reporting(). set to true if you want error_reporting(0) around the eval(). [Ingres II] ii.allow_persistent = On ; \u5141\u8bb8\u6216\u7981\u6b62 \u6301\u4e45\u8fde\u63a5 ii.max_persistent = -1 ; \u6301\u4e45\u8fde\u63a5\u7684\u6700\u5927\u6570\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 ii.max_links = -1 ; \u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\uff08\u6301\u4e45\u548c\u975e\u6301\u4e45\uff09\u3002-1 \u4ee3\u8868\u65e0\u9650\u5236 ii.default_database = ; \u9ed8\u8ba4 database (format : [node_id::]dbname[/srv_class] ii.default_user = ; \u9ed8\u8ba4 user ii.default_password = ; \u9ed8\u8ba4 password [Verisign Payflow Pro] pfpro.defaulthost = \" test.signio.com\" ; \u9ed8\u8ba4\u7684 Signio \u670d\u52a1\u5668 pfpro.defaultport = 443 ; \u8fde\u63a5\u7684\u9ed8\u8ba4\u7aef\u53e3 pfpro.defaulttimeout = 30 ; \u6309\u79d2\u8ba1\u7684\u9ed8\u8ba4\u8d85\u65f6\u65f6\u95f4 ; pfpro.proxyaddress = ; \u9ed8\u8ba4\u7684\u4ee3\u7406\u7684 IP \u5730\u5740\uff08\u5982\u679c\u9700\u8981\uff09 ; pfpro.proxyport = ; \u9ed8\u8ba4\u7684\u4ee3\u7406\u7684\u7aef\u53e3 ; pfpro.proxylogon = ; \u9ed8\u8ba4\u7684\u4ee3\u7406\u7684\u767b\u5f55\uff08logon \u7528\u6237\u540d\uff09 ; pfpro.proxypassword = ; \u9ed8\u8ba4\u7684\u4ee3\u7406\u7684\u5bc6\u7801 [Sockets] sockets.use_system_read = On ; \u4f7f\u7528\u7cfb\u7edf\u7684read() \u51fd\u6570\u66ff\u4ee3 php_read()\u5c01\u88c5 ; Local Variables: \uff08\u5c40\u90e8\u53d8\u91cf\uff09 ; tab-width: 4 ; End","title":"php.ini\u8be6\u89e3"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/02-Web\u670d\u52a1\u5668\u642d\u5efa/#nginxfastcgiconf","text":"\u4fdd\u5b58factcgi\u7684\u73af\u5883\u53d8\u91cf SCRIPT_FILENAME \u811a\u672c\u6587\u4ef6\u8def\u5f84 \u5982/ usr/local/nginx/html/index.php QUERY_STRING \uff1f\u540e\u9762\u7684\u53c2\u6570 \u5982a = 2&b=2 REQUEST_METHOD \u8bf7\u6c42\u65b9\u5f0f \u5982POST CONTENT_TYPE \u8bf7\u6c42\u5185\u5bb9\u7684\u7c7b\u578b \u5982application/x-www-form-urlencoded CONTENT_LENGTH \u8bf7\u6c42\u5185\u5bb9\u7684\u957f\u5ea6 \u59828 SCRIPT_NAME \u811a\u672c\u6587\u4ef6\u540d \u5982/index.php REQUEST_URI \u8bf7\u6c42URI \u5982/index. php?a = 1&b=1 DOCUMENT_URI\u6587\u6863URI \u5982/index.php DOCUMENT_ROOT \u6587\u6863\u6839\u76ee\u5f55 \u5982/usr/local/nginx/html SERVER_PROTOCOL HTTP\u534f\u8bae\u7248\u672c \u5982HTTP/1.1 REQUEST_SCHEME \u8bf7\u6c42\u534f\u8bae\uff08http\uff0chttps\uff09\u5982http fastcgi_param HTTPS $https if_not_empty; GATEWAY_INTERFACE \u7f51\u5173\u63a5\u53e3 \u5982CGI/1.1 SERVER_SOFTWARE \u670d\u52a1\u5668\u8f6f\u4ef6\u548c\u7248\u672c \u5982nginx/1.10.1 REMOTE_ADDR \u6765\u6e90\u5730\u5740 \u5982192.168.78.1 REMOTE_PORT \u6765\u6e90\u7aef\u53e3 \u598260100 SERVER_ADDR \u670d\u52a1\u5668\u5730\u5740 \u5982192.168.78.3 SERVER_PORT \u670d\u52a1\u5668\u7aef\u53e3 \u598280 SERVER_NAME \u670d\u52a1\u5668\u540d\u79f0 \u5982ng.test # PHP only, required if PHP was built with --enable-force-cgi-redirect fastcgi_param REDIRECT_STATUS 200;","title":"nginx/fastcgi.conf\u8be6\u89e3"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/02-Web\u670d\u52a1\u5668\u642d\u5efa/#nginxapache","text":"\u5b89\u88c5Apache Apache\u7684\u57fa\u672c\u914d\u7f6e Apache\u4e0ePHP\u6574\u5408 \u524d\u63d0\u662fPHP\u5728\u7f16\u8bd1\u65f6\u52a0\u5165\u4e86--with-apxs2=/usr/local/apache2/bin/apxs # Apache\u652f\u6301 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6httpd.conf setHandler application/x-httpd-php # .php\u4ea4\u7ed9\u6a21\u5757 <\\FileMatch> DirectoryIndex index.html index.php # \u52a0\u5165\u7d22\u5f15\u9875 <\\IfModule> Nginx+Apache\u52a8\u9759\u5206\u79bb \u7cfb\u7edf\u6587\u4ef6/etc/host\u52a0\u5165\u4ee5\u4e0b\u6761\u76ee 127.0.0.1 local1.com \u914d\u7f6e\u6587\u4ef6httpd.conf Listen 81 # \u4fee\u6539\u76d1\u542c\u7aef\u53e3 \u914d\u7f6e\u6587\u4ef6httpd-vhosts.conf DocumentRoot \"/var/www/apache2\" ServeraName local1.com Require all granted # \u914d\u7f6e\u8bbf\u95ee\u6743\u9650\uff0c\u5426\u5219\u65e0\u6743\u8bbf\u95ee \u914d\u7f6e\u6587\u4ef6nginx.conf server { listen 80; server_name localhost; root /var/www/apache2; index index.html index.htm index.php location ~ .php$ { proxy_pass http://local1.com:81 ; # \u6307\u5411\u865a\u62df\u4e3b\u673a proxy_set_header Host $host; } }","title":"Nginx+Apache\u73af\u5883"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/02-Web\u670d\u52a1\u5668\u642d\u5efa/#nginxtomcat","text":"\u5b89\u88c5Tomcat \u4e0b\u8f7dJRE\uff08\u6700\u597d\u662fJDK\uff0cdaemon\u8fd0\u884c\u7f16\u8bd1\u9700\u8981\uff09\u548cTomcat,\u89e3\u538btar -zxvf\u540e\u76f4\u63a5\u79fb\u52a8\u5230/usr/local\u4e0b Tomcat\u6dfb\u52a0\u5230\u7cfb\u7edf\u670d\u52a1 tomcat 1.\u4ee5\u975eroot\u7528\u6237\u8fd0\u884c\uff08\u8fd9\u79cd\u65b9\u5f0f\u53ea\u80fd\u4ee5\u975edaemon\u8fd0\u884c\uff09 $ export JAVA_HOME=/usr/local/jre $ sudo -E -u tomcat /usr/local/tomcat/bin/catalina.sh 2.jsvc\u89e3\u51b3\u65b9\u6848 \u8981\u5c06tomcat\u4f5c\u4e3alinux\u7684daemon\u8fd0\u884c\uff0c\u9700\u8981commons-daemon\u5de5\u7a0b\u7684jsvc\u5de5\u5177\uff0ctomcat\u7684bin\u76ee\u5f55\u91cc\u5df2\u7ecf\u81ea\u5e26\u4e86\u8fd9\u4e2a\u5de5\u5177\u7684\u6e90\u7801\u3002 $ cd /usr/local/tomcat/bin/ $ tar -zxvf commons-daemon-native.tar.gz $ cd commons-daemon-1.1.0-native-src/unix/ $ ./configure --with-java=/usr/local/jdk/ $ make # \u751f\u6210jsvc\u53ef\u6267\u884c\u6587\u4ef6 $ cp jsvc ../../ $ cd /usr/local/tomcat/bin/ $ cp daemon.sh /etc/init.d/tomcat # \u5c06\u6587\u4ef6\u590d\u5236\u5230init.d \u4fee\u6539tomcat +# chkconfig: 2345 25 85 #\u6dfb\u52a0\u5230\u5934\u90e8\uff0c\u8fd9\u662f\u670d\u52a1\u914d\u7f6e\u4fe1\u606f +# description: Tomcat daemon project +JAVA_HOME=/opt/jdk #\u914d\u7f6e\u73af\u5883\u53d8\u91cf +CATALINA_HOME=/opt/tomcat ... test \".$TOMCAT_USER\" = . && TOMCAT_USER=daemon #\u5c06tomcat\u7528\u6237\u6539\u4e3adaemon \u66f4\u65b0systemctl\u8868 $ systemctl daemon-reload \u6dfb\u52a0\u7cfb\u7edf\u670d\u52a1 $ chkconfig --add tomcat \u914d\u7f6eNginx+Tomcat\u52a8\u9759\u5206\u79bb nginx.conf\u4e2d\u6dfb\u52a0\u865a\u62df\u4e3b\u673a server { listen 80; server_name www.xx.test; root /usr/local/tomcat/webapps/ROOT; index index.html index.htm index.jsp index.do; location ~ / (WEB-INF|META-INF){ deny all } location ~ \\.(jsp|do)${ proxy_pass http://127.0.0.1:8080; proxy_set_header X-Real-IP $remote_addr; } location ~^/(docs|example)(/.*) * ${ root /usr/local/tomcat/webapps; } }","title":"Nginx+Tomcat\u73af\u5883"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/02-Web\u670d\u52a1\u5668\u642d\u5efa/#openresty","text":"\u5b89\u88c5OpenResty \u5b89\u88c5\u4f9d\u8d56 $ yum -y install perl pcre_devel openssl-devel \u4e0b\u8f7d\u5b89\u88c5OpenResty $ cd /usr/local/src/ $ curl -O https://openresty.org/download/openresty-1.13.6.2.tar.gz $ tar -zxvf openresty-1.13.6.2.tar.gz $ cd cd openresty-1.13.6.2 $ ./configure $ gmake && gmake install \u5b89\u88c5\u76ee\u5f55\u4e2dbin\u6587\u4ef6\u5939\u4e0bopenresty\u6587\u4ef6\u5b9e\u9645\u4e0a\u662f\u8be5\u8f6f\u4ef6\u6574\u5408\u540eopenrestyd\u9879\u76ee\u4e2dnginx\u6587\u4ef6\u7684\u8f6f\u8fde\u63a5\uff0c\u6240\u4ee5\u5c06\u539f\u7248nginx\u6587\u4ef6\u66ff\u6362\u6210openresty\u4e2d\u7684nginx\u7684\u8f6f\u8fde\u63a5\u5373\u53ef $ mv /usr/local/nginx/nginx /usr/local/nginx/nginx.bak # \u5907\u4efdnginx $ cd /usr/local/openresty/nginx/sbin $ ln -s pwd /nginx /usr/local/nginx/nginx # \u5efa\u7acb\u8f6f\u8fde\u63a5","title":"OpenResty\u73af\u5883"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/","text":"\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58 \u00b6 \u53cd\u5411\u4ee3\u7406 \u00b6 \u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u914d\u7f6enginx.conf \uff03\u914d\u7f6e\u57df\u540d\u4e3atest.web1.test\u7684\u865a\u62df\u4e3b\u673a server{ listen 80; server_name test.web1.test; #\u57df\u540dtest.web1.test\u7684\u8bf7\u6c42\u5168\u90e8\u8f6c\u53d1\u5230Web\u670d\u52a1\u5668192.168.1.101 location / { proxy_pass http://192.168.1.101 ; } } \uff03\u914d\u7f6e\u57df\u540d\u4e3atest.web2.test\u7684\u865a\u62df\u4e3b\u673a server{ listen 80; server_name test.web2.test; #\u57df\u540dtest.we2.test\u7684\u8bf7\u6c42\u5168\u90e8\u8f6c\u53d1\u5230Web\u670d\u52a1\u5668192.168.1.102 location / { proxy_pass http://192.168.1.102 ; } } \u5b9e\u9a8c\u5ba2\u6237\u7aef\u914d\u7f6e\uff0chosts\u6587\u4ef6\uff0c...103\u4e3anginx\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u5730\u5740 192.168.1.103 test.web1.test 192.168.1.103 test.web2.test \u53cd\u5411\u4ee3\u7406\u5176\u4ed6\u6307\u4ee4 proxy_set_header \u5728\u5c06\u5ba2\u6237\u7aef\u8bf7\u6c42\u53d1\u9001\u7ed9\u540e\u7aef\u670d\u52a1\u5668\u4e4b\u524d\uff0c\u66f4\u6539\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u5934\u4fe1\u606f proxy_connect_timeout \u914d\u7f6e\u4e0e\u540e\u7aef\u670d\u52a1\u5668\u5c1d\u8bd5\u5efa\u7acb\u8fde\u63a5\u7684\u8d85\u65f6\u65f6\u95f4 proxy_read_ timeout \u914d\u7f6e\u5411\u540e\u7aef\u670d\u52a1\u5668\u7ec4\u53d1\u51faread\u8bf7\u6c42\u540e\uff0c\u7b49\u5f85\u54cd\u5e94\u7684\u8d85\u65f6\u65f6\u95f4 proxy send_timeout \u914d\u7f6e\u5411\u540e\u7aef\u670d\u52a1\u5668\u7ec4\u53d1\u51fawrite\u8bf7\u6c42\u540e\uff0c\u7b49\u5f85\u54cd\u5e94\u7684\u8d85\u65f6\u65f6\u95f4 proxy_redirect \u7528\u4e8e\u4fee\u6539\u540e\u7aef\u670d\u52a1\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u5934\u4e2d\u7684Location\u548cRefresh \u5982 location / { proxy_pass http://192.168.78.200 ; proxy_set_header Host $host; proxy_set header X-Real-IP $remote addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } \u8d1f\u8f7d\u5747\u8861 \u00b6 \u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\u65b9\u5f0f 1\u8f6e\u8be2\u65b9\u5f0f\uff1a\u6309\u65f6\u95f4\u987a\u5e8f 2\u6743\u91cd\u65b9\u5f0f\uff1a\u7528\u4e8e\u540e\u7aef\u670d\u52a1\u5668\u6027\u80fd\u4e0d\u5747\u7684\u60c5\u51b5 3ip_hash\u65b9\u5f0f\uff1a\u6bcf\u4e2a\u8bbf\u5ba2\u56fa\u5b9a\u8bbf\u95ee\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\u5668,\u89e3\u51b3session\u5171\u4eab\u95ee\u9898 4\u7b2c\u4e09\u65b9\u6a21\u5757\u65b9\u5f0f\uff1afair\u6a21\u5757\u6309\u670d\u52a1\u5668\u54cd\u5e94\u65f6\u95f4\u5206\u914d\uff1burl_hash\u6a21\u5757 \u4e00\u822c\u8f6e\u8be2\u8d1f\u8f7d\u5747\u8861 \u4ee3\u7406\u670d\u52a1\u5668\u914d\u7f6enginx.conf \u914d\u7f6e\u57df\u540d\u4e3atest.web.test\u7684\u865a\u62df\u4e3b\u673a \u00b6 server { listen 80; server_name test.web.test; location / { proxy_pass http://web_server; } } \u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u7ec4\uff0c\u670d\u52a1\u5668\u5b95\u6389\u4e0d\u5f71\u54cd\u81ea\u52a8\u8df3\u8fc7 \u00b6 upstream web_server { server 192.168.1.101; server 192.168.1.102; } \u52a0\u6743\u8f6e\u8be2\u8d1f\u8f7d\u5747\u8861 \u4ee3\u7406\u670d\u52a1\u5668\u914d\u7f6enginx.conf \u914d\u7f6e\u57df\u540d\u4e3atest.web.test\u7684\u865a\u62df\u4e3b\u673a \u00b6 server { listen 80; server_name test.web.test; location / { proxy_pass http://web_server; } } \u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u7ec4\uff0c\u6309\u7167\u5206\u6563\u7b97\u6cd5\u5206\u914d\u6982\u7387 \u00b6 upstream web_server { server 192.168.1.101 weight=1; server 192.168.1.102 weight=3; } \u53ef\u4ee5\u6dfb\u52a0\u7684\u72b6\u6001\u53c2\u6570\u4ee5\u7a7a\u683c\u5206\u5272 weight=1\uff1a\u6743\u91cd max_fails=1 \u5141\u8bb8\u8bf7\u6c42\u5931\u8d25\u6b21\u6570\uff0c\u9ed8\u8ba4\u4e3a1 fail_timeout=\u8d85\u8fc7max_fail\u540e\u6682\u505c\u670d\u52a1\u65f6\u95f4 backup \u9884\u7559\u5907\u4efd\u673a\u5668\uff0c\u6240\u6709\u5176\u4ed6\u90fd\u6545\u969c\u6216\u5fd9\u788c\u65f6\u542f\u7528 down \u6682\u65f6\u4e0d\u53c2\u4e0e\u8d1f\u8f7d\u5747\u8861 ip_hash\u8d1f\u8f7d\u5747\u8861 \u914d\u7f6e\u57df\u540d\u4e3atest.web.test\u7684\u865a\u62df\u4e3b\u673a \u00b6 server { listen 80; server_name test.web.test; location / { proxy_pass http://web_server; } } \u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u7ec4\uff0c\u6309\u7167\u5206\u6563\u7b97\u6cd5\u5206\u914d\u6982\u7387 \u00b6 upstream web_server { ip_hash; server 192.168.1.101; server 192.168.1.102; server 192.168.1.103 dwn; } \u6b64\u914d\u7f6e\u4e0b\u4e0d\u53ef\u7528weigit\u548cbackup\u53c2\u6570\u3002ip_hash\u5bb9\u6613\u5f62\u6210\u67d0\u670d\u52a1\u5668\u8bf7\u6c42\u8fc7\u591a\u53e6\u4e00\u670d\u52a1\u5668\u8bf7\u6c42\u8fc7\u5c11\u7684\u60c5\u51b5\u3002 \u5229\u7528\u7b2c\u4e09\u65b9\u6a21\u5757\uff0cfair $ cp -r /usr/local/nginx usr/local/nginx_bak # \u5907\u4efd\u539fnginx $ cd /usr/local/src/ $ curl -O https://codeload.github.com/gnosek/nginx-upstream-fair/zip/master $ unzip mster # unzip\u6307\u4ee4\u9700\u8981yum\u5b89\u88c5 $ mv nginx-upstream-fair-master nginx-upstream-fair # \u89e3\u538b\u6539\u540d\u5373\u53ef $ cd /usr/local/src/nginx-1.15.8 $ /usr/local/nginx/nginx -V \u67e5\u770b\u5f53\u524d./confgure\u9009\u9879\u590d\u5236\u5185\u5bb9\u52a0\u4e0a\u8981\u52a0\u5165\u7684\u6a21\u5757 $ ./configure --sbin-path=/usr/local/nginx/nginx \\ --conf-path=/usr/local/nginx/nginx.conf \\ --pid-path=/usr/local/nginx/nginx.pid \\ --with-http_ssl_module \\ --with-pcre=/usr/local/src/pcre-8.42 \\ --with-zlib=/usr/local/src/zlib-1.2.11 \\ --with-openssl=/usr/local/src/openssl-1.1.1a \\ --add-module=/usr/local/src/nginx-upstream-fair $ make # \u4e0d\u8981install\uff0c\u4f1a\u8986\u76d6\u539f\u5b89\u88c5\u6587\u4ef6 $ /usr/local/nginx/nginx -s stop $ cp objs/nginx /usr/local/nginx/objs/nginx # \u590d\u5236\u751f\u6210\u7684nginx\u6587\u4ef6 $ /usr/local/nginx/nginx \u6ce8\u610f\uff1anginx1.14.0\u4ee5\u4e0a\u4fee\u6539\u6e90\u7801\u6587\u4ef6ngx_http_upstream_fair_module.c 543-if (us->port == 0 && us->default_port == 0) { 543+if (us->port == 0) { 553-u.port = (in_port_t) (us->port ? us->port : us->default_port); 553u.port = us->port; \u914d\u7f6efair\u65b9\u5f0f\u7684\u8d1f\u8f7d\u5747\u8861\uff0cnginx.conf \u914d\u7f6e\u57df\u540d\u4e3atest.web.test\u7684\u865a\u62df\u4e3b\u673a \u00b6 server { listen 80; server_name test.web.test; location / { proxy_pass http://web_server; } } \u914d\u7f6efair\u65b9\u5f0f\u7684\u8d1f\u8f7d\u5747\u8861 \u00b6 upstream web_server { server 192.168.1.101; server 192.168.1.102; fair; } \u7f13\u5b58\u914d\u7f6e \u00b6 \u6c38\u4e45\u7f13\u5b58\u914d\u7f6e Web\u7f13\u5b58\u670d\u52a1\u5668\u914d\u7f6e\uff0cnginx.conf server { listen 80; server_name 192.168.1.100; location / { root cache; # \u6307\u5b9a\u7f13\u5b58\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55cache/\uff0c\u624b\u52a8\u521b\u5efa\u8d4b\u6743 proxy_store on; # \u5f00\u542f\u672c\u5730\u7f13\u5b58 proxy_store_access user:rw group:rw all:r; # \u8bbe\u7f6e\u8bfb\u5199\u89c4\u5219 proxy_temp_path cache_tmp; # \u4e34\u65f6\u7f13\u5b58\u76ee\u5f55\uff0c\u81ea\u52a8\u521b\u5efa # \u5148\u5224\u65ad\u7f13\u5b58\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u5411\u540e\u7aef\u670d\u52a1\u5668\u83b7\u53d6 if(!-e $request_filename){ proxy_pass http://192.168.1.101 ; } } } \u4e34\u65f6\u7f13\u5b58\u914d\u7f6e Web\u7f13\u5b58\u670d\u52a1\u5668\u914d\u7f6e\uff0cnginx.conf http {... \u4ee3\u7406\u4e34\u65f6\u76ee\u5f55 \u00b6 proxy_temp_path /user/local/nginx/proxy_temp_dir web\u7f13\u5b58\u76ee\u5f55\u548c\u53c2\u6570\u914d\u7f6e \u00b6 proxy_cache_path /usr/local/nginx/proxy_cache_dir levels=1:2 keys_zone=cache_one:50m inactive=1m max_size=500m levels1:2 \u6839\u636e\u8bf7\u6c42\u94fe\u63a5\u5730\u5740\u7684hash\u503c\u521b\u5efa\u76ee\u5f55\uff0c\u5982hash=af7098al5e430326197ee01516fdace0\u5219\u7b2c\u4e00\u5c42\u5b50\u76ee\u5f55\u540d\u79f0\u957f\u5ea6\u4e3a1\u5b57\u7b260\uff0c\u7b2c\u4e8c\u5c42\u5b50\u76ee\u5f55\u540d\u79f0\u957f\u5ea6\u4e3a2\u5b57\u7b26ce\u3002 key_zone=50m \u7f13\u5b58\u533a\u540d\u79f0\u53ca\u5927\u5c0f inactive=1m \u6e05\u9664\u672a\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u88ab\u8bbf\u95ee\u7684\u7f13\u5b58\uff0c1m=1\u5206\u949f,1h,1d max_size \u78c1\u76d8\u7a7a\u95f4\u5927\u5c0f500m,10g server { listen 80; server_name test.web.test; # \u589e\u52a0\u4e24\u4e2a\u54cd\u5e94\u5934\u4fe1\u606f\uff0c\u7528\u4e8e\u83b7\u77e5\u8bbf\u95ee\u7684\u670d\u52a1\u5668\u5730\u5740\u4e0e\u7f13\u5b58\u662f\u5426\u6210\u529f add_header X-Via server_addr; # X-Via\u670d\u52a1\u5668\u5730\u5740 add_header X-Cache upstream_cache_status; # X-Cache\u8d44\u6e90\u7f13\u5b58\u72b6\u6001 location / { proxy_cache cache_one # \u8bbe\u7f6e\u7f13\u5b58\u533a\u540d\u79f0 proyx_cache_key host host uriuri upstream_cache_status; # X-Cache\u8d44\u6e90\u7f13\u5b58\u72b6\u6001 location / { proxy_cache cache_one # \u8bbe\u7f6e\u7f13\u5b58\u533a\u540d\u79f0 proyx_cache_key <span><span class=\"MathJax_Preview\">host</span><script type=\"math/tex\">host uriuri is_argsis_args server_addr; # X-Via\u670d\u52a1\u5668\u5730\u5740 add_header X-Cache <span><span class=\"MathJax_Preview\">upstream_cache_status; # X-Cache\u8d44\u6e90\u7f13\u5b58\u72b6\u6001 location / { proxy_cache cache_one # \u8bbe\u7f6e\u7f13\u5b58\u533a\u540d\u79f0 proyx_cache_key <span><span class=\"MathJax_Preview\">host</span><script type=\"math/tex\">host uriuri upstream_cache_status; # X-Cache\u8d44\u6e90\u7f13\u5b58\u72b6\u6001 location / { proxy_cache cache_one # \u8bbe\u7f6e\u7f13\u5b58\u533a\u540d\u79f0 proyx_cache_key <span><span class=\"MathJax_Preview\">host</span><script type=\"math/tex\">host uriuri is_argsis_args args # \u4ee5\u6b64\u7ec4\u5408Key\u503c\u8ba1\u7b97hash proxy_cache_valid 200 10m; # \u72b6\u6001\u7801200\u7f13\u5b5810\u5206\u949f proxy_cache_valid 304 1m; # 304\u7f13\u5b581\u5206\u949f proxy_cache_valid 301 302 1h; # 301 302\u7f13\u5b581\u5c0f\u65f6 proxy_cache_valid any 1m; # \u5176\u4ed6\u72b6\u6001\u7f13\u5b581\u5206\u949f # \u8bbe\u7f6e\u53cd\u5411\u4ee3\u7406 proxy_pass http://192.168.1.101 ; } } \u5176\u4e2d $upstream_cache_status\u8d44\u6e90\u7f13\u5b58\u72b6\u6001 HIT\u7f13\u5b58\u547d\u4e2d MISS\u672a\u547d\u4e2d\uff0c\u8bf7\u6c42\u88ab\u4f20\u5230\u540e\u7aef EXPIRED\u7f13\u5b58\u5df2\u7ecf\u8fc7\u671f\uff0c\u8bf7\u6c42\u88ab\u4f20\u5230\u540e\u7aef UPDATING\u6b63\u5728\u66f4\u65b0\u7f13\u5b58\uff0c\u5c06\u4f7f\u7528\u65e7\u7684\u5e94\u7b54 STALE\u65e0\u6cd5\u4ece\u540e\u7aef\u66f4\u65b0\u7f13\u5b58\uff0c\u4f7f\u7528\u65e7\u7684\u7f13\u5b58\u5185\u5bb9\uff0c\u901a\u8fc7proxy_cache_use_stale BYPASS\u7f13\u5b58\u88ab\u7ed5\u8fc7\uff0c\u901a\u8fc7proxy_cache_bypass REVALIDATED\u901a\u8fc7If-Modified-Since\u8bf7\u6c42\u9a8c\u8bc1\u7f13\u5b58\u662f\u5426\u8fc7\u671f\uff0c\u901a\u8fc7proxy_cache_revalidate $host\uff1a\u5982test.web.test $uri\uff1a\u5982index.html $is_args\uff1a\uff1f\u6216\u7a7a $args\uff1a\u5982a=1&b=2 \u5e38\u7528\u7f13\u5b58\u914d\u7f6e\u6307\u4ee4 proxy_cache_bypass\u4e0d\u4ece\u7f13\u5b58\u83b7\u53d6\u6570\u636e\u7684\u6761\u4ef6 proxy_cache_lock\u662f\u5426\u5f00\u542f\u7f13\u5b58\u9501 proxy_cache_lock_timeout\u7f13\u5b58\u9501\u8d85\u65f6\u65f6\u95f4 proxy_on_cache\u4e0d\u4f7f\u7528\u7f13\u5b58\u529f\u80fd\u7684\u6761\u4ef6 proxy_cache_min_uses\u8d85\u8fc7\u4e00\u5b9a\u8bf7\u6c42\u6570\u7684URL\u624d\u8fdb\u884c\u7f13\u5b58 proxy_cache_revalidate\u901a\u8fc7If-Modified-Since\u8bf7\u6c42\u9a8c\u8bc1\u7f13\u5b58\u662f\u5426\u8fc7\u671f proxy_cache_use_stale\u4f7f\u7528\u65e7\u7684\u7f13\u5b58\u5185\u5bb9 \u7f13\u5b58\u6e05\u7406\u914d\u7f6e\uff0c\u5229\u7528\u7b2c\u4e09\u65b9\u6a21\u5757ngx_cache_purge $ cp -r /usr/local/nginx usr/local/nginx_bak2 # \u5907\u4efd\u539fnginx $ cd /usr/local/src/ $ curl -O http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz $ tar -zxvf ngx_cache_purge-2.3.tar.gz $ mv ngx_cache_purge-2.3 ngx_cache_purge # \u89e3\u538b\u6539\u540d\u5373\u53ef $ cd /usr/local/src/nginx-1.15.8 $ /usr/local/nginx/nginx -V \u67e5\u770b\u5f53\u524d./confgure\u9009\u9879\u590d\u5236\u5185\u5bb9\u52a0\u4e0a\u8981\u52a0\u5165\u7684\u6a21\u5757 $ ./configure --sbin-path=/usr/local/nginx/nginx \\ --conf-path=/usr/local/nginx/nginx.conf \\ --pid-path=/usr/local/nginx/nginx.pid \\ --with-http_ssl_module \\ --with-pcre=/usr/local/src/pcre-8.42 \\ --with-zlib=/usr/local/src/zlib-1.2.11 \\ --with-openssl=/usr/local/src/openssl-1.1.1a \\ --add-module=/usr/local/src/nginx-upstream-fair \\ --add-module=/usr/local/src/ngx_cache_purge $ make # \u4e0d\u8981install\uff0c\u4f1a\u8986\u76d6\u539f\u5b89\u88c5\u6587\u4ef6 $ /usr/local/nginx/nginx -s stop $ cp objs/nginx /usr/local/nginx/objs/nginx # \u590d\u5236\u751f\u6210\u7684nginx\u6587\u4ef6 $ /usr/local/nginx/nginx \u914d\u7f6e\u7f13\u5b58\u6e05\u7406\u529f\u80fd Web\u7f13\u5b58\u670d\u52a1\u5668\u914d\u7f6e\uff0cnginx.conf server{... location ~ /purge(/.*) { allow 192.168.1.100; # \u6307\u5b9aip\u4f7f\u7528\u8be5\u547d\u4ee4 deny all; proxy_cache_purge cache_one host host 1 is_args is_args args } \u5176\u4e2d proxy_cache \u7f13\u5b58\u533a\u540d\u79f0cache_one\uff0c ...Key\u503c\u7ec4\u6210 ...Key\u503c\u7ec4\u6210 1\u76f8\u5f53\u4e8e$uri \u90ae\u4ef6\u670d\u52a1 \u00b6 mail\u6a21\u5757\u5305\u542b\u4ee5\u4e0b\u6a21\u5757 ngx_mail_core_module Nginx\u90ae\u4ef6\u670d\u52a1\u7684\u6838\u5fc3\u529f\u80fd ngx_mail_auth_http_module \u7528\u4e8e\u7528\u6237\u8ba4\u8bc1 ngx_mail_proxy_module \u7528\u4e0e\u90ae\u4ef6\u4ee3\u7406 ngx_mail_smtp_module \u7528\u4e8eSMTP\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\u7684\u76f8\u5173\u8bbe\u7f6e ngx_mail_pop3_module \u7528\u4e8ePOP\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\u7684\u76f8\u5173\u8bbe\u7f6e ngx_mail_imap_module \u7528\u4e8eIMAP\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\u7684\u76f8\u5173\u8bbe\u7f6e ngx_mail_ssl_module \u652f\u6301\u57fa\u4e8eSSL/TLS\u534f\u8bae\u529f\u80fd\uff0c\u8981\u6c42OpenSSL\u5e93\u7684\u652f\u6301 \u91cd\u65b0\u7f16\u8bd1\u8981\u589e\u52a0\u7684\u6307\u4ee4 $ ./configure \\ --prefix=/usr/local/nginx --with-http_ssl_module --with-mail --with-mail_ssl_module $ make # \u8981\u662f\u589e\u52a0\u529f\u80fd\u4e0d\u8981install Nginx\u90ae\u4ef6\u4ee3\u7406\u670d\u52a1\u5668\u914d\u7f6enginx.conf mail { # \u90ae\u4ef6\u8ba4\u8bc1\u670d\u52a1\u5668\u7684\u8bbf\u95eeurl auth_http 192.168.1.101:8009/auth.php; #\u6bcf\u4e2a\u8bf7\u6c42\u6240\u4f7f\u7528\u7684\u5185\u5b58\u7f13\u51b2\u533a\u5927\u5c0f proxy_buffer 4k; #\u6dfb\u52a0\u5bf9POP3\u7684\u652f\u6301 server { listen 110; protocol pop3; proxy on; } #\u6dfb\u52a0\u5bf9IMAP\u7684\u652f\u6301 server { listen 143; protocol IMAP; #\u8bbe\u7f6e\u63a5\u6536\u521d\u59cb\u5ba2\u6237\u7aef\u8bf7\u6c42\u7f13\u51b2\u533a\u5927\u5c0f imap_client_buffer 4k; proxy on; } #\u6dfb\u52a0\u5bf9SMTP\u7684\u652f\u6301 server { listen 25; protocol smtp; #\u8bbe\u7f6e\u63a5\u6536\u521d\u59cb\u5ba2\u6237\u7aef\u8bf7\u6c42\u7f13\u51b2\u533a\u5927\u5c0f smtp_client_buffer 4k; xclient off; } } \u90ae\u4ef6\u670d\u52a1\u914d\u7f6e\u6307\u4ee4 listen \u90ae\u4ef6\u670d\u52a1\u5668\u76d1\u542c\u7684IP\u5730\u5740\u548c\u7aef\u53e3 server_name \u4e3a\u6bcf\u4e2aserver\u5757\u6784\u6210\u7684\u865a\u62df\u4e3b\u673a\u914d\u7f6e\u7684\u57df\u540d protocol \u5f53\u524d\u865a\u62df\u4e3b\u673a\u652f\u6301\u7684\u534f\u8bae so_keepalive \u540e\u7aef\u4ee3\u7406\u670d\u52a1\u5668\u662f\u5426\u542f\u7528TCP keepalive\u6a21\u5f0f\u6765\u5904\u7406 Nginx\u90ae\u4ef6\u670d\u52a1\u5668\u8f6c\u53d1\u7684\u5ba2\u6237\u7aef\u8fde\u63a5 pop3_auth \u7528\u4e8e\u914d\u7f6ePOP3\u8ba4\u8bc1\u7528\u6237\u7684\u65b9\u5f0f pop3_capabilities \u7528\u4e8e\u914d\u7f6ePOP3\u534f\u8bae\u7684\u6269\u5c55\u529f\u80fd imap_auth \u7528\u4e8e\u914d\u7f6eIMAP\u8ba4\u8bc1\u7528\u6237\u7684\u65b9\u5f0f imap_capabilities \u7528\u4e8e\u914d\u7f6eIMAP\u534f\u8bae\u7684\u6269\u5c55\u529f\u80fd imap_client_buffer \u7528\u4e8e\u914d\u7f6eIMAP\u534f\u8bae\u6570\u636e\u7f13\u5b58\u7684\u5927\u5c0f smtp_auth \u7528\u4e8e\u914d\u7f6eSMTP\u8ba4\u8bc1\u7528\u6237\u7684\u65b9\u5f0f smtp_capabilities \u7528\u4e8e\u914d\u7f6eSMTP\u534f\u8bae\u7684\u6269\u5c55\u529f\u80fd auth_http_header Nginx\u670d\u52a1\u5668\u5411HTTP\u8ba4\u8bc1\u670d\u52a1\u5668\u53d1\u8d77\u7684\u8ba4\u8bc1\u8bf7\u6c42\u65f6\uff0c\u6dfb\u52a0\u6307\u5b9a\u7684\u8bf7\u6c42\u5934 auth_http_timeout \u914d\u7f6eNginx\u670d\u52a1\u5668\u5411HTTP\u8ba4\u8bc1\u670d\u52a1\u5668\u53d1\u8d77\u8ba4\u8bc1\u8bf7\u6c42\u540e\uff0c\u7b49\u5f85\u54cd\u5e94\u7684\u8d85\u65f6\u65f6\u95f4 proxy_pass_error_message \u7528\u6765\u914d\u7f6e\u662f\u5426\u5c06\u540e\u7aef\u670d\u52a1\u5668\u4e0a\u90ae\u4ef6\u670d\u52a1\u8ba4\u8bc1\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u9519\u8bef\u4fe1\u606f\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef proxy_ timeout \u8bbe\u7f6e\u5ba2\u6237\u7aef\u4e0e\u4ee3\u7406\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8d85\u65f6\u65f6\u95f4 xclient \u53ef\u4ee5\u5f00\u542f\u6216\u8005\u5173\u95ed\u547d\u4ee4XCLIENT\u7684SMTP\u540e\u7aef\u8fde\u63a5\uff0c\u4f7f\u5f97\u540e\u7aef\u53ef\u4ee5\u5f3a\u5236\u901a\u8fc7 IP\u3001HELO\u6216LOGIN\u9650\u5b9a\u5ba2\u6237\u7aef","title":"\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#_1","text":"","title":"\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#_2","text":"\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u914d\u7f6enginx.conf \uff03\u914d\u7f6e\u57df\u540d\u4e3atest.web1.test\u7684\u865a\u62df\u4e3b\u673a server{ listen 80; server_name test.web1.test; #\u57df\u540dtest.web1.test\u7684\u8bf7\u6c42\u5168\u90e8\u8f6c\u53d1\u5230Web\u670d\u52a1\u5668192.168.1.101 location / { proxy_pass http://192.168.1.101 ; } } \uff03\u914d\u7f6e\u57df\u540d\u4e3atest.web2.test\u7684\u865a\u62df\u4e3b\u673a server{ listen 80; server_name test.web2.test; #\u57df\u540dtest.we2.test\u7684\u8bf7\u6c42\u5168\u90e8\u8f6c\u53d1\u5230Web\u670d\u52a1\u5668192.168.1.102 location / { proxy_pass http://192.168.1.102 ; } } \u5b9e\u9a8c\u5ba2\u6237\u7aef\u914d\u7f6e\uff0chosts\u6587\u4ef6\uff0c...103\u4e3anginx\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u5730\u5740 192.168.1.103 test.web1.test 192.168.1.103 test.web2.test \u53cd\u5411\u4ee3\u7406\u5176\u4ed6\u6307\u4ee4 proxy_set_header \u5728\u5c06\u5ba2\u6237\u7aef\u8bf7\u6c42\u53d1\u9001\u7ed9\u540e\u7aef\u670d\u52a1\u5668\u4e4b\u524d\uff0c\u66f4\u6539\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u5934\u4fe1\u606f proxy_connect_timeout \u914d\u7f6e\u4e0e\u540e\u7aef\u670d\u52a1\u5668\u5c1d\u8bd5\u5efa\u7acb\u8fde\u63a5\u7684\u8d85\u65f6\u65f6\u95f4 proxy_read_ timeout \u914d\u7f6e\u5411\u540e\u7aef\u670d\u52a1\u5668\u7ec4\u53d1\u51faread\u8bf7\u6c42\u540e\uff0c\u7b49\u5f85\u54cd\u5e94\u7684\u8d85\u65f6\u65f6\u95f4 proxy send_timeout \u914d\u7f6e\u5411\u540e\u7aef\u670d\u52a1\u5668\u7ec4\u53d1\u51fawrite\u8bf7\u6c42\u540e\uff0c\u7b49\u5f85\u54cd\u5e94\u7684\u8d85\u65f6\u65f6\u95f4 proxy_redirect \u7528\u4e8e\u4fee\u6539\u540e\u7aef\u670d\u52a1\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u5934\u4e2d\u7684Location\u548cRefresh \u5982 location / { proxy_pass http://192.168.78.200 ; proxy_set_header Host $host; proxy_set header X-Real-IP $remote addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; }","title":"\u53cd\u5411\u4ee3\u7406"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#_3","text":"\u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\u65b9\u5f0f 1\u8f6e\u8be2\u65b9\u5f0f\uff1a\u6309\u65f6\u95f4\u987a\u5e8f 2\u6743\u91cd\u65b9\u5f0f\uff1a\u7528\u4e8e\u540e\u7aef\u670d\u52a1\u5668\u6027\u80fd\u4e0d\u5747\u7684\u60c5\u51b5 3ip_hash\u65b9\u5f0f\uff1a\u6bcf\u4e2a\u8bbf\u5ba2\u56fa\u5b9a\u8bbf\u95ee\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\u5668,\u89e3\u51b3session\u5171\u4eab\u95ee\u9898 4\u7b2c\u4e09\u65b9\u6a21\u5757\u65b9\u5f0f\uff1afair\u6a21\u5757\u6309\u670d\u52a1\u5668\u54cd\u5e94\u65f6\u95f4\u5206\u914d\uff1burl_hash\u6a21\u5757 \u4e00\u822c\u8f6e\u8be2\u8d1f\u8f7d\u5747\u8861 \u4ee3\u7406\u670d\u52a1\u5668\u914d\u7f6enginx.conf","title":"\u8d1f\u8f7d\u5747\u8861"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#testwebtest","text":"server { listen 80; server_name test.web.test; location / { proxy_pass http://web_server; } }","title":"\u914d\u7f6e\u57df\u540d\u4e3atest.web.test\u7684\u865a\u62df\u4e3b\u673a"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#_4","text":"upstream web_server { server 192.168.1.101; server 192.168.1.102; } \u52a0\u6743\u8f6e\u8be2\u8d1f\u8f7d\u5747\u8861 \u4ee3\u7406\u670d\u52a1\u5668\u914d\u7f6enginx.conf","title":"\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u7ec4\uff0c\u670d\u52a1\u5668\u5b95\u6389\u4e0d\u5f71\u54cd\u81ea\u52a8\u8df3\u8fc7"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#testwebtest_1","text":"server { listen 80; server_name test.web.test; location / { proxy_pass http://web_server; } }","title":"\u914d\u7f6e\u57df\u540d\u4e3atest.web.test\u7684\u865a\u62df\u4e3b\u673a"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#_5","text":"upstream web_server { server 192.168.1.101 weight=1; server 192.168.1.102 weight=3; } \u53ef\u4ee5\u6dfb\u52a0\u7684\u72b6\u6001\u53c2\u6570\u4ee5\u7a7a\u683c\u5206\u5272 weight=1\uff1a\u6743\u91cd max_fails=1 \u5141\u8bb8\u8bf7\u6c42\u5931\u8d25\u6b21\u6570\uff0c\u9ed8\u8ba4\u4e3a1 fail_timeout=\u8d85\u8fc7max_fail\u540e\u6682\u505c\u670d\u52a1\u65f6\u95f4 backup \u9884\u7559\u5907\u4efd\u673a\u5668\uff0c\u6240\u6709\u5176\u4ed6\u90fd\u6545\u969c\u6216\u5fd9\u788c\u65f6\u542f\u7528 down \u6682\u65f6\u4e0d\u53c2\u4e0e\u8d1f\u8f7d\u5747\u8861 ip_hash\u8d1f\u8f7d\u5747\u8861","title":"\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u7ec4\uff0c\u6309\u7167\u5206\u6563\u7b97\u6cd5\u5206\u914d\u6982\u7387"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#testwebtest_2","text":"server { listen 80; server_name test.web.test; location / { proxy_pass http://web_server; } }","title":"\u914d\u7f6e\u57df\u540d\u4e3atest.web.test\u7684\u865a\u62df\u4e3b\u673a"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#_6","text":"upstream web_server { ip_hash; server 192.168.1.101; server 192.168.1.102; server 192.168.1.103 dwn; } \u6b64\u914d\u7f6e\u4e0b\u4e0d\u53ef\u7528weigit\u548cbackup\u53c2\u6570\u3002ip_hash\u5bb9\u6613\u5f62\u6210\u67d0\u670d\u52a1\u5668\u8bf7\u6c42\u8fc7\u591a\u53e6\u4e00\u670d\u52a1\u5668\u8bf7\u6c42\u8fc7\u5c11\u7684\u60c5\u51b5\u3002 \u5229\u7528\u7b2c\u4e09\u65b9\u6a21\u5757\uff0cfair $ cp -r /usr/local/nginx usr/local/nginx_bak # \u5907\u4efd\u539fnginx $ cd /usr/local/src/ $ curl -O https://codeload.github.com/gnosek/nginx-upstream-fair/zip/master $ unzip mster # unzip\u6307\u4ee4\u9700\u8981yum\u5b89\u88c5 $ mv nginx-upstream-fair-master nginx-upstream-fair # \u89e3\u538b\u6539\u540d\u5373\u53ef $ cd /usr/local/src/nginx-1.15.8 $ /usr/local/nginx/nginx -V \u67e5\u770b\u5f53\u524d./confgure\u9009\u9879\u590d\u5236\u5185\u5bb9\u52a0\u4e0a\u8981\u52a0\u5165\u7684\u6a21\u5757 $ ./configure --sbin-path=/usr/local/nginx/nginx \\ --conf-path=/usr/local/nginx/nginx.conf \\ --pid-path=/usr/local/nginx/nginx.pid \\ --with-http_ssl_module \\ --with-pcre=/usr/local/src/pcre-8.42 \\ --with-zlib=/usr/local/src/zlib-1.2.11 \\ --with-openssl=/usr/local/src/openssl-1.1.1a \\ --add-module=/usr/local/src/nginx-upstream-fair $ make # \u4e0d\u8981install\uff0c\u4f1a\u8986\u76d6\u539f\u5b89\u88c5\u6587\u4ef6 $ /usr/local/nginx/nginx -s stop $ cp objs/nginx /usr/local/nginx/objs/nginx # \u590d\u5236\u751f\u6210\u7684nginx\u6587\u4ef6 $ /usr/local/nginx/nginx \u6ce8\u610f\uff1anginx1.14.0\u4ee5\u4e0a\u4fee\u6539\u6e90\u7801\u6587\u4ef6ngx_http_upstream_fair_module.c 543-if (us->port == 0 && us->default_port == 0) { 543+if (us->port == 0) { 553-u.port = (in_port_t) (us->port ? us->port : us->default_port); 553u.port = us->port; \u914d\u7f6efair\u65b9\u5f0f\u7684\u8d1f\u8f7d\u5747\u8861\uff0cnginx.conf","title":"\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u7ec4\uff0c\u6309\u7167\u5206\u6563\u7b97\u6cd5\u5206\u914d\u6982\u7387"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#testwebtest_3","text":"server { listen 80; server_name test.web.test; location / { proxy_pass http://web_server; } }","title":"\u914d\u7f6e\u57df\u540d\u4e3atest.web.test\u7684\u865a\u62df\u4e3b\u673a"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#fair","text":"upstream web_server { server 192.168.1.101; server 192.168.1.102; fair; }","title":"\u914d\u7f6efair\u65b9\u5f0f\u7684\u8d1f\u8f7d\u5747\u8861"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#_7","text":"\u6c38\u4e45\u7f13\u5b58\u914d\u7f6e Web\u7f13\u5b58\u670d\u52a1\u5668\u914d\u7f6e\uff0cnginx.conf server { listen 80; server_name 192.168.1.100; location / { root cache; # \u6307\u5b9a\u7f13\u5b58\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55cache/\uff0c\u624b\u52a8\u521b\u5efa\u8d4b\u6743 proxy_store on; # \u5f00\u542f\u672c\u5730\u7f13\u5b58 proxy_store_access user:rw group:rw all:r; # \u8bbe\u7f6e\u8bfb\u5199\u89c4\u5219 proxy_temp_path cache_tmp; # \u4e34\u65f6\u7f13\u5b58\u76ee\u5f55\uff0c\u81ea\u52a8\u521b\u5efa # \u5148\u5224\u65ad\u7f13\u5b58\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u5411\u540e\u7aef\u670d\u52a1\u5668\u83b7\u53d6 if(!-e $request_filename){ proxy_pass http://192.168.1.101 ; } } } \u4e34\u65f6\u7f13\u5b58\u914d\u7f6e Web\u7f13\u5b58\u670d\u52a1\u5668\u914d\u7f6e\uff0cnginx.conf http {...","title":"\u7f13\u5b58\u914d\u7f6e"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#_8","text":"proxy_temp_path /user/local/nginx/proxy_temp_dir","title":"\u4ee3\u7406\u4e34\u65f6\u76ee\u5f55"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#web","text":"proxy_cache_path /usr/local/nginx/proxy_cache_dir levels=1:2 keys_zone=cache_one:50m inactive=1m max_size=500m levels1:2 \u6839\u636e\u8bf7\u6c42\u94fe\u63a5\u5730\u5740\u7684hash\u503c\u521b\u5efa\u76ee\u5f55\uff0c\u5982hash=af7098al5e430326197ee01516fdace0\u5219\u7b2c\u4e00\u5c42\u5b50\u76ee\u5f55\u540d\u79f0\u957f\u5ea6\u4e3a1\u5b57\u7b260\uff0c\u7b2c\u4e8c\u5c42\u5b50\u76ee\u5f55\u540d\u79f0\u957f\u5ea6\u4e3a2\u5b57\u7b26ce\u3002 key_zone=50m \u7f13\u5b58\u533a\u540d\u79f0\u53ca\u5927\u5c0f inactive=1m \u6e05\u9664\u672a\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u88ab\u8bbf\u95ee\u7684\u7f13\u5b58\uff0c1m=1\u5206\u949f,1h,1d max_size \u78c1\u76d8\u7a7a\u95f4\u5927\u5c0f500m,10g server { listen 80; server_name test.web.test; # \u589e\u52a0\u4e24\u4e2a\u54cd\u5e94\u5934\u4fe1\u606f\uff0c\u7528\u4e8e\u83b7\u77e5\u8bbf\u95ee\u7684\u670d\u52a1\u5668\u5730\u5740\u4e0e\u7f13\u5b58\u662f\u5426\u6210\u529f add_header X-Via server_addr; # X-Via\u670d\u52a1\u5668\u5730\u5740 add_header X-Cache upstream_cache_status; # X-Cache\u8d44\u6e90\u7f13\u5b58\u72b6\u6001 location / { proxy_cache cache_one # \u8bbe\u7f6e\u7f13\u5b58\u533a\u540d\u79f0 proyx_cache_key host host uriuri upstream_cache_status; # X-Cache\u8d44\u6e90\u7f13\u5b58\u72b6\u6001 location / { proxy_cache cache_one # \u8bbe\u7f6e\u7f13\u5b58\u533a\u540d\u79f0 proyx_cache_key <span><span class=\"MathJax_Preview\">host</span><script type=\"math/tex\">host uriuri is_argsis_args server_addr; # X-Via\u670d\u52a1\u5668\u5730\u5740 add_header X-Cache <span><span class=\"MathJax_Preview\">upstream_cache_status; # X-Cache\u8d44\u6e90\u7f13\u5b58\u72b6\u6001 location / { proxy_cache cache_one # \u8bbe\u7f6e\u7f13\u5b58\u533a\u540d\u79f0 proyx_cache_key <span><span class=\"MathJax_Preview\">host</span><script type=\"math/tex\">host uriuri upstream_cache_status; # X-Cache\u8d44\u6e90\u7f13\u5b58\u72b6\u6001 location / { proxy_cache cache_one # \u8bbe\u7f6e\u7f13\u5b58\u533a\u540d\u79f0 proyx_cache_key <span><span class=\"MathJax_Preview\">host</span><script type=\"math/tex\">host uriuri is_argsis_args args # \u4ee5\u6b64\u7ec4\u5408Key\u503c\u8ba1\u7b97hash proxy_cache_valid 200 10m; # \u72b6\u6001\u7801200\u7f13\u5b5810\u5206\u949f proxy_cache_valid 304 1m; # 304\u7f13\u5b581\u5206\u949f proxy_cache_valid 301 302 1h; # 301 302\u7f13\u5b581\u5c0f\u65f6 proxy_cache_valid any 1m; # \u5176\u4ed6\u72b6\u6001\u7f13\u5b581\u5206\u949f # \u8bbe\u7f6e\u53cd\u5411\u4ee3\u7406 proxy_pass http://192.168.1.101 ; } } \u5176\u4e2d $upstream_cache_status\u8d44\u6e90\u7f13\u5b58\u72b6\u6001 HIT\u7f13\u5b58\u547d\u4e2d MISS\u672a\u547d\u4e2d\uff0c\u8bf7\u6c42\u88ab\u4f20\u5230\u540e\u7aef EXPIRED\u7f13\u5b58\u5df2\u7ecf\u8fc7\u671f\uff0c\u8bf7\u6c42\u88ab\u4f20\u5230\u540e\u7aef UPDATING\u6b63\u5728\u66f4\u65b0\u7f13\u5b58\uff0c\u5c06\u4f7f\u7528\u65e7\u7684\u5e94\u7b54 STALE\u65e0\u6cd5\u4ece\u540e\u7aef\u66f4\u65b0\u7f13\u5b58\uff0c\u4f7f\u7528\u65e7\u7684\u7f13\u5b58\u5185\u5bb9\uff0c\u901a\u8fc7proxy_cache_use_stale BYPASS\u7f13\u5b58\u88ab\u7ed5\u8fc7\uff0c\u901a\u8fc7proxy_cache_bypass REVALIDATED\u901a\u8fc7If-Modified-Since\u8bf7\u6c42\u9a8c\u8bc1\u7f13\u5b58\u662f\u5426\u8fc7\u671f\uff0c\u901a\u8fc7proxy_cache_revalidate $host\uff1a\u5982test.web.test $uri\uff1a\u5982index.html $is_args\uff1a\uff1f\u6216\u7a7a $args\uff1a\u5982a=1&b=2 \u5e38\u7528\u7f13\u5b58\u914d\u7f6e\u6307\u4ee4 proxy_cache_bypass\u4e0d\u4ece\u7f13\u5b58\u83b7\u53d6\u6570\u636e\u7684\u6761\u4ef6 proxy_cache_lock\u662f\u5426\u5f00\u542f\u7f13\u5b58\u9501 proxy_cache_lock_timeout\u7f13\u5b58\u9501\u8d85\u65f6\u65f6\u95f4 proxy_on_cache\u4e0d\u4f7f\u7528\u7f13\u5b58\u529f\u80fd\u7684\u6761\u4ef6 proxy_cache_min_uses\u8d85\u8fc7\u4e00\u5b9a\u8bf7\u6c42\u6570\u7684URL\u624d\u8fdb\u884c\u7f13\u5b58 proxy_cache_revalidate\u901a\u8fc7If-Modified-Since\u8bf7\u6c42\u9a8c\u8bc1\u7f13\u5b58\u662f\u5426\u8fc7\u671f proxy_cache_use_stale\u4f7f\u7528\u65e7\u7684\u7f13\u5b58\u5185\u5bb9 \u7f13\u5b58\u6e05\u7406\u914d\u7f6e\uff0c\u5229\u7528\u7b2c\u4e09\u65b9\u6a21\u5757ngx_cache_purge $ cp -r /usr/local/nginx usr/local/nginx_bak2 # \u5907\u4efd\u539fnginx $ cd /usr/local/src/ $ curl -O http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz $ tar -zxvf ngx_cache_purge-2.3.tar.gz $ mv ngx_cache_purge-2.3 ngx_cache_purge # \u89e3\u538b\u6539\u540d\u5373\u53ef $ cd /usr/local/src/nginx-1.15.8 $ /usr/local/nginx/nginx -V \u67e5\u770b\u5f53\u524d./confgure\u9009\u9879\u590d\u5236\u5185\u5bb9\u52a0\u4e0a\u8981\u52a0\u5165\u7684\u6a21\u5757 $ ./configure --sbin-path=/usr/local/nginx/nginx \\ --conf-path=/usr/local/nginx/nginx.conf \\ --pid-path=/usr/local/nginx/nginx.pid \\ --with-http_ssl_module \\ --with-pcre=/usr/local/src/pcre-8.42 \\ --with-zlib=/usr/local/src/zlib-1.2.11 \\ --with-openssl=/usr/local/src/openssl-1.1.1a \\ --add-module=/usr/local/src/nginx-upstream-fair \\ --add-module=/usr/local/src/ngx_cache_purge $ make # \u4e0d\u8981install\uff0c\u4f1a\u8986\u76d6\u539f\u5b89\u88c5\u6587\u4ef6 $ /usr/local/nginx/nginx -s stop $ cp objs/nginx /usr/local/nginx/objs/nginx # \u590d\u5236\u751f\u6210\u7684nginx\u6587\u4ef6 $ /usr/local/nginx/nginx \u914d\u7f6e\u7f13\u5b58\u6e05\u7406\u529f\u80fd Web\u7f13\u5b58\u670d\u52a1\u5668\u914d\u7f6e\uff0cnginx.conf server{... location ~ /purge(/.*) { allow 192.168.1.100; # \u6307\u5b9aip\u4f7f\u7528\u8be5\u547d\u4ee4 deny all; proxy_cache_purge cache_one host host 1 is_args is_args args } \u5176\u4e2d proxy_cache \u7f13\u5b58\u533a\u540d\u79f0cache_one\uff0c ...Key\u503c\u7ec4\u6210 ...Key\u503c\u7ec4\u6210 1\u76f8\u5f53\u4e8e$uri","title":"web\u7f13\u5b58\u76ee\u5f55\u548c\u53c2\u6570\u914d\u7f6e"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/03-\u8d1f\u8f7d\u5747\u8861\u4e0e\u7f13\u5b58/#_9","text":"mail\u6a21\u5757\u5305\u542b\u4ee5\u4e0b\u6a21\u5757 ngx_mail_core_module Nginx\u90ae\u4ef6\u670d\u52a1\u7684\u6838\u5fc3\u529f\u80fd ngx_mail_auth_http_module \u7528\u4e8e\u7528\u6237\u8ba4\u8bc1 ngx_mail_proxy_module \u7528\u4e0e\u90ae\u4ef6\u4ee3\u7406 ngx_mail_smtp_module \u7528\u4e8eSMTP\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\u7684\u76f8\u5173\u8bbe\u7f6e ngx_mail_pop3_module \u7528\u4e8ePOP\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\u7684\u76f8\u5173\u8bbe\u7f6e ngx_mail_imap_module \u7528\u4e8eIMAP\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\u7684\u76f8\u5173\u8bbe\u7f6e ngx_mail_ssl_module \u652f\u6301\u57fa\u4e8eSSL/TLS\u534f\u8bae\u529f\u80fd\uff0c\u8981\u6c42OpenSSL\u5e93\u7684\u652f\u6301 \u91cd\u65b0\u7f16\u8bd1\u8981\u589e\u52a0\u7684\u6307\u4ee4 $ ./configure \\ --prefix=/usr/local/nginx --with-http_ssl_module --with-mail --with-mail_ssl_module $ make # \u8981\u662f\u589e\u52a0\u529f\u80fd\u4e0d\u8981install Nginx\u90ae\u4ef6\u4ee3\u7406\u670d\u52a1\u5668\u914d\u7f6enginx.conf mail { # \u90ae\u4ef6\u8ba4\u8bc1\u670d\u52a1\u5668\u7684\u8bbf\u95eeurl auth_http 192.168.1.101:8009/auth.php; #\u6bcf\u4e2a\u8bf7\u6c42\u6240\u4f7f\u7528\u7684\u5185\u5b58\u7f13\u51b2\u533a\u5927\u5c0f proxy_buffer 4k; #\u6dfb\u52a0\u5bf9POP3\u7684\u652f\u6301 server { listen 110; protocol pop3; proxy on; } #\u6dfb\u52a0\u5bf9IMAP\u7684\u652f\u6301 server { listen 143; protocol IMAP; #\u8bbe\u7f6e\u63a5\u6536\u521d\u59cb\u5ba2\u6237\u7aef\u8bf7\u6c42\u7f13\u51b2\u533a\u5927\u5c0f imap_client_buffer 4k; proxy on; } #\u6dfb\u52a0\u5bf9SMTP\u7684\u652f\u6301 server { listen 25; protocol smtp; #\u8bbe\u7f6e\u63a5\u6536\u521d\u59cb\u5ba2\u6237\u7aef\u8bf7\u6c42\u7f13\u51b2\u533a\u5927\u5c0f smtp_client_buffer 4k; xclient off; } } \u90ae\u4ef6\u670d\u52a1\u914d\u7f6e\u6307\u4ee4 listen \u90ae\u4ef6\u670d\u52a1\u5668\u76d1\u542c\u7684IP\u5730\u5740\u548c\u7aef\u53e3 server_name \u4e3a\u6bcf\u4e2aserver\u5757\u6784\u6210\u7684\u865a\u62df\u4e3b\u673a\u914d\u7f6e\u7684\u57df\u540d protocol \u5f53\u524d\u865a\u62df\u4e3b\u673a\u652f\u6301\u7684\u534f\u8bae so_keepalive \u540e\u7aef\u4ee3\u7406\u670d\u52a1\u5668\u662f\u5426\u542f\u7528TCP keepalive\u6a21\u5f0f\u6765\u5904\u7406 Nginx\u90ae\u4ef6\u670d\u52a1\u5668\u8f6c\u53d1\u7684\u5ba2\u6237\u7aef\u8fde\u63a5 pop3_auth \u7528\u4e8e\u914d\u7f6ePOP3\u8ba4\u8bc1\u7528\u6237\u7684\u65b9\u5f0f pop3_capabilities \u7528\u4e8e\u914d\u7f6ePOP3\u534f\u8bae\u7684\u6269\u5c55\u529f\u80fd imap_auth \u7528\u4e8e\u914d\u7f6eIMAP\u8ba4\u8bc1\u7528\u6237\u7684\u65b9\u5f0f imap_capabilities \u7528\u4e8e\u914d\u7f6eIMAP\u534f\u8bae\u7684\u6269\u5c55\u529f\u80fd imap_client_buffer \u7528\u4e8e\u914d\u7f6eIMAP\u534f\u8bae\u6570\u636e\u7f13\u5b58\u7684\u5927\u5c0f smtp_auth \u7528\u4e8e\u914d\u7f6eSMTP\u8ba4\u8bc1\u7528\u6237\u7684\u65b9\u5f0f smtp_capabilities \u7528\u4e8e\u914d\u7f6eSMTP\u534f\u8bae\u7684\u6269\u5c55\u529f\u80fd auth_http_header Nginx\u670d\u52a1\u5668\u5411HTTP\u8ba4\u8bc1\u670d\u52a1\u5668\u53d1\u8d77\u7684\u8ba4\u8bc1\u8bf7\u6c42\u65f6\uff0c\u6dfb\u52a0\u6307\u5b9a\u7684\u8bf7\u6c42\u5934 auth_http_timeout \u914d\u7f6eNginx\u670d\u52a1\u5668\u5411HTTP\u8ba4\u8bc1\u670d\u52a1\u5668\u53d1\u8d77\u8ba4\u8bc1\u8bf7\u6c42\u540e\uff0c\u7b49\u5f85\u54cd\u5e94\u7684\u8d85\u65f6\u65f6\u95f4 proxy_pass_error_message \u7528\u6765\u914d\u7f6e\u662f\u5426\u5c06\u540e\u7aef\u670d\u52a1\u5668\u4e0a\u90ae\u4ef6\u670d\u52a1\u8ba4\u8bc1\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u9519\u8bef\u4fe1\u606f\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef proxy_ timeout \u8bbe\u7f6e\u5ba2\u6237\u7aef\u4e0e\u4ee3\u7406\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8d85\u65f6\u65f6\u95f4 xclient \u53ef\u4ee5\u5f00\u542f\u6216\u8005\u5173\u95ed\u547d\u4ee4XCLIENT\u7684SMTP\u540e\u7aef\u8fde\u63a5\uff0c\u4f7f\u5f97\u540e\u7aef\u53ef\u4ee5\u5f3a\u5236\u901a\u8fc7 IP\u3001HELO\u6216LOGIN\u9650\u5b9a\u5ba2\u6237\u7aef","title":"\u90ae\u4ef6\u670d\u52a1"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/04-\u6a21\u5757\u914d\u7f6e\u5e94\u7528/","text":"\u6a21\u5757\u914d\u7f6e\u5e94\u7528 \u00b6 \u8c03\u8bd5\u8f93\u51fa \u00b6 \u5b89\u88c5\u7b2c\u4e09\u65b9echo_nginx_module\u6a21\u5757 \u9a8c\u8bc1\u6d4b\u8bd5nginx.conf location / { root html; index index.html index.htm; default_type text/plain; # MIME\u8bbe\u7f6e\u6210\u6587\u672c\u683c\u5f0f echo -n Hello, ; #\u4e0d\u6362\u884c echo \"This is an echo module.\" echo this is a test. echo 45 * 78; # \u8f93\u51fa45*78 echo $args; # \u6253\u5370\u8bf7\u6c42\u7684\u53c2\u6570 } \u67e5\u770b\u54cd\u5e94\u72b6\u6001\u4e0e\u66ff\u6362\u54cd\u5e94\u5185\u5bb9 \u00b6 \u91cd\u65b0\u7f16\u8bd1nginx\uff0c\u5728\u3002/configuer\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u547d\u4ee4 --with-http_stub_status_module \\ --with-http_sub_module \\ \u67e5\u770b\u7f51\u7ad9\u54cd\u5e94\u72b6\u6001\uff0cngx_http_stub_status_module \u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf server { listen 80; server_name www.test.com ; root html/test.com; index index.html index.htm; stub_status; } \u6253\u5f00\u7f51\u9875\u53ef\u67e5\u770b Active connections \u6d3b\u8dc3\u8fde\u63a5\u6570\u91cf server accepts \u670d\u52a1\u5668\u5904\u7406\u8fde\u63a5\u6570 handled \u670d\u52a1\u5668\u521b\u5efa\u7684\u63e1\u624b\u6b21\u6570 requests \u670d\u52a1\u5668\u5904\u7406\u8bf7\u6c42\u8fde\u63a5\u7684\u6570\u91cf Reading \u8bfb\u53d6\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u6570 Writing \u54cd\u5e94\u6570\u636e\u5230\u5ba2\u6237\u7aef\u7684\u6570\u91cf Waiting \u6b63\u5728\u7b49\u5019\u4e0b\u4e00\u6b21\u8bf7\u6c42\u6307\u4ee4\u7684\u9a7b\u7559\u8fde\u63a5\u6570 \u66ff\u6362\u7f51\u7ad9\u54cd\u5e94\u5185\u5bb9\uff0cngx_http_sub_module \u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf server { listen 80; server_name www.test.com ; root html/test.com; index index.html index.htm; sub_filter server 'Nginx'; # \u5c06\u7f51\u9875\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684server\u6587\u5b57\u66ff\u6362\u6210Nginx sub_filter_once off # \u53ef\u9009\uff0c\u66ff\u6362\u6240\u6709\u5339\u914d\u5230\u7684\u6587\u5b57 } \u7f51\u9875\u538b\u7f29\u4f20\u8f93 \u00b6 gzip\uff08GNU-ZIP\uff09 gzip\u6a21\u5757\u914d\u7f6e\u6307\u4ee4 gzip \u5f00\u542f\u6216\u5173\u95ed gzip \u6a21\u5757 gzip_buffers \u8bbe\u7f6e\u7cfb\u7edf\u83b7\u53d6\u51e0\u4e2a\u5355\u4f4d\u7684\u7f13\u5b58\u7528\u4e8e\u5b58\u50a8gzip\u7684\u538b\u7f29\u7ed3\u679c\u6570\u636e\u6d41 gzip_comp_level \u538b\u7f29\u6bd4\uff0c\u538b\u7f29\u7ea7\u522b\u662f1~9\uff0c1\u7684\u538b\u7f29\u7ea7\u522b\u6700\u4f4e\uff0c9\u7684\u538b\u7f29\u7ea7\u522b\u6700\u9ad8\u3002\u538b\u7f29\u7ea7\u522b\u8d8a\u9ad8\u538b\u7f29\u7387\u8d8a\u5927\uff0c\u538b\u7f29\u65f6\u95f4\u8d8a\u957f\u3002 gzip_disable \u53ef\u4ee5\u901a\u8fc7\u8be5\u6307\u4ee4\u5bf9\u4e00\u4e9b\u7279\u5b9a\u7684User-Agent\u4e0d\u4f7f\u7528\u538b\u7f29\u529f\u80fd\u3002 gztp_min_length \u8bbe\u7f6e\u5141\u8bb8\u538b\u7f29\u7684\u9875\u9762\u6700\u5c0f\u5b57\u8282\u6570\uff0c\u9875\u9762\u5b57\u8282\u6570\u4ece\u54cd\u5e94\u6d88\u606f\u5934\u7684 Content-Length\u4e2d\u8fdb\u884c\u83b7\u53d6 gzip_http_version \u8bc6\u522bHTTP\u534f\u8bae\u7248\u672c\uff0c\u5176\u503c\u53ef\u4ee5\u662f1.1\uff08\u9ed8\u8ba4\u503c\uff09\u62161.0 gzip_proxied \u7528\u4e8e\u8bbe\u7f6e\u542f\u7528\u6216\u7981\u7528\u4ece\u4ee3\u7406\u670d\u52a1\u5668\u4e0a\u6536\u5230\u54cd\u5e94\u5185\u5bb9\u7684gzip\u538b\u7f29\u529f\u80fd gzip_types \u5339\u914d MIME \u7c7b\u578b\u8fdb\u884c\u538b\u7f29 \u3002\u4e14\u65e0\u8bba\u662f\u5426\u6307\u5b9a\uff0ctext/html\u7c7b\u578b\u603b\u662f\u4f1a\u88ab\u538b\u7f29\u7684 gztp_vary \u7528\u4e8e\u5728\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u6dfb\u52a0Vary:Accept-Encoding\uff0c\u4f7f\u4ee3\u7406\u670d\u52a1\u5668\u6839\u636e\u8bf7\u6c42\u5934\u4e2d\u7684Accept-Encoding\u8bc6\u522b\u662f\u5426\u542f\u7528gzip\u538b\u7f29 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 http {... gzip on; # \u542f\u7528gzip gzip_types text/plain application/javascript text/css; # \u538b\u7f29\u6587\u672c\uff0cJS\uff0cCSS\u6587\u4ef6 ... } gzip_proxied\u6307\u4ee4\u5e38\u7528\u53c2\u6570 any \u65e0\u6761\u4ef6\u538b\u7f29\u6240\u6709\u54cd\u5e94\u6570\u636e off \u5173\u95ed\u53cd\u5411\u4ee3\u7406\u7684\u538b\u7f29 expired \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u5305\u542bExpires\uff0c\u542f\u7528\u538b\u7f29 no-cache \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u5305\u542bCache-Control:no-cache\uff0c\u542f\u7528\u538b\u7f29 no-store \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u5305\u542bCache-Control:no-store\uff0c\u542f\u7528\u538b\u7f29 private \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u5305\u542bCache-Control:private\uff0c\u542f\u7528\u538b\u7f29 no_last_modified \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u4e0d\u5305\u542bLast-Modified\u65f6\uff0c\u542f\u7528\u538b\u7f29 no_etag \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u4e0d\u5305\u542bETag\uff0c\u542f\u7528\u538b\u7f29 auth \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u5305\u542bAuthorization\u5934\u4fe1\u606f\uff0c\u542f\u7528\u538b\u7f29 \u91cd\u5199\u4e0e\u91cd\u5b9a\u5411 \u00b6 rewrite\u91cd\u5199\u7684\u57fa\u672c\u8bed\u6cd5 rewrite regex replacement [flag]; regex \u6b63\u5219\u8868\u8fbe\u5f0f replacement \u66ff\u6362\u7b97\u6cd5 [flag] \u8fdb\u4e00\u6b65\u5904\u7406\u6807\u8bc6 last \u7ec8\u6b62rewrite\uff0c\u7ee7\u7eed\u5339\u914d\u5176\u4ed6\u89c4\u5219 break \u7ec8\u6b62rewrite\uff0c\u4e0d\u518d\u7ee7\u7eed\u5339\u914d redirect \u4e34\u65f6\u91cd\u5b9a\u5411\uff0c\u8fd4\u56deHTTP302 permanent \u6c38\u4e45\u91cd\u5b9a\u5411\uff0c\u8fd4\u56deHTTP301 \u914d\u7f6erewrite\u91cd\u5199\uff0cnginx.conf server { listen 80; server_name test.web.test; index index.html index.htm; root html; # \u5f53\u8bf7\u6c42\u7684\u6587\u4ef6\u4e0d\u5b58\u5728\u65f6 if(!-e request_filename){ rewrite \"^/.*\" /default/default.html break; # \u5c06\u6240\u6709\u8bf7\u6c42\u66ff\u6362\u6210\u6307\u5b9a\u8bf7\u6c42 } location /break/ { rewrite ^/break/ (.*)/test/ request_filename){ rewrite \"^/.*\" /default/default.html break; # \u5c06\u6240\u6709\u8bf7\u6c42\u66ff\u6362\u6210\u6307\u5b9a\u8bf7\u6c42 } location /break/ { rewrite ^/break/ (.*)/test/ 1 break; # \u91cd\u5199\u540e\u4e0d\u518d\u5339\u914d echo \"break page\"; # \u7f51\u9875\u6253\u5370 } location /last/ { rewrite ^/last/ (.*)/test/$1 break; # \u91cd\u5199\u8bf7\u6c42\u540e\u7ee7\u7eed\u5339\u914d echo \"break page\"; # \u7f51\u9875\u4e0d\u6253\u5370\u88ab\u7ed5\u8fc7 } location /last/ { echo \"break page\"; # \u7f51\u9875\u6253\u5370\u6216\u8bf7\u6c42\u88ab\u91cd\u5199\u5230\u6b64 } } if\u6307\u4ee4\u5224\u65ad\u7b26 = \u53d8\u91cf\u4e0e\u5185\u5bb9\u76f8\u7b49 !=\u53d8\u91cf\u4e0e\u5185\u5bb9\u4e0d\u7b26 ~ \u6b63\u5219\u5339\u914d ~* \u4e0d\u533a\u5206\u5927\u5c0f\u5199\u6b63\u5219\u5339\u914d !~ \u6b63\u5219\u4e0d\u5339\u914d !~* \u4e0d\u533a\u5206\u5927\u5c0f\u5199\u6b63\u5219\u4e0d\u5339\u914d -f \u6587\u4ef6\u5b58\u5728 !-f \u6587\u4ef6\u4e0d\u5b58\u5728 -d \u76ee\u5f55\u5b58\u5728 !-d \u76ee\u5f55\u4e0d\u5b58\u5728 -e \u6587\u4ef6\u6216\u76ee\u5f55\u5b58\u5728 !-e \u6587\u4ef6\u6216\u76ee\u5f55\u4e0d\u5b58\u5728 -x \u6587\u4ef6\u53ef\u6267\u884c !-x \u6587\u4ef6\u4e0d\u53ef\u6267\u884c rewrite\u91cd\u5b9a\u5411 server { listen 80; server_name test.web.test; root html; set name 1; \u5339\u914d\u89c4\u5219http://.../img-\u6570\u5b57.jpg -\u8fd4\u56de\u91cd\u5b9a\u5411-> http://.../img/\u6570\u5b57.jpg rewrite ^/img-([0-9]+).jpg 1; \u5339\u914d\u89c4\u5219http://.../img-\u6570\u5b57.jpg -\u8fd4\u56de\u91cd\u5b9a\u5411-> http://.../img/\u6570\u5b57.jpg rewrite ^/img-([0-9]+).jpg /img/ /img/ name <span><span class=\"MathJax_Preview\">1; \u5339\u914d\u89c4\u5219http://.../img-\u6570\u5b57.jpg -\u8fd4\u56de\u91cd\u5b9a\u5411-&gt; http://.../img/\u6570\u5b57.jpg rewrite ^/img-([0-9]+).jpg</span><script type=\"math/tex\">1; \u5339\u914d\u89c4\u5219http://.../img-\u6570\u5b57.jpg -\u8fd4\u56de\u91cd\u5b9a\u5411-> http://.../img/\u6570\u5b57.jpg rewrite ^/img-([0-9]+).jpg /img/ /img/ name.jpg permanent; } \u670d\u52a1\u5668\u6dfb\u52a0\u56fe\u7247\u9632\u76d7\u94fe \u00b6 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf location ~ * .(gif|jpg|png|swf|flv)$ { valid_referers www.web.test web.test; # \u767d\u540d\u5355 if ($invalid_referer) { # \u975e\u767d\u540d\u5355\u64cd\u4f5c return 403; } } \u5176\u4e2dvalid_referers\u53ef\u53e0\u52a0\u6307\u4ee4 none \u5339\u914d\u6ca1\u6709refererd\u662fHTTP\u8bf7\u6c42 blocked \u5339\u914d\u88ab\u9632\u706b\u5899\u6216\u88ab\u4ee3\u7406\u4fee\u6539\u8fc7\u7684\u8bf7\u6c42\u53bb\u6389\u4e86https://\u548chttp:// servers_name \u5339\u914d\u57df\u540d\u5982valid_referers web.com; string \u5339\u914d\u4efb\u610f\u5b57\u7b26\u4e32valid_referers *.web.com; regular expression \u6b63\u5219\u8868\u8fbe\u5f0f valid_referers ~.img.; \u670d\u52a1\u5668\u6dfb\u52a0\u4e0b\u8f7d\u9632\u76d7\u94fe \u91cd\u65b0\u7f16\u8bd1Nginx --with-http_secure_link_module \u914d\u7f6e\u4e0b\u8f7d\u9632\u76d7\u94fe\u9700\u8981\u7a0b\u5e8f\u652f\u6301 <?php secret='web.test'; // \u81ea\u5b9a\u4e49\u670d\u52a1\u5668\u5bc6\u94a5 path='/down/web/nginx.tar.gz'; // \u4e0b\u8f7d\u6587\u4ef6\u8def\u5f84 expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 md5=base64_encode(md5( md5=base64_encode(md5( secret.secret. expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. path.path. path='/down/web/nginx.tar.gz'; // \u4e0b\u8f7d\u6587\u4ef6\u8def\u5f84 <span><span class=\"MathJax_Preview\">expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. path.path. expire, true)); expire, true)); md5=strtr( md5=strtr( md5, '+/', '- md5=str_replace('=', '', md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '<a href=\"http://www.web.test.down/web/nginx.tar.gz?st='. md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '<a href=\"http://www.web.test.down/web/nginx.tar.gz?st='. md5.'&e='.md5.'&e='. md5=str_replace('=', '', <span><span class=\"MathJax_Preview\">md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '&lt;a href=\"http://www.web.test.down/web/nginx.tar.gz?st='.</span><script type=\"math/tex\">md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '<a href=\"http://www.web.test.down/web/nginx.tar.gz?st='. md5.'&e='.md5.'&e='. expire.'\">nginx '; // \u52a0\u5bc6\u540e\u7684\u4e0b\u8f7d\u94fe\u63a5 echo ' secret='web.test'; // \u81ea\u5b9a\u4e49\u670d\u52a1\u5668\u5bc6\u94a5 <span><span class=\"MathJax_Preview\">path='/down/web/nginx.tar.gz'; // \u4e0b\u8f7d\u6587\u4ef6\u8def\u5f84 <span><span class=\"MathJax_Preview\">expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. path.path. path='/down/web/nginx.tar.gz'; // \u4e0b\u8f7d\u6587\u4ef6\u8def\u5f84 <span><span class=\"MathJax_Preview\">expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. path.path. expire, true)); expire, true)); md5=strtr( md5=strtr( md5, '+/', '- '); md5, '+/', '- '); md5=str_replace('=', '', md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '<a href=\"http://www.web.test.down/web/nginx.tar.gz?st='. md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '<a href=\"http://www.web.test.down/web/nginx.tar.gz?st='. md5.'&e='.md5.'&e='. md5=str_replace('=', '', <span><span class=\"MathJax_Preview\">md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '&lt;a href=\"http://www.web.test.down/web/nginx.tar.gz?st='.</span><script type=\"math/tex\">md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '<a href=\"http://www.web.test.down/web/nginx.tar.gz?st='. md5.'&e='.md5.'&e='. expire.'\">nginx '; // \u52a0\u5bc6\u540e\u7684\u4e0b\u8f7d\u94fe\u63a5 echo ' http://www.web.test.down/web/nginx.tar.gz?st='.expire .'\">nginx '; // \u52a0\u5bc6\u540e\u7684\u4e0b\u8f7d\u94fe\u63a5 echo ' http://www.web.test.down/web/nginx.tar.gz?st= '. md5.'&e='. expire; // \u4e3a\u4f5c\u6bd4\u8f83\u663e\u793a\u51fa\u6765 ?> \u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf location / { secure_link args_st, arg_e; # \u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test \u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # \u8ba1\u7b97MD5 if(arg_e; # \u8ba1\u7b97MD5 if( args_st, <span><span class=\"MathJax_Preview\">arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # \u8ba1\u7b97MD5 if(arg_e; # \u8ba1\u7b97MD5 if( secure_link=\"\"){ # \u52a0\u5bc6\u5b57\u7b26\u4e32\u4e0d\u7b49\u5904\u7406 return 403; } if(secure_link=\"\"){ # \u52a0\u5bc6\u5b57\u7b26\u4e32\u4e0d\u7b49\u5904\u7406 return 403; } if( expire; // \u4e3a\u4f5c\u6bd4\u8f83\u663e\u793a\u51fa\u6765 ?> \u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf location / { secure_link <span><span class=\"MathJax_Preview\">args_st, <span><span class=\"MathJax_Preview\">arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # \u8ba1\u7b97MD5 if(arg_e; # \u8ba1\u7b97MD5 if( args_st, <span><span class=\"MathJax_Preview\">arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # \u8ba1\u7b97MD5 if(arg_e; # \u8ba1\u7b97MD5 if( secure_link=\"\"){ # \u52a0\u5bc6\u5b57\u7b26\u4e32\u4e0d\u7b49\u5904\u7406 return 403; } if(secure_link=\"\"){ # \u52a0\u5bc6\u5b57\u7b26\u4e32\u4e0d\u7b49\u5904\u7406 return 403; } if( secure_link=\"0\"){ # \u52a0\u5bc6\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u94fe\u63a5\u8fc7\u671f\u5904\u7406 return 403; } } \u914d\u7f6eHTTPS\u7f51\u7ad9 \u00b6 ngx_http_ssl_moudle\u6a21\u5757 step1\u751f\u6210\u670d\u52a1\u5668\u7684RSA\u79c1\u94a5 $ mkdir /usr/local/nginx/conf/ssl $ cd /usr/local/nginx/conf/ssl $ opssl genrsa -out server.key 2048 # \u751f\u6210RSA\u79c1\u94a5 \u8f93\u51fa \u6587\u4ef6\u540d \u79c1\u94a5\u957f\u5ea6 step2\u751f\u6210\u670d\u52a1\u5668CSR\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6\uff08\u516c\u94a5\uff09 $ openssl req -new -key server.key -out server.csr # \u6b64\u65f6\u4f1a\u8ba9\u586b\u5199\u4e00\u4e9b\u4fe1\u606f\uff0c\u5982\u4e0b\uff1a Country Name (2 letter code) \u56fd\u5bb6\u4ee3\u7801\uff0c\u5982\u4e2d\u56fdCN State or Province Name (full name) \u7701\u4efd\uff0c\u5982Beijing Locality Name (eg, city) \u57ce\u5e02\uff0c\u5982Beijing Organization Name (eg, company) \u516c\u53f8\u540d\u79f0\uff0c\u5982ccu Organizational Unit Name (eg, section) \u7ec4\u7ec7\u5355\u4f4d\uff0c\u5982IT Common Name \uff08eg, your websites domain name) \u4f7f\u7528 SSL \u52a0\u5bc6\u7684\u7f51\u7ad9\u57df\u540d\uff0c\u5982www.test.com\uff0c\u5e94\u4e0e\u7f51\u7ad9\u76f8\u540c Email Address \u90ae\u4ef6\u5730\u5740\uff0c\u53ef\u4ee5\u7701\u7565 A challenge password \u6709\u4e9bCA\u673a\u6784\u9700\u8981\u6b64\u5bc6\u7801\uff0c\u901a\u5e38\u7701\u7565\u5373\u53ef An optional company name \u53ef\u9009\u7684\u516c\u53f8\u540d\u79f0\uff0c\u53ef\u4ee5\u7701\u7565 step3\u4e3a\u670d\u52a1\u5668\u7b7e\u540d\u8ba4\u8bc1CA\u8bc1\u4e66 $ openssl x509 -req -days 30 -in server.csr -signkey server.key -out server.crt \u5176\u4e2d x509 # \u81ea\u7b7e\u540d\u8bc1\u4e66\u683c\u5f0f -req # \u8bc1\u4e66\u7b7e\u53d1\u7533\u8bf7 -days 3650 # \u8bc1\u4e66\u6709\u6548\u671f -in server.csr # \u7533\u8bf7\u6587\u4ef6\uff08\u516c\u94a5\uff09 -signkey server.key # \u79c1\u94a5 -out server.crt # \u8f93\u51fa\u6587\u4ef6 \u914d\u7f6eHTTPS\u670d\u52a1\u5668nginx.conf server { listen 443; server_name www.test.com ; root html/test.com; ssl on; ssl_ceritficate /usr/local/nginx/conf/ssl/server.crt; # CA\u8bc1\u4e66 ssl_ceritficate_key /usr/local/nginx/conf/ssl/server.key; # \u79c1\u94a5 } \u91cd\u542fnginx\u5b8c\u6210\u914d\u7f6e\uff0c\u8bbf\u95ee\u6d4f\u89c8\u5668\u4f1a\u63d0\u793a\u4e0d\u662f\u79c1\u5bc6\u94fe\u63a5 \uff08\u6709\u5e16\u5b50\u6307\u51fa\u63d0\u793a\u7684\u539f\u56e0\u5728\u4e8e\u7f51\u7ad9\u6e90\u7801\u4e2d\u7684\u56fe\u7247\u7b49\u94fe\u63a5\u5730\u5740\u662fhttp://\u4e0ehttps\u4e0d\u4e00\u81f4\uff0c\u5177\u4f53\u60c5\u51b5\u672a\u9a8c\u8bc1\uff09","title":"\u6a21\u5757\u914d\u7f6e\u5e94\u7528"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/04-\u6a21\u5757\u914d\u7f6e\u5e94\u7528/#_1","text":"","title":"\u6a21\u5757\u914d\u7f6e\u5e94\u7528"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/04-\u6a21\u5757\u914d\u7f6e\u5e94\u7528/#_2","text":"\u5b89\u88c5\u7b2c\u4e09\u65b9echo_nginx_module\u6a21\u5757 \u9a8c\u8bc1\u6d4b\u8bd5nginx.conf location / { root html; index index.html index.htm; default_type text/plain; # MIME\u8bbe\u7f6e\u6210\u6587\u672c\u683c\u5f0f echo -n Hello, ; #\u4e0d\u6362\u884c echo \"This is an echo module.\" echo this is a test. echo 45 * 78; # \u8f93\u51fa45*78 echo $args; # \u6253\u5370\u8bf7\u6c42\u7684\u53c2\u6570 }","title":"\u8c03\u8bd5\u8f93\u51fa"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/04-\u6a21\u5757\u914d\u7f6e\u5e94\u7528/#_3","text":"\u91cd\u65b0\u7f16\u8bd1nginx\uff0c\u5728\u3002/configuer\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u547d\u4ee4 --with-http_stub_status_module \\ --with-http_sub_module \\ \u67e5\u770b\u7f51\u7ad9\u54cd\u5e94\u72b6\u6001\uff0cngx_http_stub_status_module \u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf server { listen 80; server_name www.test.com ; root html/test.com; index index.html index.htm; stub_status; } \u6253\u5f00\u7f51\u9875\u53ef\u67e5\u770b Active connections \u6d3b\u8dc3\u8fde\u63a5\u6570\u91cf server accepts \u670d\u52a1\u5668\u5904\u7406\u8fde\u63a5\u6570 handled \u670d\u52a1\u5668\u521b\u5efa\u7684\u63e1\u624b\u6b21\u6570 requests \u670d\u52a1\u5668\u5904\u7406\u8bf7\u6c42\u8fde\u63a5\u7684\u6570\u91cf Reading \u8bfb\u53d6\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u6570 Writing \u54cd\u5e94\u6570\u636e\u5230\u5ba2\u6237\u7aef\u7684\u6570\u91cf Waiting \u6b63\u5728\u7b49\u5019\u4e0b\u4e00\u6b21\u8bf7\u6c42\u6307\u4ee4\u7684\u9a7b\u7559\u8fde\u63a5\u6570 \u66ff\u6362\u7f51\u7ad9\u54cd\u5e94\u5185\u5bb9\uff0cngx_http_sub_module \u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf server { listen 80; server_name www.test.com ; root html/test.com; index index.html index.htm; sub_filter server 'Nginx'; # \u5c06\u7f51\u9875\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684server\u6587\u5b57\u66ff\u6362\u6210Nginx sub_filter_once off # \u53ef\u9009\uff0c\u66ff\u6362\u6240\u6709\u5339\u914d\u5230\u7684\u6587\u5b57 }","title":"\u67e5\u770b\u54cd\u5e94\u72b6\u6001\u4e0e\u66ff\u6362\u54cd\u5e94\u5185\u5bb9"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/04-\u6a21\u5757\u914d\u7f6e\u5e94\u7528/#_4","text":"gzip\uff08GNU-ZIP\uff09 gzip\u6a21\u5757\u914d\u7f6e\u6307\u4ee4 gzip \u5f00\u542f\u6216\u5173\u95ed gzip \u6a21\u5757 gzip_buffers \u8bbe\u7f6e\u7cfb\u7edf\u83b7\u53d6\u51e0\u4e2a\u5355\u4f4d\u7684\u7f13\u5b58\u7528\u4e8e\u5b58\u50a8gzip\u7684\u538b\u7f29\u7ed3\u679c\u6570\u636e\u6d41 gzip_comp_level \u538b\u7f29\u6bd4\uff0c\u538b\u7f29\u7ea7\u522b\u662f1~9\uff0c1\u7684\u538b\u7f29\u7ea7\u522b\u6700\u4f4e\uff0c9\u7684\u538b\u7f29\u7ea7\u522b\u6700\u9ad8\u3002\u538b\u7f29\u7ea7\u522b\u8d8a\u9ad8\u538b\u7f29\u7387\u8d8a\u5927\uff0c\u538b\u7f29\u65f6\u95f4\u8d8a\u957f\u3002 gzip_disable \u53ef\u4ee5\u901a\u8fc7\u8be5\u6307\u4ee4\u5bf9\u4e00\u4e9b\u7279\u5b9a\u7684User-Agent\u4e0d\u4f7f\u7528\u538b\u7f29\u529f\u80fd\u3002 gztp_min_length \u8bbe\u7f6e\u5141\u8bb8\u538b\u7f29\u7684\u9875\u9762\u6700\u5c0f\u5b57\u8282\u6570\uff0c\u9875\u9762\u5b57\u8282\u6570\u4ece\u54cd\u5e94\u6d88\u606f\u5934\u7684 Content-Length\u4e2d\u8fdb\u884c\u83b7\u53d6 gzip_http_version \u8bc6\u522bHTTP\u534f\u8bae\u7248\u672c\uff0c\u5176\u503c\u53ef\u4ee5\u662f1.1\uff08\u9ed8\u8ba4\u503c\uff09\u62161.0 gzip_proxied \u7528\u4e8e\u8bbe\u7f6e\u542f\u7528\u6216\u7981\u7528\u4ece\u4ee3\u7406\u670d\u52a1\u5668\u4e0a\u6536\u5230\u54cd\u5e94\u5185\u5bb9\u7684gzip\u538b\u7f29\u529f\u80fd gzip_types \u5339\u914d MIME \u7c7b\u578b\u8fdb\u884c\u538b\u7f29 \u3002\u4e14\u65e0\u8bba\u662f\u5426\u6307\u5b9a\uff0ctext/html\u7c7b\u578b\u603b\u662f\u4f1a\u88ab\u538b\u7f29\u7684 gztp_vary \u7528\u4e8e\u5728\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u6dfb\u52a0Vary:Accept-Encoding\uff0c\u4f7f\u4ee3\u7406\u670d\u52a1\u5668\u6839\u636e\u8bf7\u6c42\u5934\u4e2d\u7684Accept-Encoding\u8bc6\u522b\u662f\u5426\u542f\u7528gzip\u538b\u7f29 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 http {... gzip on; # \u542f\u7528gzip gzip_types text/plain application/javascript text/css; # \u538b\u7f29\u6587\u672c\uff0cJS\uff0cCSS\u6587\u4ef6 ... } gzip_proxied\u6307\u4ee4\u5e38\u7528\u53c2\u6570 any \u65e0\u6761\u4ef6\u538b\u7f29\u6240\u6709\u54cd\u5e94\u6570\u636e off \u5173\u95ed\u53cd\u5411\u4ee3\u7406\u7684\u538b\u7f29 expired \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u5305\u542bExpires\uff0c\u542f\u7528\u538b\u7f29 no-cache \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u5305\u542bCache-Control:no-cache\uff0c\u542f\u7528\u538b\u7f29 no-store \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u5305\u542bCache-Control:no-store\uff0c\u542f\u7528\u538b\u7f29 private \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u5305\u542bCache-Control:private\uff0c\u542f\u7528\u538b\u7f29 no_last_modified \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u4e0d\u5305\u542bLast-Modified\u65f6\uff0c\u542f\u7528\u538b\u7f29 no_etag \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u4e0d\u5305\u542bETag\uff0c\u542f\u7528\u538b\u7f29 auth \u5982\u679c\u54cd\u5e94\u6d88\u606f\u5934\u4e2d\u5305\u542bAuthorization\u5934\u4fe1\u606f\uff0c\u542f\u7528\u538b\u7f29","title":"\u7f51\u9875\u538b\u7f29\u4f20\u8f93"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/04-\u6a21\u5757\u914d\u7f6e\u5e94\u7528/#_5","text":"rewrite\u91cd\u5199\u7684\u57fa\u672c\u8bed\u6cd5 rewrite regex replacement [flag]; regex \u6b63\u5219\u8868\u8fbe\u5f0f replacement \u66ff\u6362\u7b97\u6cd5 [flag] \u8fdb\u4e00\u6b65\u5904\u7406\u6807\u8bc6 last \u7ec8\u6b62rewrite\uff0c\u7ee7\u7eed\u5339\u914d\u5176\u4ed6\u89c4\u5219 break \u7ec8\u6b62rewrite\uff0c\u4e0d\u518d\u7ee7\u7eed\u5339\u914d redirect \u4e34\u65f6\u91cd\u5b9a\u5411\uff0c\u8fd4\u56deHTTP302 permanent \u6c38\u4e45\u91cd\u5b9a\u5411\uff0c\u8fd4\u56deHTTP301 \u914d\u7f6erewrite\u91cd\u5199\uff0cnginx.conf server { listen 80; server_name test.web.test; index index.html index.htm; root html; # \u5f53\u8bf7\u6c42\u7684\u6587\u4ef6\u4e0d\u5b58\u5728\u65f6 if(!-e request_filename){ rewrite \"^/.*\" /default/default.html break; # \u5c06\u6240\u6709\u8bf7\u6c42\u66ff\u6362\u6210\u6307\u5b9a\u8bf7\u6c42 } location /break/ { rewrite ^/break/ (.*)/test/ request_filename){ rewrite \"^/.*\" /default/default.html break; # \u5c06\u6240\u6709\u8bf7\u6c42\u66ff\u6362\u6210\u6307\u5b9a\u8bf7\u6c42 } location /break/ { rewrite ^/break/ (.*)/test/ 1 break; # \u91cd\u5199\u540e\u4e0d\u518d\u5339\u914d echo \"break page\"; # \u7f51\u9875\u6253\u5370 } location /last/ { rewrite ^/last/ (.*)/test/$1 break; # \u91cd\u5199\u8bf7\u6c42\u540e\u7ee7\u7eed\u5339\u914d echo \"break page\"; # \u7f51\u9875\u4e0d\u6253\u5370\u88ab\u7ed5\u8fc7 } location /last/ { echo \"break page\"; # \u7f51\u9875\u6253\u5370\u6216\u8bf7\u6c42\u88ab\u91cd\u5199\u5230\u6b64 } } if\u6307\u4ee4\u5224\u65ad\u7b26 = \u53d8\u91cf\u4e0e\u5185\u5bb9\u76f8\u7b49 !=\u53d8\u91cf\u4e0e\u5185\u5bb9\u4e0d\u7b26 ~ \u6b63\u5219\u5339\u914d ~* \u4e0d\u533a\u5206\u5927\u5c0f\u5199\u6b63\u5219\u5339\u914d !~ \u6b63\u5219\u4e0d\u5339\u914d !~* \u4e0d\u533a\u5206\u5927\u5c0f\u5199\u6b63\u5219\u4e0d\u5339\u914d -f \u6587\u4ef6\u5b58\u5728 !-f \u6587\u4ef6\u4e0d\u5b58\u5728 -d \u76ee\u5f55\u5b58\u5728 !-d \u76ee\u5f55\u4e0d\u5b58\u5728 -e \u6587\u4ef6\u6216\u76ee\u5f55\u5b58\u5728 !-e \u6587\u4ef6\u6216\u76ee\u5f55\u4e0d\u5b58\u5728 -x \u6587\u4ef6\u53ef\u6267\u884c !-x \u6587\u4ef6\u4e0d\u53ef\u6267\u884c rewrite\u91cd\u5b9a\u5411 server { listen 80; server_name test.web.test; root html; set name 1; \u5339\u914d\u89c4\u5219http://.../img-\u6570\u5b57.jpg -\u8fd4\u56de\u91cd\u5b9a\u5411-> http://.../img/\u6570\u5b57.jpg rewrite ^/img-([0-9]+).jpg 1; \u5339\u914d\u89c4\u5219http://.../img-\u6570\u5b57.jpg -\u8fd4\u56de\u91cd\u5b9a\u5411-> http://.../img/\u6570\u5b57.jpg rewrite ^/img-([0-9]+).jpg /img/ /img/ name <span><span class=\"MathJax_Preview\">1; \u5339\u914d\u89c4\u5219http://.../img-\u6570\u5b57.jpg -\u8fd4\u56de\u91cd\u5b9a\u5411-&gt; http://.../img/\u6570\u5b57.jpg rewrite ^/img-([0-9]+).jpg</span><script type=\"math/tex\">1; \u5339\u914d\u89c4\u5219http://.../img-\u6570\u5b57.jpg -\u8fd4\u56de\u91cd\u5b9a\u5411-> http://.../img/\u6570\u5b57.jpg rewrite ^/img-([0-9]+).jpg /img/ /img/ name.jpg permanent; }","title":"\u91cd\u5199\u4e0e\u91cd\u5b9a\u5411"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/04-\u6a21\u5757\u914d\u7f6e\u5e94\u7528/#_6","text":"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf location ~ * .(gif|jpg|png|swf|flv)$ { valid_referers www.web.test web.test; # \u767d\u540d\u5355 if ($invalid_referer) { # \u975e\u767d\u540d\u5355\u64cd\u4f5c return 403; } } \u5176\u4e2dvalid_referers\u53ef\u53e0\u52a0\u6307\u4ee4 none \u5339\u914d\u6ca1\u6709refererd\u662fHTTP\u8bf7\u6c42 blocked \u5339\u914d\u88ab\u9632\u706b\u5899\u6216\u88ab\u4ee3\u7406\u4fee\u6539\u8fc7\u7684\u8bf7\u6c42\u53bb\u6389\u4e86https://\u548chttp:// servers_name \u5339\u914d\u57df\u540d\u5982valid_referers web.com; string \u5339\u914d\u4efb\u610f\u5b57\u7b26\u4e32valid_referers *.web.com; regular expression \u6b63\u5219\u8868\u8fbe\u5f0f valid_referers ~.img.; \u670d\u52a1\u5668\u6dfb\u52a0\u4e0b\u8f7d\u9632\u76d7\u94fe \u91cd\u65b0\u7f16\u8bd1Nginx --with-http_secure_link_module \u914d\u7f6e\u4e0b\u8f7d\u9632\u76d7\u94fe\u9700\u8981\u7a0b\u5e8f\u652f\u6301 <?php secret='web.test'; // \u81ea\u5b9a\u4e49\u670d\u52a1\u5668\u5bc6\u94a5 path='/down/web/nginx.tar.gz'; // \u4e0b\u8f7d\u6587\u4ef6\u8def\u5f84 expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 md5=base64_encode(md5( md5=base64_encode(md5( secret.secret. expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. path.path. path='/down/web/nginx.tar.gz'; // \u4e0b\u8f7d\u6587\u4ef6\u8def\u5f84 <span><span class=\"MathJax_Preview\">expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. path.path. expire, true)); expire, true)); md5=strtr( md5=strtr( md5, '+/', '- md5=str_replace('=', '', md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '<a href=\"http://www.web.test.down/web/nginx.tar.gz?st='. md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '<a href=\"http://www.web.test.down/web/nginx.tar.gz?st='. md5.'&e='.md5.'&e='. md5=str_replace('=', '', <span><span class=\"MathJax_Preview\">md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '&lt;a href=\"http://www.web.test.down/web/nginx.tar.gz?st='.</span><script type=\"math/tex\">md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '<a href=\"http://www.web.test.down/web/nginx.tar.gz?st='. md5.'&e='.md5.'&e='. expire.'\">nginx '; // \u52a0\u5bc6\u540e\u7684\u4e0b\u8f7d\u94fe\u63a5 echo ' secret='web.test'; // \u81ea\u5b9a\u4e49\u670d\u52a1\u5668\u5bc6\u94a5 <span><span class=\"MathJax_Preview\">path='/down/web/nginx.tar.gz'; // \u4e0b\u8f7d\u6587\u4ef6\u8def\u5f84 <span><span class=\"MathJax_Preview\">expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. path.path. path='/down/web/nginx.tar.gz'; // \u4e0b\u8f7d\u6587\u4ef6\u8def\u5f84 <span><span class=\"MathJax_Preview\">expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. expire=time()+60; // \u8fc7\u671f\u65f6\u95f4 <span><span class=\"MathJax_Preview\">md5=base64_encode(md5(</span><script type=\"math/tex\">md5=base64_encode(md5( secret.secret. path.path. expire, true)); expire, true)); md5=strtr( md5=strtr( md5, '+/', '- '); md5, '+/', '- '); md5=str_replace('=', '', md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '<a href=\"http://www.web.test.down/web/nginx.tar.gz?st='. md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '<a href=\"http://www.web.test.down/web/nginx.tar.gz?st='. md5.'&e='.md5.'&e='. md5=str_replace('=', '', <span><span class=\"MathJax_Preview\">md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '&lt;a href=\"http://www.web.test.down/web/nginx.tar.gz?st='.</span><script type=\"math/tex\">md5); // \u52a0\u5bc6\u5b57\u7b26\u4e32 echo '<a href=\"http://www.web.test.down/web/nginx.tar.gz?st='. md5.'&e='.md5.'&e='. expire.'\">nginx '; // \u52a0\u5bc6\u540e\u7684\u4e0b\u8f7d\u94fe\u63a5 echo ' http://www.web.test.down/web/nginx.tar.gz?st='.expire .'\">nginx '; // \u52a0\u5bc6\u540e\u7684\u4e0b\u8f7d\u94fe\u63a5 echo ' http://www.web.test.down/web/nginx.tar.gz?st= '. md5.'&e='. expire; // \u4e3a\u4f5c\u6bd4\u8f83\u663e\u793a\u51fa\u6765 ?> \u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf location / { secure_link args_st, arg_e; # \u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test \u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # \u8ba1\u7b97MD5 if(arg_e; # \u8ba1\u7b97MD5 if( args_st, <span><span class=\"MathJax_Preview\">arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # \u8ba1\u7b97MD5 if(arg_e; # \u8ba1\u7b97MD5 if( secure_link=\"\"){ # \u52a0\u5bc6\u5b57\u7b26\u4e32\u4e0d\u7b49\u5904\u7406 return 403; } if(secure_link=\"\"){ # \u52a0\u5bc6\u5b57\u7b26\u4e32\u4e0d\u7b49\u5904\u7406 return 403; } if( expire; // \u4e3a\u4f5c\u6bd4\u8f83\u663e\u793a\u51fa\u6765 ?> \u4fee\u6539\u914d\u7f6e\u6587\u4ef6nginx.conf location / { secure_link <span><span class=\"MathJax_Preview\">args_st, <span><span class=\"MathJax_Preview\">arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # \u8ba1\u7b97MD5 if(arg_e; # \u8ba1\u7b97MD5 if( args_st, <span><span class=\"MathJax_Preview\">arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # <span><span class=\"MathJax_Preview\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test</span><script type=\"math/tex\">\u52a0\u5bc6\u5b57\u7b26\u4e32\uff0c\u8fc7\u671f\u65f6\u95f4 secure_link_md5 web.test urlsurls arg_e; # \u8ba1\u7b97MD5 if(arg_e; # \u8ba1\u7b97MD5 if( secure_link=\"\"){ # \u52a0\u5bc6\u5b57\u7b26\u4e32\u4e0d\u7b49\u5904\u7406 return 403; } if(secure_link=\"\"){ # \u52a0\u5bc6\u5b57\u7b26\u4e32\u4e0d\u7b49\u5904\u7406 return 403; } if( secure_link=\"0\"){ # \u52a0\u5bc6\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u94fe\u63a5\u8fc7\u671f\u5904\u7406 return 403; } }","title":"\u670d\u52a1\u5668\u6dfb\u52a0\u56fe\u7247\u9632\u76d7\u94fe"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/04-\u6a21\u5757\u914d\u7f6e\u5e94\u7528/#https","text":"ngx_http_ssl_moudle\u6a21\u5757 step1\u751f\u6210\u670d\u52a1\u5668\u7684RSA\u79c1\u94a5 $ mkdir /usr/local/nginx/conf/ssl $ cd /usr/local/nginx/conf/ssl $ opssl genrsa -out server.key 2048 # \u751f\u6210RSA\u79c1\u94a5 \u8f93\u51fa \u6587\u4ef6\u540d \u79c1\u94a5\u957f\u5ea6 step2\u751f\u6210\u670d\u52a1\u5668CSR\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6\uff08\u516c\u94a5\uff09 $ openssl req -new -key server.key -out server.csr # \u6b64\u65f6\u4f1a\u8ba9\u586b\u5199\u4e00\u4e9b\u4fe1\u606f\uff0c\u5982\u4e0b\uff1a Country Name (2 letter code) \u56fd\u5bb6\u4ee3\u7801\uff0c\u5982\u4e2d\u56fdCN State or Province Name (full name) \u7701\u4efd\uff0c\u5982Beijing Locality Name (eg, city) \u57ce\u5e02\uff0c\u5982Beijing Organization Name (eg, company) \u516c\u53f8\u540d\u79f0\uff0c\u5982ccu Organizational Unit Name (eg, section) \u7ec4\u7ec7\u5355\u4f4d\uff0c\u5982IT Common Name \uff08eg, your websites domain name) \u4f7f\u7528 SSL \u52a0\u5bc6\u7684\u7f51\u7ad9\u57df\u540d\uff0c\u5982www.test.com\uff0c\u5e94\u4e0e\u7f51\u7ad9\u76f8\u540c Email Address \u90ae\u4ef6\u5730\u5740\uff0c\u53ef\u4ee5\u7701\u7565 A challenge password \u6709\u4e9bCA\u673a\u6784\u9700\u8981\u6b64\u5bc6\u7801\uff0c\u901a\u5e38\u7701\u7565\u5373\u53ef An optional company name \u53ef\u9009\u7684\u516c\u53f8\u540d\u79f0\uff0c\u53ef\u4ee5\u7701\u7565 step3\u4e3a\u670d\u52a1\u5668\u7b7e\u540d\u8ba4\u8bc1CA\u8bc1\u4e66 $ openssl x509 -req -days 30 -in server.csr -signkey server.key -out server.crt \u5176\u4e2d x509 # \u81ea\u7b7e\u540d\u8bc1\u4e66\u683c\u5f0f -req # \u8bc1\u4e66\u7b7e\u53d1\u7533\u8bf7 -days 3650 # \u8bc1\u4e66\u6709\u6548\u671f -in server.csr # \u7533\u8bf7\u6587\u4ef6\uff08\u516c\u94a5\uff09 -signkey server.key # \u79c1\u94a5 -out server.crt # \u8f93\u51fa\u6587\u4ef6 \u914d\u7f6eHTTPS\u670d\u52a1\u5668nginx.conf server { listen 443; server_name www.test.com ; root html/test.com; ssl on; ssl_ceritficate /usr/local/nginx/conf/ssl/server.crt; # CA\u8bc1\u4e66 ssl_ceritficate_key /usr/local/nginx/conf/ssl/server.key; # \u79c1\u94a5 } \u91cd\u542fnginx\u5b8c\u6210\u914d\u7f6e\uff0c\u8bbf\u95ee\u6d4f\u89c8\u5668\u4f1a\u63d0\u793a\u4e0d\u662f\u79c1\u5bc6\u94fe\u63a5 \uff08\u6709\u5e16\u5b50\u6307\u51fa\u63d0\u793a\u7684\u539f\u56e0\u5728\u4e8e\u7f51\u7ad9\u6e90\u7801\u4e2d\u7684\u56fe\u7247\u7b49\u94fe\u63a5\u5730\u5740\u662fhttp://\u4e0ehttps\u4e0d\u4e00\u81f4\uff0c\u5177\u4f53\u60c5\u51b5\u672a\u9a8c\u8bc1\uff09","title":"\u914d\u7f6eHTTPS\u7f51\u7ad9"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/","text":"\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4 \u00b6 Nginx\u914d\u7f6e\u4f18\u5316 \u00b6 ApacheBench\u5de5\u5177\uff0c\u7528\u4e8e\u6d4b\u8bd5\u670d\u52a1\u5668\u6027\u80fd $ cd /usr/local/apache2/bin $ ./ab -n10 -c2 http://192.168.1.100/ # -n10\u53d1\u9001\u8bf7\u6c42\u603b\u6570\uff0c-c2\u5e76\u53d1\u6570 \u5f53\u5e76\u53d1\u6570\u5927\u65f6\u9700\u8981 $ ulimit -a # \u67e5\u770b\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570 $ ulimit -n 65535 #\u4e34\u65f6\u8c03\u6574\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570 \u4f18\u5316Nginx\u8fde\u63a5\u6570 \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6nginx.conf # \u6307\u5b9a\u5de5\u4f5c\u8fdb\u7a0b\u7684\u4e2a\u6570\uff0cauto\u6839\u636ecpu\u6838\u5fc3\u6570\u91cf\u63a7\u5236 worker_pocesses auto; # \u8bbe\u7f6e\u6700\u591a\u6253\u5f00\u6587\u4ef6\u6570\u91cf worker_rlimit_nofile 65535; events { # \u6bcf\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u53ef\u63a5\u6536\u7684\u8fde\u63a5\u6570 worker_connections 65535; # \u662f\u5426\u5141\u8bb8\u4e00\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u54cd\u5e94\u591a\u4e2a\u8bf7\u6c42 mulit_accepte on; } \u9650\u5236\u5e76\u53d1\u8bf7\u6c42 \u9650\u5236\u540c\u4e00\u4e2a IP \u7684\u5e76\u53d1\u6570\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6nginx.conf http { # \u4e5f\u53ef\u4f4d\u4e8eserver\u548clocation\u4e2d #\u5f00\u542f\u5171\u4eab\u5185\u5b58\u7a7a\u95f4perip\u7528\u4e8e\u5b58\u653e\u5ba2\u6237\u7aefip\uff0c\u5927\u5c0f\u4e3a10MB limit_conn_zone $binary_remote_addr zone=perip:10m; #\u76f8\u540cIP\u5e76\u53d1\u8fde\u63a5\u6570\u9650\u5236\u4e3a10\u4e2a\uff0c\u8d85\u8fc7\u8fd4\u56de503 limit_conn perip 10; } \u9650\u5236\u865a\u62df\u4e3b\u673a\u7684\u5e76\u53d1\u6570\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6nginx.conf http {... limit_conn_zone $server_name zone=perserver:10m server { listen 80; server_name localhost; limit_conn perserver 20; } } \u9650\u5236\u54cd\u5e94\u7684\u4f20\u8f93\u901f\u7387\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6nginx.conf http {... limit_rate 100k; # 100KB/s limit_rate_after 10m; # \u4f20\u8f9310M\u6570\u636e\u540e\u5f00\u59cb\u9650\u901f\uff0c\u7701\u7565\u5219\u7acb\u5373\u9650\u901f } \u751f\u6210\u6d4b\u8bd5\u6587\u4ef6 $ cd /usr/local/nginx/html $ dd if=/dev/zero of=100m.test bs=1M count=100 # dd\u6309\u7167\u6307\u5b9a\u5927\u5c0f\u7684\u5757\u590d\u5236\u6587\u4ef6\uff0cif\u8f93\u5165\u6587\u4ef6\uff0cof\u8f93\u51fa\u6587\u4ef6\uff0cbs\u5757\u5927\u5c0f\uff0ccount\u5757\u6570\u91cf LNMP\u5206\u5e03\u5f0f\u90e8\u7f72 \u00b6 \u62d3\u6251\u56fe 0Nginx\u8d1f\u8f7d\u5747\u8861*1\u219212Web\uff08Nginx+php\uff09*2\u219234MySQL*2\uff08\u4e3b\u4ece\uff09 5Nginx\u9759\u6001\u6587\u4ef6\u7f13\u5b58*1----------------------->6\u6587\u4ef6\u5b58\u50a8\uff08NFS\uff09*1 7Nginx+php\u6587\u4ef6\u4e0a\u4f20*1-------------------->8\u6570\u636e\u7f13\u5b58Memcached*1 1\u7f51\u5361\u914d\u7f6e\u811a\u672c \u00b6 1\u7f51\u5361\u914d\u7f6e\u811a\u672cnetconfig.sh #! /bin/bash eth0 = /etc/sysconfig/network-scripts/ifcfg-eth0 mac = ` ifconfig -a | grep -o HWaddr.* | cut -c 8 -24 ` if [ \" $1 \" = \"\" ] || [ \" $mac \" = \"\" ] ; then exit 3 ; fi sed -i 's/IPADDR=.*/IPADDR=192.168.1.' $1 '/g' $eth0 sed -i 's/HWADDR=.*/HWADDR=' $mac '/g' $eth0 sed -i 's/UUID=.*/UUID=' ` uuidgen ` '/g' $eth0 start_udev \u7528\u6cd5./netconfig.sh 100 # \u914d\u7f6eIP\u4e3a192.168.1.100 2\u90e8\u7f72nginx\u73af\u5883 \u00b6 \u4e0b\u8f7d\u89e3\u538b\u5b89\u88c5 \u7f16\u8bd1\u65f6\u5b89\u88c5http_realip_module\u6a21\u5757 $ useradd -s /bin/nologin -M www $ mkdir -p /data/www $ cp ../html/* /data/www $ chown -R www:www /data/www $ vi ../conf/nginx.conf user www; server { listen 80; server_name localhost; root /data/www; index index.html index.htm; } $ service nginx start $ iptables -I INPUT -p tcp --dport 80 -j ACCEPT $ service iptables save # \u6ca1\u6709\u5b89\u88c5iptables-service\u6b64\u547d\u4ee4\u4e0d\u597d\u4f7f\u53ef\u4ee5\u7528firewalld --zone=public --add-port=80/tcp --permanent\u7136\u540efirewalld --reload 3Nginx+PHP\u642d\u5efa \u00b6 PHP\u4f9d\u8d56\u5b89\u88c5\u914d\u7f6ePHP-FPM\u542f\u52a8\u9632\u706b\u5899\u914d\u7f6e Nginx\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u914d\u7f6e\u53cd\u5411\u4ee3\u7406\u548c\u8d1f\u8f7d\u5747\u8861nginx.conf upstream web_server { server 192.168.1.101; server 192.168.1.102; keepalive 32; # \u4e0e\u540e\u7aef\u670d\u52a1\u5668\u4fdd\u6301\u957f\u8fde\u63a5\u6570 } server { listen 80; server_name web.test www.web.test ; location / { proxy_pass http://web_server; proxy_http_version 1.1; proxy_set_header Connection \"\"; # \u6e05\u7a7a\u5ba2\u6237\u7aefConnection\u5934 proxy_set_header Host $host; # \u4f20\u9012\u8bf7\u6c42\u7684Host\u5934 proxy_set_header X-Real-IP $remota_addr; # \u4f20\u9012\u5ba2\u6237\u7aef\u771f\u5b9eIP } } \u540e\u7aefWeb\u670d\u52a1\u5668\u914d\u7f6enginx.conf \u6dfb\u52a0\u4ee5\u4e0b\u6307\u4ee4 real_ip_header X-Real-IP; #\u4ece\u6307\u5b9a\u6d88\u606f\u5934\u90e8\u83b7\u53d6\u771f\u5b9e\u5ba2\u6237\u7aefIP set_real_ip_from 192.168.1.100 # \u53ea\u4ece\u6307\u5b9a\u670d\u52a1\u5668\uff08\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\uff09\u83b7\u53d6X-Real-IP 4\u642d\u5efaNFS\u6587\u4ef6\u670d\u52a1\u5668 \u00b6 NFS\u670d\u52a1\u5668\u914d\u7f6e192.168.1.106 $ yum -y install nfs-utils # \u76f4\u63a5\u5b89\u88c5 $ vi /etc/sysconfig/nfs \u53d6\u6d88\u6ce8\u91ca MOUNT_PORT=82 $ service rpcbind start # \u5f00\u542frpcbind\u670d\u52a1 $ service nfs start # \u5f00\u542fnfs\u670d\u52a1 $ chkconfig nfs on # \u6dfb\u52a0\u5f00\u673a\u542f\u52a8 \u9632\u706b\u5899\u5f00\u653e\u4ee5\u4e0b\u7aef\u53e3\uff0ciptables\u6216firewalld 111 portmapper \u7528\u4e8e\u7aef\u53e3\u6620\u5c04 892 rpc.mountd \u7528\u4e8e\u7ba1\u7406NFS\u6587\u4ef6\u7cfb\u7edf 2049 nfs NFS\u670d\u52a1\u7aef\u53e3\u53f7 \u914d\u7f6e\u5171\u4eab\u76ee\u5f55 $ mkdir /share $ chmod 777 /share $ echo '/share * (rw)' > /etc/exports # \u914d\u7f6e/share\u4e3a\u5171\u4eab\u76ee\u5f55\uff0c\u8bed\u6cd5\uff1a\u8def\u5f84 IP\u6bb5 (\u6743\u9650)\uff0c\u4efb\u610fIP\u7528*\u8868\u793a $ service nfs reload \u9759\u6001\u6587\u4ef6\u7f13\u5b58\u670d\u52a1\u5668\u914d\u7f6e192.168.1.105 $ yum -y install nfs-utils # \u5b89\u88c5nfs\u8f6f\u4ef6 $ showmount -e 192.168.1.106 # \u67e5\u770bNFS\u670d\u52a1\u5668\u4e2d\u7684\u5171\u4eab\u76ee\u5f55 $ mkdir /data/share $ mount 192.168.1.106:/share /data/share # \u6302\u8f7d\u5171\u4eab\u76ee\u5f55 $ cd /data/share $ echo Hello > test.txt # \u8bfb\u5199\u6d4b\u8bd5 $ cat test.txt # \u4e5f\u53ef\u4ee5\u5728NFS\u4e0a\u67e5\u770b$ ll /share\u548ccat etc/paccwd |grep nfsnobody $ echo '192.168.1.106:/share /data/share nfs defaults 0 0 ' >> /etc/fstab # \u91cd\u542f\u540e\u81ea\u52a8\u6302\u8f7dNFS\u8fdc\u7a0b\u6587\u4ef6 \u9759\u6001\u6587\u4ef6\u7f13\u5b58\u670d\u52a1\u5668nginx.conf\u6dfb\u52a0\u4ee5\u4e0b\u8bed\u53e5 http {... \u4ee3\u7406\u4e34\u65f6\u76ee\u5f55 \u00b6 proxy_temp_path proxy_temp; web\u7f13\u5b58\u76ee\u5f55\u548c\u53c2\u6570\u914d\u7f6e \u00b6 proxy_cache_path proxy_cache levels=1:2 keys_zone=one:80m inactive=7d max_size=5g; server { # \u672c\u573080\u865a\u62df\u4e3b\u673a\u7528\u4e8e\u63a5\u6536\u9759\u6001\u9875\u9762\u8bf7\u6c42 listen 80; server_name file.web.test; add_head X-Cache upstream_cache_status; location / { proxy_pass http://web_server; # \u8bbe\u7f6e\u53cd\u5411\u4ee3\u7406\uff0c\u672c\u4f8b\u4ee3\u7406localhost proxy_http_version 1.1; proxy_set_header Connection \"\"; proxy_cache one; # \u8bbe\u7f6e\u7f13\u5b58\u533a\u540d\u79f0 proxy_cache_key host host uriuri upstream_cache_status; location / { proxy_pass http://web_server; # \u8bbe\u7f6e\u53cd\u5411\u4ee3\u7406\uff0c\u672c\u4f8b\u4ee3\u7406localhost proxy_http_version 1.1; proxy_set_header Connection \"\"; proxy_cache one; # \u8bbe\u7f6e\u7f13\u5b58\u533a\u540d\u79f0 proxy_cache_key <span><span class=\"MathJax_Preview\">host</span><script type=\"math/tex\">host uriuri is_args$args; proxy_cache_valid 200 304 2d; # \u72b6\u6001\u7801200\u548c304\u7684\u6587\u4ef6\u7f13\u5b582\u5929 } } upstream web_server { server localhost:81; keepalive 32; # \u8bbe\u7f6e\u6700\u5927\u957f\u8fde\u63a5\u6570 } server { # \u672c\u573081\u865a\u62df\u4e3b\u673a\u7528\u4e8e\u4ece\u7f13\u5b58\u670d\u52a1\u5668\u6302\u8f7d\u70b9NFS\u53d6\u5f97\u7f13\u5b58\u6587\u4ef6 listen 81; server_name localhost; root /data/share; # \u6307\u5b9a\u7f13\u5b58\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55 index index.html index.htm; } 5\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5668192.168.1.107 \u00b6 $ yum -y install nfs-utils # \u5b89\u88c5nfs\u8f6f\u4ef6 $ mkdir /data/share # \u521b\u5efa\u6302\u5728\u76ee\u5f55 $ mount 192.168.1.106:/share /date/share # \u6302\u8f7d $ echo '192.168.1.106:/share /data/share nfs defaults 0 0 ' >> /etc/fstab # \u91cd\u542f\u540e\u81ea\u52a8\u6302\u8f7dNFS\u8fdc\u7a0b\u6587\u4ef6 $ mkdir -m 777 /data/share/uploads # \u521b\u5efa\u4e0a\u4f20\u6587\u4ef6\u76ee\u5f55 \u914d\u7f6e\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5668nginx.conf client_max_body_size 20m; # \u4fee\u6539\u6700\u5927\u4e0a\u4f20\u6570\u636e\u91cf\uff0c\u9ed8\u8ba41m \u540c\u65f6\u8fd8\u9700\u8981\u914d\u7f6ephp.ini $ vi /usr/local/php/lib/php.ini post_max_size=20M # \u901a\u8fc7POST\u63d0\u4ea4\u7684\u6700\u5927\u9650\u5236 file_uploads=On # \u662f\u5426\u5141\u8bb8\u6587\u4ef6\u4e0a\u4f20 upload_max_filtersize=10M # \u4e0a\u4f20\u6587\u4ef6\u6700\u5927\u9650\u5236 ;upload_tmp_dir = # \u4e0a\u4f20\u6587\u4ef6\u4e34\u65f6\u4fdd\u5b58\u76ee\u5f55\uff0c\u9ed8\u8ba4\u4e3a/tmp $ service php-fpm reload $ service nginx reload \u6d4b\u8bd5\u6587\u4ef6upload.php <form method=\"post\" enctype=\"multipart/form-data\"> <input type=\"file\" name=\"up\"> <input type=\"submit\"> </form> <?php if ( isset ( $_FILES [ 'up' ]) && $_FILES [ 'up' ][ 'error' ] == 0 ){ $savepath = 'uploads/' . time () . '.dat' ; if ( move_uploaded_file ( $_FILES [ 'up' ][ 'tmp_name' ], \"/data/share/ $savepath \" )){ echo \"File:<a href= \\\" http://file.web.test/ $savepath\\ \" > Donload </ a > \" } } ?> \u642d\u5efaMySQL\u670d\u52a1\u5668 \u00b6 \u4f9d\u8d56 $ yum -y install gcc-c++ cmake ncurses-devel \u4e0b\u8f7d\u8fc7\u7a0b\u7701\u7565 $ cd /usr/local/\u6e90\u7801\u76ee\u5f55 cmake\u53c2\u6570 $ cmake . -DDEFAULT_CHARSET=utf8 \\ -DDEFAULT_COLLATION=utf8_general_ci $ make && make install && cd .. \u914d\u7f6eMySQL $ vi /etc/my.cnf \u914d\u7f6e\u6587\u4ef6\u66f4\u6539\u5982\u4e0b datadir= /data/mysql # \u6570\u636e\u4fdd\u5b58\u76ee\u5f55 socket= /tmp/mysql.sock # sock\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55 user=mysql # MySQL\u7684\u5de5\u4f5c\u7528\u6237 \u8fd0\u884c\u521d\u59cb\u5316\u7a0b\u5e8f $ cd /usr/local/mysql $ ./scripts/mysql_install_db \u542f\u52a8\u5e76\u6dfb\u52a0\u670d\u52a1 $ cp support-files/mysql.server /etc/init.d/mysql $ chkconfig --add mysql $ service mysql start \u67e5\u770b\u7aef\u53e3\u5360\u7528 $ netstat -tnlp |grep mysql \u9632\u706b\u5899\u901a\u8fc7 $ iptables -I INPUT -p tcp --dport 3306 -j ACCEPT $ service iptables save \u914d\u7f6e\u7528\u6237\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u7ed9root\u52a0\u5bc6\u7801\uff0c\u4e0d\u5141\u8bb8\u533f\u540d\u767b\u9646\u7684\u64cd\u4f5c $ /usr/local/mysql/bin/mysql mysql>UPDATE mysql.uer SET password=password('123456')WHERE user='root'; mysql>DELETE FROM mysql.user WHERE user=''; mysql>FLUSH PRIVILEGES; mysql>EXIT \u5b9e\u73b0MySQL\u4e3b\u4ece\u590d\u5236 \u4e3bMySQL\u670d\u52a1\u5668192.168.1.103 $ vim /etc/my.cnf [mysqld] log-bin=mysqlbin-log # \u65e5\u5fd7\u6587\u4ef6\u540d server-id=103 # \u81ea\u5b9a\u4e49\u670d\u52a1\u5668ID $ service mysql restart $ ll /data/msql/mysqlbin # \u67e5\u770b\u64cd\u4f5c\u65e5\u5fd7\u76ee\u5f55mysqlbin-log\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u653e\u5230\u4ece\u673amaster_log_file\u4e2d\uff0c\u6b64\u4f8b\u4e3amysqlbin-log.000001 \u521b\u5efa\u7528\u4e8e\u4e3b\u4ece\u590d\u5236\u7684\u7528\u6237 $ /usr/local/mysql/bin/mysql -uroot -p123456 mysql>GRANT REPLICATION SLAVE ON . TO 'slave'@'192.168.1.104' IDENTIFIED BY '123456'; \u521b\u5efa\u7528\u6237\u6388\u6743\u590d\u5236\u7ed9slave@\u4ece\u673a \u5bc6\u7801 mysql>SHOW MASTER STATUS; # \u67e5\u770bPosition\u5b57\u6bb5\u5e76\u8bb0\u4f4f\u653e\u5230\u4ece\u673amaster_log_pos\u4e2d\uff0c\u6b64\u4f8b\u4e3a262 \u4eceMySQL\u670d\u52a1\u5668192.168.1.104 $ vim /etc/my.cnf [mysqld] server-id=104 # \u81ea\u5b9a\u4e49\u670d\u52a1\u5668ID $ service mysql restart $ /usr/local/mysql/bin/mysql -uroot -p123456 mysql>CHANGE MASTER TO master_hsot='192.168.1.103', master_user='slave', master_password='123456', master_log_file='mysqlbin-log.000001',master_log_pos=262; mysql>START SLAVE; # \u505c\u6b62\u53ef\u7528\u547d\u4ee4SLAVE STOP mysql>SHOW SLAVE STATUS \\G **********************1.row*********************** Slave_IO_State:Waiting for master to send event \uff03\u7b49\u5f85\u4e3b\u670d\u52a1\u5668\u53d1\u9001\u4e8b\u4ef6 Master_Host: 192.168.78.17 \uff03\u4e3b\u670d\u52a1\u5668\u5730\u5740 Master_User: slave \uff03\u4e3b\u670d\u52a1\u5668\u7528\u6237\u540d Master_Port: 3306 \uff03\u4e3b\u670d\u52a1\u5668\u7aef\u53e3\u53f7 Connect_Retry: 60 \uff03\u8fde\u63a5\u5931\u8d25\u91cd\u8bd5\u6b21\u6570 Master_Log_File: mysqlbin-log.000001 \uff03\u4e3b\u670d\u52a1\u5668\u65e5\u5fd7\u6587\u4ef6 Read_Master_Log_Pos: 262 \uff03\u4e3b\u670d\u52a1\u5668\u65e5\u5fd7\u8bfb\u53d6\u4f4d\u7f6e Relay_Log_File: localhost-relay-bin.000002 Relay_Log_Pos: 256 Relay_Master_Log_File: mysqlbin-log.000001 Slave_IO_Running: Yes \uff03\u4ece\u670d\u52a1\u5668IO\u8fd0\u884c\u4e2d Slave_SQL_Running: Yes #\u4ece\u670d\u52a1\u5668SQL\u8fd0\u884c\u4e2d ... \u540c\u6b65\u6d4b\u8bd5 \u5728\u4e3b\u670d\u52a1\u5668\u4e2d\u5199\u4eba\u6570\u636e mysql>CREATE TABLE test.a(id INT, num INT); mysql>INSERT INTO test.a VALUES(1, 2); \u5728\u4ece\u670d\u52a1\u5668\u4e2d\u8bfb\u53d6\u6570\u636e mysql>SELECT * FROM test.a \\G id: 1 num: 2 \u5728\u4ece\u670d\u52a1\u5668\u4e2d\u5199\u5165\u6570\u636e mysql>INSERT INTO test.a VALUES(3, 4); \u5728\u4e3b\u670d\u52a1\u5668\u4e2d\u8bfb\u53d6\u6570\u636e mysql>SELECT FROM test.a \\G id: 1 num : 2 \u4ece\u670d\u52a1\u5668\u7684\u53d8\u5316\u5728\u4e3b\u670d\u52a1\u5668\u4e2d\u65e0\u6cd5\u67e5\u5230 \u642d\u5efaMemcached\u7f13\u5b58\u670d\u52a1\u5668 \u00b6 \u7f13\u5b58\u670d\u52a1\u5668Memcached192.168.1.108 \u5b89\u88c5Memcached $ yum -y install gcc libevent-devel \u5b89\u88c5perl\uff08dpkg\u5b89\u88c5\u5fc5\u5907\uff09 $ wget https://www.cpan.org/src/5.0/perl-5.28.1.tar.gz $ tar -zxvf perl-5.28.1.tar.gz $ cd perl-5.28.1 $ ./Configure -de $ make && make install \u5b89\u88c5 $ wget http://www.memcached.org/files/memcached-1.5.12.tar.gz $ tar -zxvf memcached-1.5.12.tar.gz $ cd memcached-1.5.12 $ ./configure $ make && make install \u914d\u7f6e\u7cfb\u7edf\u670d\u52a1\u548c\u5f00\u673a\u542f\u52a8 $ cd /usr/local/src/memcached-1.5.12/scripts $ cp memcached-init /etc/init.d/memcached $ chkconfig --add memcached \u590d\u5236start-memcache\u811a\u672c $ mkdir -p /usr/share/memcached/scripts $ cp start-memcached /usr/share/memcached/scripts/ \u4e3astart-memcached\u811a\u672c\u521b\u5efa\u8f6f\u8fde\u63a5 $ ln -s /usr/local/bin/memcached /usr/bin/memcached \u4ecedebian\u4e2d\u83b7\u53d6dpkg $ yum -y install gcc-c++ wget perl xz ncurses-devel $ wget http://mirrors.tuna.tsinghua.edu.cn/debian/pool/main/d/dpkg/dpkg_1.19.2.tar.xz $ tar -xvf dpkg_1.19.2.tar.xz $ cd dpkg-1.19.2/ $ ./configure --without-libselinus \uff08\u9700\u8981\u5b89\u88c5perl\uff09 $ make $ cp utils/start-stop-daemon /usr/local/sbin/ \u542f\u52a8Memcached\u670d\u52a1 \u521b\u5efa\u5e76\u7f16\u5199\u914d\u7f6e\u6587\u4ef6 $ vim /etc/memcached.conf -m 512 # \u5206\u914d\u7684\u5185\u5b58\u5927\u5c0fMB\uff0c\u9ed8\u8ba464MB -p 11211 # \u914d\u7f6e\u76d1\u542cTCP\u7aef\u53e3\u9ed8\u8ba411211 -u nobody #\u914d\u7f6eMemcached\u7684\u5de5\u4f5c\u7528\u6237 -c 1024 #\u914d\u7f6e\u6700\u9ad8\u5e76\u53d1\u8fde\u63a5\u6570\uff0c\u9ed8\u8ba41024 -t 16 #\u914d\u7f6e\u4f7f\u7528\u7684\u7ebf\u7a0b\u6570\uff0c\u9ed8\u8ba44 $ service memcached start \u9632\u706b\u5899\u5f00\u653e\u7aef\u53e3 $ iptables -I INPUT -p tcp --dport 11211 -j ACCEPT $ service iptables save PHP\u914d\u7f6e\u8bbf\u95eeMemcached192.168.1.102\u3001103\u3001107 $ yum install cyrus-sasl-devel $ cd /usr/local/src $ wget https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz $ tar -zxvf libmemcached-1.0.18.tar.gz $ cd libmemcached-1.0.18 $ \u5b89\u88c5PHP\u7684Memcached\u6269\u5c55 $ wget http://pecl.php.net/get/memcached-3.1.3.tgz $ tar -zxvf memcached-3.1.3.tgz $ cd memcached-3.1.3 # \u4e0b\u9762\u547d\u4ee4\u9700\u8981\u5728\u6b64\u76ee\u5f55\u4e0b\u8fd0\u884c \u4e3aPHP\u7684Memcached\u6269\u5c55\u751f\u6210configure\u6587\u4ef6 $ /usr/local/php/bin/phpize # \u67e5\u770bZend Module Api No\u6b64\u4f8b\u4e3a20180731 $ ./configure --with-php-config=/usr/local/php/bin/php-config $ make && make install \u5728PHP\u7684\u914d\u7f6e\u6587\u4ef6php.ini\u4e2d\u52a0\u8f7dMemcache\u6269\u5c55 $ vim /usr/local/php/lib/php.ini extension=/usr/local/php/lib/php/extensions/no-debug-nonzts-20180731/memcached.so $ service php-fpm reload \u8fde\u63a5\u6d4b\u8bd5 <?php $mem = new Memcached (); # \u8fde\u63a5Memcache\u670d\u52a1\u5668 $mem -> addServer ( '192.168.1.108' , 11211 ); $mem -> set ( 'UserName' , 'James' ); # \u4fdd\u5b58\u6570\u636e\uff08Key=UserName\uff0cValue=James\uff09 echo $mem -> get ( 'Username' ); # \u83b7\u53d6\u6570\u636e ?> ThinkPHP\u9879\u76ee\u90e8\u7f72 \u00b6 \u521b\u5efaMySQL\u72ec\u7acb\u6570\u636e\u5e93\u7528\u6237 192.168.1.103\uff08\u4e3b\u6570\u636e\u5e93\u670d\u52a1\u5668\uff09 $ /usr/local/mysql/bin/mysql -uroot -p123456 mysql>CREATE DATABASE web # \u4e3aweb\u670d\u52a1\u5668\u5404\u81ea\u521b\u5efa\u7528\u6237 mysql>GRANT USAGE ON *.* TO 'web' @ '192.168.1.101' IDENTIFIED BY '123456' ; mysql>GRANT USAGE ON *.* TO 'web' @ '192.168.1.102' IDENTIFIED BY '123456' ; # \u5206\u914d\u6570\u636e\u5e93\u6743\u9650 mysql>GRANT ALL PRIVILEGES ON web.* TO 'demo' @ '192.168.1.101' ; mysql>GRANT ALL PRIVILEGES ON web.* TO 'demo' @ '192.168.1.102' ; FLUSH PRIVILEVES ; EXIT \u4e0a\u4f20\u9879\u76ee\u6587\u4ef6\u5230\u7ad9\u70b9\u76ee\u5f55 192.168.1.101\u3001102\u3001107\uff08web\u670d\u52a1\u5668\uff0c\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5668\uff09 $ tar -zxvf demo-1.0.tar.gz $ rm -rf /data/www $ mv web-1.0/data/www $ chown -R www:www /data/www \u914d\u7f6e\u9879\u76ee\u6570\u636e\u5e93 192.168.1.103\uff08\u4e3b\u6570\u636e\u5e93\u670d\u52a1\u5668\uff09 $ curl -o data.sql http://192.168.1.107/data.sql $ /usr/local/mysql/bin/mysql -uroot -p123456 mysql>USE web; mysql>source /root/data.sql 191.168.1.101\u3001102\uff08web\u670d\u52a1\u5668\uff09 $ cd /data/www/ $ rm -f data.sql \u8f6f\u4ef6\u9879\u76ee\u66f4\u6539\u914d\u7f6e\u548c\u5355\u4e00\u5165\u53e3\u914d\u7f6e\uff08\u9879\u76ee\u6e90\u7801\u4e2d\u914d\u7f6e\uff09 \u914d\u7f6e192.168.1.101\u3001102\uff08web\u670d\u52a1\u5668\uff09nginx.conf # \u6839\u636e\u9879\u76ee\u6e90\u7801PATHINFO\u914d\u7f6e\u91cd\u5199\u89c4\u5219 rewrite ^/index.php/ (.*)/index.php?s = $1 break; # \u8bf7\u6c42\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u91cd\u5b9a\u5411\u5230index.php location / { try_files $uri $uri/ /index.php?s = $uri; } \uff03\u9632\u6b62\u9759\u6001\u6587\u4ef6\u4e0d\u5b58\u5728\u7684\u8bf7\u6c42\u88ab\u5185\u90e8\u91cd\u5b9a\u5411\u5230index.php location ~ \\. (gif|jpg|jpeg|png|swf|xml|ico|css|js|map|txt)${ expires 30d; } # .php\u53d1\u9001\u7ed9php-fpm location ~ \\.php$ { try_files $uri = 404; fastcgi_pass unix:/tmp/php-cgi.sock; include fastcgi.conf; } \u5229\u7528Memcached\u4fdd\u5b58Session \u914d\u7f6e192.168.1.101\u3001102\u3001107\uff08web\u670d\u52a1\u5668\uff0c\u4e0a\u4f20\u670d\u52a1\u5668\uff09 \u521b\u5efa\u5206\u5e03\u5f0f\u914d\u7f6e\u6587\u4ef6\uff08\u53ef\u4ee5\u4fee\u6539php.ini\u4e2d\u7684\u975e\u5173\u952e\u914d\u7f6e\uff09 $ vim /data/www/ .user.ini session.save_handler=memcached session.save_path=\"192.168.1.108:11211\" $ rm -f /tmp/sess_* # \u5220\u9664\u672c\u5730\u670d\u52a1\u5668\u4e2d\u7684Session\u6587\u4ef6 \u6587\u4ef6\u4e0a\u4f20\u4e0b\u8f7d\u5206\u79bb \u914d\u7f6e192.168.1.105\uff08\u9759\u6001\u6587\u4ef6\u7f13\u5b58\u670d\u52a1\u5668\uff09 http://file.web.test \u5c06\u9879\u76ee\u6587\u4ef6\u4e0a\u4f20\u5230105\uff0c\u89e3\u538b\u540e\u590d\u5236\u9759\u6001\u6587\u4ef6\u5230NFS\u4e2d $ tar -zxvf web-1.0.tar.gz $ cp -R web-1.0/Public /data/share \u914d\u7f6e\u9879\u76ee\u6587\u4ef6\u7684\u4e0b\u8f7d\u548c\u4e0a\u4f20\u670d\u52a1\u5668\u6a21\u677f\u8def\u5f84101\u3001102\uff08Web\u670d\u52a1\u5668\uff09 \u914d\u7f6e\u4e0a\u4f20\u670d\u52a1\u5668102.168.1.107 $ cd /data/www $ rm -rf data.sql Public/Uploads # \u5220\u9664\u672c\u5730\u7684\u4e0a\u4f20\u76ee\u5f55 $ ln -s /data/share/Public/Uploads Public/Uploads # \u5efa\u7acbNFS\u7684\u8f6f\u8fde\u63a5 $ chmod -R 777 Public/Uploads $ vim /usr/local/nginx/conf/nginx.conf location / { return 403; } location /upload.php { try_files $uri =404; add_header Access-Control-Allow-Origin *; # \u5141\u8bb8\u8de8\u57df\u8bf7\u6c42 fastcgi_pass unix:/tmp/php-cgi.sock; include fastcgi.conf; } $ service nginx reload Nginx+Keepalived\u9ad8\u53ef\u7528\u65b9\u6848 \u00b6 \u5b89\u88c5\u548c\u914d\u7f6eKeepalived\u670d\u52a1 \u00b6 \u5b89\u88c5Keepalived $ cd /usr/local/src $ yum -y install libnl libnl-devel $ yum install -y libnfnetlink-devel $ curl -O http://www.keepalived.org/software/keepalived-2.0.11.tar.gz $ tar -zxvf keepalived-2.0.11.tar.gz $ cd keepalived-2.0.11 $ ./configure $ make && make install \u6dfb\u52a0\u5230\u7cfb\u7edf\u670d\u52a1\u5f00\u673a\u542f\u52a8 $ cd /usr/local/src/keepalived-2.0.11/keepalived/etc/init.d/ $ cp keepalived /etc/init.d/ $ chkconfig keepalived on \u914d\u7f6e\u6587\u4ef6\u521b\u5efa\u8f6f\u8fde\u63a5 $ cd /usr/local/etc/sysconfig/ $ ln -s pwd /keepalived /etc/sysconfig/keepalived \u7a0b\u5e8f\u6587\u4ef6\u521b\u5efa\u8f6f\u8fde\u63a5 $ ls /usr/local/sbin/ $ ln -s pwd /keepalived /usr/sbin/keepalived \u914d\u7f6e\u4e3b\u670d\u52a1\u5668\u7684Keepalived $ less /usr/local/etc/keepalived/keepalived.conf \u521b\u5efa\u914d\u7f6e\u6587\u4ef6 $ mkdir /etc/keepalived $ vim /etc/keepalived/keepalived.conf vrrp_instance VI_1 { #\u914d\u7f6e\u4e00\u4e2a\u865a\u62df\u8def\u7531VI_1 state MASTER #\u89d2\u8272master\u6216backup interface eth0 #\u6307\u5b9a\u68c0\u6d4b\u7f51\u5361 virtual_route_id 21 #\u865a\u62df\u8def\u7531\u6807\u8bc6\u540c\u4e00VRRP\u5185\u5e94\u4e00\u81f4 mcast_src_ip 192.168.1.101 #\u8bbe\u7f6eReal IP\uff08\u9ed8\u8ba4\u7f51\u5361\u4e3bIP\uff09 priority 100 #\u4f18\u5148\u7ea7\u6743\u91cd0~254 advert_int 1 #\u540c\u6b65\u65f6\u95f4\u95f4\u9694\u79d2 authentication { #\u8bbe\u7f6e\u9a8c\u8bc1\u7c7b\u578b\u548c\u5bc6\u7801 auth_type PASS #PASS\u4e3a\u5bc6\u7801\u9a8c\u8bc1 auth_pass 123456 #\u5bc6\u7801\u4e3b\u5907\u5bc6\u7801\u76f8\u540c } virtual_ipaddress { #\u8bbe\u7f6eVirtual IP \u5730\u5740\u6c60 192.168.1.110 #\u4e3b\u5907VIP\u5730\u5740\u6c60\u76f8\u540c } } \u542f\u52a8Keepalived\u670d\u52a1 $ service keepalived start \u67e5\u770bKeepalived\u8fdb\u7a0b $ ps aux |grep keepalived \u67e5\u770bKeepalived\u6dfb\u52a0\u7684Virtual IP $ ip a |grep 192.168.1.110 Keepalived\u542f\u52a8\u540e\u53ef\u4ee5\u4f7f\u7528192.168.1.110\u8bbf\u95ee\u670d\u52a1\u5668 \u914d\u7f6e\u5907\u670d\u52a1\u5668\u7684Keepalived \u521b\u5efa\u914d\u7f6e\u6587\u4ef6 $ mkdir /etc/keepalived $ vim /etc/keepalived/keepalived.conf vrrp_instance VI_1 { #\u914d\u7f6e\u4e00\u4e2a\u865a\u62df\u8def\u7531VI_1 state BACKUP #\u89d2\u8272master\u6216backup priority 90 #\u964d\u4f4e\u4f18\u5148\u7ea7\u6743\u91cd ... } \u4e3b\u670d\u52a1\u5668\u5f00\u653e\u670d\u52a1\u5668\u7aef\u53e3112\u5141\u8bb8\u5907\u670d\u52a1\u5668 $ iptables -I INPUT -s192.168.1.102 -p112 -jACCEPT $ service iptables save \u5907\u670d\u52a1\u5668\u5f00\u653e\u670d\u52a1\u5668\u7aef\u53e3112\u5141\u8bb8\u4e3b\u670d\u52a1\u5668 $ iptables -I INPUT -s192.168.1.101 -p112 -jACCEPT $ service iptables save \u4f7f\u7528Keepalived\u76d1\u63a7Nginx\u670d\u52a1 \u81ea\u52a8\u76d1\u63a7Nginx \u521b\u5efa\u914d\u7f6e\u6587\u4ef6 $ mkdir /etc/keepalived $ vim /etc/keepalived/keepalived.conf vrrp_script chk_nginx { # \u914d\u7f6e\u7528\u4e8e\u68c0\u6d4bnginx\u8fd0\u884c\u72b6\u6001\u7684\u811a\u672c script \"/chk_nginx.sh\" # \u7528\u4e8e\u68c0\u6d4b\u7684\u811a\u672c\u6587\u4ef6\u8def\u5f84 interval 2 #\u6ca12\u79d2\u6267\u884c\u4e00\u6b21\u68c0\u6d4b\u811a\u672c weight -20 #\u5f53\u68c0\u6d4b\u5931\u8d25\u65f6\uff0c\u6743\u91cd\u53d1\u751f\u53d8\u5316 } vrrp_instence VI_1 { #\u4e3aVI_1\u6dfb\u52a0\u76d1\u63a7\u811a\u672c ... track_script { chk_nginx } } vim /chk_nginx.sh # \u521b\u5efa\u68c0\u6d4b\u811a\u672c #! /bin/bash if[ `ps -C nginx --no-header |wc -l` -eq 0 ]; then service nginx start sleep 2 if[ `ps -C nginx --no-header |wc -l` -eq 0 ]; then service keepalived stop fi fi $ chmod +x /chk_nginx.sh $ service keepalived reload \u9ad8\u53ef\u7528\u6027\u6d4b\u8bd5 $ service nginx stop $ ps -C nginx --no-header # \u6b64\u65f6\u7531\u4e8e\u68c0\u6d4b\u811a\u672c\u53ef\u4ee5\u542f\u52a8nginx\uff0c\u4e3bnginx\u670d\u52a1\u88ab\u6062\u590d $ cd /usr/local/ngins/sbin $ vim test.sh #! /bin/nash service nginx stop chmod -x nginx $chmod +x test.sh $ ./test.sh # \u6b64\u65f6nginx\u88ab\u53bb\u9664\u6267\u884c\u6743\u9650\u65e0\u6cd5\u542f\u52a8\uff0c\u5207\u6362\u5230\u5907\u7528\u670d\u52a1\u5668","title":"\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#_1","text":"","title":"\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#nginx","text":"ApacheBench\u5de5\u5177\uff0c\u7528\u4e8e\u6d4b\u8bd5\u670d\u52a1\u5668\u6027\u80fd $ cd /usr/local/apache2/bin $ ./ab -n10 -c2 http://192.168.1.100/ # -n10\u53d1\u9001\u8bf7\u6c42\u603b\u6570\uff0c-c2\u5e76\u53d1\u6570 \u5f53\u5e76\u53d1\u6570\u5927\u65f6\u9700\u8981 $ ulimit -a # \u67e5\u770b\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570 $ ulimit -n 65535 #\u4e34\u65f6\u8c03\u6574\u6700\u5927\u6253\u5f00\u6587\u4ef6\u6570 \u4f18\u5316Nginx\u8fde\u63a5\u6570 \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6nginx.conf # \u6307\u5b9a\u5de5\u4f5c\u8fdb\u7a0b\u7684\u4e2a\u6570\uff0cauto\u6839\u636ecpu\u6838\u5fc3\u6570\u91cf\u63a7\u5236 worker_pocesses auto; # \u8bbe\u7f6e\u6700\u591a\u6253\u5f00\u6587\u4ef6\u6570\u91cf worker_rlimit_nofile 65535; events { # \u6bcf\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u53ef\u63a5\u6536\u7684\u8fde\u63a5\u6570 worker_connections 65535; # \u662f\u5426\u5141\u8bb8\u4e00\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u54cd\u5e94\u591a\u4e2a\u8bf7\u6c42 mulit_accepte on; } \u9650\u5236\u5e76\u53d1\u8bf7\u6c42 \u9650\u5236\u540c\u4e00\u4e2a IP \u7684\u5e76\u53d1\u6570\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6nginx.conf http { # \u4e5f\u53ef\u4f4d\u4e8eserver\u548clocation\u4e2d #\u5f00\u542f\u5171\u4eab\u5185\u5b58\u7a7a\u95f4perip\u7528\u4e8e\u5b58\u653e\u5ba2\u6237\u7aefip\uff0c\u5927\u5c0f\u4e3a10MB limit_conn_zone $binary_remote_addr zone=perip:10m; #\u76f8\u540cIP\u5e76\u53d1\u8fde\u63a5\u6570\u9650\u5236\u4e3a10\u4e2a\uff0c\u8d85\u8fc7\u8fd4\u56de503 limit_conn perip 10; } \u9650\u5236\u865a\u62df\u4e3b\u673a\u7684\u5e76\u53d1\u6570\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6nginx.conf http {... limit_conn_zone $server_name zone=perserver:10m server { listen 80; server_name localhost; limit_conn perserver 20; } } \u9650\u5236\u54cd\u5e94\u7684\u4f20\u8f93\u901f\u7387\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6nginx.conf http {... limit_rate 100k; # 100KB/s limit_rate_after 10m; # \u4f20\u8f9310M\u6570\u636e\u540e\u5f00\u59cb\u9650\u901f\uff0c\u7701\u7565\u5219\u7acb\u5373\u9650\u901f } \u751f\u6210\u6d4b\u8bd5\u6587\u4ef6 $ cd /usr/local/nginx/html $ dd if=/dev/zero of=100m.test bs=1M count=100 # dd\u6309\u7167\u6307\u5b9a\u5927\u5c0f\u7684\u5757\u590d\u5236\u6587\u4ef6\uff0cif\u8f93\u5165\u6587\u4ef6\uff0cof\u8f93\u51fa\u6587\u4ef6\uff0cbs\u5757\u5927\u5c0f\uff0ccount\u5757\u6570\u91cf","title":"Nginx\u914d\u7f6e\u4f18\u5316"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#lnmp","text":"\u62d3\u6251\u56fe 0Nginx\u8d1f\u8f7d\u5747\u8861*1\u219212Web\uff08Nginx+php\uff09*2\u219234MySQL*2\uff08\u4e3b\u4ece\uff09 5Nginx\u9759\u6001\u6587\u4ef6\u7f13\u5b58*1----------------------->6\u6587\u4ef6\u5b58\u50a8\uff08NFS\uff09*1 7Nginx+php\u6587\u4ef6\u4e0a\u4f20*1-------------------->8\u6570\u636e\u7f13\u5b58Memcached*1","title":"LNMP\u5206\u5e03\u5f0f\u90e8\u7f72"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#1","text":"1\u7f51\u5361\u914d\u7f6e\u811a\u672cnetconfig.sh #! /bin/bash eth0 = /etc/sysconfig/network-scripts/ifcfg-eth0 mac = ` ifconfig -a | grep -o HWaddr.* | cut -c 8 -24 ` if [ \" $1 \" = \"\" ] || [ \" $mac \" = \"\" ] ; then exit 3 ; fi sed -i 's/IPADDR=.*/IPADDR=192.168.1.' $1 '/g' $eth0 sed -i 's/HWADDR=.*/HWADDR=' $mac '/g' $eth0 sed -i 's/UUID=.*/UUID=' ` uuidgen ` '/g' $eth0 start_udev \u7528\u6cd5./netconfig.sh 100 # \u914d\u7f6eIP\u4e3a192.168.1.100","title":"1\u7f51\u5361\u914d\u7f6e\u811a\u672c"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#2nginx","text":"\u4e0b\u8f7d\u89e3\u538b\u5b89\u88c5 \u7f16\u8bd1\u65f6\u5b89\u88c5http_realip_module\u6a21\u5757 $ useradd -s /bin/nologin -M www $ mkdir -p /data/www $ cp ../html/* /data/www $ chown -R www:www /data/www $ vi ../conf/nginx.conf user www; server { listen 80; server_name localhost; root /data/www; index index.html index.htm; } $ service nginx start $ iptables -I INPUT -p tcp --dport 80 -j ACCEPT $ service iptables save # \u6ca1\u6709\u5b89\u88c5iptables-service\u6b64\u547d\u4ee4\u4e0d\u597d\u4f7f\u53ef\u4ee5\u7528firewalld --zone=public --add-port=80/tcp --permanent\u7136\u540efirewalld --reload","title":"2\u90e8\u7f72nginx\u73af\u5883"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#3nginxphp","text":"PHP\u4f9d\u8d56\u5b89\u88c5\u914d\u7f6ePHP-FPM\u542f\u52a8\u9632\u706b\u5899\u914d\u7f6e Nginx\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\u914d\u7f6e\u53cd\u5411\u4ee3\u7406\u548c\u8d1f\u8f7d\u5747\u8861nginx.conf upstream web_server { server 192.168.1.101; server 192.168.1.102; keepalive 32; # \u4e0e\u540e\u7aef\u670d\u52a1\u5668\u4fdd\u6301\u957f\u8fde\u63a5\u6570 } server { listen 80; server_name web.test www.web.test ; location / { proxy_pass http://web_server; proxy_http_version 1.1; proxy_set_header Connection \"\"; # \u6e05\u7a7a\u5ba2\u6237\u7aefConnection\u5934 proxy_set_header Host $host; # \u4f20\u9012\u8bf7\u6c42\u7684Host\u5934 proxy_set_header X-Real-IP $remota_addr; # \u4f20\u9012\u5ba2\u6237\u7aef\u771f\u5b9eIP } } \u540e\u7aefWeb\u670d\u52a1\u5668\u914d\u7f6enginx.conf \u6dfb\u52a0\u4ee5\u4e0b\u6307\u4ee4 real_ip_header X-Real-IP; #\u4ece\u6307\u5b9a\u6d88\u606f\u5934\u90e8\u83b7\u53d6\u771f\u5b9e\u5ba2\u6237\u7aefIP set_real_ip_from 192.168.1.100 # \u53ea\u4ece\u6307\u5b9a\u670d\u52a1\u5668\uff08\u8d1f\u8f7d\u5747\u8861\u670d\u52a1\u5668\uff09\u83b7\u53d6X-Real-IP","title":"3Nginx+PHP\u642d\u5efa"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#4nfs","text":"NFS\u670d\u52a1\u5668\u914d\u7f6e192.168.1.106 $ yum -y install nfs-utils # \u76f4\u63a5\u5b89\u88c5 $ vi /etc/sysconfig/nfs \u53d6\u6d88\u6ce8\u91ca MOUNT_PORT=82 $ service rpcbind start # \u5f00\u542frpcbind\u670d\u52a1 $ service nfs start # \u5f00\u542fnfs\u670d\u52a1 $ chkconfig nfs on # \u6dfb\u52a0\u5f00\u673a\u542f\u52a8 \u9632\u706b\u5899\u5f00\u653e\u4ee5\u4e0b\u7aef\u53e3\uff0ciptables\u6216firewalld 111 portmapper \u7528\u4e8e\u7aef\u53e3\u6620\u5c04 892 rpc.mountd \u7528\u4e8e\u7ba1\u7406NFS\u6587\u4ef6\u7cfb\u7edf 2049 nfs NFS\u670d\u52a1\u7aef\u53e3\u53f7 \u914d\u7f6e\u5171\u4eab\u76ee\u5f55 $ mkdir /share $ chmod 777 /share $ echo '/share * (rw)' > /etc/exports # \u914d\u7f6e/share\u4e3a\u5171\u4eab\u76ee\u5f55\uff0c\u8bed\u6cd5\uff1a\u8def\u5f84 IP\u6bb5 (\u6743\u9650)\uff0c\u4efb\u610fIP\u7528*\u8868\u793a $ service nfs reload \u9759\u6001\u6587\u4ef6\u7f13\u5b58\u670d\u52a1\u5668\u914d\u7f6e192.168.1.105 $ yum -y install nfs-utils # \u5b89\u88c5nfs\u8f6f\u4ef6 $ showmount -e 192.168.1.106 # \u67e5\u770bNFS\u670d\u52a1\u5668\u4e2d\u7684\u5171\u4eab\u76ee\u5f55 $ mkdir /data/share $ mount 192.168.1.106:/share /data/share # \u6302\u8f7d\u5171\u4eab\u76ee\u5f55 $ cd /data/share $ echo Hello > test.txt # \u8bfb\u5199\u6d4b\u8bd5 $ cat test.txt # \u4e5f\u53ef\u4ee5\u5728NFS\u4e0a\u67e5\u770b$ ll /share\u548ccat etc/paccwd |grep nfsnobody $ echo '192.168.1.106:/share /data/share nfs defaults 0 0 ' >> /etc/fstab # \u91cd\u542f\u540e\u81ea\u52a8\u6302\u8f7dNFS\u8fdc\u7a0b\u6587\u4ef6 \u9759\u6001\u6587\u4ef6\u7f13\u5b58\u670d\u52a1\u5668nginx.conf\u6dfb\u52a0\u4ee5\u4e0b\u8bed\u53e5 http {...","title":"4\u642d\u5efaNFS\u6587\u4ef6\u670d\u52a1\u5668"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#_2","text":"proxy_temp_path proxy_temp;","title":"\u4ee3\u7406\u4e34\u65f6\u76ee\u5f55"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#web","text":"proxy_cache_path proxy_cache levels=1:2 keys_zone=one:80m inactive=7d max_size=5g; server { # \u672c\u573080\u865a\u62df\u4e3b\u673a\u7528\u4e8e\u63a5\u6536\u9759\u6001\u9875\u9762\u8bf7\u6c42 listen 80; server_name file.web.test; add_head X-Cache upstream_cache_status; location / { proxy_pass http://web_server; # \u8bbe\u7f6e\u53cd\u5411\u4ee3\u7406\uff0c\u672c\u4f8b\u4ee3\u7406localhost proxy_http_version 1.1; proxy_set_header Connection \"\"; proxy_cache one; # \u8bbe\u7f6e\u7f13\u5b58\u533a\u540d\u79f0 proxy_cache_key host host uriuri upstream_cache_status; location / { proxy_pass http://web_server; # \u8bbe\u7f6e\u53cd\u5411\u4ee3\u7406\uff0c\u672c\u4f8b\u4ee3\u7406localhost proxy_http_version 1.1; proxy_set_header Connection \"\"; proxy_cache one; # \u8bbe\u7f6e\u7f13\u5b58\u533a\u540d\u79f0 proxy_cache_key <span><span class=\"MathJax_Preview\">host</span><script type=\"math/tex\">host uriuri is_args$args; proxy_cache_valid 200 304 2d; # \u72b6\u6001\u7801200\u548c304\u7684\u6587\u4ef6\u7f13\u5b582\u5929 } } upstream web_server { server localhost:81; keepalive 32; # \u8bbe\u7f6e\u6700\u5927\u957f\u8fde\u63a5\u6570 } server { # \u672c\u573081\u865a\u62df\u4e3b\u673a\u7528\u4e8e\u4ece\u7f13\u5b58\u670d\u52a1\u5668\u6302\u8f7d\u70b9NFS\u53d6\u5f97\u7f13\u5b58\u6587\u4ef6 listen 81; server_name localhost; root /data/share; # \u6307\u5b9a\u7f13\u5b58\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55 index index.html index.htm; }","title":"web\u7f13\u5b58\u76ee\u5f55\u548c\u53c2\u6570\u914d\u7f6e"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#51921681107","text":"$ yum -y install nfs-utils # \u5b89\u88c5nfs\u8f6f\u4ef6 $ mkdir /data/share # \u521b\u5efa\u6302\u5728\u76ee\u5f55 $ mount 192.168.1.106:/share /date/share # \u6302\u8f7d $ echo '192.168.1.106:/share /data/share nfs defaults 0 0 ' >> /etc/fstab # \u91cd\u542f\u540e\u81ea\u52a8\u6302\u8f7dNFS\u8fdc\u7a0b\u6587\u4ef6 $ mkdir -m 777 /data/share/uploads # \u521b\u5efa\u4e0a\u4f20\u6587\u4ef6\u76ee\u5f55 \u914d\u7f6e\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5668nginx.conf client_max_body_size 20m; # \u4fee\u6539\u6700\u5927\u4e0a\u4f20\u6570\u636e\u91cf\uff0c\u9ed8\u8ba41m \u540c\u65f6\u8fd8\u9700\u8981\u914d\u7f6ephp.ini $ vi /usr/local/php/lib/php.ini post_max_size=20M # \u901a\u8fc7POST\u63d0\u4ea4\u7684\u6700\u5927\u9650\u5236 file_uploads=On # \u662f\u5426\u5141\u8bb8\u6587\u4ef6\u4e0a\u4f20 upload_max_filtersize=10M # \u4e0a\u4f20\u6587\u4ef6\u6700\u5927\u9650\u5236 ;upload_tmp_dir = # \u4e0a\u4f20\u6587\u4ef6\u4e34\u65f6\u4fdd\u5b58\u76ee\u5f55\uff0c\u9ed8\u8ba4\u4e3a/tmp $ service php-fpm reload $ service nginx reload \u6d4b\u8bd5\u6587\u4ef6upload.php <form method=\"post\" enctype=\"multipart/form-data\"> <input type=\"file\" name=\"up\"> <input type=\"submit\"> </form> <?php if ( isset ( $_FILES [ 'up' ]) && $_FILES [ 'up' ][ 'error' ] == 0 ){ $savepath = 'uploads/' . time () . '.dat' ; if ( move_uploaded_file ( $_FILES [ 'up' ][ 'tmp_name' ], \"/data/share/ $savepath \" )){ echo \"File:<a href= \\\" http://file.web.test/ $savepath\\ \" > Donload </ a > \" } } ?>","title":"5\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5668192.168.1.107"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#mysql","text":"\u4f9d\u8d56 $ yum -y install gcc-c++ cmake ncurses-devel \u4e0b\u8f7d\u8fc7\u7a0b\u7701\u7565 $ cd /usr/local/\u6e90\u7801\u76ee\u5f55 cmake\u53c2\u6570 $ cmake . -DDEFAULT_CHARSET=utf8 \\ -DDEFAULT_COLLATION=utf8_general_ci $ make && make install && cd .. \u914d\u7f6eMySQL $ vi /etc/my.cnf \u914d\u7f6e\u6587\u4ef6\u66f4\u6539\u5982\u4e0b datadir= /data/mysql # \u6570\u636e\u4fdd\u5b58\u76ee\u5f55 socket= /tmp/mysql.sock # sock\u6587\u4ef6\u4fdd\u5b58\u76ee\u5f55 user=mysql # MySQL\u7684\u5de5\u4f5c\u7528\u6237 \u8fd0\u884c\u521d\u59cb\u5316\u7a0b\u5e8f $ cd /usr/local/mysql $ ./scripts/mysql_install_db \u542f\u52a8\u5e76\u6dfb\u52a0\u670d\u52a1 $ cp support-files/mysql.server /etc/init.d/mysql $ chkconfig --add mysql $ service mysql start \u67e5\u770b\u7aef\u53e3\u5360\u7528 $ netstat -tnlp |grep mysql \u9632\u706b\u5899\u901a\u8fc7 $ iptables -I INPUT -p tcp --dport 3306 -j ACCEPT $ service iptables save \u914d\u7f6e\u7528\u6237\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u7ed9root\u52a0\u5bc6\u7801\uff0c\u4e0d\u5141\u8bb8\u533f\u540d\u767b\u9646\u7684\u64cd\u4f5c $ /usr/local/mysql/bin/mysql mysql>UPDATE mysql.uer SET password=password('123456')WHERE user='root'; mysql>DELETE FROM mysql.user WHERE user=''; mysql>FLUSH PRIVILEGES; mysql>EXIT \u5b9e\u73b0MySQL\u4e3b\u4ece\u590d\u5236 \u4e3bMySQL\u670d\u52a1\u5668192.168.1.103 $ vim /etc/my.cnf [mysqld] log-bin=mysqlbin-log # \u65e5\u5fd7\u6587\u4ef6\u540d server-id=103 # \u81ea\u5b9a\u4e49\u670d\u52a1\u5668ID $ service mysql restart $ ll /data/msql/mysqlbin # \u67e5\u770b\u64cd\u4f5c\u65e5\u5fd7\u76ee\u5f55mysqlbin-log\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u653e\u5230\u4ece\u673amaster_log_file\u4e2d\uff0c\u6b64\u4f8b\u4e3amysqlbin-log.000001 \u521b\u5efa\u7528\u4e8e\u4e3b\u4ece\u590d\u5236\u7684\u7528\u6237 $ /usr/local/mysql/bin/mysql -uroot -p123456 mysql>GRANT REPLICATION SLAVE ON . TO 'slave'@'192.168.1.104' IDENTIFIED BY '123456'; \u521b\u5efa\u7528\u6237\u6388\u6743\u590d\u5236\u7ed9slave@\u4ece\u673a \u5bc6\u7801 mysql>SHOW MASTER STATUS; # \u67e5\u770bPosition\u5b57\u6bb5\u5e76\u8bb0\u4f4f\u653e\u5230\u4ece\u673amaster_log_pos\u4e2d\uff0c\u6b64\u4f8b\u4e3a262 \u4eceMySQL\u670d\u52a1\u5668192.168.1.104 $ vim /etc/my.cnf [mysqld] server-id=104 # \u81ea\u5b9a\u4e49\u670d\u52a1\u5668ID $ service mysql restart $ /usr/local/mysql/bin/mysql -uroot -p123456 mysql>CHANGE MASTER TO master_hsot='192.168.1.103', master_user='slave', master_password='123456', master_log_file='mysqlbin-log.000001',master_log_pos=262; mysql>START SLAVE; # \u505c\u6b62\u53ef\u7528\u547d\u4ee4SLAVE STOP mysql>SHOW SLAVE STATUS \\G **********************1.row*********************** Slave_IO_State:Waiting for master to send event \uff03\u7b49\u5f85\u4e3b\u670d\u52a1\u5668\u53d1\u9001\u4e8b\u4ef6 Master_Host: 192.168.78.17 \uff03\u4e3b\u670d\u52a1\u5668\u5730\u5740 Master_User: slave \uff03\u4e3b\u670d\u52a1\u5668\u7528\u6237\u540d Master_Port: 3306 \uff03\u4e3b\u670d\u52a1\u5668\u7aef\u53e3\u53f7 Connect_Retry: 60 \uff03\u8fde\u63a5\u5931\u8d25\u91cd\u8bd5\u6b21\u6570 Master_Log_File: mysqlbin-log.000001 \uff03\u4e3b\u670d\u52a1\u5668\u65e5\u5fd7\u6587\u4ef6 Read_Master_Log_Pos: 262 \uff03\u4e3b\u670d\u52a1\u5668\u65e5\u5fd7\u8bfb\u53d6\u4f4d\u7f6e Relay_Log_File: localhost-relay-bin.000002 Relay_Log_Pos: 256 Relay_Master_Log_File: mysqlbin-log.000001 Slave_IO_Running: Yes \uff03\u4ece\u670d\u52a1\u5668IO\u8fd0\u884c\u4e2d Slave_SQL_Running: Yes #\u4ece\u670d\u52a1\u5668SQL\u8fd0\u884c\u4e2d ... \u540c\u6b65\u6d4b\u8bd5 \u5728\u4e3b\u670d\u52a1\u5668\u4e2d\u5199\u4eba\u6570\u636e mysql>CREATE TABLE test.a(id INT, num INT); mysql>INSERT INTO test.a VALUES(1, 2); \u5728\u4ece\u670d\u52a1\u5668\u4e2d\u8bfb\u53d6\u6570\u636e mysql>SELECT * FROM test.a \\G id: 1 num: 2 \u5728\u4ece\u670d\u52a1\u5668\u4e2d\u5199\u5165\u6570\u636e mysql>INSERT INTO test.a VALUES(3, 4); \u5728\u4e3b\u670d\u52a1\u5668\u4e2d\u8bfb\u53d6\u6570\u636e mysql>SELECT FROM test.a \\G id: 1 num : 2 \u4ece\u670d\u52a1\u5668\u7684\u53d8\u5316\u5728\u4e3b\u670d\u52a1\u5668\u4e2d\u65e0\u6cd5\u67e5\u5230","title":"\u642d\u5efaMySQL\u670d\u52a1\u5668"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#memcached","text":"\u7f13\u5b58\u670d\u52a1\u5668Memcached192.168.1.108 \u5b89\u88c5Memcached $ yum -y install gcc libevent-devel \u5b89\u88c5perl\uff08dpkg\u5b89\u88c5\u5fc5\u5907\uff09 $ wget https://www.cpan.org/src/5.0/perl-5.28.1.tar.gz $ tar -zxvf perl-5.28.1.tar.gz $ cd perl-5.28.1 $ ./Configure -de $ make && make install \u5b89\u88c5 $ wget http://www.memcached.org/files/memcached-1.5.12.tar.gz $ tar -zxvf memcached-1.5.12.tar.gz $ cd memcached-1.5.12 $ ./configure $ make && make install \u914d\u7f6e\u7cfb\u7edf\u670d\u52a1\u548c\u5f00\u673a\u542f\u52a8 $ cd /usr/local/src/memcached-1.5.12/scripts $ cp memcached-init /etc/init.d/memcached $ chkconfig --add memcached \u590d\u5236start-memcache\u811a\u672c $ mkdir -p /usr/share/memcached/scripts $ cp start-memcached /usr/share/memcached/scripts/ \u4e3astart-memcached\u811a\u672c\u521b\u5efa\u8f6f\u8fde\u63a5 $ ln -s /usr/local/bin/memcached /usr/bin/memcached \u4ecedebian\u4e2d\u83b7\u53d6dpkg $ yum -y install gcc-c++ wget perl xz ncurses-devel $ wget http://mirrors.tuna.tsinghua.edu.cn/debian/pool/main/d/dpkg/dpkg_1.19.2.tar.xz $ tar -xvf dpkg_1.19.2.tar.xz $ cd dpkg-1.19.2/ $ ./configure --without-libselinus \uff08\u9700\u8981\u5b89\u88c5perl\uff09 $ make $ cp utils/start-stop-daemon /usr/local/sbin/ \u542f\u52a8Memcached\u670d\u52a1 \u521b\u5efa\u5e76\u7f16\u5199\u914d\u7f6e\u6587\u4ef6 $ vim /etc/memcached.conf -m 512 # \u5206\u914d\u7684\u5185\u5b58\u5927\u5c0fMB\uff0c\u9ed8\u8ba464MB -p 11211 # \u914d\u7f6e\u76d1\u542cTCP\u7aef\u53e3\u9ed8\u8ba411211 -u nobody #\u914d\u7f6eMemcached\u7684\u5de5\u4f5c\u7528\u6237 -c 1024 #\u914d\u7f6e\u6700\u9ad8\u5e76\u53d1\u8fde\u63a5\u6570\uff0c\u9ed8\u8ba41024 -t 16 #\u914d\u7f6e\u4f7f\u7528\u7684\u7ebf\u7a0b\u6570\uff0c\u9ed8\u8ba44 $ service memcached start \u9632\u706b\u5899\u5f00\u653e\u7aef\u53e3 $ iptables -I INPUT -p tcp --dport 11211 -j ACCEPT $ service iptables save PHP\u914d\u7f6e\u8bbf\u95eeMemcached192.168.1.102\u3001103\u3001107 $ yum install cyrus-sasl-devel $ cd /usr/local/src $ wget https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz $ tar -zxvf libmemcached-1.0.18.tar.gz $ cd libmemcached-1.0.18 $ \u5b89\u88c5PHP\u7684Memcached\u6269\u5c55 $ wget http://pecl.php.net/get/memcached-3.1.3.tgz $ tar -zxvf memcached-3.1.3.tgz $ cd memcached-3.1.3 # \u4e0b\u9762\u547d\u4ee4\u9700\u8981\u5728\u6b64\u76ee\u5f55\u4e0b\u8fd0\u884c \u4e3aPHP\u7684Memcached\u6269\u5c55\u751f\u6210configure\u6587\u4ef6 $ /usr/local/php/bin/phpize # \u67e5\u770bZend Module Api No\u6b64\u4f8b\u4e3a20180731 $ ./configure --with-php-config=/usr/local/php/bin/php-config $ make && make install \u5728PHP\u7684\u914d\u7f6e\u6587\u4ef6php.ini\u4e2d\u52a0\u8f7dMemcache\u6269\u5c55 $ vim /usr/local/php/lib/php.ini extension=/usr/local/php/lib/php/extensions/no-debug-nonzts-20180731/memcached.so $ service php-fpm reload \u8fde\u63a5\u6d4b\u8bd5 <?php $mem = new Memcached (); # \u8fde\u63a5Memcache\u670d\u52a1\u5668 $mem -> addServer ( '192.168.1.108' , 11211 ); $mem -> set ( 'UserName' , 'James' ); # \u4fdd\u5b58\u6570\u636e\uff08Key=UserName\uff0cValue=James\uff09 echo $mem -> get ( 'Username' ); # \u83b7\u53d6\u6570\u636e ?>","title":"\u642d\u5efaMemcached\u7f13\u5b58\u670d\u52a1\u5668"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#thinkphp","text":"\u521b\u5efaMySQL\u72ec\u7acb\u6570\u636e\u5e93\u7528\u6237 192.168.1.103\uff08\u4e3b\u6570\u636e\u5e93\u670d\u52a1\u5668\uff09 $ /usr/local/mysql/bin/mysql -uroot -p123456 mysql>CREATE DATABASE web # \u4e3aweb\u670d\u52a1\u5668\u5404\u81ea\u521b\u5efa\u7528\u6237 mysql>GRANT USAGE ON *.* TO 'web' @ '192.168.1.101' IDENTIFIED BY '123456' ; mysql>GRANT USAGE ON *.* TO 'web' @ '192.168.1.102' IDENTIFIED BY '123456' ; # \u5206\u914d\u6570\u636e\u5e93\u6743\u9650 mysql>GRANT ALL PRIVILEGES ON web.* TO 'demo' @ '192.168.1.101' ; mysql>GRANT ALL PRIVILEGES ON web.* TO 'demo' @ '192.168.1.102' ; FLUSH PRIVILEVES ; EXIT \u4e0a\u4f20\u9879\u76ee\u6587\u4ef6\u5230\u7ad9\u70b9\u76ee\u5f55 192.168.1.101\u3001102\u3001107\uff08web\u670d\u52a1\u5668\uff0c\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5668\uff09 $ tar -zxvf demo-1.0.tar.gz $ rm -rf /data/www $ mv web-1.0/data/www $ chown -R www:www /data/www \u914d\u7f6e\u9879\u76ee\u6570\u636e\u5e93 192.168.1.103\uff08\u4e3b\u6570\u636e\u5e93\u670d\u52a1\u5668\uff09 $ curl -o data.sql http://192.168.1.107/data.sql $ /usr/local/mysql/bin/mysql -uroot -p123456 mysql>USE web; mysql>source /root/data.sql 191.168.1.101\u3001102\uff08web\u670d\u52a1\u5668\uff09 $ cd /data/www/ $ rm -f data.sql \u8f6f\u4ef6\u9879\u76ee\u66f4\u6539\u914d\u7f6e\u548c\u5355\u4e00\u5165\u53e3\u914d\u7f6e\uff08\u9879\u76ee\u6e90\u7801\u4e2d\u914d\u7f6e\uff09 \u914d\u7f6e192.168.1.101\u3001102\uff08web\u670d\u52a1\u5668\uff09nginx.conf # \u6839\u636e\u9879\u76ee\u6e90\u7801PATHINFO\u914d\u7f6e\u91cd\u5199\u89c4\u5219 rewrite ^/index.php/ (.*)/index.php?s = $1 break; # \u8bf7\u6c42\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u91cd\u5b9a\u5411\u5230index.php location / { try_files $uri $uri/ /index.php?s = $uri; } \uff03\u9632\u6b62\u9759\u6001\u6587\u4ef6\u4e0d\u5b58\u5728\u7684\u8bf7\u6c42\u88ab\u5185\u90e8\u91cd\u5b9a\u5411\u5230index.php location ~ \\. (gif|jpg|jpeg|png|swf|xml|ico|css|js|map|txt)${ expires 30d; } # .php\u53d1\u9001\u7ed9php-fpm location ~ \\.php$ { try_files $uri = 404; fastcgi_pass unix:/tmp/php-cgi.sock; include fastcgi.conf; } \u5229\u7528Memcached\u4fdd\u5b58Session \u914d\u7f6e192.168.1.101\u3001102\u3001107\uff08web\u670d\u52a1\u5668\uff0c\u4e0a\u4f20\u670d\u52a1\u5668\uff09 \u521b\u5efa\u5206\u5e03\u5f0f\u914d\u7f6e\u6587\u4ef6\uff08\u53ef\u4ee5\u4fee\u6539php.ini\u4e2d\u7684\u975e\u5173\u952e\u914d\u7f6e\uff09 $ vim /data/www/ .user.ini session.save_handler=memcached session.save_path=\"192.168.1.108:11211\" $ rm -f /tmp/sess_* # \u5220\u9664\u672c\u5730\u670d\u52a1\u5668\u4e2d\u7684Session\u6587\u4ef6 \u6587\u4ef6\u4e0a\u4f20\u4e0b\u8f7d\u5206\u79bb \u914d\u7f6e192.168.1.105\uff08\u9759\u6001\u6587\u4ef6\u7f13\u5b58\u670d\u52a1\u5668\uff09 http://file.web.test \u5c06\u9879\u76ee\u6587\u4ef6\u4e0a\u4f20\u5230105\uff0c\u89e3\u538b\u540e\u590d\u5236\u9759\u6001\u6587\u4ef6\u5230NFS\u4e2d $ tar -zxvf web-1.0.tar.gz $ cp -R web-1.0/Public /data/share \u914d\u7f6e\u9879\u76ee\u6587\u4ef6\u7684\u4e0b\u8f7d\u548c\u4e0a\u4f20\u670d\u52a1\u5668\u6a21\u677f\u8def\u5f84101\u3001102\uff08Web\u670d\u52a1\u5668\uff09 \u914d\u7f6e\u4e0a\u4f20\u670d\u52a1\u5668102.168.1.107 $ cd /data/www $ rm -rf data.sql Public/Uploads # \u5220\u9664\u672c\u5730\u7684\u4e0a\u4f20\u76ee\u5f55 $ ln -s /data/share/Public/Uploads Public/Uploads # \u5efa\u7acbNFS\u7684\u8f6f\u8fde\u63a5 $ chmod -R 777 Public/Uploads $ vim /usr/local/nginx/conf/nginx.conf location / { return 403; } location /upload.php { try_files $uri =404; add_header Access-Control-Allow-Origin *; # \u5141\u8bb8\u8de8\u57df\u8bf7\u6c42 fastcgi_pass unix:/tmp/php-cgi.sock; include fastcgi.conf; } $ service nginx reload","title":"ThinkPHP\u9879\u76ee\u90e8\u7f72"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#nginxkeepalived","text":"","title":"Nginx+Keepalived\u9ad8\u53ef\u7528\u65b9\u6848"},{"location":"\u8bfb\u4e66\u7b14\u8bb0/Nginx\u9ad8\u6027\u80fdWeb\u670d\u52a1\u5668\u5b9e\u6218\u6559\u7a0b/05-\u9ad8\u53ef\u7528\u8d1f\u8f7d\u5747\u8861\u96c6\u7fa4/#keepalived","text":"\u5b89\u88c5Keepalived $ cd /usr/local/src $ yum -y install libnl libnl-devel $ yum install -y libnfnetlink-devel $ curl -O http://www.keepalived.org/software/keepalived-2.0.11.tar.gz $ tar -zxvf keepalived-2.0.11.tar.gz $ cd keepalived-2.0.11 $ ./configure $ make && make install \u6dfb\u52a0\u5230\u7cfb\u7edf\u670d\u52a1\u5f00\u673a\u542f\u52a8 $ cd /usr/local/src/keepalived-2.0.11/keepalived/etc/init.d/ $ cp keepalived /etc/init.d/ $ chkconfig keepalived on \u914d\u7f6e\u6587\u4ef6\u521b\u5efa\u8f6f\u8fde\u63a5 $ cd /usr/local/etc/sysconfig/ $ ln -s pwd /keepalived /etc/sysconfig/keepalived \u7a0b\u5e8f\u6587\u4ef6\u521b\u5efa\u8f6f\u8fde\u63a5 $ ls /usr/local/sbin/ $ ln -s pwd /keepalived /usr/sbin/keepalived \u914d\u7f6e\u4e3b\u670d\u52a1\u5668\u7684Keepalived $ less /usr/local/etc/keepalived/keepalived.conf \u521b\u5efa\u914d\u7f6e\u6587\u4ef6 $ mkdir /etc/keepalived $ vim /etc/keepalived/keepalived.conf vrrp_instance VI_1 { #\u914d\u7f6e\u4e00\u4e2a\u865a\u62df\u8def\u7531VI_1 state MASTER #\u89d2\u8272master\u6216backup interface eth0 #\u6307\u5b9a\u68c0\u6d4b\u7f51\u5361 virtual_route_id 21 #\u865a\u62df\u8def\u7531\u6807\u8bc6\u540c\u4e00VRRP\u5185\u5e94\u4e00\u81f4 mcast_src_ip 192.168.1.101 #\u8bbe\u7f6eReal IP\uff08\u9ed8\u8ba4\u7f51\u5361\u4e3bIP\uff09 priority 100 #\u4f18\u5148\u7ea7\u6743\u91cd0~254 advert_int 1 #\u540c\u6b65\u65f6\u95f4\u95f4\u9694\u79d2 authentication { #\u8bbe\u7f6e\u9a8c\u8bc1\u7c7b\u578b\u548c\u5bc6\u7801 auth_type PASS #PASS\u4e3a\u5bc6\u7801\u9a8c\u8bc1 auth_pass 123456 #\u5bc6\u7801\u4e3b\u5907\u5bc6\u7801\u76f8\u540c } virtual_ipaddress { #\u8bbe\u7f6eVirtual IP \u5730\u5740\u6c60 192.168.1.110 #\u4e3b\u5907VIP\u5730\u5740\u6c60\u76f8\u540c } } \u542f\u52a8Keepalived\u670d\u52a1 $ service keepalived start \u67e5\u770bKeepalived\u8fdb\u7a0b $ ps aux |grep keepalived \u67e5\u770bKeepalived\u6dfb\u52a0\u7684Virtual IP $ ip a |grep 192.168.1.110 Keepalived\u542f\u52a8\u540e\u53ef\u4ee5\u4f7f\u7528192.168.1.110\u8bbf\u95ee\u670d\u52a1\u5668 \u914d\u7f6e\u5907\u670d\u52a1\u5668\u7684Keepalived \u521b\u5efa\u914d\u7f6e\u6587\u4ef6 $ mkdir /etc/keepalived $ vim /etc/keepalived/keepalived.conf vrrp_instance VI_1 { #\u914d\u7f6e\u4e00\u4e2a\u865a\u62df\u8def\u7531VI_1 state BACKUP #\u89d2\u8272master\u6216backup priority 90 #\u964d\u4f4e\u4f18\u5148\u7ea7\u6743\u91cd ... } \u4e3b\u670d\u52a1\u5668\u5f00\u653e\u670d\u52a1\u5668\u7aef\u53e3112\u5141\u8bb8\u5907\u670d\u52a1\u5668 $ iptables -I INPUT -s192.168.1.102 -p112 -jACCEPT $ service iptables save \u5907\u670d\u52a1\u5668\u5f00\u653e\u670d\u52a1\u5668\u7aef\u53e3112\u5141\u8bb8\u4e3b\u670d\u52a1\u5668 $ iptables -I INPUT -s192.168.1.101 -p112 -jACCEPT $ service iptables save \u4f7f\u7528Keepalived\u76d1\u63a7Nginx\u670d\u52a1 \u81ea\u52a8\u76d1\u63a7Nginx \u521b\u5efa\u914d\u7f6e\u6587\u4ef6 $ mkdir /etc/keepalived $ vim /etc/keepalived/keepalived.conf vrrp_script chk_nginx { # \u914d\u7f6e\u7528\u4e8e\u68c0\u6d4bnginx\u8fd0\u884c\u72b6\u6001\u7684\u811a\u672c script \"/chk_nginx.sh\" # \u7528\u4e8e\u68c0\u6d4b\u7684\u811a\u672c\u6587\u4ef6\u8def\u5f84 interval 2 #\u6ca12\u79d2\u6267\u884c\u4e00\u6b21\u68c0\u6d4b\u811a\u672c weight -20 #\u5f53\u68c0\u6d4b\u5931\u8d25\u65f6\uff0c\u6743\u91cd\u53d1\u751f\u53d8\u5316 } vrrp_instence VI_1 { #\u4e3aVI_1\u6dfb\u52a0\u76d1\u63a7\u811a\u672c ... track_script { chk_nginx } } vim /chk_nginx.sh # \u521b\u5efa\u68c0\u6d4b\u811a\u672c #! /bin/bash if[ `ps -C nginx --no-header |wc -l` -eq 0 ]; then service nginx start sleep 2 if[ `ps -C nginx --no-header |wc -l` -eq 0 ]; then service keepalived stop fi fi $ chmod +x /chk_nginx.sh $ service keepalived reload \u9ad8\u53ef\u7528\u6027\u6d4b\u8bd5 $ service nginx stop $ ps -C nginx --no-header # \u6b64\u65f6\u7531\u4e8e\u68c0\u6d4b\u811a\u672c\u53ef\u4ee5\u542f\u52a8nginx\uff0c\u4e3bnginx\u670d\u52a1\u88ab\u6062\u590d $ cd /usr/local/ngins/sbin $ vim test.sh #! /bin/nash service nginx stop chmod -x nginx $chmod +x test.sh $ ./test.sh # \u6b64\u65f6nginx\u88ab\u53bb\u9664\u6267\u884c\u6743\u9650\u65e0\u6cd5\u542f\u52a8\uff0c\u5207\u6362\u5230\u5907\u7528\u670d\u52a1\u5668","title":"\u5b89\u88c5\u548c\u914d\u7f6eKeepalived\u670d\u52a1"}]}